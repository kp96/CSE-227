# HG changeset patch
# User Ehsan Akhgari <ehsan@mozilla.com>
# Date 1275615068 14400
# Node ID f85c37a054bfcf3ea8d38fa95d4b2ea085bd5f3d
# Parent cafb1fc1125569a0387c83785d6d573c2d76e463
imported patch certexcep-button-madness.patch

diff --git a/security/manager/pki/resources/content/exceptionDialog.js b/security/manager/pki/resources/content/exceptionDialog.js
--- a/security/manager/pki/resources/content/exceptionDialog.js
+++ b/security/manager/pki/resources/content/exceptionDialog.js
@@ -90,28 +90,24 @@ function initExceptionDialog() {
       document.getElementById("locationTextBox").value = args[0].location;
       document.getElementById('checkCertButton').disabled = false;
       
       // We can optionally pre-fetch the certificate too.  Don't do this
       // synchronously, since it would prevent the window from appearing
       // until the fetch is completed, which could be multiple seconds.
       // Instead, let's use a timer to spawn the actual fetch, but update
       // the dialog to "checking..." state right away, so that the UI
-      // is appropriately responsive.  We could include a very short lag
-      // and there would still be time for the window to draw, but bringing
-      // it up to a couple seconds still feels responsive, while also giving
-      // users who are unfamiliar with the dialog a chance to read the preamble
-      // before the dialog fills up with details about the certificate
-      // problems.  Bug 453855
+      // is appropriately responsive.  Bug 453855
       if (args[0].prefetchCert) {
-        
+
+        document.getElementById("checkCertButton").disabled = true;
         gChecking = true;
         updateCertStatus();
         
-        window.setTimeout(checkCert, 2000);
+        window.setTimeout(checkCert, 0);
       }
     }
     
     // Set out parameter to false by default
     args[0].exceptionAdded = false; 
   }
 }
 
@@ -299,34 +295,42 @@ function updateCertStatus() {
       setText("headerDescription", gPKIBundle.GetStringFromName("addExceptionInvalidHeader"));
     }
     else {
       shortDesc = "addExceptionValidShort";
       longDesc  = "addExceptionValidLong";
       gDialog.getButton("extra1").disabled = true;
       document.getElementById("permanent").disabled = true;
     }
-    
+
+    // We're done checking the certificate, so allow the user to check it again.
+    document.getElementById("checkCertButton").disabled = false;
     document.getElementById("viewCertButton").disabled = false;
 
     // Notify observers about the availability of the certificate
     Components.classes["@mozilla.org/observer-service;1"]
               .getService(Components.interfaces.nsIObserverService)
               .notifyObservers(null, "cert-exception-ui-ready", null);
   }
   else if (gChecking) {
     shortDesc = "addExceptionCheckingShort";
     longDesc  = "addExceptionCheckingLong";
+    // We're checking the certificate, so we disable the Get Certificate
+    // button to make sure that the user can't interrupt the process and
+    // trigger another certificate fetch.
+    document.getElementById("checkCertButton").disabled = true;
     document.getElementById("viewCertButton").disabled = true;
     gDialog.getButton("extra1").disabled = true;
     document.getElementById("permanent").disabled = true;
   }
   else {
     shortDesc = "addExceptionNoCertShort";
     longDesc  = "addExceptionNoCertLong";
+    // We're done checking the certificate, so allow the user to check it again.
+    document.getElementById("checkCertButton").disabled = false;
     document.getElementById("viewCertButton").disabled = true;
     gDialog.getButton("extra1").disabled = true;
     document.getElementById("permanent").disabled = true;
   }
   
   setText("statusDescription", gPKIBundle.GetStringFromName(shortDesc));
   setText("statusLongDescription", gPKIBundle.GetStringFromName(longDesc));
 
