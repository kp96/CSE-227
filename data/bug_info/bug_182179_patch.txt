Index: nsSecureBrowserUIImpl.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/boot/src/nsSecureBrowserUIImpl.cpp,v
retrieving revision 1.34.6.3.2.3
diff -u -8 -p -r1.34.6.3.2.3 nsSecureBrowserUIImpl.cpp
--- nsSecureBrowserUIImpl.cpp	17 Feb 2005 21:08:51 -0000	1.34.6.3.2.3
+++ nsSecureBrowserUIImpl.cpp	8 Mar 2005 05:07:32 -0000
@@ -1224,16 +1224,27 @@ nsSecureBrowserUIImpl::IsURLHTTPS(nsIURI
 	*value = PR_FALSE;
 
 	if (!aURL)
 		return NS_OK;
 
   return aURL->SchemeIs("https", value);
 }
 
+nsresult
+nsSecureBrowserUIImpl::IsURLJavaScript(nsIURI* aURL, PRBool* value)
+{
+	*value = PR_FALSE;
+
+	if (!aURL)
+		return NS_OK;
+
+  return aURL->SchemeIs("javascript", value);
+}
+
 void
 nsSecureBrowserUIImpl::GetBundleString(const PRUnichar* name,
                                        nsAString &outString)
 {
   if (mStringBundle && name) {
     PRUnichar *ptrv = nsnull;
     if (NS_SUCCEEDED(mStringBundle->GetStringFromName(name,
                                                       &ptrv)))
@@ -1246,33 +1257,42 @@ nsSecureBrowserUIImpl::GetBundleString(c
   } else {
     outString.SetLength(0);
   }
 }
 
 nsresult
 nsSecureBrowserUIImpl::CheckPost(nsIURI *formURL, nsIURI *actionURL, PRBool *okayToPost)
 {
-  PRBool formSecure,actionSecure;
+  PRBool formSecure,actionSecure,actionJavaScript;
   *okayToPost = PR_TRUE;
 
   nsresult rv = IsURLHTTPS(formURL, &formSecure);
   if (NS_FAILED(rv))
     return rv;
 
   rv = IsURLHTTPS(actionURL, &actionSecure);
   if (NS_FAILED(rv))
     return rv;
   
+  rv = IsURLJavaScript(actionURL, &actionJavaScript);
+  if (NS_FAILED(rv))
+    return rv;
+  
   // If we are posting to a secure link, all is okay.
   // It doesn't matter whether the currently viewed page is secure or not,
   // because the data will be sent to a secure URL.
   if (actionSecure) {
     return NS_OK;
   }
+
+  // Action is a JavaScript call, not an actual post. That's okay too.
+  if (actionJavaScript) {
+    return NS_OK;
+  }
     
   // posting to insecure webpage from a secure webpage.
   if (formSecure) {
     *okayToPost = ConfirmPostToInsecureFromSecure();
   } else {
     *okayToPost = ConfirmPostToInsecure();
   }
   
Index: nsSecureBrowserUIImpl.h
===================================================================
RCS file: /cvsroot/mozilla/security/manager/boot/src/nsSecureBrowserUIImpl.h,v
retrieving revision 1.11.20.1.2.1
diff -u -8 -p -r1.11.20.1.2.1 nsSecureBrowserUIImpl.h
--- nsSecureBrowserUIImpl.h	12 Feb 2005 01:01:02 -0000	1.11.20.1.2.1
+++ nsSecureBrowserUIImpl.h	8 Mar 2005 05:07:32 -0000
@@ -115,16 +115,17 @@ protected:
   void ObtainEventSink(nsIChannel *channel);
   
   nsCOMPtr<nsISupports> mSSLStatus;
 
   void GetBundleString(const PRUnichar* name, nsAString &outString);
   
   nsresult CheckPost(nsIURI *formURI, nsIURI *actionURL, PRBool *okayToPost);
   nsresult IsURLHTTPS(nsIURI* aURL, PRBool *value);
+  nsresult IsURLJavaScript(nsIURI* aURL, PRBool *value);
 
   PRBool ConfirmEnteringSecure();
   PRBool ConfirmEnteringWeak();
   PRBool ConfirmLeavingSecure();
   PRBool ConfirmMixedMode();
   PRBool ConfirmPostToInsecure();
   PRBool ConfirmPostToInsecureFromSecure();
 
