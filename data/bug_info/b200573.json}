{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basb200573\""},"diff":[{"chunks":[{"content":"@@ -5536,26 +5536,15 @@ nsDocument::Destroy()","changes":[{"type":"normal","normal":true,"ln1":5536,"ln2":5536,"content":"   if (mIsGoingAway)"},{"type":"normal","normal":true,"ln1":5537,"ln2":5537,"content":"     return;"},{"type":"normal","normal":true,"ln1":5538,"ln2":5538,"content":" "},{"type":"del","del":true,"ln":5539,"content":"-  PRInt32 count = mChildren.ChildCount();"},{"type":"del","del":true,"ln":5540,"content":"-"},{"type":"normal","normal":true,"ln1":5541,"ln2":5539,"content":"   mIsGoingAway = PR_TRUE;"},{"type":"del","del":true,"ln":5542,"content":"-  DestroyLinkMap();"},{"type":"del","del":true,"ln":5543,"content":"-  for (PRInt32 indx = 0; indx < count; ++indx) {"},{"type":"del","del":true,"ln":5544,"content":"-    // XXXbz what we _should_ do here is to clear mChildren and null out"},{"type":"del","del":true,"ln":5545,"content":"-    // mRootContent.  If we did this (or at least the latter), we could remove"},{"type":"del","del":true,"ln":5546,"content":"-    // the silly null-checks in nsHTMLDocument::MatchLinks.  Unfortunately,"},{"type":"del","del":true,"ln":5547,"content":"-    // doing that introduces several problems:"},{"type":"del","del":true,"ln":5548,"content":"-    // 1) Focus issues (see bug 341730).  The fix for bug 303260 may fix these."},{"type":"del","del":true,"ln":5549,"content":"-    // 2) Crashes in OnPageHide if it fires after Destroy.  See bug 303260"},{"type":"del","del":true,"ln":5550,"content":"-    //    comments 9 and 10."},{"type":"del","del":true,"ln":5551,"content":"-    // So we're just creating an inconsistent DOM for now and hoping.  :("},{"type":"del","del":true,"ln":5552,"content":"-    mChildren.ChildAt(indx)->UnbindFromTree();"},{"type":"add","add":true,"ln":5540,"content":"+  PRUint32 i, count = mChildren.ChildCount();"},{"type":"add","add":true,"ln":5541,"content":"+  for (i = 0; i < count; ++i) {"},{"type":"add","add":true,"ln":5542,"content":"+    nsNodeUtils::DestroySubtree(mChildren.ChildAt(i));"},{"type":"normal","normal":true,"ln1":5553,"ln2":5543,"content":"   }"},{"type":"add","add":true,"ln":5544,"content":"+"},{"type":"normal","normal":true,"ln1":5554,"ln2":5545,"content":"   mLayoutHistoryState = nsnull;"},{"type":"normal","normal":true,"ln1":5555,"ln2":5546,"content":" "},{"type":"normal","normal":true,"ln1":5556,"ln2":5547,"content":"   nsContentList::OnDocumentDestroy(this);"},{"type":"del","del":true,"ln":5557,"content":"-  delete mContentWrapperHash;"},{"type":"del","del":true,"ln":5558,"content":"-  mContentWrapperHash = nsnull;"},{"type":"normal","normal":true,"ln1":5559,"ln2":5548,"content":" }"},{"type":"normal","normal":true,"ln1":5560,"ln2":5549,"content":" "},{"type":"normal","normal":true,"ln1":5561,"ln2":5550,"content":" already_AddRefed<nsILayoutHistoryState>"}],"oldStart":5536,"oldLines":26,"newStart":5536,"newLines":15}],"deletions":15,"additions":4,"from":"content/base/src/nsDocument.cpp","to":"content/base/src/nsDocument.cpp","index":["1e6b1dd..482cb60","100644"]},{"chunks":[{"content":"@@ -3348,8 +3348,11 @@ NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN(nsGenericElement)","changes":[{"type":"normal","normal":true,"ln1":3348,"ln2":3348,"content":"   // Unlink any DOM slots of interest."},{"type":"normal","normal":true,"ln1":3349,"ln2":3349,"content":"   {"},{"type":"normal","normal":true,"ln1":3350,"ln2":3350,"content":"     nsDOMSlots *slots = tmp->GetExistingDOMSlots();"},{"type":"del","del":true,"ln":3351,"content":"-    if (slots)"},{"type":"add","add":true,"ln":3351,"content":"+    if (slots) {"},{"type":"normal","normal":true,"ln1":3352,"ln2":3352,"content":"       slots->mAttributeMap = nsnull;"},{"type":"add","add":true,"ln":3353,"content":"+      if (tmp->IsNodeOfType(nsINode::eXUL))"},{"type":"add","add":true,"ln":3354,"content":"+        NS_IF_RELEASE(slots->mControllers);"},{"type":"add","add":true,"ln":3355,"content":"+    }"},{"type":"normal","normal":true,"ln1":3353,"ln2":3356,"content":"   }"},{"type":"normal","normal":true,"ln1":3354,"ln2":3357,"content":" NS_IMPL_CYCLE_COLLECTION_UNLINK_END"},{"type":"normal","normal":true,"ln1":3355,"ln2":3358,"content":" "}],"oldStart":3348,"oldLines":8,"newStart":3348,"newLines":11}],"deletions":1,"additions":4,"from":"content/base/src/nsGenericElement.cpp","to":"content/base/src/nsGenericElement.cpp","index":["bc8d699..136fcd7","100644"]},{"chunks":[{"content":"@@ -687,3 +687,27 @@ nsNodeUtils::UnlinkUserData(nsINode *aNode)","changes":[{"type":"normal","normal":true,"ln1":687,"ln2":687,"content":"                                                       DOM_USER_DATA_HANDLER);"},{"type":"normal","normal":true,"ln1":688,"ln2":688,"content":"   }"},{"type":"normal","normal":true,"ln1":689,"ln2":689,"content":" }"},{"type":"add","add":true,"ln":690,"content":"+"},{"type":"add","add":true,"ln":691,"content":"+/* static */"},{"type":"add","add":true,"ln":692,"content":"+void"},{"type":"add","add":true,"ln":693,"content":"+nsNodeUtils::DestroySubtree(nsIContent* aRoot)"},{"type":"add","add":true,"ln":694,"content":"+{"},{"type":"add","add":true,"ln":695,"content":"+  nsXULElement* xul = nsXULElement::FromContent(aRoot);"},{"type":"add","add":true,"ln":696,"content":"+  if (xul) {"},{"type":"add","add":true,"ln":697,"content":"+    nsGenericElement::nsDOMSlots* slots = xul->GetExistingDOMSlots();"},{"type":"add","add":true,"ln":698,"content":"+    if (slots) {"},{"type":"add","add":true,"ln":699,"content":"+      NS_IF_RELEASE(slots->mControllers);"},{"type":"add","add":true,"ln":700,"content":"+    }"},{"type":"add","add":true,"ln":701,"content":"+  }"},{"type":"add","add":true,"ln":702,"content":"+"},{"type":"add","add":true,"ln":703,"content":"+  nsIDocument *document = aRoot->GetOwnerDoc();"},{"type":"add","add":true,"ln":704,"content":"+  if (document) {"},{"type":"add","add":true,"ln":705,"content":"+    document->BindingManager()->ChangeDocumentFor(aRoot, document, nsnull);"},{"type":"add","add":true,"ln":706,"content":"+    document->ClearBoxObjectFor(aRoot);"},{"type":"add","add":true,"ln":707,"content":"+  }"},{"type":"add","add":true,"ln":708,"content":"+"},{"type":"add","add":true,"ln":709,"content":"+  PRUint32 i, count = aRoot->GetChildCount();"},{"type":"add","add":true,"ln":710,"content":"+  for (i = 0; i < count; ++i) {"},{"type":"add","add":true,"ln":711,"content":"+    DestroySubtree(aRoot->GetChildAt(i));"},{"type":"add","add":true,"ln":712,"content":"+  }"},{"type":"add","add":true,"ln":713,"content":"+}"}],"oldStart":687,"oldLines":3,"newStart":687,"newLines":27}],"deletions":0,"additions":24,"from":"content/base/src/nsNodeUtils.cpp","to":"content/base/src/nsNodeUtils.cpp","index":["ec11d40..32993d6","100755"]},{"chunks":[{"content":"@@ -269,6 +269,14 @@ public:","changes":[{"type":"normal","normal":true,"ln1":269,"ln2":269,"content":"    */"},{"type":"normal","normal":true,"ln1":270,"ln2":270,"content":"   static void UnlinkUserData(nsINode *aNode);"},{"type":"normal","normal":true,"ln1":271,"ln2":271,"content":" "},{"type":"add","add":true,"ln":272,"content":"+  /**"},{"type":"add","add":true,"ln":273,"content":"+   * Remove neccesary components of all nodes in a subtree to avoid leaking."},{"type":"add","add":true,"ln":274,"content":"+   * So far this removes XBL bindings and XUL controllers."},{"type":"add","add":true,"ln":275,"content":"+   *"},{"type":"add","add":true,"ln":276,"content":"+   * @param aRoot the node that is the root of the subtree to clear."},{"type":"add","add":true,"ln":277,"content":"+   */"},{"type":"add","add":true,"ln":278,"content":"+  static void DestroySubtree(nsIContent* aRoot);"},{"type":"add","add":true,"ln":279,"content":"+"},{"type":"normal","normal":true,"ln1":272,"ln2":280,"content":" private:"},{"type":"normal","normal":true,"ln1":273,"ln2":281,"content":"   friend PLDHashOperator PR_CALLBACK"},{"type":"normal","normal":true,"ln1":274,"ln2":282,"content":"     AdoptFunc(nsAttrHashKey::KeyType aKey, nsIDOMNode *aData, void* aUserArg);"}],"oldStart":269,"oldLines":6,"newStart":269,"newLines":14}],"deletions":0,"additions":8,"from":"content/base/src/nsNodeUtils.h","to":"content/base/src/nsNodeUtils.h","index":["4dac9f0..8193d53","100755"]},{"chunks":[{"content":"@@ -323,7 +323,7 @@ protected:","changes":[{"type":"normal","normal":true,"ln1":323,"ln2":323,"content":"   /** The request currently being submitted */"},{"type":"normal","normal":true,"ln1":324,"ln2":324,"content":"   nsCOMPtr<nsIRequest> mSubmittingRequest;"},{"type":"normal","normal":true,"ln1":325,"ln2":325,"content":"   /** The web progress object we are currently listening to */"},{"type":"del","del":true,"ln":326,"content":"-  nsCOMPtr<nsIWebProgress> mWebProgress;"},{"type":"add","add":true,"ln":326,"content":"+  nsWeakPtr mWebProgress;"},{"type":"normal","normal":true,"ln1":327,"ln2":327,"content":" "},{"type":"normal","normal":true,"ln1":328,"ln2":328,"content":"   /** The default submit element -- WEAK */"},{"type":"normal","normal":true,"ln1":329,"ln2":329,"content":"   nsIFormControl* mDefaultSubmitElement;"}],"oldStart":323,"oldLines":7,"newStart":323,"newLines":7},{"content":"@@ -1025,10 +1025,12 @@ nsHTMLFormElement::SubmitSubmission(nsIFormSubmission* aFormSubmission)","changes":[{"type":"normal","normal":true,"ln1":1025,"ln2":1025,"content":"     PRBool pending = PR_FALSE;"},{"type":"normal","normal":true,"ln1":1026,"ln2":1026,"content":"     mSubmittingRequest->IsPending(&pending);"},{"type":"normal","normal":true,"ln1":1027,"ln2":1027,"content":"     if (pending && !schemeIsJavaScript) {"},{"type":"del","del":true,"ln":1028,"content":"-      mWebProgress = do_GetInterface(docShell);"},{"type":"del","del":true,"ln":1029,"content":"-      NS_ASSERTION(mWebProgress, \"nsIDocShell not converted to nsIWebProgress!\");"},{"type":"del","del":true,"ln":1030,"content":"-      rv = mWebProgress->AddProgressListener(this, nsIWebProgress::NOTIFY_STATE_ALL);"},{"type":"add","add":true,"ln":1028,"content":"+      nsCOMPtr<nsIWebProgress> webProgress = do_GetInterface(docShell);"},{"type":"add","add":true,"ln":1029,"content":"+      NS_ASSERTION(webProgress, \"nsIDocShell not converted to nsIWebProgress!\");"},{"type":"add","add":true,"ln":1030,"content":"+      rv = webProgress->AddProgressListener(this, nsIWebProgress::NOTIFY_STATE_ALL);"},{"type":"normal","normal":true,"ln1":1031,"ln2":1031,"content":"       NS_ENSURE_SUBMIT_SUCCESS(rv);"},{"type":"add","add":true,"ln":1032,"content":"+      mWebProgress = do_GetWeakReference(webProgress);"},{"type":"add","add":true,"ln":1033,"content":"+      NS_ASSERTION(mWebProgress, \"can't hold weak ref to webprogress!\");"},{"type":"normal","normal":true,"ln1":1032,"ln2":1034,"content":"     } else {"},{"type":"normal","normal":true,"ln1":1033,"ln2":1035,"content":"       ForgetCurrentSubmission();"},{"type":"normal","normal":true,"ln1":1034,"ln2":1036,"content":"     }"}],"oldStart":1025,"oldLines":10,"newStart":1025,"newLines":12},{"content":"@@ -1645,10 +1647,11 @@ nsHTMLFormElement::ForgetCurrentSubmission()","changes":[{"type":"normal","normal":true,"ln1":1645,"ln2":1647,"content":"   mNotifiedObservers = PR_FALSE;"},{"type":"normal","normal":true,"ln1":1646,"ln2":1648,"content":"   mIsSubmitting = PR_FALSE;"},{"type":"normal","normal":true,"ln1":1647,"ln2":1649,"content":"   mSubmittingRequest = nsnull;"},{"type":"del","del":true,"ln":1648,"content":"-  if (mWebProgress) {"},{"type":"del","del":true,"ln":1649,"content":"-    mWebProgress->RemoveProgressListener(this);"},{"type":"del","del":true,"ln":1650,"content":"-    mWebProgress = nsnull;"},{"type":"add","add":true,"ln":1650,"content":"+  nsCOMPtr<nsIWebProgress> webProgress = do_QueryReferent(mWebProgress);"},{"type":"add","add":true,"ln":1651,"content":"+  if (webProgress) {"},{"type":"add","add":true,"ln":1652,"content":"+    webProgress->RemoveProgressListener(this);"},{"type":"normal","normal":true,"ln1":1651,"ln2":1653,"content":"   }"},{"type":"add","add":true,"ln":1654,"content":"+  mWebProgress = nsnull;"},{"type":"normal","normal":true,"ln1":1652,"ln2":1655,"content":" }"},{"type":"normal","normal":true,"ln1":1653,"ln2":1656,"content":" "},{"type":"normal","normal":true,"ln1":1654,"ln2":1657,"content":" // nsIWebProgressListener"}],"oldStart":1645,"oldLines":10,"newStart":1647,"newLines":11}],"deletions":7,"additions":10,"from":"content/html/content/src/nsHTMLFormElement.cpp","to":"content/html/content/src/nsHTMLFormElement.cpp","index":["513ffad..bf94cda","100644"]},{"chunks":[{"content":"@@ -104,8 +104,15 @@ nsXTFElementWrapper::Init()","changes":[{"type":"normal","normal":true,"ln1":104,"ln2":104,"content":" //----------------------------------------------------------------------"},{"type":"normal","normal":true,"ln1":105,"ln2":105,"content":" // nsISupports implementation"},{"type":"normal","normal":true,"ln1":106,"ln2":106,"content":" "},{"type":"del","del":true,"ln":107,"content":"-NS_IMPL_ADDREF_INHERITED(nsXTFElementWrapper,nsXTFElementWrapperBase)"},{"type":"del","del":true,"ln":108,"content":"-NS_IMPL_RELEASE_INHERITED(nsXTFElementWrapper,nsXTFElementWrapperBase)"},{"type":"add","add":true,"ln":107,"content":"+NS_IMPL_ADDREF_INHERITED(nsXTFElementWrapper, nsXTFElementWrapperBase)"},{"type":"add","add":true,"ln":108,"content":"+NS_IMPL_RELEASE_INHERITED(nsXTFElementWrapper, nsXTFElementWrapperBase)"},{"type":"add","add":true,"ln":109,"content":"+"},{"type":"add","add":true,"ln":110,"content":"+NS_IMPL_CYCLE_COLLECTION_CLASS(nsXTFElementWrapper)"},{"type":"add","add":true,"ln":111,"content":"+NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN_INHERITED(nsXTFElementWrapper,"},{"type":"add","add":true,"ln":112,"content":"+                                                  nsXTFElementWrapperBase)"},{"type":"add","add":true,"ln":113,"content":"+  NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR(mXTFElement)"},{"type":"add","add":true,"ln":114,"content":"+  NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR(mAttributeHandler)"},{"type":"add","add":true,"ln":115,"content":"+NS_IMPL_CYCLE_COLLECTION_TRAVERSE_END"},{"type":"normal","normal":true,"ln1":109,"ln2":116,"content":" "},{"type":"normal","normal":true,"ln1":110,"ln2":117,"content":" NS_IMETHODIMP"},{"type":"normal","normal":true,"ln1":111,"ln2":118,"content":" nsXTFElementWrapper::QueryInterface(REFNSIID aIID, void** aInstancePtr)"}],"oldStart":104,"oldLines":8,"newStart":104,"newLines":15}],"deletions":2,"additions":9,"from":"content/xtf/src/nsXTFElementWrapper.cpp","to":"content/xtf/src/nsXTFElementWrapper.cpp","index":["2d0eb36..a73f124","100644"]},{"chunks":[{"content":"@@ -65,6 +65,8 @@ public:","changes":[{"type":"normal","normal":true,"ln1":65,"ln2":65,"content":" "},{"type":"normal","normal":true,"ln1":66,"ln2":66,"content":"   // nsISupports interface"},{"type":"normal","normal":true,"ln1":67,"ln2":67,"content":"   NS_DECL_ISUPPORTS_INHERITED"},{"type":"add","add":true,"ln":68,"content":"+  NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED_NO_UNLINK(nsXTFElementWrapper,"},{"type":"add","add":true,"ln":69,"content":"+                                                     nsXTFElementWrapperBase)"},{"type":"normal","normal":true,"ln1":68,"ln2":70,"content":" "},{"type":"normal","normal":true,"ln1":69,"ln2":71,"content":"   // nsIXTFElementWrapper"},{"type":"normal","normal":true,"ln1":70,"ln2":72,"content":"   NS_DECL_NSIXTFELEMENTWRAPPER"}],"oldStart":65,"oldLines":6,"newStart":65,"newLines":8}],"deletions":0,"additions":2,"from":"content/xtf/src/nsXTFElementWrapper.h","to":"content/xtf/src/nsXTFElementWrapper.h","index":["b85fae77..556d633","100644"]}]}