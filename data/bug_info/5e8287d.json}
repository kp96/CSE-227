{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5e8287d\""},"diff":[{"chunks":[{"content":"@@ -73,32 +73,36 @@ var JSON = {","changes":[{"type":"normal","normal":true,"ln1":73,"ln2":73,"content":"    * Note: aJSObject MUST not contain cyclic references."},{"type":"normal","normal":true,"ln1":74,"ln2":74,"content":"    */"},{"type":"normal","normal":true,"ln1":75,"ln2":75,"content":"   toString: function JSON_toString(aJSObject, aKeysToDrop) {"},{"type":"del","del":true,"ln":76,"content":"-    // these characters have a special escape notation"},{"type":"del","del":true,"ln":77,"content":"-    const charMap = { \"\\b\": \"\\\\b\", \"\\t\": \"\\\\t\", \"\\n\": \"\\\\n\", \"\\f\": \"\\\\f\","},{"type":"del","del":true,"ln":78,"content":"-                      \"\\r\": \"\\\\r\", '\"': '\\\\\"', \"\\\\\": \"\\\\\\\\\" };"},{"type":"del","del":true,"ln":79,"content":"-    "},{"type":"normal","normal":true,"ln1":80,"ln2":76,"content":"     // we use a single string builder for efficiency reasons"},{"type":"normal","normal":true,"ln1":81,"ln2":77,"content":"     var pieces = [];"},{"type":"normal","normal":true,"ln1":82,"ln2":78,"content":"     "},{"type":"normal","normal":true,"ln1":83,"ln2":79,"content":"     // this recursive function walks through all objects and appends their"},{"type":"normal","normal":true,"ln1":84,"ln2":80,"content":"     // JSON representation (in one or several pieces) to the string builder"},{"type":"normal","normal":true,"ln1":85,"ln2":81,"content":"     function append_piece(aObj) {"},{"type":"del","del":true,"ln":86,"content":"-      if (typeof aObj == \"boolean\") {"},{"type":"del","del":true,"ln":87,"content":"-        pieces.push(aObj ? \"true\" : \"false\");"},{"type":"del","del":true,"ln":88,"content":"-      }"},{"type":"del","del":true,"ln":89,"content":"-      else if (typeof aObj == \"number\" && isFinite(aObj)) {"},{"type":"del","del":true,"ln":90,"content":"-        // there is no representation for infinite numbers or for NaN!"},{"type":"del","del":true,"ln":91,"content":"-        pieces.push(aObj.toString());"},{"type":"del","del":true,"ln":92,"content":"-      }"},{"type":"del","del":true,"ln":93,"content":"-      else if (typeof aObj == \"string\") {"},{"type":"add","add":true,"ln":82,"content":"+      if (typeof aObj == \"string\") {"},{"type":"normal","normal":true,"ln1":94,"ln2":83,"content":"         aObj = aObj.replace(/[\\\\\"\\x00-\\x1F\\u0080-\\uFFFF]/g, function($0) {"},{"type":"normal","normal":true,"ln1":95,"ln2":84,"content":"           // use the special escape notation if one exists, otherwise"},{"type":"normal","normal":true,"ln1":96,"ln2":85,"content":"           // produce a general unicode escape sequence"},{"type":"del","del":true,"ln":97,"content":"-          return charMap[$0] ||"},{"type":"del","del":true,"ln":98,"content":"-            \"\\\\u\" + (\"0000\" + $0.charCodeAt(0).toString(16)).slice(-4);"},{"type":"add","add":true,"ln":86,"content":"+          switch ($0) {"},{"type":"add","add":true,"ln":87,"content":"+          case \"\\b\": return \"\\\\b\";"},{"type":"add","add":true,"ln":88,"content":"+          case \"\\t\": return \"\\\\t\";"},{"type":"add","add":true,"ln":89,"content":"+          case \"\\n\": return \"\\\\n\";"},{"type":"add","add":true,"ln":90,"content":"+          case \"\\f\": return \"\\\\f\";"},{"type":"add","add":true,"ln":91,"content":"+          case \"\\r\": return \"\\\\r\";"},{"type":"add","add":true,"ln":92,"content":"+          case '\"':  return '\\\\\"';"},{"type":"add","add":true,"ln":93,"content":"+          case \"\\\\\": return \"\\\\\\\\\";"},{"type":"add","add":true,"ln":94,"content":"+          }"},{"type":"add","add":true,"ln":95,"content":"+          return \"\\\\u\" + (\"0000\" + $0.charCodeAt(0).toString(16)).slice(-4);"},{"type":"normal","normal":true,"ln1":99,"ln2":96,"content":"         });"},{"type":"normal","normal":true,"ln1":100,"ln2":97,"content":"         pieces.push('\"' + aObj + '\"')"},{"type":"normal","normal":true,"ln1":101,"ln2":98,"content":"       }"},{"type":"add","add":true,"ln":99,"content":"+      else if (typeof aObj == \"boolean\") {"},{"type":"add","add":true,"ln":100,"content":"+        pieces.push(aObj ? \"true\" : \"false\");"},{"type":"add","add":true,"ln":101,"content":"+      }"},{"type":"add","add":true,"ln":102,"content":"+      else if (typeof aObj == \"number\" && isFinite(aObj)) {"},{"type":"add","add":true,"ln":103,"content":"+        // there is no representation for infinite numbers or for NaN!"},{"type":"add","add":true,"ln":104,"content":"+        pieces.push(aObj.toString());"},{"type":"add","add":true,"ln":105,"content":"+      }"},{"type":"normal","normal":true,"ln1":102,"ln2":106,"content":"       else if (aObj === null) {"},{"type":"normal","normal":true,"ln1":103,"ln2":107,"content":"         pieces.push(\"null\");"},{"type":"normal","normal":true,"ln1":104,"ln2":108,"content":"       }"}],"oldStart":73,"oldLines":32,"newStart":73,"newLines":36},{"content":"@@ -109,10 +113,10 @@ var JSON = {","changes":[{"type":"normal","normal":true,"ln1":109,"ln2":113,"content":"                (aObj.length === 0 || aObj[aObj.length - 1] !== undefined)) {"},{"type":"normal","normal":true,"ln1":110,"ln2":114,"content":"         pieces.push(\"[\");"},{"type":"normal","normal":true,"ln1":111,"ln2":115,"content":"         for (var i = 0; i < aObj.length; i++) {"},{"type":"del","del":true,"ln":112,"content":"-          append_piece(aObj[i]);"},{"type":"add","add":true,"ln":116,"content":"+          arguments.callee(aObj[i]);"},{"type":"normal","normal":true,"ln1":113,"ln2":117,"content":"           pieces.push(\",\");"},{"type":"normal","normal":true,"ln1":114,"ln2":118,"content":"         }"},{"type":"del","del":true,"ln":115,"content":"-        if (pieces[pieces.length - 1] == \",\")"},{"type":"add","add":true,"ln":119,"content":"+        if (aObj.length > 0)"},{"type":"normal","normal":true,"ln1":116,"ln2":120,"content":"           pieces.pop(); // drop the trailing colon"},{"type":"normal","normal":true,"ln1":117,"ln2":121,"content":"         pieces.push(\"]\");"},{"type":"normal","normal":true,"ln1":118,"ln2":122,"content":"       }"}],"oldStart":109,"oldLines":10,"newStart":113,"newLines":10},{"content":"@@ -125,9 +129,9 @@ var JSON = {","changes":[{"type":"normal","normal":true,"ln1":125,"ln2":129,"content":"           if (aKeysToDrop && aKeysToDrop.indexOf(key) != -1)"},{"type":"normal","normal":true,"ln1":126,"ln2":130,"content":"             continue;"},{"type":"normal","normal":true,"ln1":127,"ln2":131,"content":"           "},{"type":"del","del":true,"ln":128,"content":"-          append_piece(key.toString());"},{"type":"add","add":true,"ln":132,"content":"+          arguments.callee(key.toString());"},{"type":"normal","normal":true,"ln1":129,"ln2":133,"content":"           pieces.push(\":\");"},{"type":"del","del":true,"ln":130,"content":"-          append_piece(aObj[key]);"},{"type":"add","add":true,"ln":134,"content":"+          arguments.callee(aObj[key]);"},{"type":"normal","normal":true,"ln1":131,"ln2":135,"content":"           pieces.push(\",\");"},{"type":"normal","normal":true,"ln1":132,"ln2":136,"content":"         }"},{"type":"normal","normal":true,"ln1":133,"ln2":137,"content":"         if (pieces[pieces.length - 1] == \",\")"}],"oldStart":125,"oldLines":9,"newStart":129,"newLines":9}],"deletions":18,"additions":22,"from":"js/src/xpconnect/loader/JSON.jsm","to":"js/src/xpconnect/loader/JSON.jsm","index":["13b47a2..3743ab2","100644"]}]}