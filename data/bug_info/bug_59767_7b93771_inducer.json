{"bug_id":59767,"commitHash":"7b93771","commit_info":{"sha":"7b93771a4dedd4957412fe49988c9bce68a0bc1c","commit":{"author":{"name":"mstoltz%netscape.com","email":"mstoltz%netscape.com","date":"2003-04-03T19:11:41Z"},"committer":{"name":"mstoltz%netscape.com","email":"mstoltz%netscape.com","date":"2003-04-03T19:11:41Z"},"message":"Bug 59767 - add CheckLoadURI call to GetURL and PostURL calls from the Java plugin. r=peterlubczynski, sr=heikki.","tree":{"sha":"6d4fd48f40aad27a653eacec8c16514c5043f385","url":"https://api.github.com/repos/mozilla/gecko-dev/git/trees/6d4fd48f40aad27a653eacec8c16514c5043f385"},"url":"https://api.github.com/repos/mozilla/gecko-dev/git/commits/7b93771a4dedd4957412fe49988c9bce68a0bc1c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/mozilla/gecko-dev/commits/7b93771a4dedd4957412fe49988c9bce68a0bc1c","html_url":"https://github.com/mozilla/gecko-dev/commit/7b93771a4dedd4957412fe49988c9bce68a0bc1c","comments_url":"https://api.github.com/repos/mozilla/gecko-dev/commits/7b93771a4dedd4957412fe49988c9bce68a0bc1c/comments","author":null,"committer":null,"parents":[{"sha":"b6ee57a69a160e96c86c5a5dda4ba19efe1aa78b","url":"https://api.github.com/repos/mozilla/gecko-dev/commits/b6ee57a69a160e96c86c5a5dda4ba19efe1aa78b","html_url":"https://github.com/mozilla/gecko-dev/commit/b6ee57a69a160e96c86c5a5dda4ba19efe1aa78b"}],"stats":{"total":80,"additions":79,"deletions":1},"files":[{"sha":"f37a9634eeb2f769b2ce7240adb1c8cff82d9e59","filename":"modules/plugin/base/src/Makefile.in","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/mozilla/gecko-dev/blob/7b93771a4dedd4957412fe49988c9bce68a0bc1c/modules/plugin/base/src/Makefile.in","raw_url":"https://github.com/mozilla/gecko-dev/raw/7b93771a4dedd4957412fe49988c9bce68a0bc1c/modules/plugin/base/src/Makefile.in","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/modules/plugin/base/src/Makefile.in?ref=7b93771a4dedd4957412fe49988c9bce68a0bc1c","patch":"@@ -58,6 +58,7 @@ REQUIRES\t= xpcom \\\n \t\t  windowwatcher \\\n \t\t  imglib2 \\\n \t\t  layout \\\n+\t\t  js \\\n \t\t  $(NULL)\n # for xlib port\n REQUIRES\t+= xlibxtbin xlibrgb"},{"sha":"df0223b44c001588030df60992766242819c9e21","filename":"modules/plugin/base/src/nsPluginHostImpl.cpp","status":"modified","additions":74,"deletions":1,"changes":75,"blob_url":"https://github.com/mozilla/gecko-dev/blob/7b93771a4dedd4957412fe49988c9bce68a0bc1c/modules/plugin/base/src/nsPluginHostImpl.cpp","raw_url":"https://github.com/mozilla/gecko-dev/raw/7b93771a4dedd4957412fe49988c9bce68a0bc1c/modules/plugin/base/src/nsPluginHostImpl.cpp","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/modules/plugin/base/src/nsPluginHostImpl.cpp?ref=7b93771a4dedd4957412fe49988c9bce68a0bc1c","patch":"@@ -49,6 +49,7 @@\n #include \"nsIPlugin.h\"\n #ifdef OJI\n #include \"nsIJVMPlugin.h\"\n+#include \"nsIJVMPluginInstance.h\"\n #include \"nsIJVMManager.h\"\n #endif\n #include \"nsIPluginStreamListener.h\"\n@@ -159,6 +160,7 @@\n #include \"nsISupportsArray.h\"\n #include \"nsIDocShell.h\"\n #include \"nsPluginNativeWindow.h\"\n+#include \"nsIScriptSecurityManager.h\"\n \n #if defined(XP_MAC) && TARGET_CARBON\n #include \"nsIClassicPluginFactory.h\"\n@@ -2885,12 +2887,21 @@ NS_IMETHODIMP nsPluginHostImpl::GetURLWithHeaders(nsISupports* pluginInst,\n   nsresult          rv;\n \n   // we can only send a stream back to the plugin (as specified by a \n-  // null target) if we also have a nsIPluginStreamListener to talk to also\n+  // null target) if we also have a nsIPluginStreamListener to talk to\n   if(target == nsnull && streamListener == nsnull)\n    return NS_ERROR_ILLEGAL_VALUE;\n \n   nsCOMPtr<nsIPluginInstance> instance = do_QueryInterface(pluginInst, &rv);\n \n+  if (NS_SUCCEEDED(rv))\n+  {\n+    // if this is a Java plugin calling, we need to do a security check\n+    nsCOMPtr<nsIJVMPluginInstance> javaInstance(do_QueryInterface(instance));\n+    \n+    if (javaInstance)\n+        rv = DoURLLoadSecurityCheck(instance, url);\n+  }\n+  \n   if (NS_SUCCEEDED(rv))\n   {\n     if (nsnull != target)\n@@ -2948,6 +2959,16 @@ NS_IMETHODIMP nsPluginHostImpl::PostURL(nsISupports* pluginInst,\n    return NS_ERROR_ILLEGAL_VALUE;\n   \n   nsCOMPtr<nsIPluginInstance> instance = do_QueryInterface(pluginInst, &rv);\n+\n+  if (NS_SUCCEEDED(rv))\n+  {\n+    // if this is a Java plugin calling, we need to do a security check\n+    nsCOMPtr<nsIJVMPluginInstance> javaInstance(do_QueryInterface(instance));\n+    \n+    if (javaInstance)\n+        rv = DoURLLoadSecurityCheck(instance, url);\n+  }\n+\n   if (NS_SUCCEEDED(rv))\n   {\n       char *dataToPost;\n@@ -5698,6 +5719,58 @@ NS_IMETHODIMP nsPluginHostImpl::NewPluginURLStream(const nsString& aURL,\n   return rv;\n }\n \n+////////////////////////////////////////////////////////////////////////\n+/* Called by GetURL and PostURL */\n+nsresult\n+nsPluginHostImpl::DoURLLoadSecurityCheck(nsIPluginInstance *aInstance,\n+                                         const char* aURL)\n+{\n+  nsresult rv;\n+\n+  if (!aURL || *aURL == '\\0')\n+    return NS_OK;\n+\n+  // get the URL of the document that loaded the plugin\n+  nsCOMPtr<nsIDocument> doc;\n+  nsCOMPtr<nsIPluginInstancePeer> peer;\n+  nsCOMPtr<nsIURI> sourceURL;\n+  rv = aInstance->GetPeer(getter_AddRefs(peer));\n+  if (NS_FAILED(rv) || !peer)\n+    return NS_ERROR_FAILURE;\n+\n+  nsCOMPtr<nsPIPluginInstancePeer> privpeer(do_QueryInterface(peer));\n+  nsCOMPtr<nsIPluginInstanceOwner> owner;\n+  rv = privpeer->GetOwner(getter_AddRefs(owner));\n+  if (!owner)\n+    return NS_ERROR_FAILURE;\n+\n+  rv = owner->GetDocument(getter_AddRefs(doc));\n+  if (!doc)\n+    return NS_ERROR_FAILURE;\n+\n+  rv = doc->GetDocumentURL(getter_AddRefs(sourceURL));\n+  if (!sourceURL)\n+    return NS_ERROR_FAILURE;\n+\n+  // Create an absolute URL for the target in case the target is relative\n+  nsCOMPtr<nsIURI> docBaseURL;\n+  doc->GetBaseURL(*getter_AddRefs(docBaseURL));\n+\n+  nsCOMPtr<nsIURI> targetURL;\n+  rv = NS_NewURI(getter_AddRefs(targetURL), aURL, docBaseURL);\n+\n+  if (!targetURL)\n+    return NS_ERROR_FAILURE;\n+\n+  nsCOMPtr<nsIScriptSecurityManager> secMan(\n+    do_GetService(NS_SCRIPTSECURITYMANAGER_CONTRACTID, &rv));\n+  if (NS_FAILED(rv))\n+    return rv;\n+\n+  return secMan->CheckLoadURI(sourceURL, targetURL, nsIScriptSecurityManager::STANDARD);\n+\n+}\n+\n \n ////////////////////////////////////////////////////////////////////////\n NS_IMETHODIMP"},{"sha":"4705a70e53bf453975b0c1f20067266bf4c0a3f3","filename":"modules/plugin/base/src/nsPluginHostImpl.h","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/mozilla/gecko-dev/blob/7b93771a4dedd4957412fe49988c9bce68a0bc1c/modules/plugin/base/src/nsPluginHostImpl.h","raw_url":"https://github.com/mozilla/gecko-dev/raw/7b93771a4dedd4957412fe49988c9bce68a0bc1c/modules/plugin/base/src/nsPluginHostImpl.h","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/modules/plugin/base/src/nsPluginHostImpl.h?ref=7b93771a4dedd4957412fe49988c9bce68a0bc1c","patch":"@@ -392,6 +392,10 @@ class nsPluginHostImpl : public nsIPluginManager2,\n                      const char *aHeadersData = nsnull, \n                      PRUint32 aHeadersDataLen = 0);\n \n+  nsresult\n+  DoURLLoadSecurityCheck(nsIPluginInstance *aInstance,\n+                         const char* aURL);\n+\n   NS_IMETHOD\n   AddHeadersToChannel(const char *aHeadersData, PRUint32 aHeadersDataLen, \n                       nsIChannel *aGenericChannel);"}]},"blames":["dc401872","d66d38f3","286fcef2","30295f72","54e19987","3a885be8","d056fe18","39bb61b8","1c4ec0d2","c94385ee","286fcef2","45b30520","d66d38f3","555e3414","dee7ed58","7f12694e","6ceb9673","59177f86","9fcf5c8d","7d59fac5","6929c922","8dd38b50","f6a4f188","757fe3cd","c94385ee"]}