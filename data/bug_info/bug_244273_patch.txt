Index: dom/locales/en-US/chrome/prompts.properties
===================================================================
RCS file: /cvsroot/mozilla/dom/locales/en-US/chrome/prompts.properties,v
retrieving revision 1.1
diff -u -p -8 -r1.1 prompts.properties
--- dom/locales/en-US/chrome/prompts.properties	28 Sep 2006 20:35:59 -0000	1.1
+++ dom/locales/en-US/chrome/prompts.properties	28 Jan 2008 23:46:36 -0000
@@ -29,13 +29,18 @@
 # use your version of this file under the terms of the MPL, indicate your
 # decision by deleting the provisions above and replace them with the notice
 # and other provisions required by the GPL or the LGPL. If you do not delete
 # the provisions above, a recipient may use your version of this file under
 # the terms of any one of the MPL, the GPL or the LGPL.
 #
 # ***** END LICENSE BLOCK *****
 
-EnterUserPasswordForRealm=Enter username and password for "%1$S" at %2$S
-EnterUserPasswordForProxy=Enter username and password for proxy "%1$S" at %2$S
+# Localizer note: %1 is an untrusted string provided by a remote server. It
+# could try to take advantage of sentence structure in order to mislead the
+# user (see bug 244273). It should be integrated into the these property
+# strings as little as possible.
+EnterLoginForRealm=A username and password are being requested by %2$S. The site says: "%1$S"
+EnterLoginForProxy=The proxy %2$S is requesting a username and password. The site says: "%1$S"
+
 EnterUserPasswordFor=Enter username and password for %1$S
 EnterPasswordFor=Enter password for %1$S on %2$S
 
Index: embedding/components/windowwatcher/src/nsPrompt.cpp
===================================================================
RCS file: /cvsroot/mozilla/embedding/components/windowwatcher/src/nsPrompt.cpp,v
retrieving revision 1.33
diff -u -p -8 -r1.33 nsPrompt.cpp
--- embedding/components/windowwatcher/src/nsPrompt.cpp	3 Dec 2007 21:47:45 -0000	1.33
+++ embedding/components/windowwatcher/src/nsPrompt.cpp	28 Jan 2008 23:46:36 -0000
@@ -50,16 +50,19 @@
 #include "nsNetCID.h"
 #include "nsPIDOMWindow.h"
 #include "nsIPromptFactory.h"
 #include "nsIProxiedChannel.h"
 #include "nsIProxyInfo.h"
 #include "nsIIDNService.h"
 #include "nsNetUtil.h"
 #include "nsPromptUtils.h"
+#include "nsIPrefService.h"
+#include "nsIPrefLocalizedString.h"
+
 
 nsresult
 NS_NewPrompter(nsIPrompt **result, nsIDOMWindow *aParent)
 {
   nsresult rv;
   *result = 0;
 
   nsPrompt *prompter = new nsPrompt(aParent);
@@ -413,25 +416,45 @@ MakeDialogText(nsIChannel* aChannel, nsI
   aAuthInfo->GetUsername(username);
 
   PRUint32 flags;
   aAuthInfo->GetFlags(&flags);
   PRBool proxyAuth = (flags & nsIAuthInformation::AUTH_PROXY) != 0;
 
   nsAutoString realm;
   aAuthInfo->GetRealm(realm);
+  // Trim obnoxiously long realms.
+  if (realm.Length() > 150) {
+    realm.Truncate(150);
+
+    // Append "..." (or localized equivalent). Yay complexity.
+    nsAutoString ellipsis;
+    nsCOMPtr<nsIPrefBranch> prefs(do_GetService(NS_PREFSERVICE_CONTRACTID));
+    if (prefs) {
+      nsCOMPtr<nsIPrefLocalizedString> prefString;
+      rv = prefs->GetComplexValue("intl.ellipsis",
+                                  NS_GET_IID(nsIPrefLocalizedString),
+                                  getter_AddRefs(prefString));
+      if (prefString)
+        prefString->ToString(getter_Copies(ellipsis));
+    }
+    if (ellipsis.IsEmpty())
+      ellipsis.AssignLiteral("...");
+
+    realm.Append(ellipsis);
+  }
 
   // Append the port if it was specified
   if (port != -1) {
     displayHost.Append(PRUnichar(':'));
     displayHost.AppendInt(port);
   }
 
-  NS_NAMED_LITERAL_STRING(proxyText, "EnterUserPasswordForProxy");
-  NS_NAMED_LITERAL_STRING(originText, "EnterUserPasswordForRealm");
+  NS_NAMED_LITERAL_STRING(proxyText, "EnterLoginForProxy");
+  NS_NAMED_LITERAL_STRING(originText, "EnterLoginForRealm");
   NS_NAMED_LITERAL_STRING(noRealmText, "EnterUserPasswordFor");
   NS_NAMED_LITERAL_STRING(passwordText, "EnterPasswordFor");
 
   const PRUnichar *text;
   if (proxyAuth) {
     text = proxyText.get();
   } else {
     text = originText.get();
Index: toolkit/content/commonDialog.css
===================================================================
RCS file: /cvsroot/mozilla/toolkit/content/commonDialog.css,v
retrieving revision 1.2
diff -u -p -8 -r1.2 commonDialog.css
--- toolkit/content/commonDialog.css	27 Jan 2008 01:20:27 -0000	1.2
+++ toolkit/content/commonDialog.css	28 Jan 2008 23:46:36 -0000
@@ -32,14 +32,23 @@
  and other provisions required by the GPL or the LGPL. If you do not delete
  the provisions above, a recipient may use your version of this file under
  the terms of any one of the MPL, the GPL or the LGPL.
 
  ***** END LICENSE BLOCK ***** */
 
 @namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"); /* set default namespace to XUL */
 
-#info\.box > description {
+#infoContainer {
+  max-width: 45em;
+}
+
+#info\.body {
   -moz-user-focus: normal;
   -moz-user-select: text;
   cursor: text !important;
   white-space: -moz-pre-wrap;
 }
+
+#loginLabel, #password1Label, #password2Label {
+  text-align: right;
+}
+
Index: toolkit/content/commonDialog.js
===================================================================
RCS file: /cvsroot/mozilla/toolkit/content/commonDialog.js,v
retrieving revision 1.13
diff -u -p -8 -r1.13 commonDialog.js
--- toolkit/content/commonDialog.js	29 Jul 2006 12:47:26 -0000	1.13
+++ toolkit/content/commonDialog.js	28 Jan 2008 23:46:36 -0000
@@ -119,19 +119,19 @@ function commonDialogOnLoad()
       break;
     case 4:
       dialog.getButton("extra2").hidden = false;
     case 3:
       dialog.getButton("extra1").hidden = false;
   }
 
   // display the main text
-  var messageParent = document.getElementById("info.box").getElementsByTagName('description')[0];
   // XXX the substr(0, 10000) part is a workaround for bug 317334
-  messageParent.textContent = gCommonDialogParam.GetString(0).substr(0, 10000);
+  var croppedMessage = gCommonDialogParam.GetString(0).substr(0, 10000);
+  setElementText("info.body", croppedMessage, true);
 
   setElementText("info.header", gCommonDialogParam.GetString(3), true);
 
   // set the icon
   var iconElement = document.getElementById("info.icon");
   var iconClass = gCommonDialogParam.GetString(2);
   if (!iconClass)
     iconClass = "message-icon";
@@ -257,19 +257,17 @@ function setElementText(aElementID, aVal
   } else if (aChildNodeFlag && element) {
     element.appendChild(document.createTextNode(aValue));
   }
 }
 
 function setCheckbox(aChkMsg, aChkValue)
 {
   if (aChkMsg) {
-    // XXX Would love to use hidden instead of collapsed, but the checkbox
-    // fails to size itself properly when I do this.
-    document.getElementById("checkboxContainer").removeAttribute("collapsed");
+    unHideElementById("checkboxContainer");
     
     var checkboxElement = document.getElementById("checkbox");
     setLabelForNode(checkboxElement, aChkMsg);
     checkboxElement.checked = aChkValue > 0;
   }
 }
 
 function unHideElementById(aElementID)
Index: toolkit/content/commonDialog.xul
===================================================================
RCS file: /cvsroot/mozilla/toolkit/content/commonDialog.xul,v
retrieving revision 1.15
diff -u -p -8 -r1.15 commonDialog.xul
--- toolkit/content/commonDialog.xul	12 Dec 2007 02:10:30 -0000	1.15
+++ toolkit/content/commonDialog.xul	28 Jan 2008 23:46:36 -0000
@@ -33,56 +33,56 @@
                 disabled="true"/>
       <menuitem id="context-selectall"
                 label="&selectAllCmd.label;"
                 accesskey="&selectAllCmd.accesskey;"
                 command="cmd_selectAll"/>
     </popup>
   </popupset>
 
-  <hbox flex="1">
-    <hbox align="start">
-      <image id="info.icon" class="spaced"/>
-    </hbox>
-    
-    <vbox flex="1" style="max-width: 45em;">
+
+  <grid>
+    <columns>
+      <column/>
+      <column flex="1"/>
+    </columns>
+
+    <rows>
+      <row>
+        <hbox align="start">
+          <image id="info.icon" class="spaced"/>
+        </hbox>
+        <vbox id="infoContainer">
 #ifdef XP_MACOSX
-# On mac, we're exposing the dialog title inside the dialog
-      <!-- Dialog title -->
-      <description id="info.title" class="dialogTitle"/>
+          <!-- Dialog title is inside dialog for OS X -->
+          <description id="info.title" class="dialogTitle"/>
 #endif
-      <!-- text -->
-      <description id="info.header" class="header"/>
-      <vbox id="info.box">
-        <description context="contentAreaContextMenu" tabindex="-1"/>
-      </vbox>
-
-      <!-- textboxes -->
-      <vbox id="loginContainer" hidden="true">
+          <description id="info.header" class="header"/>
+          <description id="info.body" context="contentAreaContextMenu" tabindex="-1"/>
+        </vbox>
+      </row>
+      <row id="loginContainer" hidden="true" align="center">
         <label id="loginLabel" value="&editfield0.label;" control="loginTextbox"/>
         <textbox id="loginTextbox"/>
-        <separator class="thin"/>
-      </vbox>
-      <vbox id ="password1Container" hidden="true">
+      </row>
+      <row id ="password1Container" hidden="true" align="center">
         <label id="password1Label" value="&editfield1.label;" control="password1Textbox"/>
         <textbox type="password" id="password1Textbox"/>
-        <separator class="thin"/>
-      </vbox>
-      <vbox id="password2Container" hidden="true">
+      </row>
+      <row id="password2Container" hidden="true" align="center">
         <label id="password2Label" value="&editfield2.label;" control="password2Textbox"/>
         <textbox type="password" id="password2Textbox"/>
-        <separator class="thin"/>
-      </vbox>
-  
-      <!-- checkbox -->
-      <vbox id="checkboxContainer" align="start" collapsed="true">
+      </row>
+      <row id="checkboxContainer" hidden="true">
+        <spacer/>
         <checkbox id="checkbox" oncommand="onCheckboxClick(this);"/>
-      </vbox>
-    </vbox>
-  </hbox>
+      </row>
+    </rows>
+  </grid>
+
 
   <!-- This method is called inline because it may unset hidden="true" on the
        above boxes, causing their frames to be build and bindings to load.  
        So, by calling this inline, we guarantee the textboxes and checkboxes 
        above will have their bindings before initButtons is called, and the
        dialog will be intrinsically sized correctly. -->
   <script type="application/javascript">showControls();</script>
 </dialog>
Index: toolkit/themes/pinstripe/global/formatting.css
===================================================================
RCS file: /cvsroot/mozilla/toolkit/themes/pinstripe/global/formatting.css,v
retrieving revision 1.6
diff -u -p -8 -r1.6 formatting.css
--- toolkit/themes/pinstripe/global/formatting.css	23 May 2007 20:49:33 -0000	1.6
+++ toolkit/themes/pinstripe/global/formatting.css	28 Jan 2008 23:46:36 -0000
@@ -184,17 +184,19 @@
       padding             : 20px 44px 10px 44px;
     }    
 
   .caption-text
     {
       margin: 0px 2px 0px 1px !important;
     }
 
-#commonDialog > hbox > vbox > description, #commonDialog > hbox > vbox > vbox > description {
+#commonDialog #info\.title,
+#commonDialog #info\.header,
+#commonDialog #info\.body {
   font: menu;
   line-height: 16px;
   margin-bottom: 6px;
 }
 
 #commonDialog .dialogTitle {
   font-weight: bold !important;
 }
Index: toolkit/themes/pinstripe/global/global.css
===================================================================
RCS file: /cvsroot/mozilla/toolkit/themes/pinstripe/global/global.css,v
retrieving revision 1.19
diff -u -p -8 -r1.19 global.css
--- toolkit/themes/pinstripe/global/global.css	28 Jan 2008 00:53:14 -0000	1.19
+++ toolkit/themes/pinstripe/global/global.css	28 Jan 2008 23:46:36 -0000
@@ -181,17 +181,17 @@ statusbarpanel {
 #info.icon {
 	margin-right: 14px;
 }
 
 #commonDialog {
 	line-height: 13px;
 }
 
-#commonDialog > hbox > vbox {
+#commonDialog #infoContainer {
 	max-width: 33em !important;
 }
 
 #header {
 	display: none !important;
 }
 
 #warn1 {
