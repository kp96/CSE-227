* * *

diff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp
--- a/docshell/base/nsDocShell.cpp
+++ b/docshell/base/nsDocShell.cpp
@@ -5606,20 +5606,26 @@ nsDocShell::OnRedirectStateChange(nsICha
     }
 
     // check if the new load should go through the application cache.
     nsCOMPtr<nsIApplicationCacheChannel> appCacheChannel =
         do_QueryInterface(aNewChannel);
     if (appCacheChannel) {
         nsCOMPtr<nsIURI> newURI;
         aNewChannel->GetURI(getter_AddRefs(newURI));
         appCacheChannel->SetChooseApplicationCache(ShouldCheckAppCache(newURI));
     }
+
+    if (~(aRedirectFlags & nsIChannelEventSink::REDIRECT_INTERNAL) && 
+        mLoadType & (LOAD_CMD_RELOAD | LOAD_CMD_HISTORY)) {
+        mLoadType = LOAD_NORMAL_REPLACE;
+        SetHistoryEntry(&mLSHE, nsnull);
+    }
 }
 
 NS_IMETHODIMP
 nsDocShell::OnStatusChange(nsIWebProgress * aWebProgress,
                            nsIRequest * aRequest,
                            nsresult aStatus, const PRUnichar * aMessage)
 {
     NS_NOTREACHED("notification excluded in AddProgressListener(...)");
     return NS_OK;
 }
diff --git a/docshell/test/Makefile.in b/docshell/test/Makefile.in
--- a/docshell/test/Makefile.in
+++ b/docshell/test/Makefile.in
@@ -76,20 +76,25 @@ _TEST_FILES = \
 		file_bug385434_1.html \
 		file_bug385434_2.html \
 		file_bug385434_3.html \
 		test_bug509055.html \
 		file_bug509055.html \
 		test_bug529119-1.html \
 		test_bug529119-2.html \
 		bug529119-window.html \
 		test_bug540462.html \
 		file_bug540462.html \
+		dummy536466.html \
+		test_bug536466-1.html \
+		test_bug536466-2.html \
+		test_bug536466-3.html \
+		bug536466redirect.sjs \
 		$(NULL)
 
 ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
 _TEST_FILES += \
 		test_bug511449.html \
 		file_bug511449.html \
 		$(NULL)
 endif
 
 libs:: $(_TEST_FILES)
diff --git a/docshell/test/bug536466redirect.sjs b/docshell/test/bug536466redirect.sjs
new file mode 100644
--- /dev/null
+++ b/docshell/test/bug536466redirect.sjs
@@ -0,0 +1,32 @@
+var content =
+
+"<html>" +
+"<body onload='notify();'>" +
+"<script>" +
+"  function notify() {" +
+"    (opener?opener:parent).postMessage(window.location.href, 'http://localhost:8888');" +  
+"  }" +
+"</script>" +
+"No redirect page" +
+"</body>" +
+"</html>";
+
+function handleRequest(request, response)
+{
+  if (request.queryString == "reset") {
+    setState("did-redirect", "false");
+    response.setStatusLine(request.httpVersion, 204, "No content");
+    return;
+  }
+
+  var state = getState("did-redirect") || "false";
+  setState("did-redirect", state == "true" ? "false" : "true");
+    
+  if (state == "false") { 
+    response.setStatusLine(request.httpVersion, 307, "Moved temporarly");
+    response.setHeader("Location", "https://example.com/tests/docshell/test/dummy536466.html");
+  }
+  else {
+    response.bodyOutputStream.write(content, content.length);
+  }
+}
diff --git a/docshell/test/dummy536466.html b/docshell/test/dummy536466.html
new file mode 100644
--- /dev/null
+++ b/docshell/test/dummy536466.html
@@ -0,0 +1,61 @@
+<html>
+<head>
+<script>
+  function isSecurityState(expectedState, message, test)
+  {
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+    
+    // Quit nasty but working :)
+    var ui = window
+      .QueryInterface(Components.interfaces.nsIInterfaceRequestor)
+      .getInterface(Components.interfaces.nsIWebNavigation)
+      .QueryInterface(Components.interfaces.nsIDocShell)
+      .securityUI;
+  
+    var isInsecure = !ui ||
+      (ui.state & Components.interfaces.nsIWebProgressListener.STATE_IS_INSECURE);
+    var isBroken = ui &&
+      (ui.state & Components.interfaces.nsIWebProgressListener.STATE_IS_BROKEN);
+    var isEV = ui &&
+      (ui.state & Components.interfaces.nsIWebProgressListener.STATE_IDENTITY_EV_TOPLEVEL);
+  
+    var gotState;
+    if (isInsecure)
+      gotState = "insecure";
+    else if (isBroken)
+      gotState = "broken";
+    else if (isEV)
+      gotState = "EV";
+    else
+      gotState = "secure";
+  
+    if (gotState != expectedState)
+      return false;
+  
+    switch (expectedState)
+    {
+      case "insecure":
+        return(isInsecure && !isBroken && !isEV);
+      case "broken":
+        return(ui && !isInsecure && isBroken && !isEV);
+      case "secure":
+        return(ui && !isInsecure && !isBroken && !isEV);
+      case "EV":
+        return(ui && !isInsecure && !isBroken && isEV);
+      default:
+        throw "Invalid isSecurityState state";
+    }
+  }
+  
+  window.addEventListener("message", function(event) {
+    var result = isSecurityState(event.data);
+    (opener?opener:parent).postMessage(result ? "OK" : "ERROR", "http://localhost:8888");
+  }, false);
+
+  function notify() {
+    (opener?opener:parent).postMessage(window.location.href, "http://localhost:8888");  
+  }
+</script>
+</head>
+<body onload="notify();">Redirect result page</body>
+</html>
diff --git a/docshell/test/test_bug536466-1.html b/docshell/test/test_bug536466-1.html
new file mode 100644
--- /dev/null
+++ b/docshell/test/test_bug536466-1.html
@@ -0,0 +1,75 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+<title>Test bug 536466</title>
+<script type="text/javascript" src="chrome://mochikit/content/MochiKit/packed.js"></script>
+<script type="text/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>        
+<link rel="stylesheet" type="text/css" href="chrome://mochikit/content/tests/SimpleTest/test.css" />
+
+<script class="testbody" type="text/javascript">
+
+SimpleTest.waitForExplicitFinish();
+
+var state = 0;
+var testwin = null;
+
+window.addEventListener("message", function(message) {
+  continueTest(message.data);
+}, false);
+
+function continueTest(data)
+{
+  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+
+  switch (state++) {
+    case 0: // Called from onload of this main window, load the redirect page
+      var req = new XMLHttpRequest();
+      req.open("GET", "http://localhost:8888/tests/docshell/test/bug536466redirect.sjs?reset", false);
+      req.send("");
+    
+      // case 2 should behave the same way as it does in this case 0.
+      testwin = window.open("bug536466redirect.sjs"); // Redirect works...
+      break;
+    case 1: 
+      testwin.location.href = "bug536466redirect.sjs"; // (We are on the dummy page now) redirect doesn't work now...
+      break;
+    case 2:
+      testwin.location.reload(); // (We are on the redirecting page, non-redirected) redirect works now...
+      break;
+    case 3:
+      testwin.history.back(); // Should be at the redirect target page, result from case 0
+      window.setTimeout(continueTest, 500);
+      break;
+    case 4:
+      testwin.history.forward(); // Should be back at the target of the redirect
+      window.setTimeout(continueTest, 500);
+      break;
+    case 5:
+      try {
+        testwin.document.write("Modified content");
+        ok(false, "Didn't get exception on document.write");
+      }
+      catch (ex) {
+        ok(true, "Did get exception on document.write");
+      }      
+      is(testwin.location.href, 
+         "https://example.com/tests/docshell/test/dummy536466.html", 
+         "Correct URL");
+      is(testwin.document.body.innerHTML, 
+         "Redirect result page", 
+         "Correct content");
+      testwin.postMessage("secure", "https://example.com");
+      break;
+    case 6:
+      ok(data == "OK", "Is secure");
+      SimpleTest.finish();
+      testwin.close();
+      break;         
+  }
+}
+     
+</script>
+</head>
+<body onload="continueTest();">
+</body>
+</html>
diff --git a/docshell/test/test_bug536466-2.html b/docshell/test/test_bug536466-2.html
new file mode 100644
--- /dev/null
+++ b/docshell/test/test_bug536466-2.html
@@ -0,0 +1,77 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+<title>Test bug 536466</title>
+<script type="text/javascript" src="chrome://mochikit/content/MochiKit/packed.js"></script>
+<script type="text/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>        
+<link rel="stylesheet" type="text/css" href="chrome://mochikit/content/tests/SimpleTest/test.css" />
+
+<script class="testbody" type="text/javascript">
+
+SimpleTest.waitForExplicitFinish();
+
+var state = 0;
+var testwin = null;
+
+window.addEventListener("message", function(message) {
+  continueTest(message.data);
+}, false);
+
+function continueTest(data)
+{
+  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+
+  switch (state++) {
+    case 0: // Called from onload of this main window, load the redirect page
+      var req = new XMLHttpRequest();
+      req.open("GET", "http://localhost:8888/tests/docshell/test/bug536466redirect.sjs?reset", false);
+      req.send("");
+    
+      // case 2 should behave the same way as it does in this case 0.
+      var frame = document.getElementById("aframe");
+      testwin = frame.contentWindow;
+      frame.src = "bug536466redirect.sjs"; // Redirect works...
+      break;
+    case 1: 
+      testwin.location.href = "bug536466redirect.sjs"; // (We are on the dummy page now) redirect doesn't work now...
+      break;
+    case 2:
+      testwin.location.reload(); // (We are on the redirecting page, non-redirected) redirect works now...
+      break;
+    case 3:
+      testwin.history.back(); // Should be at the redirect target page, result from case 0
+      window.setTimeout(continueTest, 500);
+      break;
+    case 4:
+      testwin.history.forward(); // Should be back at the target of the redirect
+      window.setTimeout(continueTest, 500);
+      break;
+    case 5:
+      try {
+        testwin.document.write("Modified content");
+        ok(false, "Didn't get exception on document.write");
+      }
+      catch (ex) {
+        ok(true, "Did get exception on document.write");
+      }      
+      is(testwin.location.href, 
+         "https://example.com/tests/docshell/test/dummy536466.html", 
+         "Correct URL");
+      is(testwin.document.body.innerHTML, 
+         "Redirect result page", 
+         "Correct content");
+      testwin.postMessage("insecure", "https://example.com");
+      break;
+    case 6:
+      ok(data == "OK", "Is not secure");
+      SimpleTest.finish();
+      break;         
+  }
+}
+     
+</script>
+</head>
+<body onload="continueTest();">
+  <iframe id="aframe" src=""></iframe>
+</body>
+</html>
diff --git a/docshell/test/test_bug536466-3.html b/docshell/test/test_bug536466-3.html
new file mode 100644
--- /dev/null
+++ b/docshell/test/test_bug536466-3.html
@@ -0,0 +1,77 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+<title>Test bug 536466</title>
+<script type="text/javascript" src="chrome://mochikit/content/MochiKit/packed.js"></script>
+<script type="text/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>        
+<link rel="stylesheet" type="text/css" href="chrome://mochikit/content/tests/SimpleTest/test.css" />
+
+<script class="testbody" type="text/javascript">
+
+SimpleTest.waitForExplicitFinish();
+
+var state = 0;
+var testwin = null;
+
+window.addEventListener("message", function(message) {
+  continueTest(message.data);
+}, false);
+
+function continueTest(data)
+{
+  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+
+  switch (state++) {
+    case 0: // Called from onload of this main window, load the redirect page
+      var req = new XMLHttpRequest();
+      req.open("GET", "http://localhost:8888/tests/docshell/test/bug536466redirect.sjs?reset", false);
+      req.send("");
+    
+      // case 2 should behave the same way as it does in this case 0.
+      var frame = document.createElement("iframe");
+      document.body.appendChild(frame);
+      testwin = frame.contentWindow;
+      frame.src = "bug536466redirect.sjs"; // Redirect works...
+      break;
+    case 1: 
+      testwin.location.href = "bug536466redirect.sjs"; // (We are on the dummy page now) redirect doesn't work now...
+      break;
+    case 2:
+      testwin.location.reload(); // (We are on the redirecting page, non-redirected) redirect works now...
+      break;
+    case 3:
+      testwin.history.back(); // Should be at the redirect target page, result from case 0
+      window.setTimeout(continueTest, 500);
+      break;
+    case 4:
+      testwin.history.forward(); // Should be back at the target of the redirect
+      window.setTimeout(continueTest, 500);
+      break;
+    case 5:
+      try {
+        testwin.document.write("Modified content");
+        ok(false, "Didn't get exception on document.write");
+      }
+      catch (ex) {
+        ok(true, "Did get exception on document.write");
+      }      
+      is(testwin.location.href, 
+         "https://example.com/tests/docshell/test/dummy536466.html", 
+         "Correct URL");
+      is(testwin.document.body.innerHTML, 
+         "Redirect result page", 
+         "Correct content");
+      testwin.postMessage("insecure", "https://example.com");
+      break;
+    case 6:
+      ok(data == "OK", "Is not secure");
+      SimpleTest.finish();
+      break;         
+  }
+}
+     
+</script>
+</head>
+<body onload="continueTest();">
+</body>
+</html>
