{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas2402d7d\""},"diff":[{"chunks":[{"content":"@@ -59,12 +59,6 @@","changes":[{"type":"normal","normal":true,"ln1":59,"ln2":59,"content":" #include \"nsILegacyPluginWrapperOS2.h\""},{"type":"normal","normal":true,"ln1":60,"ln2":60,"content":" #endif"},{"type":"normal","normal":true,"ln1":61,"ln2":61,"content":" "},{"type":"del","del":true,"ln":62,"content":"-#ifdef MOZ_WIDGET_GTK2"},{"type":"del","del":true,"ln":63,"content":"-#include <gdk/gdk.h>"},{"type":"del","del":true,"ln":64,"content":"-#include <gdk/gdkx.h>"},{"type":"del","del":true,"ln":65,"content":"-#include \"gtk2xtbin.h\""},{"type":"del","del":true,"ln":66,"content":"-#endif"},{"type":"del","del":true,"ln":67,"content":"-"},{"type":"normal","normal":true,"ln1":68,"ln2":62,"content":" ////////////////////////////////////////////////////////////////////////"},{"type":"normal","normal":true,"ln1":69,"ln2":63,"content":" // CID's && IID's"},{"type":"normal","normal":true,"ln1":70,"ln2":64,"content":" static NS_DEFINE_IID(kCPluginManagerCID, NS_PLUGINMANAGER_CID); // needed for NS_TRY_SAFE_CALL"}],"oldStart":59,"oldLines":12,"newStart":59,"newLines":6},{"content":"@@ -820,11 +814,6 @@ ns4xPluginInstance::~ns4xPluginInstance(void)","changes":[{"type":"normal","normal":true,"ln1":820,"ln2":814,"content":" {"},{"type":"normal","normal":true,"ln1":821,"ln2":815,"content":"   PLUGIN_LOG(PLUGIN_LOG_BASIC, (\"ns4xPluginInstance dtor: this=%p\\n\",this));"},{"type":"normal","normal":true,"ln1":822,"ln2":816,"content":" "},{"type":"del","del":true,"ln":823,"content":"-#if defined (MOZ_WIDGET_GTK2)"},{"type":"del","del":true,"ln":824,"content":"-  if (mXtBin)"},{"type":"del","del":true,"ln":825,"content":"-    gtk_widget_destroy(mXtBin);"},{"type":"del","del":true,"ln":826,"content":"-#endif"},{"type":"del","del":true,"ln":827,"content":"-"},{"type":"normal","normal":true,"ln1":828,"ln2":817,"content":"   // clean the stream list if any"},{"type":"normal","normal":true,"ln1":829,"ln2":818,"content":"   for(nsInstanceStream *is = mStreams; is != nsnull;) {"},{"type":"normal","normal":true,"ln1":830,"ln2":819,"content":"     nsInstanceStream * next = is->mNext;"}],"oldStart":820,"oldLines":11,"newStart":814,"newLines":6},{"content":"@@ -847,9 +836,6 @@ NS_IMETHODIMP ns4xPluginInstance::Initialize(nsIPluginInstancePeer* peer)","changes":[{"type":"normal","normal":true,"ln1":847,"ln2":836,"content":" {"},{"type":"normal","normal":true,"ln1":848,"ln2":837,"content":"   PLUGIN_LOG(PLUGIN_LOG_NORMAL, (\"ns4xPluginInstance::Initialize this=%p\\n\",this));"},{"type":"normal","normal":true,"ln1":849,"ln2":838,"content":" "},{"type":"del","del":true,"ln":850,"content":"-#if defined (MOZ_WIDGET_GTK2)"},{"type":"del","del":true,"ln":851,"content":"-  mXtBin = nsnull;"},{"type":"del","del":true,"ln":852,"content":"-#endif"},{"type":"normal","normal":true,"ln1":853,"ln2":839,"content":"   return InitializePlugin(peer);"},{"type":"normal","normal":true,"ln1":854,"ln2":840,"content":" }"},{"type":"normal","normal":true,"ln1":855,"ln2":841,"content":" "}],"oldStart":847,"oldLines":9,"newStart":836,"newLines":6},{"content":"@@ -890,13 +876,6 @@ NS_IMETHODIMP ns4xPluginInstance::Stop(void)","changes":[{"type":"normal","normal":true,"ln1":890,"ln2":876,"content":"     }"},{"type":"normal","normal":true,"ln1":891,"ln2":877,"content":"   }"},{"type":"normal","normal":true,"ln1":892,"ln2":878,"content":" "},{"type":"del","del":true,"ln":893,"content":"-#if defined (MOZ_WIDGET_GTK2)"},{"type":"del","del":true,"ln":894,"content":"-  if (mXtBin) {"},{"type":"del","del":true,"ln":895,"content":"-    gtk_widget_destroy(mXtBin);"},{"type":"del","del":true,"ln":896,"content":"-    mXtBin = 0;"},{"type":"del","del":true,"ln":897,"content":"-  }"},{"type":"del","del":true,"ln":898,"content":"-#endif"},{"type":"del","del":true,"ln":899,"content":"-"},{"type":"normal","normal":true,"ln1":900,"ln2":879,"content":"   if(!mStarted)"},{"type":"normal","normal":true,"ln1":901,"ln2":880,"content":"     return NS_OK;"},{"type":"normal","normal":true,"ln1":902,"ln2":881,"content":" "}],"oldStart":890,"oldLines":13,"newStart":876,"newLines":6},{"content":"@@ -1117,109 +1096,12 @@ NS_IMETHODIMP ns4xPluginInstance::SetWindow(nsPluginWindow* window)","changes":[{"type":"normal","normal":true,"ln1":1117,"ln2":1096,"content":"   "},{"type":"normal","normal":true,"ln1":1118,"ln2":1097,"content":"   NPError error;"},{"type":"normal","normal":true,"ln1":1119,"ln2":1098,"content":" "},{"type":"del","del":true,"ln":1120,"content":"-  // It would be nice if this was all moved to"},{"type":"del","del":true,"ln":1121,"content":"-  // nsPluginNativeWindowGtk2::CallSetWindow or nsWindow or somewhere else?"},{"type":"normal","normal":true,"ln1":1122,"ln2":1099,"content":" #if defined (MOZ_WIDGET_GTK2)"},{"type":"del","del":true,"ln":1123,"content":"-  if (window->type == nsPluginWindowType_Window) {"},{"type":"del","del":true,"ln":1124,"content":"-    PRBool isXembed = PR_FALSE;"},{"type":"del","del":true,"ln":1125,"content":"-    // bug 108337, flash plugin on linux doesn't like window->width <= 0"},{"type":"del","del":true,"ln":1126,"content":"-    if ((PRInt32) window->width <= 0 || (PRInt32) window->height <= 0)"},{"type":"del","del":true,"ln":1127,"content":"-      return NS_OK;"},{"type":"del","del":true,"ln":1128,"content":"-"},{"type":"del","del":true,"ln":1129,"content":"-    // We need to test if this is an xembed window before doing checks"},{"type":"del","del":true,"ln":1130,"content":"-    // below, as they might be used on the first pass or on later passes"},{"type":"del","del":true,"ln":1131,"content":"-    // when we resize the plugin window."},{"type":"del","del":true,"ln":1132,"content":"-    GdkWindow *win = gdk_window_lookup((XID)window->window);"},{"type":"del","del":true,"ln":1133,"content":"-    if (!win)"},{"type":"del","del":true,"ln":1134,"content":"-      return NS_ERROR_FAILURE;"},{"type":"del","del":true,"ln":1135,"content":"-"},{"type":"del","del":true,"ln":1136,"content":"-    gpointer user_data = nsnull;"},{"type":"del","del":true,"ln":1137,"content":"-    gdk_window_get_user_data(win, &user_data);"},{"type":"del","del":true,"ln":1138,"content":"-    if (user_data && GTK_IS_WIDGET(user_data)) {"},{"type":"del","del":true,"ln":1139,"content":"-      GtkWidget* widget = GTK_WIDGET(user_data);"},{"type":"del","del":true,"ln":1140,"content":"-"},{"type":"del","del":true,"ln":1141,"content":"-      if (GTK_IS_SOCKET(widget))"},{"type":"del","del":true,"ln":1142,"content":"-        isXembed = PR_TRUE;"},{"type":"del","del":true,"ln":1143,"content":"-    }"},{"type":"del","del":true,"ln":1144,"content":"-"},{"type":"del","del":true,"ln":1145,"content":"-    // Fill out the ws_info data."},{"type":"del","del":true,"ln":1146,"content":"-    // (ws_info should be non-null but check just in case.)"},{"type":"del","del":true,"ln":1147,"content":"-    if (!mXtBin && window->ws_info) {"},{"type":"del","del":true,"ln":1148,"content":"-"},{"type":"del","del":true,"ln":1149,"content":"-      NPSetWindowCallbackStruct* ws ="},{"type":"del","del":true,"ln":1150,"content":"-        static_cast<NPSetWindowCallbackStruct*>(window->ws_info);"},{"type":"del","del":true,"ln":1151,"content":"-"},{"type":"del","del":true,"ln":1152,"content":"-      if (!isXembed) {  "},{"type":"del","del":true,"ln":1153,"content":"-#ifdef NS_DEBUG      "},{"type":"del","del":true,"ln":1154,"content":"-        printf(\"About to create new xtbin of %i X %i from %p...\\n\","},{"type":"del","del":true,"ln":1155,"content":"-               window->width, window->height, (void*)win);"},{"type":"del","del":true,"ln":1156,"content":"-#endif"},{"type":"del","del":true,"ln":1157,"content":"-"},{"type":"del","del":true,"ln":1158,"content":"-#if 0"},{"type":"del","del":true,"ln":1159,"content":"-        // if we destroyed the plugin when we left the page, we could remove this"},{"type":"del","del":true,"ln":1160,"content":"-        // code (i believe) the problem here is that the window gets destroyed when"},{"type":"del","del":true,"ln":1161,"content":"-        // its parent, etc does by changing a page the plugin instance is being"},{"type":"del","del":true,"ln":1162,"content":"-        // held on to, so when we return to the page, we have a mXtBin, but it is"},{"type":"del","del":true,"ln":1163,"content":"-        // in a not-so-good state."},{"type":"del","del":true,"ln":1164,"content":"-        // --"},{"type":"del","del":true,"ln":1165,"content":"-        // this is lame.  we shouldn't be destroying this everytime, but I can't find"},{"type":"del","del":true,"ln":1166,"content":"-        // a good way to tell if we need to destroy/recreate the xtbin or not"},{"type":"del","del":true,"ln":1167,"content":"-        // what if the plugin wants to change the window and not just resize it??"},{"type":"del","del":true,"ln":1168,"content":"-        // (pav)"},{"type":"del","del":true,"ln":1169,"content":"-"},{"type":"del","del":true,"ln":1170,"content":"-        if (mXtBin) {"},{"type":"del","del":true,"ln":1171,"content":"-          gtk_widget_destroy(mXtBin);"},{"type":"del","del":true,"ln":1172,"content":"-          mXtBin = NULL;"},{"type":"del","del":true,"ln":1173,"content":"-        }"},{"type":"del","del":true,"ln":1174,"content":"-#endif"},{"type":"del","del":true,"ln":1175,"content":"-"},{"type":"del","del":true,"ln":1176,"content":"-"},{"type":"del","del":true,"ln":1177,"content":"-        if (!mXtBin) {"},{"type":"del","del":true,"ln":1178,"content":"-          mXtBin = gtk_xtbin_new(win, 0);"},{"type":"del","del":true,"ln":1179,"content":"-          // Check to see if creating mXtBin failed for some reason."},{"type":"del","del":true,"ln":1180,"content":"-          // if it did, we can't go any further."},{"type":"del","del":true,"ln":1181,"content":"-          if (!mXtBin)"},{"type":"del","del":true,"ln":1182,"content":"-            return NS_ERROR_FAILURE;"},{"type":"del","del":true,"ln":1183,"content":"-        } "},{"type":"del","del":true,"ln":1184,"content":"-"},{"type":"del","del":true,"ln":1185,"content":"-        gtk_widget_set_usize(mXtBin, window->width, window->height);"},{"type":"del","del":true,"ln":1186,"content":"-"},{"type":"del","del":true,"ln":1187,"content":"-#ifdef NS_DEBUG"},{"type":"del","del":true,"ln":1188,"content":"-        printf(\"About to show xtbin(%p)...\\n\", (void*)mXtBin); fflush(NULL);"},{"type":"del","del":true,"ln":1189,"content":"-#endif"},{"type":"del","del":true,"ln":1190,"content":"-        gtk_widget_show(mXtBin);"},{"type":"del","del":true,"ln":1191,"content":"-#ifdef NS_DEBUG"},{"type":"del","del":true,"ln":1192,"content":"-        printf(\"completed gtk_widget_show(%p)\\n\", (void*)mXtBin); fflush(NULL);"},{"type":"del","del":true,"ln":1193,"content":"-#endif"},{"type":"del","del":true,"ln":1194,"content":"-      }"},{"type":"del","del":true,"ln":1195,"content":"-"},{"type":"del","del":true,"ln":1196,"content":"-      // fill in window info structure "},{"type":"del","del":true,"ln":1197,"content":"-      ws->type = 0; // OK, that was a guess!!"},{"type":"del","del":true,"ln":1198,"content":"-#ifdef MOZ_X11"},{"type":"del","del":true,"ln":1199,"content":"-      ws->depth = gdk_window_get_visual(win)->depth;"},{"type":"del","del":true,"ln":1200,"content":"-      if (!isXembed)"},{"type":"del","del":true,"ln":1201,"content":"-        ws->display = GTK_XTBIN(mXtBin)->xtdisplay;"},{"type":"del","del":true,"ln":1202,"content":"-      else"},{"type":"del","del":true,"ln":1203,"content":"-        ws->display = GDK_WINDOW_XDISPLAY(win);"},{"type":"del","del":true,"ln":1204,"content":"-      ws->visual = GDK_VISUAL_XVISUAL(gdk_window_get_visual(win));"},{"type":"del","del":true,"ln":1205,"content":"-      ws->colormap = GDK_COLORMAP_XCOLORMAP(gdk_window_get_colormap(win));"},{"type":"del","del":true,"ln":1206,"content":"-"},{"type":"del","del":true,"ln":1207,"content":"-      XFlush(ws->display);"},{"type":"del","del":true,"ln":1208,"content":"-#endif"},{"type":"del","del":true,"ln":1209,"content":"-    } // !mXtBin"},{"type":"del","del":true,"ln":1210,"content":"-"},{"type":"del","del":true,"ln":1211,"content":"-    if (!mXtBin && !isXembed)"},{"type":"del","del":true,"ln":1212,"content":"-      return NS_ERROR_FAILURE;"},{"type":"del","del":true,"ln":1213,"content":"-"},{"type":"del","del":true,"ln":1214,"content":"-    if (!isXembed) {"},{"type":"del","del":true,"ln":1215,"content":"-      // And now point the NPWindow structures window "},{"type":"del","del":true,"ln":1216,"content":"-      // to the actual X window"},{"type":"del","del":true,"ln":1217,"content":"-      window->window = (nsPluginPort *)GTK_XTBIN(mXtBin)->xtwindow;"},{"type":"del","del":true,"ln":1218,"content":"-    "},{"type":"del","del":true,"ln":1219,"content":"-      gtk_xtbin_resize(mXtBin, window->width, window->height);"},{"type":"del","del":true,"ln":1220,"content":"-    }"},{"type":"add","add":true,"ln":1100,"content":"+  if (window->type == nsPluginWindowType_Window &&"},{"type":"add","add":true,"ln":1101,"content":"+      (window->width <= 0 || window->height <= 0)) {"},{"type":"add","add":true,"ln":1102,"content":"+    // bug 108347, flash plugin on linux doesn't like window->width <= 0"},{"type":"add","add":true,"ln":1103,"content":"+    return NS_OK;"},{"type":"normal","normal":true,"ln1":1221,"ln2":1104,"content":"   }"},{"type":"del","del":true,"ln":1222,"content":"-  "},{"type":"normal","normal":true,"ln1":1223,"ln2":1105,"content":" #endif // MOZ_WIDGET"},{"type":"normal","normal":true,"ln1":1224,"ln2":1106,"content":" "},{"type":"normal","normal":true,"ln1":1225,"ln2":1107,"content":"   if (fCallbacks->setwindow) {"}],"oldStart":1117,"oldLines":109,"newStart":1096,"newLines":12}],"deletions":122,"additions":4,"from":"modules/plugin/base/src/ns4xPluginInstance.cpp","to":"modules/plugin/base/src/ns4xPluginInstance.cpp","index":["313c5c0..f7022a3","100644"]},{"chunks":[{"content":"@@ -63,10 +63,6 @@","changes":[{"type":"normal","normal":true,"ln1":63,"ln2":63,"content":" #endif"},{"type":"normal","normal":true,"ln1":64,"ln2":64,"content":" #include \"prlink.h\"  // for PRLibrary"},{"type":"normal","normal":true,"ln1":65,"ln2":65,"content":" "},{"type":"del","del":true,"ln":66,"content":"-#if defined (MOZ_WIDGET_GTK2)"},{"type":"del","del":true,"ln":67,"content":"-#include <gtk/gtk.h>"},{"type":"del","del":true,"ln":68,"content":"-#endif"},{"type":"del","del":true,"ln":69,"content":"-"},{"type":"normal","normal":true,"ln1":70,"ln2":66,"content":" ////////////////////////////////////////////////////////////////////////"},{"type":"normal","normal":true,"ln1":71,"ln2":67,"content":" "},{"type":"normal","normal":true,"ln1":72,"ln2":68,"content":" class ns4xPluginStreamListener;"}],"oldStart":63,"oldLines":10,"newStart":63,"newLines":6},{"content":"@@ -174,14 +170,6 @@ protected:","changes":[{"type":"normal","normal":true,"ln1":174,"ln2":170,"content":"      */"},{"type":"normal","normal":true,"ln1":175,"ln2":171,"content":"     NPPluginFuncs* fCallbacks;"},{"type":"normal","normal":true,"ln1":176,"ln2":172,"content":" "},{"type":"del","del":true,"ln":177,"content":"-#if defined (MOZ_WIDGET_GTK2)"},{"type":"del","del":true,"ln":178,"content":"-   /**"},{"type":"del","del":true,"ln":179,"content":"-    * Special GtkXtBin widget that encapsulates the Xt toolkit"},{"type":"del","del":true,"ln":180,"content":"-    * within a Gtk Application"},{"type":"del","del":true,"ln":181,"content":"-    */"},{"type":"del","del":true,"ln":182,"content":"-   GtkWidget *mXtBin;"},{"type":"del","del":true,"ln":183,"content":"-#endif"},{"type":"del","del":true,"ln":184,"content":"-"},{"type":"normal","normal":true,"ln1":185,"ln2":173,"content":"     /**"},{"type":"normal","normal":true,"ln1":186,"ln2":174,"content":"      * The 4.x-style structure used to communicate between the plugin"},{"type":"normal","normal":true,"ln1":187,"ln2":175,"content":"      * instance and the browser."}],"oldStart":174,"oldLines":14,"newStart":170,"newLines":6}],"deletions":12,"additions":0,"from":"modules/plugin/base/src/ns4xPluginInstance.h","to":"modules/plugin/base/src/ns4xPluginInstance.h","index":["595b313..d1a4181","100644"]},{"chunks":[{"content":"@@ -48,6 +48,7 @@","changes":[{"type":"normal","normal":true,"ln1":48,"ln2":48,"content":" #include <gtk/gtk.h>"},{"type":"normal","normal":true,"ln1":49,"ln2":49,"content":" #include <gdk/gdkx.h>"},{"type":"normal","normal":true,"ln1":50,"ln2":50,"content":" #include <gdk/gdk.h>"},{"type":"add","add":true,"ln":51,"content":"+#include \"gtk2xtbin.h\""},{"type":"normal","normal":true,"ln1":51,"ln2":52,"content":" #ifdef OJI"},{"type":"normal","normal":true,"ln1":52,"ln2":53,"content":" #include \"plstr.h\""},{"type":"normal","normal":true,"ln1":53,"ln2":54,"content":" #include \"nsIPlugin.h\""}],"oldStart":48,"oldLines":6,"newStart":48,"newLines":7},{"content":"@@ -63,9 +64,14 @@ public:","changes":[{"type":"normal","normal":true,"ln1":63,"ln2":64,"content":" "},{"type":"normal","normal":true,"ln1":64,"ln2":65,"content":"   virtual nsresult CallSetWindow(nsCOMPtr<nsIPluginInstance> &aPluginInstance);"},{"type":"normal","normal":true,"ln1":65,"ln2":66,"content":" private:"},{"type":"del","del":true,"ln":66,"content":"-  GtkWidget*  mGtkSocket;"},{"type":"del","del":true,"ln":67,"content":"-  NPSetWindowCallbackStruct m_ws_info;"},{"type":"add","add":true,"ln":67,"content":"+  NPSetWindowCallbackStruct mWsInfo;"},{"type":"add","add":true,"ln":68,"content":"+  /**"},{"type":"add","add":true,"ln":69,"content":"+   * Either a GtkSocket or a special GtkXtBin widget (derived from GtkSocket)"},{"type":"add","add":true,"ln":70,"content":"+   * that encapsulates the Xt toolkit within a Gtk Application."},{"type":"add","add":true,"ln":71,"content":"+   */"},{"type":"add","add":true,"ln":72,"content":"+  GtkWidget* mSocketWidget;"},{"type":"normal","normal":true,"ln1":68,"ln2":73,"content":"   nsresult  CreateXEmbedWindow();"},{"type":"add","add":true,"ln":74,"content":"+  nsresult  CreateXtWindow();"},{"type":"normal","normal":true,"ln1":69,"ln2":75,"content":"   void      SetAllocation();"},{"type":"normal","normal":true,"ln1":70,"ln2":76,"content":"   PRBool    CanGetValueFromPlugin(nsCOMPtr<nsIPluginInstance> &aPluginInstance);"},{"type":"normal","normal":true,"ln1":71,"ln2":77,"content":" };"}],"oldStart":63,"oldLines":9,"newStart":64,"newLines":14},{"content":"@@ -81,21 +87,20 @@ nsPluginNativeWindowGtk2::nsPluginNativeWindowGtk2() : nsPluginNativeWindow()","changes":[{"type":"normal","normal":true,"ln1":81,"ln2":87,"content":"   width = 0; "},{"type":"normal","normal":true,"ln1":82,"ln2":88,"content":"   height = 0; "},{"type":"normal","normal":true,"ln1":83,"ln2":89,"content":"   memset(&clipRect, 0, sizeof(clipRect));"},{"type":"del","del":true,"ln":84,"content":"-  ws_info = &m_ws_info;"},{"type":"add","add":true,"ln":90,"content":"+  ws_info = &mWsInfo;"},{"type":"normal","normal":true,"ln1":85,"ln2":91,"content":"   type = nsPluginWindowType_Window;"},{"type":"del","del":true,"ln":86,"content":"-  mGtkSocket = 0;"},{"type":"del","del":true,"ln":87,"content":"-  m_ws_info.type = 0;"},{"type":"del","del":true,"ln":88,"content":"-  m_ws_info.display = nsnull;"},{"type":"del","del":true,"ln":89,"content":"-  m_ws_info.visual = nsnull;"},{"type":"del","del":true,"ln":90,"content":"-  m_ws_info.colormap = 0;"},{"type":"del","del":true,"ln":91,"content":"-  m_ws_info.depth = 0;"},{"type":"add","add":true,"ln":92,"content":"+  mSocketWidget = 0;"},{"type":"add","add":true,"ln":93,"content":"+  mWsInfo.type = 0;"},{"type":"add","add":true,"ln":94,"content":"+  mWsInfo.display = nsnull;"},{"type":"add","add":true,"ln":95,"content":"+  mWsInfo.visual = nsnull;"},{"type":"add","add":true,"ln":96,"content":"+  mWsInfo.colormap = 0;"},{"type":"add","add":true,"ln":97,"content":"+  mWsInfo.depth = 0;"},{"type":"normal","normal":true,"ln1":92,"ln2":98,"content":" }"},{"type":"normal","normal":true,"ln1":93,"ln2":99,"content":" "},{"type":"normal","normal":true,"ln1":94,"ln2":100,"content":" nsPluginNativeWindowGtk2::~nsPluginNativeWindowGtk2() "},{"type":"normal","normal":true,"ln1":95,"ln2":101,"content":" {"},{"type":"del","del":true,"ln":96,"content":"-  if(mGtkSocket) {"},{"type":"del","del":true,"ln":97,"content":"-    gtk_widget_destroy(mGtkSocket);"},{"type":"del","del":true,"ln":98,"content":"-    mGtkSocket = 0;"},{"type":"add","add":true,"ln":102,"content":"+  if(mSocketWidget) {"},{"type":"add","add":true,"ln":103,"content":"+    gtk_widget_destroy(mSocketWidget);"},{"type":"normal","normal":true,"ln1":99,"ln2":104,"content":"   }"},{"type":"normal","normal":true,"ln1":100,"ln2":105,"content":" }"},{"type":"normal","normal":true,"ln1":101,"ln2":106,"content":" "}],"oldStart":81,"oldLines":21,"newStart":87,"newLines":20},{"content":"@@ -119,28 +124,42 @@ nsresult nsPluginNativeWindowGtk2::CallSetWindow(nsCOMPtr<nsIPluginInstance> &aP","changes":[{"type":"normal","normal":true,"ln1":119,"ln2":124,"content":"   if(aPluginInstance) {"},{"type":"normal","normal":true,"ln1":120,"ln2":125,"content":"     if (type == nsPluginWindowType_Window) {"},{"type":"normal","normal":true,"ln1":121,"ln2":126,"content":"       nsresult rv;"},{"type":"del","del":true,"ln":122,"content":"-      PRBool val = PR_FALSE;"},{"type":"del","del":true,"ln":123,"content":"-      if(!mGtkSocket) {"},{"type":"del","del":true,"ln":124,"content":"-        if (CanGetValueFromPlugin(aPluginInstance))"},{"type":"add","add":true,"ln":127,"content":"+      if(!mSocketWidget) {"},{"type":"add","add":true,"ln":128,"content":"+        PRBool needXEmbed = PR_FALSE;"},{"type":"add","add":true,"ln":129,"content":"+        if (CanGetValueFromPlugin(aPluginInstance)) {"},{"type":"normal","normal":true,"ln1":125,"ln2":130,"content":"           rv = aPluginInstance->GetValue"},{"type":"del","del":true,"ln":126,"content":"-            ((nsPluginInstanceVariable)NPPVpluginNeedsXEmbed, &val);"},{"type":"del","del":true,"ln":127,"content":"-      }"},{"type":"add","add":true,"ln":131,"content":"+            ((nsPluginInstanceVariable)NPPVpluginNeedsXEmbed, &needXEmbed);"},{"type":"normal","normal":true,"ln1":128,"ln2":132,"content":" #ifdef DEBUG"},{"type":"del","del":true,"ln":129,"content":"-      printf(\"nsPluginNativeWindowGtk2: NPPVpluginNeedsXEmbed=%d\\n\", val);"},{"type":"add","add":true,"ln":133,"content":"+          printf(\"nsPluginNativeWindowGtk2: NPPVpluginNeedsXEmbed=%d\\n\", needXEmbed);"},{"type":"normal","normal":true,"ln1":130,"ln2":134,"content":" #endif"},{"type":"del","del":true,"ln":131,"content":"-      if(val) {"},{"type":"del","del":true,"ln":132,"content":"-        CreateXEmbedWindow();"},{"type":"add","add":true,"ln":135,"content":"+        }"},{"type":"add","add":true,"ln":136,"content":"+        if(needXEmbed) {"},{"type":"add","add":true,"ln":137,"content":"+          CreateXEmbedWindow();"},{"type":"add","add":true,"ln":138,"content":"+        }"},{"type":"add","add":true,"ln":139,"content":"+        else {"},{"type":"add","add":true,"ln":140,"content":"+          CreateXtWindow();"},{"type":"add","add":true,"ln":141,"content":"+        }"},{"type":"normal","normal":true,"ln1":133,"ln2":142,"content":"       }"},{"type":"normal","normal":true,"ln1":134,"ln2":143,"content":" "},{"type":"del","del":true,"ln":135,"content":"-      if(mGtkSocket) {"},{"type":"del","del":true,"ln":136,"content":"-        // Make sure to resize and re-place the window if required"},{"type":"add","add":true,"ln":144,"content":"+      if(!mSocketWidget)"},{"type":"add","add":true,"ln":145,"content":"+        return NS_ERROR_FAILURE;"},{"type":"add","add":true,"ln":146,"content":"+"},{"type":"add","add":true,"ln":147,"content":"+      // Make sure to resize and re-place the window if required."},{"type":"add","add":true,"ln":148,"content":"+      // Need to reset \"window\" each time as nsObjectFrame::DidReflow sets it"},{"type":"add","add":true,"ln":149,"content":"+      // to the ancestor window."},{"type":"add","add":true,"ln":150,"content":"+      if(GTK_IS_XTBIN(mSocketWidget)) {"},{"type":"add","add":true,"ln":151,"content":"+        gtk_xtbin_resize(mSocketWidget, width, height);"},{"type":"add","add":true,"ln":152,"content":"+        // Point the NPWindow structures window to the actual X window"},{"type":"add","add":true,"ln":153,"content":"+        window = (nsPluginPort *)GTK_XTBIN(mSocketWidget)->xtwindow;"},{"type":"add","add":true,"ln":154,"content":"+      }"},{"type":"add","add":true,"ln":155,"content":"+      else { // XEmbed"},{"type":"normal","normal":true,"ln1":137,"ln2":156,"content":"         SetAllocation();"},{"type":"del","del":true,"ln":138,"content":"-        window = (nsPluginPort *)gtk_socket_get_id(GTK_SOCKET(mGtkSocket));"},{"type":"add","add":true,"ln":157,"content":"+        window = (nsPluginPort *)gtk_socket_get_id(GTK_SOCKET(mSocketWidget));"},{"type":"normal","normal":true,"ln1":139,"ln2":158,"content":"       }"},{"type":"normal","normal":true,"ln1":140,"ln2":159,"content":" #ifdef DEBUG"},{"type":"normal","normal":true,"ln1":141,"ln2":160,"content":"       printf(\"nsPluginNativeWindowGtk2: call SetWindow with xid=%p\\n\", (void *)window);"},{"type":"normal","normal":true,"ln1":142,"ln2":161,"content":" #endif"},{"type":"del","del":true,"ln":143,"content":"-    }"},{"type":"add","add":true,"ln":162,"content":"+    } // nsPluginWindowType_Window"},{"type":"normal","normal":true,"ln1":144,"ln2":163,"content":"     aPluginInstance->SetWindow(this);"},{"type":"normal","normal":true,"ln1":145,"ln2":164,"content":"   }"},{"type":"normal","normal":true,"ln1":146,"ln2":165,"content":"   else if (mPluginInstance)"}],"oldStart":119,"oldLines":28,"newStart":124,"newLines":42},{"content":"@@ -151,41 +170,50 @@ nsresult nsPluginNativeWindowGtk2::CallSetWindow(nsCOMPtr<nsIPluginInstance> &aP","changes":[{"type":"normal","normal":true,"ln1":151,"ln2":170,"content":" }"},{"type":"normal","normal":true,"ln1":152,"ln2":171,"content":" "},{"type":"normal","normal":true,"ln1":153,"ln2":172,"content":" nsresult nsPluginNativeWindowGtk2::CreateXEmbedWindow() {"},{"type":"del","del":true,"ln":154,"content":"-  if(!mGtkSocket) {"},{"type":"del","del":true,"ln":155,"content":"-    GdkWindow *win = gdk_window_lookup((XID)window);"},{"type":"del","del":true,"ln":156,"content":"-    mGtkSocket = gtk_socket_new();"},{"type":"add","add":true,"ln":173,"content":"+  NS_ASSERTION(!mSocketWidget,\"Already created a socket widget!\");"},{"type":"normal","normal":true,"ln1":157,"ln2":174,"content":" "},{"type":"del","del":true,"ln":158,"content":"-    //attach the socket to the container widget"},{"type":"del","del":true,"ln":159,"content":"-    gtk_widget_set_parent_window(mGtkSocket, win);"},{"type":"add","add":true,"ln":175,"content":"+  GdkWindow *parent_win = gdk_window_lookup((XID)window);"},{"type":"add","add":true,"ln":176,"content":"+  mSocketWidget = gtk_socket_new();"},{"type":"normal","normal":true,"ln1":160,"ln2":177,"content":" "},{"type":"del","del":true,"ln":161,"content":"-    // Make sure to handle the plug_removed signal.  If we don't the"},{"type":"del","del":true,"ln":162,"content":"-    // socket will automatically be destroyed when the plug is"},{"type":"del","del":true,"ln":163,"content":"-    // removed, which means we're destroying it more than once."},{"type":"del","del":true,"ln":164,"content":"-    // SYNTAX ERROR."},{"type":"del","del":true,"ln":165,"content":"-    g_signal_connect(mGtkSocket, \"plug_removed\","},{"type":"del","del":true,"ln":166,"content":"-                     G_CALLBACK(plug_removed_cb), NULL);"},{"type":"add","add":true,"ln":178,"content":"+  //attach the socket to the container widget"},{"type":"add","add":true,"ln":179,"content":"+  gtk_widget_set_parent_window(mSocketWidget, parent_win);"},{"type":"normal","normal":true,"ln1":167,"ln2":180,"content":" "},{"type":"del","del":true,"ln":168,"content":"-    gpointer user_data = NULL;"},{"type":"del","del":true,"ln":169,"content":"-    gdk_window_get_user_data(win, &user_data);"},{"type":"add","add":true,"ln":181,"content":"+  // Make sure to handle the plug_removed signal.  If we don't the"},{"type":"add","add":true,"ln":182,"content":"+  // socket will automatically be destroyed when the plug is"},{"type":"add","add":true,"ln":183,"content":"+  // removed, which means we're destroying it more than once."},{"type":"add","add":true,"ln":184,"content":"+  // SYNTAX ERROR."},{"type":"add","add":true,"ln":185,"content":"+  g_signal_connect(mSocketWidget, \"plug_removed\","},{"type":"add","add":true,"ln":186,"content":"+                   G_CALLBACK(plug_removed_cb), NULL);"},{"type":"normal","normal":true,"ln1":170,"ln2":187,"content":" "},{"type":"del","del":true,"ln":171,"content":"-    GtkContainer *container = GTK_CONTAINER(user_data);"},{"type":"del","del":true,"ln":172,"content":"-    gtk_container_add(container, mGtkSocket);"},{"type":"del","del":true,"ln":173,"content":"-    gtk_widget_realize(mGtkSocket);"},{"type":"add","add":true,"ln":188,"content":"+  gpointer user_data = NULL;"},{"type":"add","add":true,"ln":189,"content":"+  gdk_window_get_user_data(parent_win, &user_data);"},{"type":"normal","normal":true,"ln1":174,"ln2":190,"content":" "},{"type":"del","del":true,"ln":175,"content":"-    // Resize before we show"},{"type":"del","del":true,"ln":176,"content":"-    SetAllocation();"},{"type":"add","add":true,"ln":191,"content":"+  GtkContainer *container = GTK_CONTAINER(user_data);"},{"type":"add","add":true,"ln":192,"content":"+  gtk_container_add(container, mSocketWidget);"},{"type":"add","add":true,"ln":193,"content":"+  gtk_widget_realize(mSocketWidget);"},{"type":"normal","normal":true,"ln1":177,"ln2":194,"content":" "},{"type":"del","del":true,"ln":178,"content":"-    gtk_widget_show(mGtkSocket);"},{"type":"add","add":true,"ln":195,"content":"+  // Resize before we show"},{"type":"add","add":true,"ln":196,"content":"+  SetAllocation();"},{"type":"normal","normal":true,"ln1":179,"ln2":197,"content":" "},{"type":"del","del":true,"ln":180,"content":"-    gdk_flush();"},{"type":"del","del":true,"ln":181,"content":"-    window = (nsPluginPort *)gtk_socket_get_id(GTK_SOCKET(mGtkSocket));"},{"type":"del","del":true,"ln":182,"content":"-  }"},{"type":"add","add":true,"ln":198,"content":"+  gtk_widget_show(mSocketWidget);"},{"type":"add","add":true,"ln":199,"content":"+"},{"type":"add","add":true,"ln":200,"content":"+  gdk_flush();"},{"type":"add","add":true,"ln":201,"content":"+  window = (nsPluginPort *)gtk_socket_get_id(GTK_SOCKET(mSocketWidget));"},{"type":"add","add":true,"ln":202,"content":"+"},{"type":"add","add":true,"ln":203,"content":"+  // Fill out the ws_info structure."},{"type":"add","add":true,"ln":204,"content":"+  // (The windowless case is done in nsObjectFrame.cpp.)"},{"type":"add","add":true,"ln":205,"content":"+  GdkWindow *gdkWindow = gdk_window_lookup((XID)window);"},{"type":"add","add":true,"ln":206,"content":"+  mWsInfo.display = GDK_WINDOW_XDISPLAY(gdkWindow);"},{"type":"add","add":true,"ln":207,"content":"+  mWsInfo.colormap = GDK_COLORMAP_XCOLORMAP(gdk_drawable_get_colormap(gdkWindow));"},{"type":"add","add":true,"ln":208,"content":"+  GdkVisual* gdkVisual = gdk_drawable_get_visual(gdkWindow);"},{"type":"add","add":true,"ln":209,"content":"+  mWsInfo.visual = GDK_VISUAL_XVISUAL(gdkVisual);"},{"type":"add","add":true,"ln":210,"content":"+  mWsInfo.depth = gdkVisual->depth;"},{"type":"normal","normal":true,"ln1":183,"ln2":211,"content":" "},{"type":"normal","normal":true,"ln1":184,"ln2":212,"content":"   return NS_OK;"},{"type":"normal","normal":true,"ln1":185,"ln2":213,"content":" }"},{"type":"normal","normal":true,"ln1":186,"ln2":214,"content":" "},{"type":"normal","normal":true,"ln1":187,"ln2":215,"content":" void nsPluginNativeWindowGtk2::SetAllocation() {"},{"type":"del","del":true,"ln":188,"content":"-  if (!mGtkSocket)"},{"type":"add","add":true,"ln":216,"content":"+  if (!mSocketWidget)"},{"type":"normal","normal":true,"ln1":189,"ln2":217,"content":"     return;"},{"type":"normal","normal":true,"ln1":190,"ln2":218,"content":" "},{"type":"normal","normal":true,"ln1":191,"ln2":219,"content":"   GtkAllocation new_allocation;"}],"oldStart":151,"oldLines":41,"newStart":170,"newLines":50},{"content":"@@ -193,7 +221,45 @@ void nsPluginNativeWindowGtk2::SetAllocation() {","changes":[{"type":"normal","normal":true,"ln1":193,"ln2":221,"content":"   new_allocation.y = 0;"},{"type":"normal","normal":true,"ln1":194,"ln2":222,"content":"   new_allocation.width = width;"},{"type":"normal","normal":true,"ln1":195,"ln2":223,"content":"   new_allocation.height = height;"},{"type":"del","del":true,"ln":196,"content":"-  gtk_widget_size_allocate(mGtkSocket, &new_allocation);"},{"type":"add","add":true,"ln":224,"content":"+  gtk_widget_size_allocate(mSocketWidget, &new_allocation);"},{"type":"add","add":true,"ln":225,"content":"+}"},{"type":"add","add":true,"ln":226,"content":"+"},{"type":"add","add":true,"ln":227,"content":"+nsresult nsPluginNativeWindowGtk2::CreateXtWindow() {"},{"type":"add","add":true,"ln":228,"content":"+  NS_ASSERTION(!mSocketWidget,\"Already created a socket widget!\");"},{"type":"add","add":true,"ln":229,"content":"+"},{"type":"add","add":true,"ln":230,"content":"+#ifdef NS_DEBUG      "},{"type":"add","add":true,"ln":231,"content":"+  printf(\"About to create new xtbin of %i X %i from %p...\\n\","},{"type":"add","add":true,"ln":232,"content":"+         width, height, (void*)window);"},{"type":"add","add":true,"ln":233,"content":"+#endif"},{"type":"add","add":true,"ln":234,"content":"+  GdkWindow *gdkWindow = gdk_window_lookup((XID)window);"},{"type":"add","add":true,"ln":235,"content":"+  mSocketWidget = gtk_xtbin_new(gdkWindow, 0);"},{"type":"add","add":true,"ln":236,"content":"+  // Check to see if creating the xtbin failed for some reason."},{"type":"add","add":true,"ln":237,"content":"+  // if it did, we can't go any further."},{"type":"add","add":true,"ln":238,"content":"+  if (!mSocketWidget)"},{"type":"add","add":true,"ln":239,"content":"+    return NS_ERROR_FAILURE;"},{"type":"add","add":true,"ln":240,"content":"+"},{"type":"add","add":true,"ln":241,"content":"+  gtk_widget_set_size_request(mSocketWidget, width, height);"},{"type":"add","add":true,"ln":242,"content":"+"},{"type":"add","add":true,"ln":243,"content":"+#ifdef NS_DEBUG"},{"type":"add","add":true,"ln":244,"content":"+  printf(\"About to show xtbin(%p)...\\n\", (void*)mSocketWidget); fflush(NULL);"},{"type":"add","add":true,"ln":245,"content":"+#endif"},{"type":"add","add":true,"ln":246,"content":"+  gtk_widget_show(mSocketWidget);"},{"type":"add","add":true,"ln":247,"content":"+#ifdef NS_DEBUG"},{"type":"add","add":true,"ln":248,"content":"+  printf(\"completed gtk_widget_show(%p)\\n\", (void*)mSocketWidget); fflush(NULL);"},{"type":"add","add":true,"ln":249,"content":"+#endif"},{"type":"add","add":true,"ln":250,"content":"+"},{"type":"add","add":true,"ln":251,"content":"+  // Fill out the ws_info structure."},{"type":"add","add":true,"ln":252,"content":"+  GtkXtBin* xtbin = GTK_XTBIN(mSocketWidget);"},{"type":"add","add":true,"ln":253,"content":"+  // The xtbin has its own Display structure."},{"type":"add","add":true,"ln":254,"content":"+  mWsInfo.display = xtbin->xtdisplay;"},{"type":"add","add":true,"ln":255,"content":"+  mWsInfo.colormap = xtbin->xtclient.xtcolormap;"},{"type":"add","add":true,"ln":256,"content":"+  mWsInfo.visual = xtbin->xtclient.xtvisual;"},{"type":"add","add":true,"ln":257,"content":"+  mWsInfo.depth = xtbin->xtclient.xtdepth;"},{"type":"add","add":true,"ln":258,"content":"+  // Leave mWsInfo.type = 0 - Who knows what this is meant to be?"},{"type":"add","add":true,"ln":259,"content":"+"},{"type":"add","add":true,"ln":260,"content":"+  XFlush(mWsInfo.display);"},{"type":"add","add":true,"ln":261,"content":"+"},{"type":"add","add":true,"ln":262,"content":"+  return NS_OK;"},{"type":"normal","normal":true,"ln1":197,"ln2":263,"content":" }"},{"type":"normal","normal":true,"ln1":198,"ln2":264,"content":" "},{"type":"normal","normal":true,"ln1":199,"ln2":265,"content":" PRBool nsPluginNativeWindowGtk2::CanGetValueFromPlugin(nsCOMPtr<nsIPluginInstance> &aPluginInstance)"}],"oldStart":193,"oldLines":7,"newStart":221,"newLines":45}],"deletions":48,"additions":114,"from":"modules/plugin/base/src/nsPluginNativeWindowGtk2.cpp","to":"modules/plugin/base/src/nsPluginNativeWindowGtk2.cpp","index":["42a99ba..f43c2a1","100644"]},{"chunks":[{"content":"@@ -413,11 +413,17 @@ gtk_xtbin_resize (GtkWidget *widget,","changes":[{"type":"normal","normal":true,"ln1":413,"ln2":413,"content":"   printf(\"gtk_xtbin_resize %p %d %d\\n\", (void *)widget, width, height);"},{"type":"normal","normal":true,"ln1":414,"ln2":414,"content":" #endif"},{"type":"normal","normal":true,"ln1":415,"ln2":415,"content":" "},{"type":"add","add":true,"ln":416,"content":"+  xtbin->height = height;"},{"type":"add","add":true,"ln":417,"content":"+  xtbin->width  = width;"},{"type":"add","add":true,"ln":418,"content":"+"},{"type":"add","add":true,"ln":419,"content":"+  // Avoid BadValue errors in XtSetValues"},{"type":"add","add":true,"ln":420,"content":"+  if (height <= 0 || width <=0) {"},{"type":"add","add":true,"ln":421,"content":"+    height = 1;"},{"type":"add","add":true,"ln":422,"content":"+    width = 1;"},{"type":"add","add":true,"ln":423,"content":"+  }"},{"type":"normal","normal":true,"ln1":416,"ln2":424,"content":"   XtSetArg(args[0], XtNheight, height);"},{"type":"normal","normal":true,"ln1":417,"ln2":425,"content":"   XtSetArg(args[1], XtNwidth,  width);"},{"type":"normal","normal":true,"ln1":418,"ln2":426,"content":"   XtSetValues(xtbin->xtclient.top_widget, args, 2);"},{"type":"del","del":true,"ln":419,"content":"-  xtbin->height = height;"},{"type":"del","del":true,"ln":420,"content":"-  xtbin->width  = width;"},{"type":"normal","normal":true,"ln1":421,"ln2":427,"content":" "},{"type":"normal","normal":true,"ln1":422,"ln2":428,"content":"   /* we need to send a size allocate so the socket knows about the"},{"type":"normal","normal":true,"ln1":423,"ln2":429,"content":"      size changes */"}],"oldStart":413,"oldLines":11,"newStart":413,"newLines":17}],"deletions":2,"additions":8,"from":"widget/src/gtkxtbin/gtk2xtbin.c","to":"widget/src/gtkxtbin/gtk2xtbin.c","index":["85d2dd5..2230129","100644"]}]}