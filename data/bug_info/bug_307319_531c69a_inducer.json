{"bug_id":307319,"commitHash":"531c69a","commit_info":{"sha":"531c69ad96df0099c0df9fa4ee69f2d25bec925f","commit":{"author":{"name":"Kai Engert","email":"kaie@kuix.de","date":"2008-07-17T17:14:54Z"},"committer":{"name":"Kai Engert","email":"kaie@kuix.de","date":"2008-07-17T17:14:54Z"},"message":"Bug 307319 - Certificate details show incorrect public key information\nr=rrelyea","tree":{"sha":"c7658f89bfdb5ff7ed9debd0e6d44d9bf6665e2f","url":"https://api.github.com/repos/mozilla/gecko-dev/git/trees/c7658f89bfdb5ff7ed9debd0e6d44d9bf6665e2f"},"url":"https://api.github.com/repos/mozilla/gecko-dev/git/commits/531c69ad96df0099c0df9fa4ee69f2d25bec925f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/mozilla/gecko-dev/commits/531c69ad96df0099c0df9fa4ee69f2d25bec925f","html_url":"https://github.com/mozilla/gecko-dev/commit/531c69ad96df0099c0df9fa4ee69f2d25bec925f","comments_url":"https://api.github.com/repos/mozilla/gecko-dev/commits/531c69ad96df0099c0df9fa4ee69f2d25bec925f/comments","author":{"login":"kaie","id":1382288,"avatar_url":"https://avatars0.githubusercontent.com/u/1382288?v=4","gravatar_id":"","url":"https://api.github.com/users/kaie","html_url":"https://github.com/kaie","followers_url":"https://api.github.com/users/kaie/followers","following_url":"https://api.github.com/users/kaie/following{/other_user}","gists_url":"https://api.github.com/users/kaie/gists{/gist_id}","starred_url":"https://api.github.com/users/kaie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaie/subscriptions","organizations_url":"https://api.github.com/users/kaie/orgs","repos_url":"https://api.github.com/users/kaie/repos","events_url":"https://api.github.com/users/kaie/events{/privacy}","received_events_url":"https://api.github.com/users/kaie/received_events","type":"User","site_admin":false},"committer":{"login":"kaie","id":1382288,"avatar_url":"https://avatars0.githubusercontent.com/u/1382288?v=4","gravatar_id":"","url":"https://api.github.com/users/kaie","html_url":"https://github.com/kaie","followers_url":"https://api.github.com/users/kaie/followers","following_url":"https://api.github.com/users/kaie/following{/other_user}","gists_url":"https://api.github.com/users/kaie/gists{/gist_id}","starred_url":"https://api.github.com/users/kaie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaie/subscriptions","organizations_url":"https://api.github.com/users/kaie/orgs","repos_url":"https://api.github.com/users/kaie/repos","events_url":"https://api.github.com/users/kaie/events{/privacy}","received_events_url":"https://api.github.com/users/kaie/received_events","type":"User","site_admin":false},"parents":[{"sha":"e4a5e7cd530201337386fba12e8d92d70c17ac7b","url":"https://api.github.com/repos/mozilla/gecko-dev/commits/e4a5e7cd530201337386fba12e8d92d70c17ac7b","html_url":"https://github.com/mozilla/gecko-dev/commit/e4a5e7cd530201337386fba12e8d92d70c17ac7b"}],"stats":{"total":46,"additions":41,"deletions":5},"files":[{"sha":"4d882db88326c5c0a60687691cf01cbeff4b82ba","filename":"security/manager/locales/en-US/chrome/pipnss/pipnss.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/mozilla/gecko-dev/blob/531c69ad96df0099c0df9fa4ee69f2d25bec925f/security/manager/locales/en-US/chrome/pipnss/pipnss.properties","raw_url":"https://github.com/mozilla/gecko-dev/raw/531c69ad96df0099c0df9fa4ee69f2d25bec925f/security/manager/locales/en-US/chrome/pipnss/pipnss.properties","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/security/manager/locales/en-US/chrome/pipnss/pipnss.properties?ref=531c69ad96df0099c0df9fa4ee69f2d25bec925f","patch":"@@ -130,6 +130,7 @@ CertDumpAlgID=Algorithm Identifier\n CertDumpParams=Algorithm Parameters\n CertDumpRSAEncr=PKCS #1 RSA Encryption\n CertDumpRSATemplate=Modulus (%S bits):\\n%S\\nExponent (%S bits):\\n%S\n+CertDumpECTemplate=Key size: %S bits\\nBase point order length: %S bits\\nPublic value:\\n%S\n CertDumpIssuerUniqueID=Issuer Unique ID\n CertDumpSubjPubKey=Subject's Public Key\n CertDumpSubjectUniqueID=Subject Unique ID"},{"sha":"fd7d488ce2ec76cfa067250238b6cfd06380066d","filename":"security/manager/ssl/src/nsNSSCertHelper.cpp","status":"modified","additions":40,"deletions":5,"changes":45,"blob_url":"https://github.com/mozilla/gecko-dev/blob/531c69ad96df0099c0df9fa4ee69f2d25bec925f/security/manager/ssl/src/nsNSSCertHelper.cpp","raw_url":"https://github.com/mozilla/gecko-dev/raw/531c69ad96df0099c0df9fa4ee69f2d25bec925f/security/manager/ssl/src/nsNSSCertHelper.cpp","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/security/manager/ssl/src/nsNSSCertHelper.cpp?ref=531c69ad96df0099c0df9fa4ee69f2d25bec925f","patch":"@@ -47,6 +47,7 @@\n #include \"nsNSSCertificate.h\"\n #include \"cert.h\"\n #include \"keyhi.h\"\n+#include \"secder.h\"\n #include \"nsNSSCertValidity.h\"\n #include \"nsNSSASN1Object.h\"\n #include \"nsNSSComponent.h\"\n@@ -612,10 +613,18 @@ ProcessRawBytes(nsINSSComponent *nssComponent, SECItem *data,\n {\n   // This function is used to display some DER bytes\n   // that we have not added support for decoding.\n-  // It prints the value of the byte out into a \n-  // string that can later be displayed as a byte\n-  // string.  We place a new line after 24 bytes\n-  // to break up extermaly long sequence of bytes.\n+  // If it's short, let's display as an integer, no size header.\n+\n+  if (data->len <= 4) {\n+    int i_pv = DER_GetInteger(data);\n+    nsAutoString value;\n+    value.AppendInt(i_pv);\n+    text.Append(value);\n+    text.Append(NS_LITERAL_STRING(SEPARATOR).get());\n+    return NS_OK;\n+  }\n+\n+  // Else produce a hex dump.\n \n   if (wantHeader) {\n     nsAutoString bytelen, bitlen;\n@@ -631,6 +640,11 @@ ProcessRawBytes(nsINSSComponent *nssComponent, SECItem *data,\n     text.Append(NS_LITERAL_STRING(SEPARATOR).get());\n   }\n \n+  // This prints the value of the byte out into a \n+  // string that can later be displayed as a byte\n+  // string.  We place a new line after 24 bytes\n+  // to break up extermaly long sequence of bytes.\n+\n   PRUint32 i;\n   char buffer[5];\n   for (i=0; i<data->len; i++) {\n@@ -1802,11 +1816,32 @@ ProcessSubjectPublicKeyInfo(CERTSubjectPublicKeyInfo *spki,\n                                                      params, 4, text);\n          break;\n       }\n+      case ecKey: {\n+        displayed = true;\n+        SECKEYECPublicKey &ecpk = key->u.ec;\n+        int fieldSizeLenAsBits = \n+              SECKEY_ECParamsToKeySize(&ecpk.DEREncodedParams);\n+        int basePointOrderLenAsBits = \n+              SECKEY_ECParamsToBasePointOrderLen(&ecpk.DEREncodedParams);\n+        nsAutoString s_fsl, s_bpol, s_pv;\n+        s_fsl.AppendInt(fieldSizeLenAsBits);\n+        s_bpol.AppendInt(basePointOrderLenAsBits);\n+\n+        if (ecpk.publicValue.len > 4) {\n+          ProcessRawBytes(nssComponent, &ecpk.publicValue, s_pv, PR_FALSE);\n+        } else {\n+          int i_pv = DER_GetInteger(&ecpk.publicValue);\n+          s_pv.AppendInt(i_pv);\n+        }\n+        const PRUnichar *params[] = {s_fsl.get(), s_bpol.get(), s_pv.get()};\n+        nssComponent->PIPBundleFormatStringFromName(\"CertDumpECTemplate\",\n+                                                    params, 3, text);\n+        break;\n+      }\n       case dhKey:\n       case dsaKey:\n       case fortezzaKey:\n       case keaKey:\n-      case ecKey:\n          /* Too many parameters, to rarely used to bother displaying it */\n          break;\n       case nullKey:"}]},"blames":["d4192852","6d4f2e30","b2f4a8b1","6d4f2e30","31db9b54"]}