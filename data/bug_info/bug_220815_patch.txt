Index: mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties
===================================================================
RCS file: /cvsroot/mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties,v
retrieving revision 1.3
diff -u -u -p -r1.3 pipnss.properties
--- mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties	2 Dec 2005 22:29:07 -0000	1.3
+++ mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties	2 Dec 2005 23:05:09 -0000
@@ -324,3 +324,5 @@ VerifyInvalidCA=<Invalid CA>
 VerifyUnknown=<Unknown>
 CertNoNickname=(no nickname)
 CertNoEmailAddress=(no email address)
+NicknameExpired=(expired)
+NicknameNotYetValid=(not yet valid)
Index: mozilla/security/manager/ssl/src/nsCertPicker.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsCertPicker.cpp,v
retrieving revision 1.9
diff -u -u -p -r1.9 nsCertPicker.cpp
--- mozilla/security/manager/ssl/src/nsCertPicker.cpp	18 Jan 2003 14:02:52 -0000	1.9
+++ mozilla/security/manager/ssl/src/nsCertPicker.cpp	2 Dec 2005 23:05:09 -0000
@@ -46,17 +46,13 @@
 #include "nsNSSCleaner.h"
 #include "nsICertPickDialogs.h"
 #include "nsNSSShutDown.h"
+#include "nsNSSCertHelper.h"
 
 NSSCleanupAutoPtrClass(CERTCertNicknames, CERT_FreeNicknames)
 NSSCleanupAutoPtrClass(CERTCertList, CERT_DestroyCertList)
 
 #include "cert.h"
 
-/* strings for marking invalid user cert nicknames */
-#define NICKNAME_EXPIRED_STRING " (expired)"
-#define NICKNAME_NOT_YET_VALID_STRING " (not yet valid)"
-
-
 NS_IMPL_ISUPPORTS1(nsCertPicker, nsIUserCertPicker)
 
 nsCertPicker::nsCertPicker()
@@ -106,10 +102,8 @@ NS_IMETHODIMP nsCertPicker::PickByUsage(
     return NS_ERROR_NOT_AVAILABLE;
   }
 
-  CERTCertNicknames *nicknames = 
-    CERT_NicknameStringsFromCertList(certList,
-                                     NICKNAME_EXPIRED_STRING,
-                                     NICKNAME_NOT_YET_VALID_STRING);
+  CERTCertNicknames *nicknames = getNSSCertNicknamesFromCertList(certList);
+
   CERTCertNicknamesCleaner cnc(nicknames);
 
   if (!nicknames) {
Index: mozilla/security/manager/ssl/src/nsCrypto.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsCrypto.cpp,v
retrieving revision 1.55
diff -u -u -p -r1.55 nsCrypto.cpp
--- mozilla/security/manager/ssl/src/nsCrypto.cpp	28 Jul 2005 18:15:20 -0000	1.55
+++ mozilla/security/manager/ssl/src/nsCrypto.cpp	2 Dec 2005 23:05:09 -0000
@@ -98,6 +98,7 @@ NSSCleanupAutoPtrClass(PK11SlotInfo, PK1
 NSSCleanupAutoPtrClass(CERTCertNicknames, CERT_FreeNicknames)
 
 #include "nsNSSShutDown.h"
+#include "nsNSSCertHelper.h"
 
 /*
  * These are the most common error strings that are returned
@@ -2079,9 +2080,6 @@ void signTextOutputCallback(void *arg, c
   ((nsCString*)arg)->Append(buf, len);
 }
 
-#define NICKNAME_EXPIRED_STRING " (expired)"
-#define NICKNAME_NOT_YET_VALID_STRING " (not yet valid)"
-
 NS_IMETHODIMP
 nsCrypto::SignText(const nsAString& aStringToSign, const nsAString& aCaOption,
                    nsAString& aResult)
@@ -2236,9 +2234,8 @@ nsCrypto::SignText(const nsAString& aStr
     ++numberOfCerts;
   }
 
-  CERTCertNicknames* nicknames =
-    CERT_NicknameStringsFromCertList(certList, NICKNAME_EXPIRED_STRING,
-                                     NICKNAME_NOT_YET_VALID_STRING);
+  CERTCertNicknames* nicknames = getNSSCertNicknamesFromCertList(certList);
+
   if (!nicknames) {
     aResult.Append(internalError);
 
Index: mozilla/security/manager/ssl/src/nsNSSCertHelper.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsNSSCertHelper.cpp,v
retrieving revision 1.13
diff -u -u -p -r1.13 nsNSSCertHelper.cpp
--- mozilla/security/manager/ssl/src/nsNSSCertHelper.cpp	2 Dec 2005 22:29:14 -0000	1.13
+++ mozilla/security/manager/ssl/src/nsNSSCertHelper.cpp	2 Dec 2005 23:05:09 -0000
@@ -1836,3 +1836,33 @@ getCertType(CERTCertificate *cert)
     return nsIX509Cert::EMAIL_CERT;
   return nsIX509Cert::SERVER_CERT;
 }
+
+CERTCertNicknames *
+getNSSCertNicknamesFromCertList(CERTCertList *certList)
+{
+  nsresult rv;
+
+  nsCOMPtr<nsINSSComponent> nssComponent(do_GetService(kNSSComponentCID, &rv));
+  if (NS_FAILED(rv))
+    return nsnull;
+
+  nsAutoString expiredString, notYetValidString;
+  nsAutoString expiredStringLeadingSpace, notYetValidStringLeadingSpace;
+
+  nssComponent->GetPIPNSSBundleString("NicknameExpired", expiredString);
+  nssComponent->GetPIPNSSBundleString("NicknameNotYetValid", notYetValidString);
+
+  expiredStringLeadingSpace.Append(NS_LITERAL_STRING(" "));
+  expiredStringLeadingSpace.Append(expiredString);
+
+  notYetValidStringLeadingSpace.Append(NS_LITERAL_STRING(" "));
+  notYetValidStringLeadingSpace.Append(notYetValidString);
+
+  NS_ConvertUCS2toUTF8 aUtf8ExpiredString(expiredStringLeadingSpace);
+  NS_ConvertUCS2toUTF8 aUtf8NotYetValidString(notYetValidStringLeadingSpace);
+
+  return CERT_NicknameStringsFromCertList(certList,
+                                          NS_CONST_CAST(char*, aUtf8ExpiredString.get()),
+                                          NS_CONST_CAST(char*, aUtf8NotYetValidString.get()));
+  
+}
Index: mozilla/security/manager/ssl/src/nsNSSCertHelper.h
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsNSSCertHelper.h,v
retrieving revision 1.4
diff -u -u -p -r1.4 nsNSSCertHelper.h
--- mozilla/security/manager/ssl/src/nsNSSCertHelper.h	25 Apr 2004 15:02:36 -0000	1.4
+++ mozilla/security/manager/ssl/src/nsNSSCertHelper.h	2 Dec 2005 23:05:09 -0000
@@ -44,4 +44,7 @@
 PRUint32
 getCertType(CERTCertificate *cert);
 
+CERTCertNicknames *
+getNSSCertNicknamesFromCertList(CERTCertList *certList);
+
 #endif
Index: mozilla/security/manager/ssl/src/nsNSSIOLayer.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsNSSIOLayer.cpp,v
retrieving revision 1.99
diff -u -u -p -r1.99 nsNSSIOLayer.cpp
--- mozilla/security/manager/ssl/src/nsNSSIOLayer.cpp	1 Dec 2005 04:23:37 -0000	1.99
+++ mozilla/security/manager/ssl/src/nsNSSIOLayer.cpp	2 Dec 2005 23:05:09 -0000
@@ -64,6 +64,7 @@
 #include "nsCRT.h"
 #include "nsPrintfCString.h"
 #include "nsNSSShutDown.h"
+#include "nsNSSCertHelper.h"
 
 #include "ssl.h"
 #include "secerr.h"
@@ -88,10 +89,6 @@
 typedef enum {ASK, AUTO} SSM_UserCertChoice;
 
 
-/* strings for marking invalid user cert nicknames */
-#define NICKNAME_EXPIRED_STRING " (expired)"
-#define NICKNAME_NOT_YET_VALID_STRING " (not yet valid)"
-
 static SECStatus PR_CALLBACK
 nsNSS_SSLGetClientAuthData(void *arg, PRFileDesc *socket,
 						   CERTDistNames *caNames,
@@ -2032,9 +2029,7 @@ SECStatus nsNSS_SSLGetClientAuthData(voi
       goto noCert;
     }
 
-    nicknames = CERT_NicknameStringsFromCertList(certList,
-                                                 NICKNAME_EXPIRED_STRING,
-                                                 NICKNAME_NOT_YET_VALID_STRING);
+    nicknames = getNSSCertNicknamesFromCertList(certList);
 
     if (nicknames == NULL) {
       goto loser;
