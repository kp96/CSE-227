# HG changeset patch
# User Magnus Melin <mkmelin+mozilla@iki.fi>
# Date 1379153887 -10800
# Node ID d1fb122c78b5ad5cd3b9cff381e51e43dbe0c031
# Parent  57a146eafb7c108af5fa3ce5bc9bf2fca5355970
Bug 723086 - Invalid Content-Description mail header - Non-encoded 8-bit data. r=jcranmer?

diff --git a/mailnews/extensions/smime/src/nsMsgComposeSecure.cpp b/mailnews/extensions/smime/src/nsMsgComposeSecure.cpp
--- a/mailnews/extensions/smime/src/nsMsgComposeSecure.cpp
+++ b/mailnews/extensions/smime/src/nsMsgComposeSecure.cpp
@@ -16,16 +16,17 @@
 #include "nsMsgMimeCID.h"
 #include "nspr.h"
 #include "nsComponentManagerUtils.h"
 #include "nsServiceManagerUtils.h"
 #include "nsMemory.h"
 #include "nsAlgorithm.h"
 #include "mozilla/Services.h"
 #include "mozilla/mailnews/MimeEncoder.h"
+#include "nsIMimeConverter.h"
 #include <algorithm>
 
 using mozilla::mailnews::MimeEncoder;
 
 #define MK_MIME_ERROR_WRITING_FILE -1
 
 #define SMIME_STRBUNDLE_URL "chrome://messenger/locale/am-smime.properties"
 
@@ -463,28 +464,37 @@ nsresult nsMsgComposeSecure::MimeInitEnc
 
   if (!sMIMEBundle)
     return NS_ERROR_FAILURE;
  
   sMIMEBundle->GetStringFromName(NS_LITERAL_STRING("mime_smimeEncryptedContentDesc").get(),
                                  getter_Copies(mime_smime_enc_content_desc));
   NS_ConvertUTF16toUTF8 enc_content_desc_utf8(mime_smime_enc_content_desc);
 
+  nsCOMPtr<nsIMimeConverter> mimeConverter =
+     do_GetService(NS_MIME_CONVERTER_CONTRACTID, &rv);
+  NS_ENSURE_SUCCESS(rv, rv);
+  nsCString encodedContentDescription;
+  mimeConverter->EncodeMimePartIIStr_UTF8(enc_content_desc_utf8, false, "UTF-8",
+      sizeof("Content-Description: "),
+      nsIMimeConverter::MIME_ENCODED_WORD_SIZE,
+      getter_Copies(encodedContentDescription));
+
   /* First, construct and write out the opaque-crypto-blob MIME header data.
    */
 
   char *s =
   PR_smprintf("Content-Type: " APPLICATION_PKCS7_MIME
           "; name=\"smime.p7m\"; smime-type=enveloped-data" CRLF
         "Content-Transfer-Encoding: " ENCODING_BASE64 CRLF
         "Content-Disposition: attachment"
           "; filename=\"smime.p7m\"" CRLF
         "Content-Description: %s" CRLF
         CRLF,
-        enc_content_desc_utf8.get());
+        encodedContentDescription.get());
 
   uint32_t L;
   if (!s) return NS_ERROR_OUT_OF_MEMORY;
   L = strlen(s);
   uint32_t n;
   rv = mStream->Write(s, L, &n);
   if (NS_FAILED(rv) || n < L) {
     return NS_ERROR_FAILURE;
@@ -571,16 +581,25 @@ nsresult nsMsgComposeSecure::MimeFinishM
   if (!sMIMEBundle)
     return NS_ERROR_FAILURE;
   
   sMIMEBundle->GetStringFromName(NS_LITERAL_STRING("mime_smimeSignatureContentDesc").get(),
                                  getter_Copies(mime_smime_sig_content_desc));
 
   NS_ConvertUTF16toUTF8 sig_content_desc_utf8(mime_smime_sig_content_desc);
 
+  nsCOMPtr<nsIMimeConverter> mimeConverter =
+     do_GetService(NS_MIME_CONVERTER_CONTRACTID, &rv);
+  NS_ENSURE_SUCCESS(rv, rv);
+  nsCString encodedContentDescription;
+  mimeConverter->EncodeMimePartIIStr_UTF8(sig_content_desc_utf8, false, "UTF-8",
+      sizeof("Content-Description: "),
+      nsIMimeConverter::MIME_ENCODED_WORD_SIZE,
+      getter_Copies(encodedContentDescription));
+
   /* Compute the hash...
    */
 
   nsAutoCString hashString;
   mDataHash->Finish(false, hashString);
 
   mDataHash = 0;
 
@@ -596,17 +615,17 @@ nsresult nsMsgComposeSecure::MimeFinishM
           "Content-Type: " APPLICATION_PKCS7_SIGNATURE
             "; name=\"smime.p7s\"" CRLF
           "Content-Transfer-Encoding: " ENCODING_BASE64 CRLF
           "Content-Disposition: attachment; "
             "filename=\"smime.p7s\"" CRLF
           "Content-Description: %s" CRLF
           CRLF,
           mMultipartSignedBoundary,
-          sig_content_desc_utf8.get());
+          encodedContentDescription.get());
           
   if (!header) {
     rv = NS_ERROR_OUT_OF_MEMORY;
     goto FAIL;
   }
 
   L = strlen(header);
   if (aOuter) {
