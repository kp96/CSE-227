# HG changeset patch
# User Hasse <hasse@jasajudeju.se>
# Date 1463093130 25200
#      Thu May 12 15:45:30 2016 -0700
# Node ID 85bf03710f26844fdd71292b2007d2c003548621
# Parent  c3f5e6079284a7b7053c41f05d0fe06ff031db03
bug 428421 - fix ordering of FIPS description strings r=keeler

In bug 317630, in the call to PK11_ConfigurePKCS11, the order of the strings
provided was switched such that the FIPS token description appeared before the
FIPS slot description, when in fact the reverse should happen.

diff --git a/security/manager/ssl/nsNSSComponent.cpp b/security/manager/ssl/nsNSSComponent.cpp
--- a/security/manager/ssl/nsNSSComponent.cpp
+++ b/security/manager/ssl/nsNSSComponent.cpp
@@ -992,18 +992,18 @@ nsNSSComponent::ConfigureInternalPKCS11T
 {
   nsNSSShutDownPreventionLock locker;
   nsAutoString manufacturerID;
   nsAutoString libraryDescription;
   nsAutoString tokenDescription;
   nsAutoString privateTokenDescription;
   nsAutoString slotDescription;
   nsAutoString privateSlotDescription;
+  nsAutoString fips140SlotDescription;
   nsAutoString fips140TokenDescription;
-  nsAutoString fips140SlotDescription;
 
   nsresult rv;
   rv = GetPIPNSSBundleString("ManufacturerID", manufacturerID);
   if (NS_FAILED(rv)) return rv;
 
   rv = GetPIPNSSBundleString("LibraryDescription", libraryDescription);
   if (NS_FAILED(rv)) return rv;
 
@@ -1014,30 +1014,30 @@ nsNSSComponent::ConfigureInternalPKCS11T
   if (NS_FAILED(rv)) return rv;
 
   rv = GetPIPNSSBundleString("SlotDescription", slotDescription);
   if (NS_FAILED(rv)) return rv;
 
   rv = GetPIPNSSBundleString("PrivateSlotDescription", privateSlotDescription);
   if (NS_FAILED(rv)) return rv;
 
-  rv = GetPIPNSSBundleString("Fips140TokenDescription", fips140TokenDescription);
+  rv = GetPIPNSSBundleString("Fips140SlotDescription", fips140SlotDescription);
   if (NS_FAILED(rv)) return rv;
 
-  rv = GetPIPNSSBundleString("Fips140SlotDescription", fips140SlotDescription);
+  rv = GetPIPNSSBundleString("Fips140TokenDescription", fips140TokenDescription);
   if (NS_FAILED(rv)) return rv;
 
   PK11_ConfigurePKCS11(NS_ConvertUTF16toUTF8(manufacturerID).get(),
                        NS_ConvertUTF16toUTF8(libraryDescription).get(),
                        NS_ConvertUTF16toUTF8(tokenDescription).get(),
                        NS_ConvertUTF16toUTF8(privateTokenDescription).get(),
                        NS_ConvertUTF16toUTF8(slotDescription).get(),
                        NS_ConvertUTF16toUTF8(privateSlotDescription).get(),
+                       NS_ConvertUTF16toUTF8(fips140SlotDescription).get(),
                        NS_ConvertUTF16toUTF8(fips140TokenDescription).get(),
-                       NS_ConvertUTF16toUTF8(fips140SlotDescription).get(),
                        0, 0);
   return NS_OK;
 }
 
 nsresult
 nsNSSComponent::InitializePIPNSSBundle()
 {
   // Called during init only, no mutex required.
