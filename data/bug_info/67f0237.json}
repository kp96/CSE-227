{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas67f0237\""},"diff":[{"chunks":[{"content":"@@ -56,6 +56,7 @@","changes":[{"type":"normal","normal":true,"ln1":56,"ln2":56,"content":" #include \"prprf.h\""},{"type":"normal","normal":true,"ln1":57,"ln2":57,"content":" #include \"nsIDOMEventListener.h\""},{"type":"normal","normal":true,"ln1":58,"ln2":58,"content":" #include \"nsIJSContextStack.h\""},{"type":"add","add":true,"ln":59,"content":"+#include \"nsJSEnvironment.h\""},{"type":"normal","normal":true,"ln1":59,"ln2":60,"content":" #include \"nsIScriptSecurityManager.h\""},{"type":"normal","normal":true,"ln1":60,"ln2":61,"content":" #include \"nsWeakPtr.h\""},{"type":"normal","normal":true,"ln1":61,"ln2":62,"content":" #include \"nsICharsetAlias.h\""}],"oldStart":56,"oldLines":6,"newStart":56,"newLines":7},{"content":"@@ -1776,6 +1777,7 @@ nsXMLHttpRequest::RequestCompleted()","changes":[{"type":"normal","normal":true,"ln1":1776,"ln2":1777,"content":"     ChangeState(XML_HTTP_REQUEST_OPENED);"},{"type":"normal","normal":true,"ln1":1777,"ln2":1778,"content":"   }"},{"type":"normal","normal":true,"ln1":1778,"ln2":1779,"content":" "},{"type":"add","add":true,"ln":1780,"content":"+  nsJSContext::MaybeCC(PR_FALSE);"},{"type":"normal","normal":true,"ln1":1779,"ln2":1781,"content":"   return rv;"},{"type":"normal","normal":true,"ln1":1780,"ln2":1782,"content":" }"},{"type":"normal","normal":true,"ln1":1781,"ln2":1783,"content":" "}],"oldStart":1776,"oldLines":6,"newStart":1777,"newLines":7},{"content":"@@ -2318,6 +2320,7 @@ nsXMLHttpRequest::Error(nsIDOMEvent* aEvent)","changes":[{"type":"normal","normal":true,"ln1":2318,"ln2":2320,"content":"     NotifyEventListeners(errorEventListeners, event);"},{"type":"normal","normal":true,"ln1":2319,"ln2":2321,"content":"   }"},{"type":"normal","normal":true,"ln1":2320,"ln2":2322,"content":" "},{"type":"add","add":true,"ln":2323,"content":"+  nsJSContext::MaybeCC(PR_FALSE);"},{"type":"normal","normal":true,"ln1":2321,"ln2":2324,"content":"   return NS_OK;"},{"type":"normal","normal":true,"ln1":2322,"ln2":2325,"content":" }"},{"type":"normal","normal":true,"ln1":2323,"ln2":2326,"content":" "}],"oldStart":2318,"oldLines":6,"newStart":2320,"newLines":7}],"deletions":0,"additions":3,"from":"content/base/src/nsXMLHttpRequest.cpp","to":"content/base/src/nsXMLHttpRequest.cpp","index":["01a99f5..40e3c9d","100644"]},{"chunks":[{"content":"@@ -136,6 +136,9 @@","changes":[{"type":"normal","normal":true,"ln1":136,"ln2":136,"content":" #include \"nsEventDispatcher.h\""},{"type":"normal","normal":true,"ln1":137,"ln2":137,"content":" #include \"nsPresShellIterator.h\""},{"type":"normal","normal":true,"ln1":138,"ln2":138,"content":" "},{"type":"add","add":true,"ln":139,"content":"+#include \"nsServiceManagerUtils.h\""},{"type":"add","add":true,"ln":140,"content":"+#include \"nsITimer.h\""},{"type":"add","add":true,"ln":141,"content":"+"},{"type":"normal","normal":true,"ln1":139,"ln2":142,"content":" #ifdef XP_MACOSX"},{"type":"normal","normal":true,"ln1":140,"ln2":143,"content":" #include <Events.h>"},{"type":"normal","normal":true,"ln1":141,"ln2":144,"content":" #endif"}],"oldStart":136,"oldLines":6,"newStart":136,"newLines":9},{"content":"@@ -144,6 +147,8 @@","changes":[{"type":"normal","normal":true,"ln1":144,"ln2":147,"content":" //#define DEBUG_DOCSHELL_FOCUS"},{"type":"normal","normal":true,"ln1":145,"ln2":148,"content":" #endif"},{"type":"normal","normal":true,"ln1":146,"ln2":149,"content":" "},{"type":"add","add":true,"ln":150,"content":"+#define NS_USER_INTERACTION_INTERVAL 5000 // ms"},{"type":"add","add":true,"ln":151,"content":"+"},{"type":"normal","normal":true,"ln1":147,"ln2":152,"content":" static NS_DEFINE_CID(kFrameTraversalCID, NS_FRAMETRAVERSAL_CID);"},{"type":"normal","normal":true,"ln1":148,"ln2":153,"content":" "},{"type":"normal","normal":true,"ln1":149,"ln2":154,"content":" "}],"oldStart":144,"oldLines":6,"newStart":147,"newLines":8},{"content":"@@ -171,6 +176,41 @@ static PRUint32 sESMInstanceCount = 0;","changes":[{"type":"normal","normal":true,"ln1":171,"ln2":176,"content":" static PRInt32 sChromeAccessModifier = 0, sContentAccessModifier = 0;"},{"type":"normal","normal":true,"ln1":172,"ln2":177,"content":" PRInt32 nsEventStateManager::sUserInputEventDepth = 0;"},{"type":"normal","normal":true,"ln1":173,"ln2":178,"content":" "},{"type":"add","add":true,"ln":179,"content":"+static PRUint32 gMouseOrKeyboardEventCounter = 0;"},{"type":"add","add":true,"ln":180,"content":"+static nsITimer* gUserInteractionTimer = nsnull;"},{"type":"add","add":true,"ln":181,"content":"+static nsITimerCallback* gUserInteractionTimerCallback = nsnull;"},{"type":"add","add":true,"ln":182,"content":"+"},{"type":"add","add":true,"ln":183,"content":"+class nsUITimerCallback : public nsITimerCallback"},{"type":"add","add":true,"ln":184,"content":"+{"},{"type":"add","add":true,"ln":185,"content":"+public:"},{"type":"add","add":true,"ln":186,"content":"+  nsUITimerCallback() : mPreviousCount(0) {}"},{"type":"add","add":true,"ln":187,"content":"+  NS_DECL_ISUPPORTS"},{"type":"add","add":true,"ln":188,"content":"+  NS_DECL_NSITIMERCALLBACK"},{"type":"add","add":true,"ln":189,"content":"+private:"},{"type":"add","add":true,"ln":190,"content":"+  PRUint32 mPreviousCount;"},{"type":"add","add":true,"ln":191,"content":"+};"},{"type":"add","add":true,"ln":192,"content":"+"},{"type":"add","add":true,"ln":193,"content":"+NS_IMPL_ISUPPORTS1(nsUITimerCallback, nsITimerCallback)"},{"type":"add","add":true,"ln":194,"content":"+"},{"type":"add","add":true,"ln":195,"content":"+// If aTimer is nsnull, this method always sends \"user-interaction-inactive\""},{"type":"add","add":true,"ln":196,"content":"+// notification."},{"type":"add","add":true,"ln":197,"content":"+NS_IMETHODIMP"},{"type":"add","add":true,"ln":198,"content":"+nsUITimerCallback::Notify(nsITimer* aTimer)"},{"type":"add","add":true,"ln":199,"content":"+{"},{"type":"add","add":true,"ln":200,"content":"+  nsresult rv;"},{"type":"add","add":true,"ln":201,"content":"+  nsCOMPtr<nsIObserverService> obs ="},{"type":"add","add":true,"ln":202,"content":"+      do_GetService(\"@mozilla.org/observer-service;1\", &rv);"},{"type":"add","add":true,"ln":203,"content":"+  NS_ENSURE_SUCCESS(rv, rv);"},{"type":"add","add":true,"ln":204,"content":"+  if ((gMouseOrKeyboardEventCounter == mPreviousCount) || !aTimer) {"},{"type":"add","add":true,"ln":205,"content":"+    gMouseOrKeyboardEventCounter = 0;"},{"type":"add","add":true,"ln":206,"content":"+    obs->NotifyObservers(nsnull, \"user-interaction-inactive\", nsnull);"},{"type":"add","add":true,"ln":207,"content":"+  } else {"},{"type":"add","add":true,"ln":208,"content":"+    obs->NotifyObservers(nsnull, \"user-interaction-active\", nsnull);"},{"type":"add","add":true,"ln":209,"content":"+  }"},{"type":"add","add":true,"ln":210,"content":"+  mPreviousCount = gMouseOrKeyboardEventCounter;"},{"type":"add","add":true,"ln":211,"content":"+  return NS_OK;"},{"type":"add","add":true,"ln":212,"content":"+}"},{"type":"add","add":true,"ln":213,"content":"+"},{"type":"normal","normal":true,"ln1":174,"ln2":214,"content":" enum {"},{"type":"normal","normal":true,"ln1":175,"ln2":215,"content":"  MOUSE_SCROLL_N_LINES,"},{"type":"normal","normal":true,"ln1":176,"ln2":216,"content":"  MOUSE_SCROLL_PAGE,"}],"oldStart":171,"oldLines":6,"newStart":176,"newLines":41},{"content":"@@ -431,6 +471,18 @@ nsEventStateManager::nsEventStateManager()","changes":[{"type":"normal","normal":true,"ln1":431,"ln2":471,"content":"     mTabbedThroughDocument(PR_FALSE),"},{"type":"normal","normal":true,"ln1":432,"ln2":472,"content":"     mAccessKeys(nsnull)"},{"type":"normal","normal":true,"ln1":433,"ln2":473,"content":" {"},{"type":"add","add":true,"ln":474,"content":"+  if (sESMInstanceCount == 0) {"},{"type":"add","add":true,"ln":475,"content":"+    gUserInteractionTimerCallback = new nsUITimerCallback();"},{"type":"add","add":true,"ln":476,"content":"+    if (gUserInteractionTimerCallback) {"},{"type":"add","add":true,"ln":477,"content":"+      NS_ADDREF(gUserInteractionTimerCallback);"},{"type":"add","add":true,"ln":478,"content":"+      CallCreateInstance(\"@mozilla.org/timer;1\", &gUserInteractionTimer);"},{"type":"add","add":true,"ln":479,"content":"+      if (gUserInteractionTimer) {"},{"type":"add","add":true,"ln":480,"content":"+        gUserInteractionTimer->InitWithCallback(gUserInteractionTimerCallback,"},{"type":"add","add":true,"ln":481,"content":"+                                                NS_USER_INTERACTION_INTERVAL,"},{"type":"add","add":true,"ln":482,"content":"+                                                nsITimer::TYPE_REPEATING_SLACK);"},{"type":"add","add":true,"ln":483,"content":"+      }"},{"type":"add","add":true,"ln":484,"content":"+    }"},{"type":"add","add":true,"ln":485,"content":"+  }"},{"type":"normal","normal":true,"ln1":434,"ln2":486,"content":"   ++sESMInstanceCount;"},{"type":"normal","normal":true,"ln1":435,"ln2":487,"content":" }"},{"type":"normal","normal":true,"ln1":436,"ln2":488,"content":" "}],"oldStart":431,"oldLines":6,"newStart":471,"newLines":18},{"content":"@@ -509,6 +561,14 @@ nsEventStateManager::~nsEventStateManager()","changes":[{"type":"normal","normal":true,"ln1":509,"ln2":561,"content":"   if(sESMInstanceCount == 0) {"},{"type":"normal","normal":true,"ln1":510,"ln2":562,"content":"     NS_IF_RELEASE(gLastFocusedContent);"},{"type":"normal","normal":true,"ln1":511,"ln2":563,"content":"     NS_IF_RELEASE(gLastFocusedDocument);"},{"type":"add","add":true,"ln":564,"content":"+    if (gUserInteractionTimerCallback) {"},{"type":"add","add":true,"ln":565,"content":"+      gUserInteractionTimerCallback->Notify(nsnull);"},{"type":"add","add":true,"ln":566,"content":"+      NS_RELEASE(gUserInteractionTimerCallback);"},{"type":"add","add":true,"ln":567,"content":"+    }"},{"type":"add","add":true,"ln":568,"content":"+    if (gUserInteractionTimer) {"},{"type":"add","add":true,"ln":569,"content":"+      gUserInteractionTimer->Cancel();"},{"type":"add","add":true,"ln":570,"content":"+      NS_RELEASE(gUserInteractionTimer);"},{"type":"add","add":true,"ln":571,"content":"+    }"},{"type":"normal","normal":true,"ln1":512,"ln2":572,"content":"   }"},{"type":"normal","normal":true,"ln1":513,"ln2":573,"content":" "},{"type":"normal","normal":true,"ln1":514,"ln2":574,"content":"   delete mAccessKeys;"}],"oldStart":509,"oldLines":6,"newStart":561,"newLines":14},{"content":"@@ -724,6 +784,21 @@ nsEventStateManager::PreHandleEvent(nsPresContext* aPresContext,","changes":[{"type":"normal","normal":true,"ln1":724,"ln2":784,"content":"     if (!mCurrentTarget) return NS_ERROR_NULL_POINTER;"},{"type":"normal","normal":true,"ln1":725,"ln2":785,"content":"   }"},{"type":"normal","normal":true,"ln1":726,"ln2":786,"content":" "},{"type":"add","add":true,"ln":787,"content":"+  if (NS_IS_TRUSTED_EVENT(aEvent) &&"},{"type":"add","add":true,"ln":788,"content":"+      ((aEvent->eventStructType == NS_MOUSE_EVENT  &&"},{"type":"add","add":true,"ln":789,"content":"+        static_cast<nsMouseEvent*>(aEvent)->reason == nsMouseEvent::eReal) ||"},{"type":"add","add":true,"ln":790,"content":"+       aEvent->eventStructType == NS_MOUSE_SCROLL_EVENT ||"},{"type":"add","add":true,"ln":791,"content":"+       aEvent->eventStructType == NS_KEY_EVENT)) {"},{"type":"add","add":true,"ln":792,"content":"+    if (gMouseOrKeyboardEventCounter == 0) {"},{"type":"add","add":true,"ln":793,"content":"+      nsCOMPtr<nsIObserverService> obs ="},{"type":"add","add":true,"ln":794,"content":"+        do_GetService(\"@mozilla.org/observer-service;1\");"},{"type":"add","add":true,"ln":795,"content":"+      if (obs) {"},{"type":"add","add":true,"ln":796,"content":"+        obs->NotifyObservers(nsnull, \"user-interaction-active\", nsnull);"},{"type":"add","add":true,"ln":797,"content":"+      }"},{"type":"add","add":true,"ln":798,"content":"+    }"},{"type":"add","add":true,"ln":799,"content":"+    ++gMouseOrKeyboardEventCounter;"},{"type":"add","add":true,"ln":800,"content":"+  }"},{"type":"add","add":true,"ln":801,"content":"+"},{"type":"normal","normal":true,"ln1":727,"ln2":802,"content":"   *aStatus = nsEventStatus_eIgnore;"},{"type":"normal","normal":true,"ln1":728,"ln2":803,"content":" "},{"type":"normal","normal":true,"ln1":729,"ln2":804,"content":"   nsMouseWheelTransaction::OnEvent(aEvent);"}],"oldStart":724,"oldLines":6,"newStart":784,"newLines":21}],"deletions":0,"additions":75,"from":"content/events/src/nsEventStateManager.cpp","to":"content/events/src/nsEventStateManager.cpp","index":["2cd1b14b..83fa7a2","100644"]},{"chunks":[{"content":"@@ -154,8 +154,26 @@ static PRLogModuleInfo* gJSDiagnostics;","changes":[{"type":"normal","normal":true,"ln1":154,"ln2":154,"content":" "},{"type":"normal","normal":true,"ln1":155,"ln2":155,"content":" #define JAVASCRIPT nsIProgrammingLanguage::JAVASCRIPT"},{"type":"normal","normal":true,"ln1":156,"ln2":156,"content":" "},{"type":"add","add":true,"ln":157,"content":"+// The max number of delayed cycle collects.."},{"type":"add","add":true,"ln":158,"content":"+#define NS_MAX_DELAYED_CCOLLECT     45"},{"type":"add","add":true,"ln":159,"content":"+// The max number of user interaction notifications in inactive state before"},{"type":"add","add":true,"ln":160,"content":"+// we try to call cycle collector more aggressively."},{"type":"add","add":true,"ln":161,"content":"+#define NS_CC_SOFT_LIMIT_INACTIVE   6"},{"type":"add","add":true,"ln":162,"content":"+// The max number of user interaction notifications in active state before"},{"type":"add","add":true,"ln":163,"content":"+// we try to call cycle collector more aggressively."},{"type":"add","add":true,"ln":164,"content":"+#define NS_CC_SOFT_LIMIT_ACTIVE     12"},{"type":"add","add":true,"ln":165,"content":"+// When higher probability MaybeCC is used, the number of sDelayedCCollectCount"},{"type":"add","add":true,"ln":166,"content":"+// is multiplied with this number."},{"type":"add","add":true,"ln":167,"content":"+#define NS_PROBABILITY_MULTIPLIER   3"},{"type":"add","add":true,"ln":168,"content":"+// Cycle collector should never run more often than this value"},{"type":"add","add":true,"ln":169,"content":"+#define NS_MIN_CC_INTERVAL          5000 // ms"},{"type":"add","add":true,"ln":170,"content":"+"},{"type":"normal","normal":true,"ln1":157,"ln2":171,"content":" // if you add statics here, add them to the list in nsJSRuntime::Startup"},{"type":"normal","normal":true,"ln1":158,"ln2":172,"content":" "},{"type":"add","add":true,"ln":173,"content":"+static PRUint32 sDelayedCCollectCount;"},{"type":"add","add":true,"ln":174,"content":"+static PRUint32 sCCollectCount;"},{"type":"add","add":true,"ln":175,"content":"+static PRTime sPreviousCCTime;"},{"type":"add","add":true,"ln":176,"content":"+static PRBool sPreviousCCDidCollect;"},{"type":"normal","normal":true,"ln1":159,"ln2":177,"content":" static nsITimer *sGCTimer;"},{"type":"normal","normal":true,"ln1":160,"ln2":178,"content":" static PRBool sReadyForGC;"},{"type":"normal","normal":true,"ln1":161,"ln2":179,"content":" "}],"oldStart":154,"oldLines":8,"newStart":154,"newLines":26},{"content":"@@ -199,6 +217,75 @@ static nsICollation *gCollation;","changes":[{"type":"normal","normal":true,"ln1":199,"ln2":217,"content":" "},{"type":"normal","normal":true,"ln1":200,"ln2":218,"content":" static nsIUnicodeDecoder *gDecoder;"},{"type":"normal","normal":true,"ln1":201,"ln2":219,"content":" "},{"type":"add","add":true,"ln":220,"content":"+// nsUserActivityObserver observes user-interaction-active and"},{"type":"add","add":true,"ln":221,"content":"+// user-interaction-inactive notifications. It counts the number of"},{"type":"add","add":true,"ln":222,"content":"+// notifications and if the number is bigger than NS_CC_SOFT_LIMIT_ACTIVE"},{"type":"add","add":true,"ln":223,"content":"+// (in case the current notification is user-interaction-active) or"},{"type":"add","add":true,"ln":224,"content":"+// NS_CC_SOFT_LIMIT_INACTIVE (current notification is user-interaction-inactive)"},{"type":"add","add":true,"ln":225,"content":"+// MaybeCC is called with aHigherParameter set to PR_TRUE, otherwise PR_FALSE."},{"type":"add","add":true,"ln":226,"content":"+//"},{"type":"add","add":true,"ln":227,"content":"+// When moving from active state to inactive, nsJSContext::CC() is called"},{"type":"add","add":true,"ln":228,"content":"+// unless the timer related to page load is active."},{"type":"add","add":true,"ln":229,"content":"+"},{"type":"add","add":true,"ln":230,"content":"+class nsUserActivityObserver : public nsIObserver"},{"type":"add","add":true,"ln":231,"content":"+{"},{"type":"add","add":true,"ln":232,"content":"+public:"},{"type":"add","add":true,"ln":233,"content":"+  nsUserActivityObserver()"},{"type":"add","add":true,"ln":234,"content":"+  : mUserActivityCounter(0), mOldCCollectCount(0), mUserIsActive(PR_FALSE) {}"},{"type":"add","add":true,"ln":235,"content":"+  NS_DECL_ISUPPORTS"},{"type":"add","add":true,"ln":236,"content":"+  NS_DECL_NSIOBSERVER"},{"type":"add","add":true,"ln":237,"content":"+private:"},{"type":"add","add":true,"ln":238,"content":"+  PRUint32 mUserActivityCounter;"},{"type":"add","add":true,"ln":239,"content":"+  PRUint32 mOldCCollectCount;"},{"type":"add","add":true,"ln":240,"content":"+  PRBool   mUserIsActive;"},{"type":"add","add":true,"ln":241,"content":"+};"},{"type":"add","add":true,"ln":242,"content":"+"},{"type":"add","add":true,"ln":243,"content":"+NS_IMPL_ISUPPORTS1(nsUserActivityObserver, nsIObserver)"},{"type":"add","add":true,"ln":244,"content":"+"},{"type":"add","add":true,"ln":245,"content":"+NS_IMETHODIMP"},{"type":"add","add":true,"ln":246,"content":"+nsUserActivityObserver::Observe(nsISupports* aSubject, const char* aTopic,"},{"type":"add","add":true,"ln":247,"content":"+                                const PRUnichar* aData)"},{"type":"add","add":true,"ln":248,"content":"+{"},{"type":"add","add":true,"ln":249,"content":"+  if (mOldCCollectCount != sCCollectCount) {"},{"type":"add","add":true,"ln":250,"content":"+    mOldCCollectCount = sCCollectCount;"},{"type":"add","add":true,"ln":251,"content":"+    // Cycle collector was called between user interaction notifications, so"},{"type":"add","add":true,"ln":252,"content":"+    // we can reset the counter."},{"type":"add","add":true,"ln":253,"content":"+    mUserActivityCounter = 0;"},{"type":"add","add":true,"ln":254,"content":"+  }"},{"type":"add","add":true,"ln":255,"content":"+  PRBool higherProbability = PR_FALSE;"},{"type":"add","add":true,"ln":256,"content":"+  ++mUserActivityCounter;"},{"type":"add","add":true,"ln":257,"content":"+  if (!strcmp(aTopic, \"user-interaction-inactive\")) {"},{"type":"add","add":true,"ln":258,"content":"+#ifdef DEBUG_smaug"},{"type":"add","add":true,"ln":259,"content":"+    printf(\"user-interaction-inactive\\n\");"},{"type":"add","add":true,"ln":260,"content":"+#endif"},{"type":"add","add":true,"ln":261,"content":"+    if (mUserIsActive) {"},{"type":"add","add":true,"ln":262,"content":"+      mUserIsActive = PR_FALSE;"},{"type":"add","add":true,"ln":263,"content":"+      if (!sGCTimer) {"},{"type":"add","add":true,"ln":264,"content":"+        nsJSContext::CC();"},{"type":"add","add":true,"ln":265,"content":"+        return NS_OK;"},{"type":"add","add":true,"ln":266,"content":"+      }"},{"type":"add","add":true,"ln":267,"content":"+    }"},{"type":"add","add":true,"ln":268,"content":"+    higherProbability = (mUserActivityCounter > NS_CC_SOFT_LIMIT_INACTIVE);"},{"type":"add","add":true,"ln":269,"content":"+  } else if (!strcmp(aTopic, \"user-interaction-active\")) {"},{"type":"add","add":true,"ln":270,"content":"+#ifdef DEBUG_smaug"},{"type":"add","add":true,"ln":271,"content":"+    printf(\"user-interaction-active\\n\");"},{"type":"add","add":true,"ln":272,"content":"+#endif"},{"type":"add","add":true,"ln":273,"content":"+    mUserIsActive = PR_TRUE;"},{"type":"add","add":true,"ln":274,"content":"+    higherProbability = (mUserActivityCounter > NS_CC_SOFT_LIMIT_ACTIVE);"},{"type":"add","add":true,"ln":275,"content":"+  } else if (!strcmp(aTopic, \"xpcom-shutdown\")) {"},{"type":"add","add":true,"ln":276,"content":"+    nsCOMPtr<nsIObserverService> obs ="},{"type":"add","add":true,"ln":277,"content":"+      do_GetService(\"@mozilla.org/observer-service;1\");"},{"type":"add","add":true,"ln":278,"content":"+    if (obs) {"},{"type":"add","add":true,"ln":279,"content":"+      obs->RemoveObserver(this, \"user-interaction-active\");"},{"type":"add","add":true,"ln":280,"content":"+      obs->RemoveObserver(this, \"user-interaction-inactive\");"},{"type":"add","add":true,"ln":281,"content":"+      obs->RemoveObserver(this, \"xpcom-shutdown\");"},{"type":"add","add":true,"ln":282,"content":"+    }"},{"type":"add","add":true,"ln":283,"content":"+    return NS_OK;"},{"type":"add","add":true,"ln":284,"content":"+  }"},{"type":"add","add":true,"ln":285,"content":"+  nsJSContext::MaybeCC(higherProbability);"},{"type":"add","add":true,"ln":286,"content":"+  return NS_OK;"},{"type":"add","add":true,"ln":287,"content":"+}"},{"type":"add","add":true,"ln":288,"content":"+"},{"type":"normal","normal":true,"ln1":202,"ln2":289,"content":" /****************************************************************"},{"type":"normal","normal":true,"ln1":203,"ln2":290,"content":"  ************************** AutoFree ****************************"},{"type":"normal","normal":true,"ln1":204,"ln2":291,"content":"  ****************************************************************/"}],"oldStart":199,"oldLines":6,"newStart":217,"newLines":75},{"content":"@@ -3220,6 +3307,73 @@ nsJSContext::PreserveWrapper(nsIXPConnectWrappedNative *aWrapper)","changes":[{"type":"normal","normal":true,"ln1":3220,"ln2":3307,"content":"   return nsDOMClassInfo::PreserveNodeWrapper(aWrapper);"},{"type":"normal","normal":true,"ln1":3221,"ln2":3308,"content":" }"},{"type":"normal","normal":true,"ln1":3222,"ln2":3309,"content":" "},{"type":"add","add":true,"ln":3310,"content":"+//static"},{"type":"add","add":true,"ln":3311,"content":"+void"},{"type":"add","add":true,"ln":3312,"content":"+nsJSContext::MaybeCCOrGC(nsIScriptContext* aContext)"},{"type":"add","add":true,"ln":3313,"content":"+{"},{"type":"add","add":true,"ln":3314,"content":"+  if (!nsJSContext::MaybeCC(PR_TRUE)) {"},{"type":"add","add":true,"ln":3315,"content":"+    nsCOMPtr<nsIScriptContext> context = aContext;"},{"type":"add","add":true,"ln":3316,"content":"+    if (context) {"},{"type":"add","add":true,"ln":3317,"content":"+      JSContext* cx = static_cast<JSContext*>(context->GetNativeContext());"},{"type":"add","add":true,"ln":3318,"content":"+      if (cx) {"},{"type":"add","add":true,"ln":3319,"content":"+#ifdef DEBUG_smaug"},{"type":"add","add":true,"ln":3320,"content":"+        printf(\"Will call JS_GC\\n\");"},{"type":"add","add":true,"ln":3321,"content":"+#endif"},{"type":"add","add":true,"ln":3322,"content":"+        ::JS_GC(cx);"},{"type":"add","add":true,"ln":3323,"content":"+#ifdef DEBUG_smaug"},{"type":"add","add":true,"ln":3324,"content":"+        printf(\"Did call JS_GC\\n\");"},{"type":"add","add":true,"ln":3325,"content":"+#endif"},{"type":"add","add":true,"ln":3326,"content":"+      }"},{"type":"add","add":true,"ln":3327,"content":"+    }"},{"type":"add","add":true,"ln":3328,"content":"+  }"},{"type":"add","add":true,"ln":3329,"content":"+}"},{"type":"add","add":true,"ln":3330,"content":"+"},{"type":"add","add":true,"ln":3331,"content":"+//static"},{"type":"add","add":true,"ln":3332,"content":"+void"},{"type":"add","add":true,"ln":3333,"content":"+nsJSContext::CC()"},{"type":"add","add":true,"ln":3334,"content":"+{"},{"type":"add","add":true,"ln":3335,"content":"+  sPreviousCCTime = PR_Now();"},{"type":"add","add":true,"ln":3336,"content":"+  sDelayedCCollectCount = 0;"},{"type":"add","add":true,"ln":3337,"content":"+  ++sCCollectCount;"},{"type":"add","add":true,"ln":3338,"content":"+#ifdef DEBUG_smaug"},{"type":"add","add":true,"ln":3339,"content":"+  printf(\"Will run cycle collector (%i)\\n\", sCCollectCount);"},{"type":"add","add":true,"ln":3340,"content":"+#endif"},{"type":"add","add":true,"ln":3341,"content":"+  // nsCycleCollector_collect() will run a ::JS_GC() indirectly, so"},{"type":"add","add":true,"ln":3342,"content":"+  // we do not explicitly call ::JS_GC() here."},{"type":"add","add":true,"ln":3343,"content":"+  sPreviousCCDidCollect = nsCycleCollector_collect();"},{"type":"add","add":true,"ln":3344,"content":"+#ifdef DEBUG_smaug"},{"type":"add","add":true,"ln":3345,"content":"+  printf(\"%s\\n\", sPreviousCCDidCollect ?"},{"type":"add","add":true,"ln":3346,"content":"+                   \"Cycle collector did collect nodes\" :"},{"type":"add","add":true,"ln":3347,"content":"+                   \"Cycle collector did not collect nodes\");"},{"type":"add","add":true,"ln":3348,"content":"+#endif"},{"type":"add","add":true,"ln":3349,"content":"+}"},{"type":"add","add":true,"ln":3350,"content":"+"},{"type":"add","add":true,"ln":3351,"content":"+//static"},{"type":"add","add":true,"ln":3352,"content":"+PRBool"},{"type":"add","add":true,"ln":3353,"content":"+nsJSContext::MaybeCC(PRBool aHigherProbability)"},{"type":"add","add":true,"ln":3354,"content":"+{"},{"type":"add","add":true,"ln":3355,"content":"+  ++sDelayedCCollectCount;"},{"type":"add","add":true,"ln":3356,"content":"+  // Increase the probability also if the previous call to cycle collector"},{"type":"add","add":true,"ln":3357,"content":"+  // collected something."},{"type":"add","add":true,"ln":3358,"content":"+  if (aHigherProbability || sPreviousCCDidCollect) {"},{"type":"add","add":true,"ln":3359,"content":"+    sDelayedCCollectCount *= NS_PROBABILITY_MULTIPLIER;"},{"type":"add","add":true,"ln":3360,"content":"+  }"},{"type":"add","add":true,"ln":3361,"content":"+"},{"type":"add","add":true,"ln":3362,"content":"+  if (!sGCTimer && (sDelayedCCollectCount > NS_MAX_DELAYED_CCOLLECT)) {"},{"type":"add","add":true,"ln":3363,"content":"+    if ((PR_Now() - sPreviousCCTime) >="},{"type":"add","add":true,"ln":3364,"content":"+        PRTime(NS_MIN_CC_INTERVAL * PR_USEC_PER_MSEC)) {"},{"type":"add","add":true,"ln":3365,"content":"+      nsJSContext::CC();"},{"type":"add","add":true,"ln":3366,"content":"+      return PR_TRUE;"},{"type":"add","add":true,"ln":3367,"content":"+    }"},{"type":"add","add":true,"ln":3368,"content":"+#ifdef DEBUG_smaug"},{"type":"add","add":true,"ln":3369,"content":"+    else {"},{"type":"add","add":true,"ln":3370,"content":"+      printf(\"Running cycle collector was delayed: NS_MIN_CC_INTERVAL\\n\");"},{"type":"add","add":true,"ln":3371,"content":"+    }"},{"type":"add","add":true,"ln":3372,"content":"+#endif"},{"type":"add","add":true,"ln":3373,"content":"+  }"},{"type":"add","add":true,"ln":3374,"content":"+  return PR_FALSE;"},{"type":"add","add":true,"ln":3375,"content":"+}"},{"type":"add","add":true,"ln":3376,"content":"+"},{"type":"normal","normal":true,"ln1":3223,"ln2":3377,"content":" NS_IMETHODIMP"},{"type":"normal","normal":true,"ln1":3224,"ln2":3378,"content":" nsJSContext::Notify(nsITimer *timer)"},{"type":"normal","normal":true,"ln1":3225,"ln2":3379,"content":" {"}],"oldStart":3220,"oldLines":6,"newStart":3307,"newLines":73},{"content":"@@ -3238,9 +3392,7 @@ nsJSContext::Notify(nsITimer *timer)","changes":[{"type":"normal","normal":true,"ln1":3238,"ln2":3392,"content":"     // loading and move on as if they weren't."},{"type":"normal","normal":true,"ln1":3239,"ln2":3393,"content":"     sPendingLoadCount = 0;"},{"type":"normal","normal":true,"ln1":3240,"ln2":3394,"content":" "},{"type":"del","del":true,"ln":3241,"content":"-    // nsCycleCollector_collect() will run a ::JS_GC() indirectly,"},{"type":"del","del":true,"ln":3242,"content":"-    // so we do not explicitly call ::JS_GC() here. "},{"type":"del","del":true,"ln":3243,"content":"-    nsCycleCollector_collect();"},{"type":"add","add":true,"ln":3395,"content":"+    MaybeCCOrGC(this);"},{"type":"normal","normal":true,"ln1":3244,"ln2":3396,"content":"   } else {"},{"type":"normal","normal":true,"ln1":3245,"ln2":3397,"content":"     FireGCTimer(PR_TRUE);"},{"type":"normal","normal":true,"ln1":3246,"ln2":3398,"content":"   }"}],"oldStart":3238,"oldLines":9,"newStart":3392,"newLines":7},{"content":"@@ -3259,7 +3411,7 @@ nsJSContext::LoadStart()","changes":[{"type":"normal","normal":true,"ln1":3259,"ln2":3411,"content":" "},{"type":"normal","normal":true,"ln1":3260,"ln2":3412,"content":" // static"},{"type":"normal","normal":true,"ln1":3261,"ln2":3413,"content":" void"},{"type":"del","del":true,"ln":3262,"content":"-nsJSContext::LoadEnd()"},{"type":"add","add":true,"ln":3414,"content":"+nsJSContext::LoadEnd(nsIScriptGlobalObject* aGlobalObject)"},{"type":"normal","normal":true,"ln1":3263,"ln2":3415,"content":" {"},{"type":"normal","normal":true,"ln1":3264,"ln2":3416,"content":"   // sPendingLoadCount is not a well managed load counter (and doesn't"},{"type":"normal","normal":true,"ln1":3265,"ln2":3417,"content":"   // need to be), so make sure we don't make it wrap backwards here."}],"oldStart":3259,"oldLines":7,"newStart":3411,"newLines":7},{"content":"@@ -3269,13 +3421,10 @@ nsJSContext::LoadEnd()","changes":[{"type":"normal","normal":true,"ln1":3269,"ln2":3421,"content":" "},{"type":"normal","normal":true,"ln1":3270,"ln2":3422,"content":"   if (!sPendingLoadCount && sLoadInProgressGCTimer) {"},{"type":"normal","normal":true,"ln1":3271,"ln2":3423,"content":"     sGCTimer->Cancel();"},{"type":"del","del":true,"ln":3272,"content":"-"},{"type":"normal","normal":true,"ln1":3273,"ln2":3424,"content":"     NS_RELEASE(sGCTimer);"},{"type":"normal","normal":true,"ln1":3274,"ln2":3425,"content":"     sLoadInProgressGCTimer = PR_FALSE;"},{"type":"normal","normal":true,"ln1":3275,"ln2":3426,"content":" "},{"type":"del","del":true,"ln":3276,"content":"-    // nsCycleCollector_collect() will run a ::JS_GC() indirectly, so"},{"type":"del","del":true,"ln":3277,"content":"-    // we do not explicitly call ::JS_GC() here."},{"type":"del","del":true,"ln":3278,"content":"-    nsCycleCollector_collect();"},{"type":"add","add":true,"ln":3427,"content":"+    MaybeCCOrGC(aGlobalObject ? aGlobalObject->GetContext() : nsnull);"},{"type":"normal","normal":true,"ln1":3279,"ln2":3428,"content":"   }"},{"type":"normal","normal":true,"ln1":3280,"ln2":3429,"content":" }"},{"type":"normal","normal":true,"ln1":3281,"ln2":3430,"content":" "}],"oldStart":3269,"oldLines":13,"newStart":3421,"newLines":10},{"content":"@@ -3302,10 +3451,7 @@ nsJSContext::FireGCTimer(PRBool aLoadInProgress)","changes":[{"type":"normal","normal":true,"ln1":3302,"ln2":3451,"content":"     // timer."},{"type":"normal","normal":true,"ln1":3303,"ln2":3452,"content":"     sLoadInProgressGCTimer = PR_FALSE;"},{"type":"normal","normal":true,"ln1":3304,"ln2":3453,"content":" "},{"type":"del","del":true,"ln":3305,"content":"-    // nsCycleCollector_collect() will run a ::JS_GC() indirectly, so"},{"type":"del","del":true,"ln":3306,"content":"-    // we do not explicitly call ::JS_GC() here."},{"type":"del","del":true,"ln":3307,"content":"-    nsCycleCollector_collect();"},{"type":"del","del":true,"ln":3308,"content":"-"},{"type":"add","add":true,"ln":3454,"content":"+    MaybeCCOrGC(this);"},{"type":"normal","normal":true,"ln1":3309,"ln2":3455,"content":"     return;"},{"type":"normal","normal":true,"ln1":3310,"ln2":3456,"content":"   }"},{"type":"normal","normal":true,"ln1":3311,"ln2":3457,"content":" "}],"oldStart":3302,"oldLines":10,"newStart":3451,"newLines":7},{"content":"@@ -3413,6 +3559,10 @@ void","changes":[{"type":"normal","normal":true,"ln1":3413,"ln2":3559,"content":" nsJSRuntime::Startup()"},{"type":"normal","normal":true,"ln1":3414,"ln2":3560,"content":" {"},{"type":"normal","normal":true,"ln1":3415,"ln2":3561,"content":"   // initialize all our statics, so that we can restart XPCOM"},{"type":"add","add":true,"ln":3562,"content":"+  sDelayedCCollectCount = 0;"},{"type":"add","add":true,"ln":3563,"content":"+  sCCollectCount = 0;"},{"type":"add","add":true,"ln":3564,"content":"+  sPreviousCCTime = 0;"},{"type":"add","add":true,"ln":3565,"content":"+  sPreviousCCDidCollect = PR_FALSE;"},{"type":"normal","normal":true,"ln1":3416,"ln2":3566,"content":"   sGCTimer = nsnull;"},{"type":"normal","normal":true,"ln1":3417,"ln2":3567,"content":"   sReadyForGC = PR_FALSE;"},{"type":"normal","normal":true,"ln1":3418,"ln2":3568,"content":"   sLoadInProgressGCTimer = PR_FALSE;"}],"oldStart":3413,"oldLines":6,"newStart":3559,"newLines":10},{"content":"@@ -3547,6 +3697,15 @@ nsJSRuntime::Init()","changes":[{"type":"normal","normal":true,"ln1":3547,"ln2":3697,"content":"   MaxScriptRunTimePrefChangedCallback(\"dom.max_chrome_script_run_time\","},{"type":"normal","normal":true,"ln1":3548,"ln2":3698,"content":"                                       nsnull);"},{"type":"normal","normal":true,"ln1":3549,"ln2":3699,"content":" "},{"type":"add","add":true,"ln":3700,"content":"+  nsCOMPtr<nsIObserverService> obs ="},{"type":"add","add":true,"ln":3701,"content":"+    do_GetService(\"@mozilla.org/observer-service;1\", &rv);"},{"type":"add","add":true,"ln":3702,"content":"+  NS_ENSURE_SUCCESS(rv, rv);"},{"type":"add","add":true,"ln":3703,"content":"+  nsIObserver* activityObserver = new nsUserActivityObserver();"},{"type":"add","add":true,"ln":3704,"content":"+  NS_ENSURE_TRUE(activityObserver, NS_ERROR_OUT_OF_MEMORY);"},{"type":"add","add":true,"ln":3705,"content":"+  obs->AddObserver(activityObserver, \"user-interaction-inactive\", PR_FALSE);"},{"type":"add","add":true,"ln":3706,"content":"+  obs->AddObserver(activityObserver, \"user-interaction-active\", PR_FALSE);"},{"type":"add","add":true,"ln":3707,"content":"+  obs->AddObserver(activityObserver, \"xpcom-shutdown\", PR_FALSE);"},{"type":"add","add":true,"ln":3708,"content":"+"},{"type":"normal","normal":true,"ln1":3550,"ln2":3709,"content":"   rv = CallGetService(NS_SCRIPTSECURITYMANAGER_CONTRACTID, &sSecurityManager);"},{"type":"normal","normal":true,"ln1":3551,"ln2":3710,"content":" "},{"type":"normal","normal":true,"ln1":3552,"ln2":3711,"content":"   sIsInitialized = NS_SUCCEEDED(rv);"}],"oldStart":3547,"oldLines":6,"newStart":3697,"newLines":15}],"deletions":12,"additions":171,"from":"dom/src/base/nsJSEnvironment.cpp","to":"dom/src/base/nsJSEnvironment.cpp","index":["db881ff..bcef36f","100644"]},{"chunks":[{"content":"@@ -168,7 +168,26 @@ public:","changes":[{"type":"normal","normal":true,"ln1":168,"ln2":168,"content":"   NS_DECL_NSITIMERCALLBACK"},{"type":"normal","normal":true,"ln1":169,"ln2":169,"content":" "},{"type":"normal","normal":true,"ln1":170,"ln2":170,"content":"   static void LoadStart();"},{"type":"del","del":true,"ln":171,"content":"-  static void LoadEnd();"},{"type":"add","add":true,"ln":171,"content":"+  static void LoadEnd(nsIScriptGlobalObject* aGlobalObject);"},{"type":"add","add":true,"ln":172,"content":"+"},{"type":"add","add":true,"ln":173,"content":"+  // CC does always call cycle collector and it also updates the counters"},{"type":"add","add":true,"ln":174,"content":"+  // that MaybeCC uses."},{"type":"add","add":true,"ln":175,"content":"+  static void CC();"},{"type":"add","add":true,"ln":176,"content":"+"},{"type":"add","add":true,"ln":177,"content":"+  // MaybeCC calls cycle collector if certain conditions are fulfilled."},{"type":"add","add":true,"ln":178,"content":"+  // The conditions are:"},{"type":"add","add":true,"ln":179,"content":"+  // - The timer related to page load (sGCTimer) must not be active."},{"type":"add","add":true,"ln":180,"content":"+  // - At least NS_MIN_CC_INTERVAL milliseconds must have elapsed since the"},{"type":"add","add":true,"ln":181,"content":"+  //   previous cycle collector call."},{"type":"add","add":true,"ln":182,"content":"+  // - Certain number of MaybeCC calls have occurred."},{"type":"add","add":true,"ln":183,"content":"+  //   The number of needed MaybeCC calls depends on the aHigherProbability"},{"type":"add","add":true,"ln":184,"content":"+  //   parameter. If the parameter is true, probability for calling cycle"},{"type":"add","add":true,"ln":185,"content":"+  //   collector rises increasingly. If the parameter is all the time false,"},{"type":"add","add":true,"ln":186,"content":"+  //   at least NS_MAX_DELAYED_CCOLLECT MaybeCC calls are needed."},{"type":"add","add":true,"ln":187,"content":"+  //   If the previous call to cycle collector did collect something,"},{"type":"add","add":true,"ln":188,"content":"+  //   MaybeCC works effectively as if aHigherProbability was true."},{"type":"add","add":true,"ln":189,"content":"+  // @return PR_TRUE if cycle collector was called."},{"type":"add","add":true,"ln":190,"content":"+  static PRBool MaybeCC(PRBool aHigherProbability);"},{"type":"normal","normal":true,"ln1":172,"ln2":191,"content":" "},{"type":"normal","normal":true,"ln1":173,"ln2":192,"content":" protected:"},{"type":"normal","normal":true,"ln1":174,"ln2":193,"content":"   nsresult InitializeExternalClasses();"}],"oldStart":168,"oldLines":7,"newStart":168,"newLines":26},{"content":"@@ -191,6 +210,8 @@ protected:","changes":[{"type":"normal","normal":true,"ln1":191,"ln2":210,"content":"   nsresult JSObjectFromInterface(nsISupports *aSup, void *aScript, "},{"type":"normal","normal":true,"ln1":192,"ln2":211,"content":"                                  JSObject **aRet);"},{"type":"normal","normal":true,"ln1":193,"ln2":212,"content":" "},{"type":"add","add":true,"ln":213,"content":"+  static void MaybeCCOrGC(nsIScriptContext* aContext);"},{"type":"add","add":true,"ln":214,"content":"+"},{"type":"normal","normal":true,"ln1":194,"ln2":215,"content":" private:"},{"type":"normal","normal":true,"ln1":195,"ln2":216,"content":"   JSContext *mContext;"},{"type":"normal","normal":true,"ln1":196,"ln2":217,"content":"   PRUint32 mNumEvaluations;"}],"oldStart":191,"oldLines":6,"newStart":210,"newLines":8}],"deletions":1,"additions":22,"from":"dom/src/base/nsJSEnvironment.h","to":"dom/src/base/nsJSEnvironment.h","index":["01d0187..e074b30","100644"]},{"chunks":[{"content":"@@ -993,7 +993,7 @@ DocumentViewerImpl::LoadComplete(nsresult aStatus)","changes":[{"type":"normal","normal":true,"ln1":993,"ln2":993,"content":"     mPresShell->UnsuppressPainting();"},{"type":"normal","normal":true,"ln1":994,"ln2":994,"content":"   }"},{"type":"normal","normal":true,"ln1":995,"ln2":995,"content":" "},{"type":"del","del":true,"ln":996,"content":"-  nsJSContext::LoadEnd();"},{"type":"add","add":true,"ln":996,"content":"+  nsJSContext::LoadEnd(mDocument ? mDocument->GetScriptGlobalObject() : nsnull);"},{"type":"normal","normal":true,"ln1":997,"ln2":997,"content":" "},{"type":"normal","normal":true,"ln1":998,"ln2":998,"content":" #ifdef NS_PRINTING"},{"type":"normal","normal":true,"ln1":999,"ln2":999,"content":"   // Check to see if someone tried to print during the load"}],"oldStart":993,"oldLines":7,"newStart":993,"newLines":7}],"deletions":1,"additions":1,"from":"layout/base/nsDocumentViewer.cpp","to":"layout/base/nsDocumentViewer.cpp","index":["f5d5717..e75864f","100644"]},{"chunks":[{"content":"@@ -869,7 +869,7 @@ struct nsCycleCollector","changes":[{"type":"normal","normal":true,"ln1":869,"ln2":869,"content":"     PRBool Forget(nsISupports *n);"},{"type":"normal","normal":true,"ln1":870,"ln2":870,"content":"     void Allocated(void *n, size_t sz);"},{"type":"normal","normal":true,"ln1":871,"ln2":871,"content":"     void Freed(void *n);"},{"type":"del","del":true,"ln":872,"content":"-    void Collect(PRUint32 aTryCollections = 1);"},{"type":"add","add":true,"ln":872,"content":"+    PRBool Collect(PRUint32 aTryCollections = 1);"},{"type":"normal","normal":true,"ln1":873,"ln2":873,"content":"     void Shutdown();"},{"type":"normal","normal":true,"ln1":874,"ln2":874,"content":" "},{"type":"normal","normal":true,"ln1":875,"ln2":875,"content":" #ifdef DEBUG_CC"}],"oldStart":869,"oldLines":7,"newStart":869,"newLines":7},{"content":"@@ -2021,9 +2021,10 @@ nsCycleCollector::Freed(void *n)","changes":[{"type":"normal","normal":true,"ln1":2021,"ln2":2021,"content":" }"},{"type":"normal","normal":true,"ln1":2022,"ln2":2022,"content":" #endif"},{"type":"normal","normal":true,"ln1":2023,"ln2":2023,"content":" "},{"type":"del","del":true,"ln":2024,"content":"-void"},{"type":"add","add":true,"ln":2024,"content":"+PRBool"},{"type":"normal","normal":true,"ln1":2025,"ln2":2025,"content":" nsCycleCollector::Collect(PRUint32 aTryCollections)"},{"type":"normal","normal":true,"ln1":2026,"ln2":2026,"content":" {"},{"type":"add","add":true,"ln":2027,"content":"+    PRBool didCollect = PR_FALSE;"},{"type":"normal","normal":true,"ln1":2027,"ln2":2028,"content":" #if defined(DEBUG_CC) && !defined(__MINGW32__)"},{"type":"normal","normal":true,"ln1":2028,"ln2":2029,"content":"     if (!mParams.mDoNothing && mParams.mHookMalloc)"},{"type":"normal","normal":true,"ln1":2029,"ln2":2030,"content":"         InitMemHook();"}],"oldStart":2021,"oldLines":9,"newStart":2021,"newLines":10},{"content":"@@ -2031,7 +2032,7 @@ nsCycleCollector::Collect(PRUint32 aTryCollections)","changes":[{"type":"normal","normal":true,"ln1":2031,"ln2":2032,"content":" "},{"type":"normal","normal":true,"ln1":2032,"ln2":2033,"content":"     // This can legitimately happen in a few cases. See bug 383651."},{"type":"normal","normal":true,"ln1":2033,"ln2":2034,"content":"     if (mCollectionInProgress)"},{"type":"del","del":true,"ln":2034,"content":"-        return;"},{"type":"add","add":true,"ln":2035,"content":"+        return didCollect;"},{"type":"normal","normal":true,"ln1":2035,"ln2":2036,"content":" "},{"type":"normal","normal":true,"ln1":2036,"ln2":2037,"content":" #ifdef COLLECT_TIME_DEBUG"},{"type":"normal","normal":true,"ln1":2037,"ln2":2038,"content":"     printf(\"cc: Starting nsCycleCollector::Collect(%d)\\n\", aTryCollections);"}],"oldStart":2031,"oldLines":7,"newStart":2032,"newLines":7},{"content":"@@ -2168,8 +2169,11 @@ nsCycleCollector::Collect(PRUint32 aTryCollections)","changes":[{"type":"normal","normal":true,"ln1":2168,"ln2":2169,"content":"                 // mBuf.GetSize() == 0 check above), we should stop"},{"type":"normal","normal":true,"ln1":2169,"ln2":2170,"content":"                 // repeating collections if we didn't collect anything"},{"type":"normal","normal":true,"ln1":2170,"ln2":2171,"content":"                 // this time."},{"type":"del","del":true,"ln":2171,"content":"-                if (!collected)"},{"type":"add","add":true,"ln":2172,"content":"+                if (!collected) {"},{"type":"normal","normal":true,"ln1":2172,"ln2":2173,"content":"                     aTryCollections = 0;"},{"type":"add","add":true,"ln":2174,"content":"+                } else {"},{"type":"add","add":true,"ln":2175,"content":"+                    didCollect = PR_TRUE;"},{"type":"add","add":true,"ln":2176,"content":"+                }"},{"type":"normal","normal":true,"ln1":2173,"ln2":2177,"content":"             }"},{"type":"normal","normal":true,"ln1":2174,"ln2":2178,"content":" "},{"type":"normal","normal":true,"ln1":2175,"ln2":2179,"content":" #ifdef DEBUG_CC"}],"oldStart":2168,"oldLines":8,"newStart":2169,"newLines":11},{"content":"@@ -2194,6 +2198,7 @@ nsCycleCollector::Collect(PRUint32 aTryCollections)","changes":[{"type":"normal","normal":true,"ln1":2194,"ln2":2198,"content":" #ifdef DEBUG_CC"},{"type":"normal","normal":true,"ln1":2195,"ln2":2199,"content":"     ExplainLiveExpectedGarbage();"},{"type":"normal","normal":true,"ln1":2196,"ln2":2200,"content":" #endif"},{"type":"add","add":true,"ln":2201,"content":"+    return didCollect;"},{"type":"normal","normal":true,"ln1":2197,"ln2":2202,"content":" }"},{"type":"normal","normal":true,"ln1":2198,"ln2":2203,"content":" "},{"type":"normal","normal":true,"ln1":2199,"ln2":2204,"content":" void"}],"oldStart":2194,"oldLines":6,"newStart":2198,"newLines":7},{"content":"@@ -2594,11 +2599,10 @@ NS_CycleCollectorForget(nsISupports *n)","changes":[{"type":"normal","normal":true,"ln1":2594,"ln2":2599,"content":" }"},{"type":"normal","normal":true,"ln1":2595,"ln2":2600,"content":" "},{"type":"normal","normal":true,"ln1":2596,"ln2":2601,"content":" "},{"type":"del","del":true,"ln":2597,"content":"-void "},{"type":"add","add":true,"ln":2602,"content":"+PRBool"},{"type":"normal","normal":true,"ln1":2598,"ln2":2603,"content":" nsCycleCollector_collect()"},{"type":"normal","normal":true,"ln1":2599,"ln2":2604,"content":" {"},{"type":"del","del":true,"ln":2600,"content":"-    if (sCollector)"},{"type":"del","del":true,"ln":2601,"content":"-        sCollector->Collect();"},{"type":"add","add":true,"ln":2605,"content":"+    return sCollector ? sCollector->Collect() : PR_FALSE;"},{"type":"normal","normal":true,"ln1":2602,"ln2":2606,"content":" }"},{"type":"normal","normal":true,"ln1":2603,"ln2":2607,"content":" "},{"type":"normal","normal":true,"ln1":2604,"ln2":2608,"content":" nsresult "}],"oldStart":2594,"oldLines":11,"newStart":2599,"newLines":10}],"deletions":7,"additions":11,"from":"xpcom/base/nsCycleCollector.cpp","to":"xpcom/base/nsCycleCollector.cpp","index":["3bfbcea..b362041","100644"]},{"chunks":[{"content":"@@ -66,7 +66,8 @@ struct nsCycleCollectionLanguageRuntime","changes":[{"type":"normal","normal":true,"ln1":66,"ln2":66,"content":" NS_COM void nsCycleCollector_suspectCurrent(nsISupports *n);"},{"type":"normal","normal":true,"ln1":67,"ln2":67,"content":" // NS_COM PRBool nsCycleCollector_forget(nsISupports *n);"},{"type":"normal","normal":true,"ln1":68,"ln2":68,"content":" nsresult nsCycleCollector_startup();"},{"type":"del","del":true,"ln":69,"content":"-NS_COM void nsCycleCollector_collect();"},{"type":"add","add":true,"ln":69,"content":"+// Returns PR_TRUE if some nodes were collected."},{"type":"add","add":true,"ln":70,"content":"+NS_COM PRBool nsCycleCollector_collect();"},{"type":"normal","normal":true,"ln1":70,"ln2":71,"content":" void nsCycleCollector_shutdown();"},{"type":"normal","normal":true,"ln1":71,"ln2":72,"content":" "},{"type":"normal","normal":true,"ln1":72,"ln2":73,"content":" #ifdef DEBUG"}],"oldStart":66,"oldLines":7,"newStart":66,"newLines":8}],"deletions":1,"additions":2,"from":"xpcom/base/nsCycleCollector.h","to":"xpcom/base/nsCycleCollector.h","index":["0809ee6..ac8ceb5","100644"]}]}