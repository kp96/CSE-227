Index: dom/src/base/nsGlobalWindow.cpp
===================================================================
RCS file: /cvsroot/mozilla/dom/src/base/nsGlobalWindow.cpp,v
retrieving revision 1.871
diff -U8 -r1.871 nsGlobalWindow.cpp
--- dom/src/base/nsGlobalWindow.cpp	25 Jul 2006 23:57:10 -0000	1.871
+++ dom/src/base/nsGlobalWindow.cpp	28 Jul 2006 17:06:56 -0000
@@ -3249,18 +3249,17 @@
     if (markupViewer)
       return markupViewer->SetTextZoom(aZoom);
   }
   return NS_ERROR_FAILURE;
 }
 
 // static
 void
-nsGlobalWindow::MakeScriptDialogTitle(const nsAString &aInTitle,
-                                      nsAString &aOutTitle)
+nsGlobalWindow::MakeScriptDialogTitle(nsAString &aOutTitle)
 {
   aOutTitle.Truncate();
 
   // Try to get a host from the running principal -- this will do the
   // right thing for javascript: and data: documents.
 
   nsresult rv = NS_OK;
   NS_ASSERTION(nsContentUtils::GetSecurityManager(),
@@ -3288,53 +3287,47 @@
             if (!host.IsEmpty()) {
               // if this URI has a host we'll show it. For other
               // schemes (e.g. file:) we fall back to the localized
               // generic string
 
               nsCAutoString prepath;
               fixedURI->GetPrePath(prepath);
 
-              aOutTitle = NS_ConvertUTF8toUTF16(prepath);
-              if (!aInTitle.IsEmpty()) {
-                aOutTitle.Append(NS_LITERAL_STRING(" - ") + aInTitle);
-              }
+              NS_ConvertUTF8toUTF16 ucsPrePath(prepath);
+              const PRUnichar *formatStrings[] = { ucsPrePath.get() };
+              nsXPIDLString tempString;
+              nsContentUtils::FormatLocalizedString(nsContentUtils::eCOMMON_DIALOG_PROPERTIES,
+                                                    "ScriptDlgHeading",
+                                                    formatStrings, NS_ARRAY_LENGTH(formatStrings),
+                                                    tempString);
+              aOutTitle = tempString;
             }
           }
         }
       }
     }
     else { // failed to get subject principal
       NS_WARNING("No script principal? Who is calling alert/confirm/prompt?!");
     }
   }
 
   if (aOutTitle.IsEmpty()) {
-    // We didn't find a host so use the generic title modifier.  Load
-    // the string to be prepended to titles for script
-    // confirm/alert/prompt boxes.
-
-    const nsAFlatString & flatTitle = PromiseFlatString(aInTitle);
-    const PRUnichar *formatStrings[] = { flatTitle.get() };
-    
+    // We didn't find a host so use the generic heading
     nsXPIDLString tempString;
-    nsContentUtils::FormatLocalizedString(
-        nsContentUtils::eCOMMON_DIALOG_PROPERTIES,
-        "ScriptDlgTitle",
-        formatStrings, NS_ARRAY_LENGTH(formatStrings),
-        tempString);
-                                          
+    nsContentUtils::GetLocalizedString(nsContentUtils::eCOMMON_DIALOG_PROPERTIES,
+                                       "ScriptDlgGenericHeading",
+                                       tempString);
     aOutTitle = tempString;
   }
 
   // Just in case
   if (aOutTitle.IsEmpty()) {
-    NS_WARNING("could not get ScriptDlgTitle string from string bundle");
-    aOutTitle.AssignLiteral("[Script] ");
-    aOutTitle.Append(aInTitle);
+    NS_WARNING("could not get ScriptDlgGenericHeading string from string bundle");
+    aOutTitle.AssignLiteral("[Script]");
   }
 }
 
 NS_IMETHODIMP
 nsGlobalWindow::Alert(const nsAString& aString)
 {
   FORWARD_TO_OUTER(Alert, (aString), NS_ERROR_NOT_INITIALIZED);
 
@@ -3353,17 +3346,17 @@
 
   const nsAString *str = DOMStringIsNull(aString) ? &null_str : &aString;
 
   // Before bringing up the window, unsuppress painting and flush
   // pending reflows.
   EnsureReflowFlushAndPaint();
 
   nsAutoString title;
-  MakeScriptDialogTitle(EmptyString(), title);
+  MakeScriptDialogTitle(title);
 
   return prompter->Alert(title.get(), PromiseFlatString(*str).get());
 }
 
 NS_IMETHODIMP
 nsGlobalWindow::Confirm(const nsAString& aString, PRBool* aReturn)
 {
   FORWARD_TO_OUTER(Confirm, (aString, aReturn), NS_ERROR_NOT_INITIALIZED);
@@ -3378,27 +3371,29 @@
 
   *aReturn = PR_FALSE;
 
   // Before bringing up the window, unsuppress painting and flush
   // pending reflows.
   EnsureReflowFlushAndPaint();
 
   nsAutoString title;
-  MakeScriptDialogTitle(EmptyString(), title);
+  MakeScriptDialogTitle(title);
 
   return prompter->Confirm(title.get(),
                            PromiseFlatString(aString).get(), aReturn);
 }
 
 NS_IMETHODIMP
 nsGlobalWindow::Prompt(const nsAString& aMessage, const nsAString& aInitial,
                        const nsAString& aTitle, PRUint32 aSavePassword,
                        nsAString& aReturn)
 {
+  // We don't use "aTitle" because we ignore the 3rd (title) argument to
+  // prompt(). IE and Opera ignore it too. See Mozilla bug 334893.
   SetDOMStringToNull(aReturn);
 
   nsresult rv;
   nsCOMPtr<nsIWindowWatcher> wwatch =
     do_GetService(NS_WINDOWWATCHER_CONTRACTID, &rv);
   NS_ENSURE_SUCCESS(rv, rv);
 
   nsCOMPtr<nsIAuthPrompt> prompter;
@@ -3413,17 +3408,17 @@
   PRBool b;
   nsXPIDLString uniResult;
 
   // Before bringing up the window, unsuppress painting and flush
   // pending reflows.
   EnsureReflowFlushAndPaint();
 
   nsAutoString title;
-  MakeScriptDialogTitle(aTitle, title);
+  MakeScriptDialogTitle(title);
 
   rv = prompter->Prompt(title.get(), PromiseFlatString(aMessage).get(), nsnull,
                         aSavePassword, PromiseFlatString(aInitial).get(),
                         getter_Copies(uniResult), &b);
   NS_ENSURE_SUCCESS(rv, rv);
 
   if (uniResult && b) {
     aReturn.Assign(uniResult);
Index: dom/src/base/nsGlobalWindow.h
===================================================================
RCS file: /cvsroot/mozilla/dom/src/base/nsGlobalWindow.h,v
retrieving revision 1.286
diff -U8 -r1.286 nsGlobalWindow.h
--- dom/src/base/nsGlobalWindow.h	25 Jul 2006 23:57:10 -0000	1.286
+++ dom/src/base/nsGlobalWindow.h	28 Jul 2006 17:06:56 -0000
@@ -456,18 +456,17 @@
   void FireOfflineStatusEvent();
   
   void FlushPendingNotifications(mozFlushType aType);
   void EnsureReflowFlushAndPaint();
   nsresult CheckSecurityWidthAndHeight(PRInt32* width, PRInt32* height);
   nsresult CheckSecurityLeftAndTop(PRInt32* left, PRInt32* top);
   static PRBool CanSetProperty(const char *aPrefName);
 
-  static void MakeScriptDialogTitle(const nsAString &aInTitle,
-                                    nsAString &aOutTitle);
+  static void MakeScriptDialogTitle(nsAString &aOutTitle);
 
   // Helper for window.find()
   nsresult FindInternal(const nsAString& aStr, PRBool caseSensitive,
                        PRBool backwards, PRBool wrapAround, PRBool wholeWord, 
                        PRBool searchInFrames, PRBool showDialog, 
                        PRBool *aReturn);
 
   nsresult ConvertCharset(const nsAString& aStr, char** aDest);
Index: toolkit/locales/en-US/chrome/global/commonDialogs.properties
===================================================================
RCS file: /cvsroot/mozilla/toolkit/locales/en-US/chrome/global/commonDialogs.properties,v
retrieving revision 1.3
diff -U8 -r1.3 commonDialogs.properties
--- toolkit/locales/en-US/chrome/global/commonDialogs.properties	22 Jun 2006 00:18:43 -0000	1.3
+++ toolkit/locales/en-US/chrome/global/commonDialogs.properties	28 Jul 2006 17:06:56 -0000
@@ -7,9 +7,10 @@
 Select=Select
 OK=OK
 Cancel=Cancel
 Yes=&Yes
 No=&No
 Save=&Save
 Revert=&Revert
 DontSave=&Don't Save
-ScriptDlgTitle=[JavaScript Application] %S
+ScriptDlgGenericHeading=[JavaScript Application]
+ScriptDlgHeading=The page at %S says:
Index: xpfe/global/resources/locale/en-US/commonDialogs.properties
===================================================================
RCS file: /cvsroot/mozilla/xpfe/global/resources/locale/en-US/commonDialogs.properties,v
retrieving revision 1.6
diff -U8 -r1.6 commonDialogs.properties
--- xpfe/global/resources/locale/en-US/commonDialogs.properties	22 Jun 2006 00:18:43 -0000	1.6
+++ xpfe/global/resources/locale/en-US/commonDialogs.properties	28 Jul 2006 17:06:56 -0000
@@ -7,9 +7,10 @@
 Select=Select
 OK=OK
 Cancel=Cancel
 Yes=&Yes
 No=&No
 Save=&Save
 Revert=&Revert
 DontSave=&Don't Save
-ScriptDlgTitle=[JavaScript Application] %S
+ScriptDlgGenericHeading=[JavaScript Application]
+ScriptDlgHeading=The page at %S says:
