diff --git a/security/manager/ssl/src/nsSmartCardMonitor.cpp b/security/manager/ssl/src/nsSmartCardMonitor.cpp
--- a/security/manager/ssl/src/nsSmartCardMonitor.cpp
+++ b/security/manager/ssl/src/nsSmartCardMonitor.cpp
@@ -206,28 +206,32 @@ void SmartCardMonitoringThread::Stop()
 //
 void
 SmartCardMonitoringThread::SetTokenName(CK_SLOT_ID slotid, 
                                        const char *tokenName, PRUint32 series)
 {
   if (mHash) {
     if (tokenName) {
       int len = strlen(tokenName) + 1;
-      char *entry = (char *)malloc(len+sizeof(PRUint32));
+      /* this must match the allocator used in
+       * PLHashAllocOps.freeEntry DefaultFreeEntry */
+      char *entry = (char *)PR_Malloc(len+sizeof(PRUint32));
      
       if (entry) {  
         memcpy(entry,&series,sizeof(PRUint32));
         memcpy(&entry[sizeof(PRUint32)],tokenName,len);
 
         PL_HashTableAdd(mHash,(void *)slotid, entry); /* adopt */
         return;
       }
     } 
-    // if tokenName was not provided, remove the old one (implicit delete)
-    PL_HashTableRemove(mHash,(void *)slotid);
+    else {
+      // if tokenName was not provided, remove the old one (implicit delete)
+      PL_HashTableRemove(mHash,(void *)slotid);
+    }
   }
 }
 
 // retrieve the name saved above
 const char *
 SmartCardMonitoringThread::GetTokenName(CK_SLOT_ID slotid)
 {
   const char *tokenName = nsnull;
