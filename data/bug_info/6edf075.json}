{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas6edf075\""},"diff":[{"chunks":[{"content":"@@ -3085,7 +3085,7 @@ NS_IMETHODIMP nsAccessible::GetObject(PRInt32 aIndex,","changes":[{"type":"normal","normal":true,"ln1":3085,"ln2":3085,"content":" NS_IMETHODIMP nsAccessible::IsValid(PRBool *aIsValid)"},{"type":"normal","normal":true,"ln1":3086,"ln2":3086,"content":" {"},{"type":"normal","normal":true,"ln1":3087,"ln2":3087,"content":"   PRUint32 state = State(this);"},{"type":"del","del":true,"ln":3088,"content":"-  *aIsValid = (state & nsIAccessibleStates::STATE_INVALID) != 0;"},{"type":"add","add":true,"ln":3088,"content":"+  *aIsValid = (0 == (state & nsIAccessibleStates::STATE_INVALID));"},{"type":"normal","normal":true,"ln1":3089,"ln2":3089,"content":"   // XXX In order to implement this we would need to follow every link"},{"type":"normal","normal":true,"ln1":3090,"ln2":3090,"content":"   // Perhaps we can get information about invalid links from the cache"},{"type":"normal","normal":true,"ln1":3091,"ln2":3091,"content":"   // In the mean time authors can use role=\"wairole:link\" aaa:invalid=\"true\""}],"oldStart":3085,"oldLines":7,"newStart":3085,"newLines":7}],"deletions":1,"additions":1,"from":"accessible/src/base/nsAccessible.cpp","to":"accessible/src/base/nsAccessible.cpp","index":["a00e854..cd0e38d","100644"]}]}