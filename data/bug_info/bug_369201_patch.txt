Index: caps/src/nsPrincipal.cpp
===================================================================
RCS file: /cvsroot/mozilla/caps/src/nsPrincipal.cpp,v
retrieving revision 1.45
diff -u -p -d -8 -r1.45 nsPrincipal.cpp
--- caps/src/nsPrincipal.cpp	9 Feb 2007 04:52:44 -0000	1.45
+++ caps/src/nsPrincipal.cpp	12 Feb 2007 03:25:17 -0000
@@ -260,18 +260,36 @@ nsPrincipal::Equals(nsIPrincipal *aOther
       // If either subject name is empty, just let the result stand (so that
       // nsScriptSecurityManager::SetCanEnableCapability works), but if they're
       // both non-empty, only claim equality if they're equal.
       if (*aResult && !mCert->subjectName.IsEmpty()) {
         // Check the other principal's subject name
         aOther->GetSubjectName(str);
         *aResult = str.Equals(mCert->subjectName) || str.IsEmpty();
       }
-        
-      return NS_OK;
+
+      if (!*aResult) {
+        return NS_OK;
+      }
+
+      // If either principal has no URI, it's the saved principal from
+      // preferences; in that case, test true.  Do NOT test true if the two
+      // principals have URIs with different codebases.
+      nsCOMPtr<nsIURI> otherURI;
+      nsresult rv = aOther->GetURI(getter_AddRefs(otherURI));
+      if (NS_FAILED(rv)) {
+        *aResult = PR_FALSE;
+        return rv;
+      }
+
+      if (!otherURI || !mCodebase) {
+        return NS_OK;
+      }
+
+      // Fall through to the codebase comparison.
     }
 
     // Codebases are equal if they have the same origin.
     *aResult =
       NS_SUCCEEDED(nsScriptSecurityManager::GetScriptSecurityManager()
                    ->CheckSameOriginPrincipal(this, aOther));
     return NS_OK;
   }
