{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basf7413d8\""},"diff":[{"chunks":[{"content":"@@ -462,4 +462,13 @@ typedef PRUint32 nsrefcnt;","changes":[{"type":"normal","normal":true,"ln1":462,"ln2":462,"content":" #define NS_UNLIKELY(x)  (!!(x))"},{"type":"normal","normal":true,"ln1":463,"ln2":463,"content":" #endif"},{"type":"normal","normal":true,"ln1":464,"ln2":464,"content":" "},{"type":"add","add":true,"ln":465,"content":"+ /*"},{"type":"add","add":true,"ln":466,"content":"+  * If we're being linked as standalone glue, we don't want a dynamic dependency"},{"type":"add","add":true,"ln":467,"content":"+  * on NSPR libs, so we skip the debug thread-safety checks, and we cannot use"},{"type":"add","add":true,"ln":468,"content":"+  * the THREADSAFE_ISUPPORTS macros."},{"type":"add","add":true,"ln":469,"content":"+  */"},{"type":"add","add":true,"ln":470,"content":"+#if defined(XPCOM_GLUE) && !defined(XPCOM_GLUE_USE_NSPR)"},{"type":"add","add":true,"ln":471,"content":"+#define XPCOM_GLUE_AVOID_NSPR"},{"type":"add","add":true,"ln":472,"content":"+#endif"},{"type":"add","add":true,"ln":473,"content":"+"},{"type":"normal","normal":true,"ln1":465,"ln2":474,"content":" #endif /* nscore_h___ */"}],"oldStart":462,"oldLines":4,"newStart":462,"newLines":13}],"deletions":0,"additions":9,"from":"xpcom/base/nscore.h","to":"xpcom/base/nscore.h","index":["7e01a4d..7329fd1","100644"]},{"chunks":[{"content":"@@ -50,15 +50,6 @@","changes":[{"type":"normal","normal":true,"ln1":50,"ln2":50,"content":" #include \"nsISupportsUtils.h\""},{"type":"normal","normal":true,"ln1":51,"ln2":51,"content":" #endif"},{"type":"normal","normal":true,"ln1":52,"ln2":52,"content":" "},{"type":"del","del":true,"ln":53,"content":"-#if defined(XPCOM_GLUE) && !defined(XPCOM_GLUE_USE_NSPR)"},{"type":"del","del":true,"ln":54,"content":"-// If we're being linked as standalone glue, we don't want a dynamic dependency"},{"type":"del","del":true,"ln":55,"content":"-// on NSPR libs, so we skip the debug thread-safety checks, and we cannot use"},{"type":"del","del":true,"ln":56,"content":"-// the THREADSAFE_ISUPPORTS macros."},{"type":"del","del":true,"ln":57,"content":"-"},{"type":"del","del":true,"ln":58,"content":"-#define XPCOM_GLUE_AVOID_NSPR"},{"type":"del","del":true,"ln":59,"content":"-"},{"type":"del","del":true,"ln":60,"content":"-#endif"},{"type":"del","del":true,"ln":61,"content":"-"},{"type":"normal","normal":true,"ln1":62,"ln2":53,"content":" "},{"type":"normal","normal":true,"ln1":63,"ln2":54,"content":" #if !defined(XPCOM_GLUE_AVOID_NSPR)"},{"type":"normal","normal":true,"ln1":64,"ln2":55,"content":" #include \"prthread.h\" /* needed for thread-safety checks */"}],"oldStart":50,"oldLines":15,"newStart":50,"newLines":6}],"deletions":9,"additions":0,"from":"xpcom/glue/nsISupportsImpl.h","to":"xpcom/glue/nsISupportsImpl.h","index":["9d1c766..663d916","100644"]}]}