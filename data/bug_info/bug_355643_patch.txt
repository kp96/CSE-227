Index: mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties
===================================================================
RCS file: /cvsroot/mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties,v
retrieving revision 1.22
diff -u -1 -0 -r1.22 pipnss.properties
--- mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties	20 Feb 2007 16:26:06 -0000	1.22
+++ mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties	13 Jun 2007 01:23:51 -0000
@@ -325,54 +325,21 @@
 DelModuleExtSuccess=External security module successfully deleted
 ForcedBackup1=You should make a password-protected backup copy of your new security certificate and its associated private key.
 ForcedBackup2=If you ever lose access to your private key by forgetting your personal security password, or by experiencing file corruption, you can restore this private key and certificate from this backup copy.
 ForcedBackup3=To make a copy, click OK. If possible, you should save your backup copy on a floppy disk that you keep in a safe location.
 UnknownCertIssuer=(Unknown Issuer)
 UnknownCertOrg=(Unknown Organization)
 AVATemplate=%S = %S
 
 PSMERR_SSL_Disabled=Can't connect securely because the SSL protocol has been disabled.
 PSMERR_SSL2_Disabled=Can't connect securely because the site uses an older, insecure version of the SSL protocol.
-PSMERR_SSL_NoMatchingCiphers=Can't connect securely because the site uses a security protocol which isn't enabled.
-PSMERR_UsersCertRevoked=Could not establish an encrypted connection because your certificate has been revoked.
-PSMERR_UsersCertExpired=Could not establish an encrypted connection because your certificate is expired.
-PSMERR_UsersCertRejected=Could not establish an encrypted connection because your certificate was rejected.
-PSMERR_BadMac=Received a message with incorrect Message Authentication Code. If the error occurs frequently, contact the site administrator.
-PSMERR_PeerResetConnection=The other side has closed the connection.
-PSMERR_HostResetConnection=The current transfer has been cancelled.
-PSMERR_BadPassword=An incorrect password was provided.
-PSMERR_BadDatabase=There is a problem with your certificate database.
-PSMERR_BadServer=The other side has sent an incorrect or unexpected message.
-PSMERR_BadClient=Received an incorrect or unexpected message.
 PSMERR_HostReusedIssuerSerial=You have received an invalid certificate.  Please contact the server administrator or email correspondent and give them the following information:\n\nYour certificate contains the same serial number as another certificate issued by the certificate authority.  Please get a new certificate containing a unique serial number.
-PSMERR_PeersCertUntrusted=Could not establish an encrypted connection because the site uses a certificate that is not trusted.
-PSMERR_PeersCertRevoked=Could not establish an encrypted connection because the site uses a certificate that has been revoked.
-PSMERR_PeersCertExpired=Could not establish an encrypted connection because the site uses a certificate that has expired.
-PSMERR_PeersCertWrongDomain=Could not establish an encrypted connection because the site uses certificate that is for a different domain.
-PSMERR_PeersCertBadSignature=Could not establish an encrypted connection because the site uses a certificate that has an invalid signature.
-PSMERR_PeersCertNoGood=Could not establish an encrypted connection because the site uses a certificate that is invalid or corrupted.
-PSMERR_CRLExpired=Certificate Revocation List (CRL) from the CA that certifying the site is past its Next Update date. Please update the CRL.
-PSMERR_CRLNotYetValid=Certificate Revocation List (CRL) from the CA certifying the site is not yet valid. Please check your system clock.
-PSMERR_CRLSigNotValid=Certificate Revocation List (CRL) from the CA certifying the site has an invalid digital signature.
-PSMERR_CRLSNotValid=Certificate Revocation List (CRL) from the CA certifying the site is not valid.
-PSMERR_OCSPMalformedRequest=Error trying to validate certificate using OCSP - malformed request.
-PSMERR_OCSPRequestNeedsSig=Error trying to validate certificate using OCSP - request needs signature.
-PSMERR_OCSPUnauthorizedReq=Error trying to validate certificate using OCSP - unauthorized request.
-PSMERR_OCSPServerError=Error trying to validate certificate using OCSP - server error.
-PSMERR_OCSPTryServerLater=Error trying to validate certificate using OCSP - server is busy. Please try again later.
-PSMERR_OCSPFutureResponse=Error trying to validate certificate using OCSP - response contains a date which is in the future.
-PSMERR_OCSPOldResponse=Error trying to validate certificate using OCSP - old response.
-PSMERR_OCSPCorruptedResponse=Error trying to validate certificate using OCSP - corrupted or unknown response.
-PSMERR_OCSPUnauthorizedResponse=Error trying to validate certificate using OCSP - unauthorized response.
-PSMERR_OCSPUnknownCert=Error trying to validate certificate using OCSP - unknown certificate.
-PSMERR_OCSPNoDefaultResponder=Error trying to validate certificate using OCSP - no default responder specified.
-PSMERR_OCSPDirLookup=Error trying to validate certificate using OCSP - directory lookup error.
 
 SSLConnectionErrorPrefix=An error occurred during a connection to %S.
 
 CertInfoIssuedFor=Issued to:
 CertInfoIssuedBy=Issued by:
 CertInfoValid=Valid
 CertInfoFrom=from
 CertInfoTo=to
 CertInfoPurposes=Purposes
 CertInfoStoredIn=Stored in:
Index: mozilla/security/manager/ssl/src/nsNSSErrors.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsNSSErrors.cpp,v
retrieving revision 1.1
diff -u -1 -0 -r1.1 nsNSSErrors.cpp
--- mozilla/security/manager/ssl/src/nsNSSErrors.cpp	17 Feb 2007 03:47:59 -0000	1.1
+++ mozilla/security/manager/ssl/src/nsNSSErrors.cpp	13 Jun 2007 01:23:52 -0000
@@ -322,214 +322,20 @@
 
   switch (aErrorCode) {
     case SSL_ERROR_SSL_DISABLED:
       id_str = "PSMERR_SSL_Disabled";
       break;
   
     case SSL_ERROR_SSL2_DISABLED:
       id_str = "PSMERR_SSL2_Disabled";
       break;
   
-    case SSL_ERROR_EXPORT_ONLY_SERVER:
-    case SSL_ERROR_US_ONLY_SERVER:
-    case SSL_ERROR_NO_CYPHER_OVERLAP:
-    case SSL_ERROR_UNSUPPORTED_VERSION:
-    case SSL_ERROR_UNKNOWN_CIPHER_SUITE:
-    case SSL_ERROR_NO_CIPHERS_SUPPORTED:
-    case SSL_ERROR_FORTEZZA_PQG:
-      id_str = "PSMERR_SSL_NoMatchingCiphers";
-      break;
-  
-    case SSL_ERROR_REVOKED_CERT_ALERT:
-      id_str = "PSMERR_UsersCertRevoked";
-      break;
-  
-    case SSL_ERROR_EXPIRED_CERT_ALERT:
-      id_str = "PSMERR_UsersCertExpired";
-      break;
-  
-    case SSL_ERROR_BAD_CERT_ALERT:
-    case SSL_ERROR_UNSUPPORTED_CERT_ALERT:
-    case SSL_ERROR_CERTIFICATE_UNKNOWN_ALERT:
-      id_str = "PSMERR_UsersCertRejected";
-      break;
-  
-    case SEC_ERROR_CRL_EXPIRED:
-      id_str = "PSMERR_CRLExpired";
-      break;
-  
-    case SEC_ERROR_CRL_NOT_YET_VALID:
-      id_str = "PSMERR_CRLNotYetValid";
-      break;
-  
-    case SEC_ERROR_CRL_INVALID:
-      id_str = "PSMERR_CRLSNotValid";
-      break;
-  
-    case SEC_ERROR_CRL_BAD_SIGNATURE:
-      id_str = "PSMERR_CRLSigNotValid";
-      break;
-  
-    case SEC_ERROR_OCSP_MALFORMED_REQUEST:
-      id_str = "PSMERR_OCSPMalformedRequest";
-      break;
-  
-    case SEC_ERROR_OCSP_REQUEST_NEEDS_SIG:
-      id_str = "PSMERR_OCSPRequestNeedsSig";
-      break;
-  
-    case SEC_ERROR_OCSP_UNAUTHORIZED_REQUEST:
-      id_str = "PSMERR_OCSPUnauthorizedReq";
-      break;
-  
-    case SEC_ERROR_OCSP_SERVER_ERROR:
-      id_str = "PSMERR_OCSPServerError";
-      break;
-  
-    case SEC_ERROR_OCSP_TRY_SERVER_LATER:
-      id_str = "PSMERR_OCSPTryServerLater";
-      break;
-    
-    case SEC_ERROR_OCSP_FUTURE_RESPONSE:
-      id_str = "PSMERR_OCSPFutureResponse";
-      break;
-  
-    case SEC_ERROR_OCSP_OLD_RESPONSE:
-      id_str = "PSMERR_OCSPOldResponse";
-      break;
-  
-    case SEC_ERROR_OCSP_UNKNOWN_RESPONSE_TYPE:
-    case SEC_ERROR_OCSP_BAD_HTTP_RESPONSE:
-    case SEC_ERROR_OCSP_UNKNOWN_RESPONSE_STATUS:
-    case SEC_ERROR_OCSP_MALFORMED_RESPONSE:
-      id_str = "PSMERR_OCSPCorruptedResponse";
-      break;
-  
-    case SEC_ERROR_OCSP_UNAUTHORIZED_RESPONSE:
-      id_str = "PSMERR_OCSPUnauthorizedResponse";
-      break;
-      
-    case SEC_ERROR_OCSP_UNKNOWN_CERT:
-      id_str = "PSMERR_OCSPUnknownCert";
-      break;
-  
-    case SEC_ERROR_OCSP_NO_DEFAULT_RESPONDER:
-      id_str = "PSMERR_OCSPNoDefaultResponder";
-      break;
-    
-    case PR_DIRECTORY_LOOKUP_ERROR:
-      id_str = "PSMERR_OCSPDirLookup";
-      break;
-  
-    case SEC_ERROR_REVOKED_CERTIFICATE:
-      id_str = "PSMERR_PeersCertRevoked";
-      break;
-  
-    case SEC_ERROR_UNTRUSTED_CERT:
-      id_str = "PSMERR_PeersCertUntrusted";
-      break;
-  
-    case SSL_ERROR_BAD_CERT_DOMAIN:
-      id_str = "PSMERR_PeersCertWrongDomain";
-      break;
-  
-    case SEC_ERROR_EXPIRED_CERTIFICATE:
-      id_str = "PSMERR_PeersCertExpired";
-      break;
-  
-    case SEC_ERROR_BAD_SIGNATURE:
-      id_str = "PSMERR_PeersCertBadSignature";
-      break;
-  
-    case SEC_ERROR_UNKNOWN_CERT:
-    case SEC_ERROR_BAD_KEY:
-    case SEC_ERROR_CERT_USAGES_INVALID:
-    case SEC_ERROR_INADEQUATE_KEY_USAGE:
-    case SEC_ERROR_INADEQUATE_CERT_TYPE:
-    case SEC_ERROR_CERT_NOT_IN_NAME_SPACE:
-    case SEC_ERROR_CERT_NOT_VALID:
-    case SEC_ERROR_CERT_ADDR_MISMATCH:
-    case SSL_ERROR_BAD_CERTIFICATE:
-    case SSL_ERROR_UNSUPPORTED_CERTIFICATE_TYPE:
-    case SSL_ERROR_WRONG_CERTIFICATE:
-    case SSL_ERROR_CERT_KEA_MISMATCH:
-    case SEC_ERROR_EXTENSION_VALUE_INVALID :
-    case SEC_ERROR_EXTENSION_NOT_FOUND:
-    case SEC_ERROR_UNKNOWN_CRITICAL_EXTENSION:
-      id_str = "PSMERR_PeersCertNoGood";
-      break;
-  
-    case SSL_ERROR_BAD_MAC_READ:
-    case SSL_ERROR_BAD_MAC_ALERT:
-      id_str = "PSMERR_BadMac";
-      break;
-  
-    case SSL_ERROR_CLOSE_NOTIFY_ALERT:
-    case SSL_ERROR_SOCKET_WRITE_FAILURE:
-      id_str = "PSMERR_PeerResetConnection";
-      break;
-  
-    case SEC_ERROR_USER_CANCELLED:
-    case SEC_ERROR_MESSAGE_SEND_ABORTED:
-      id_str = "PSMERR_HostResetConnection";
-      break;
-  
-    case SEC_ERROR_BAD_PASSWORD:
-    case SEC_ERROR_RETRY_PASSWORD:
-      id_str = "PSMERR_BadPassword";
-      break;
-  
-    case SEC_ERROR_BAD_DATABASE:
-    case SEC_ERROR_NO_KEY:
-    case SEC_ERROR_CERT_NO_RESPONSE:
-      id_str = "PSMERR_BadDatabase";
-      break;
-  
-    case SSL_ERROR_BAD_SERVER:
-    case SSL_ERROR_BAD_BLOCK_PADDING:
-    case SSL_ERROR_RX_RECORD_TOO_LONG:
-    case SSL_ERROR_TX_RECORD_TOO_LONG:
-    case SSL_ERROR_RX_MALFORMED_HELLO_REQUEST:
-    case SSL_ERROR_RX_MALFORMED_SERVER_HELLO:
-    case SSL_ERROR_RX_MALFORMED_CERTIFICATE:
-    case SSL_ERROR_RX_MALFORMED_SERVER_KEY_EXCH:
-    case SSL_ERROR_RX_MALFORMED_CERT_REQUEST:
-    case SSL_ERROR_RX_MALFORMED_HELLO_DONE:
-    case SSL_ERROR_RX_MALFORMED_FINISHED:
-    case SSL_ERROR_RX_MALFORMED_CHANGE_CIPHER:
-    case SSL_ERROR_RX_MALFORMED_ALERT:
-    case SSL_ERROR_RX_MALFORMED_HANDSHAKE:
-    case SSL_ERROR_RX_MALFORMED_APPLICATION_DATA:
-    case SSL_ERROR_RX_UNEXPECTED_HELLO_REQUEST:
-    case SSL_ERROR_RX_UNEXPECTED_SERVER_HELLO:
-    case SSL_ERROR_RX_UNEXPECTED_CERTIFICATE:
-    case SSL_ERROR_RX_UNEXPECTED_SERVER_KEY_EXCH:
-    case SSL_ERROR_RX_UNEXPECTED_CERT_REQUEST:
-    case SSL_ERROR_RX_UNEXPECTED_HELLO_DONE:
-    case SSL_ERROR_RX_UNEXPECTED_FINISHED:
-    case SSL_ERROR_RX_UNEXPECTED_CHANGE_CIPHER:
-    case SSL_ERROR_RX_UNEXPECTED_ALERT:
-    case SSL_ERROR_RX_UNEXPECTED_HANDSHAKE:
-    case SSL_ERROR_RX_UNEXPECTED_APPLICATION_DATA:
-    case SSL_ERROR_RX_UNKNOWN_RECORD_TYPE:
-    case SSL_ERROR_RX_UNKNOWN_HANDSHAKE:
-    case SSL_ERROR_RX_UNKNOWN_ALERT:
-      id_str = "PSMERR_BadServer";
-      break;
-  
-    case SSL_ERROR_HANDSHAKE_UNEXPECTED_ALERT:
-    case SSL_ERROR_DECOMPRESSION_FAILURE_ALERT:
-    case SSL_ERROR_HANDSHAKE_FAILURE_ALERT:
-    case SSL_ERROR_ILLEGAL_PARAMETER_ALERT:
-      id_str = "PSMERR_BadClient";
-      break;
-  
     case SEC_ERROR_REUSED_ISSUER_AND_SERIAL:
       id_str = "PSMERR_HostReusedIssuerSerial";
       break;
   }
 
   return id_str;
 }
 
 nsresult
 nsNSSErrors::getErrorMessageFromCode(PRInt32 err,
