{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas4c6691a\""},"diff":[{"chunks":[{"content":"@@ -57,7 +57,7 @@ typedef XScreenSaverInfo* (*_XScreenSaverAllocInfo_fn)(void);","changes":[{"type":"normal","normal":true,"ln1":57,"ln2":57,"content":" typedef void (*_XScreenSaverQueryInfo_fn)(Display* dpy, Drawable drw,"},{"type":"normal","normal":true,"ln1":58,"ln2":58,"content":"                                           XScreenSaverInfo *info);"},{"type":"normal","normal":true,"ln1":59,"ln2":59,"content":" "},{"type":"del","del":true,"ln":60,"content":"-static PRLibrary* xsslib = nsnull;"},{"type":"add","add":true,"ln":60,"content":"+static PRBool sInitialized = PR_FALSE;"},{"type":"normal","normal":true,"ln1":61,"ln2":61,"content":" static _XScreenSaverQueryExtension_fn _XSSQueryExtension = nsnull;"},{"type":"normal","normal":true,"ln1":62,"ln2":62,"content":" static _XScreenSaverAllocInfo_fn _XSSAllocInfo = nsnull;"},{"type":"normal","normal":true,"ln1":63,"ln2":63,"content":" static _XScreenSaverQueryInfo_fn _XSSQueryInfo = nsnull;"}],"oldStart":57,"oldLines":7,"newStart":57,"newLines":7},{"content":"@@ -68,13 +68,17 @@ NS_IMPL_ISUPPORTS1(nsIdleServiceGTK, nsIIdleService)","changes":[{"type":"normal","normal":true,"ln1":68,"ln2":68,"content":" nsIdleServiceGTK::nsIdleServiceGTK()"},{"type":"normal","normal":true,"ln1":69,"ln2":69,"content":"     : mXssInfo(nsnull)"},{"type":"normal","normal":true,"ln1":70,"ln2":70,"content":" {"},{"type":"del","del":true,"ln":71,"content":"-    NS_ASSERTION(!xsslib, \"created two instances of the idle service\");"},{"type":"add","add":true,"ln":71,"content":"+}"},{"type":"add","add":true,"ln":72,"content":"+"},{"type":"add","add":true,"ln":73,"content":"+static void Initialize()"},{"type":"add","add":true,"ln":74,"content":"+{"},{"type":"add","add":true,"ln":75,"content":"+    sInitialized = PR_TRUE;"},{"type":"normal","normal":true,"ln1":72,"ln2":76,"content":" #ifdef PR_LOGGING"},{"type":"del","del":true,"ln":73,"content":"-    if (!sIdleLog)"},{"type":"del","del":true,"ln":74,"content":"-        sIdleLog = PR_NewLogModule(\"nsIIdleService\");"},{"type":"add","add":true,"ln":77,"content":"+    sIdleLog = PR_NewLogModule(\"nsIIdleService\");"},{"type":"normal","normal":true,"ln1":75,"ln2":78,"content":" #endif"},{"type":"normal","normal":true,"ln1":76,"ln2":79,"content":" "},{"type":"del","del":true,"ln":77,"content":"-    xsslib = PR_LoadLibrary(\"libXss.so.1\");"},{"type":"add","add":true,"ln":80,"content":"+    // This will leak - See comments in ~nsIdleServiceGTK()."},{"type":"add","add":true,"ln":81,"content":"+    PRLibrary* xsslib = PR_LoadLibrary(\"libXss.so.1\");"},{"type":"normal","normal":true,"ln1":78,"ln2":82,"content":"     if (!xsslib) // ouch."},{"type":"normal","normal":true,"ln1":79,"ln2":83,"content":"     {"},{"type":"normal","normal":true,"ln1":80,"ln2":84,"content":" #ifdef PR_LOGGING"}],"oldStart":68,"oldLines":13,"newStart":68,"newLines":17},{"content":"@@ -97,39 +101,47 @@ nsIdleServiceGTK::nsIdleServiceGTK()","changes":[{"type":"normal","normal":true,"ln1":97,"ln2":101,"content":"     if (!_XSSQueryInfo)"},{"type":"normal","normal":true,"ln1":98,"ln2":102,"content":"         PR_LOG(sIdleLog, PR_LOG_WARNING, (\"Failed to get XSSQueryInfo!\\n\"));"},{"type":"normal","normal":true,"ln1":99,"ln2":103,"content":" #endif"},{"type":"del","del":true,"ln":100,"content":"- "},{"type":"normal","normal":true,"ln1":101,"ln2":104,"content":" }"},{"type":"normal","normal":true,"ln1":102,"ln2":105,"content":" "},{"type":"normal","normal":true,"ln1":103,"ln2":106,"content":" nsIdleServiceGTK::~nsIdleServiceGTK()"},{"type":"normal","normal":true,"ln1":104,"ln2":107,"content":" {"},{"type":"normal","normal":true,"ln1":105,"ln2":108,"content":"     if (mXssInfo)"},{"type":"normal","normal":true,"ln1":106,"ln2":109,"content":"         XFree(mXssInfo);"},{"type":"add","add":true,"ln":110,"content":"+"},{"type":"add","add":true,"ln":111,"content":"+// It is not safe to unload libXScrnSaver until each display is closed because"},{"type":"add","add":true,"ln":112,"content":"+// the library registers callbacks through XESetCloseDisplay (Bug 397607)."},{"type":"add","add":true,"ln":113,"content":"+// (Also the library and its functions are scoped for the file not the object.)"},{"type":"add","add":true,"ln":114,"content":"+#if 0"},{"type":"normal","normal":true,"ln1":107,"ln2":115,"content":"     if (xsslib) {"},{"type":"normal","normal":true,"ln1":108,"ln2":116,"content":"         PR_UnloadLibrary(xsslib);"},{"type":"normal","normal":true,"ln1":109,"ln2":117,"content":"         xsslib = nsnull;"},{"type":"normal","normal":true,"ln1":110,"ln2":118,"content":"     }"},{"type":"add","add":true,"ln":119,"content":"+#endif"},{"type":"normal","normal":true,"ln1":111,"ln2":120,"content":" }"},{"type":"normal","normal":true,"ln1":112,"ln2":121,"content":" "},{"type":"normal","normal":true,"ln1":113,"ln2":122,"content":" NS_IMETHODIMP"},{"type":"normal","normal":true,"ln1":114,"ln2":123,"content":" nsIdleServiceGTK::GetIdleTime(PRUint32 *aTimeDiff)"},{"type":"normal","normal":true,"ln1":115,"ln2":124,"content":" {"},{"type":"normal","normal":true,"ln1":116,"ln2":125,"content":"     // Ask xscreensaver about idle time:"},{"type":"del","del":true,"ln":117,"content":"-    int event_base, error_base;"},{"type":"normal","normal":true,"ln1":118,"ln2":126,"content":"     *aTimeDiff = 0;"},{"type":"normal","normal":true,"ln1":119,"ln2":127,"content":" "},{"type":"normal","normal":true,"ln1":120,"ln2":128,"content":"     // We might not have a display (cf. in xpcshell)"},{"type":"normal","normal":true,"ln1":121,"ln2":129,"content":"     Display *dplay = GDK_DISPLAY();"},{"type":"del","del":true,"ln":122,"content":"-    if (!dplay || !_XSSQueryExtension || !_XSSAllocInfo || !_XSSQueryInfo)"},{"type":"del","del":true,"ln":123,"content":"-    {"},{"type":"add","add":true,"ln":130,"content":"+    if (!dplay) {"},{"type":"normal","normal":true,"ln1":124,"ln2":131,"content":" #ifdef PR_LOGGING"},{"type":"del","del":true,"ln":125,"content":"-        if (!dplay)"},{"type":"del","del":true,"ln":126,"content":"-            PR_LOG(sIdleLog, PR_LOG_WARNING, (\"No display found!\\n\"));"},{"type":"del","del":true,"ln":127,"content":"-        else"},{"type":"del","del":true,"ln":128,"content":"-            PR_LOG(sIdleLog, PR_LOG_WARNING, (\"One of the Xss functions is missing!\\n\"));"},{"type":"add","add":true,"ln":132,"content":"+        PR_LOG(sIdleLog, PR_LOG_WARNING, (\"No display found!\\n\"));"},{"type":"normal","normal":true,"ln1":129,"ln2":133,"content":" #endif"},{"type":"normal","normal":true,"ln1":130,"ln2":134,"content":"         return NS_ERROR_FAILURE;"},{"type":"normal","normal":true,"ln1":131,"ln2":135,"content":"     }"},{"type":"normal","normal":true,"ln1":132,"ln2":136,"content":" "},{"type":"add","add":true,"ln":137,"content":"+    if (!sInitialized) {"},{"type":"add","add":true,"ln":138,"content":"+        Initialize();"},{"type":"add","add":true,"ln":139,"content":"+    }"},{"type":"add","add":true,"ln":140,"content":"+    if (!_XSSQueryExtension || !_XSSAllocInfo || !_XSSQueryInfo) {"},{"type":"add","add":true,"ln":141,"content":"+        return NS_ERROR_FAILURE;"},{"type":"add","add":true,"ln":142,"content":"+    }"},{"type":"add","add":true,"ln":143,"content":"+"},{"type":"add","add":true,"ln":144,"content":"+    int event_base, error_base;"},{"type":"normal","normal":true,"ln1":133,"ln2":145,"content":"     if (_XSSQueryExtension(dplay, &event_base, &error_base))"},{"type":"normal","normal":true,"ln1":134,"ln2":146,"content":"     {"},{"type":"normal","normal":true,"ln1":135,"ln2":147,"content":"         if (!mXssInfo)"}],"oldStart":97,"oldLines":39,"newStart":101,"newLines":47}],"deletions":13,"additions":25,"from":"widget/src/gtk2/nsIdleServiceGTK.cpp","to":"widget/src/gtk2/nsIdleServiceGTK.cpp","index":["0d5dd21..7301c5d","100644"]}]}