{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas50aed98\""},"diff":[{"chunks":[{"content":"@@ -5536,15 +5536,26 @@ nsDocument::Destroy()","changes":[{"type":"normal","normal":true,"ln1":5536,"ln2":5536,"content":"   if (mIsGoingAway)"},{"type":"normal","normal":true,"ln1":5537,"ln2":5537,"content":"     return;"},{"type":"normal","normal":true,"ln1":5538,"ln2":5538,"content":" "},{"type":"add","add":true,"ln":5539,"content":"+  PRInt32 count = mChildren.ChildCount();"},{"type":"add","add":true,"ln":5540,"content":"+"},{"type":"normal","normal":true,"ln1":5539,"ln2":5541,"content":"   mIsGoingAway = PR_TRUE;"},{"type":"del","del":true,"ln":5540,"content":"-  PRUint32 i, count = mChildren.ChildCount();"},{"type":"del","del":true,"ln":5541,"content":"-  for (i = 0; i < count; ++i) {"},{"type":"del","del":true,"ln":5542,"content":"-    nsNodeUtils::DestroySubtree(mChildren.ChildAt(i));"},{"type":"add","add":true,"ln":5542,"content":"+  DestroyLinkMap();"},{"type":"add","add":true,"ln":5543,"content":"+  for (PRInt32 indx = 0; indx < count; ++indx) {"},{"type":"add","add":true,"ln":5544,"content":"+    // XXXbz what we _should_ do here is to clear mChildren and null out"},{"type":"add","add":true,"ln":5545,"content":"+    // mRootContent.  If we did this (or at least the latter), we could remove"},{"type":"add","add":true,"ln":5546,"content":"+    // the silly null-checks in nsHTMLDocument::MatchLinks.  Unfortunately,"},{"type":"add","add":true,"ln":5547,"content":"+    // doing that introduces several problems:"},{"type":"add","add":true,"ln":5548,"content":"+    // 1) Focus issues (see bug 341730).  The fix for bug 303260 may fix these."},{"type":"add","add":true,"ln":5549,"content":"+    // 2) Crashes in OnPageHide if it fires after Destroy.  See bug 303260"},{"type":"add","add":true,"ln":5550,"content":"+    //    comments 9 and 10."},{"type":"add","add":true,"ln":5551,"content":"+    // So we're just creating an inconsistent DOM for now and hoping.  :("},{"type":"add","add":true,"ln":5552,"content":"+    mChildren.ChildAt(indx)->UnbindFromTree();"},{"type":"normal","normal":true,"ln1":5543,"ln2":5553,"content":"   }"},{"type":"del","del":true,"ln":5544,"content":"-"},{"type":"normal","normal":true,"ln1":5545,"ln2":5554,"content":"   mLayoutHistoryState = nsnull;"},{"type":"normal","normal":true,"ln1":5546,"ln2":5555,"content":" "},{"type":"normal","normal":true,"ln1":5547,"ln2":5556,"content":"   nsContentList::OnDocumentDestroy(this);"},{"type":"add","add":true,"ln":5557,"content":"+  delete mContentWrapperHash;"},{"type":"add","add":true,"ln":5558,"content":"+  mContentWrapperHash = nsnull;"},{"type":"normal","normal":true,"ln1":5548,"ln2":5559,"content":" }"},{"type":"normal","normal":true,"ln1":5549,"ln2":5560,"content":" "},{"type":"normal","normal":true,"ln1":5550,"ln2":5561,"content":" already_AddRefed<nsILayoutHistoryState>"}],"oldStart":5536,"oldLines":15,"newStart":5536,"newLines":26}],"deletions":4,"additions":15,"from":"content/base/src/nsDocument.cpp","to":"content/base/src/nsDocument.cpp","index":["482cb60..1e6b1dd","100644"]},{"chunks":[{"content":"@@ -3348,11 +3348,8 @@ NS_IMPL_CYCLE_COLLECTION_UNLINK_BEGIN(nsGenericElement)","changes":[{"type":"normal","normal":true,"ln1":3348,"ln2":3348,"content":"   // Unlink any DOM slots of interest."},{"type":"normal","normal":true,"ln1":3349,"ln2":3349,"content":"   {"},{"type":"normal","normal":true,"ln1":3350,"ln2":3350,"content":"     nsDOMSlots *slots = tmp->GetExistingDOMSlots();"},{"type":"del","del":true,"ln":3351,"content":"-    if (slots) {"},{"type":"add","add":true,"ln":3351,"content":"+    if (slots)"},{"type":"normal","normal":true,"ln1":3352,"ln2":3352,"content":"       slots->mAttributeMap = nsnull;"},{"type":"del","del":true,"ln":3353,"content":"-      if (tmp->IsNodeOfType(nsINode::eXUL))"},{"type":"del","del":true,"ln":3354,"content":"-        NS_IF_RELEASE(slots->mControllers);"},{"type":"del","del":true,"ln":3355,"content":"-    }"},{"type":"normal","normal":true,"ln1":3356,"ln2":3353,"content":"   }"},{"type":"normal","normal":true,"ln1":3357,"ln2":3354,"content":" NS_IMPL_CYCLE_COLLECTION_UNLINK_END"},{"type":"normal","normal":true,"ln1":3358,"ln2":3355,"content":" "}],"oldStart":3348,"oldLines":11,"newStart":3348,"newLines":8}],"deletions":4,"additions":1,"from":"content/base/src/nsGenericElement.cpp","to":"content/base/src/nsGenericElement.cpp","index":["136fcd7..bc8d699","100644"]},{"chunks":[{"content":"@@ -687,27 +687,3 @@ nsNodeUtils::UnlinkUserData(nsINode *aNode)","changes":[{"type":"normal","normal":true,"ln1":687,"ln2":687,"content":"                                                       DOM_USER_DATA_HANDLER);"},{"type":"normal","normal":true,"ln1":688,"ln2":688,"content":"   }"},{"type":"normal","normal":true,"ln1":689,"ln2":689,"content":" }"},{"type":"del","del":true,"ln":690,"content":"-"},{"type":"del","del":true,"ln":691,"content":"-/* static */"},{"type":"del","del":true,"ln":692,"content":"-void"},{"type":"del","del":true,"ln":693,"content":"-nsNodeUtils::DestroySubtree(nsIContent* aRoot)"},{"type":"del","del":true,"ln":694,"content":"-{"},{"type":"del","del":true,"ln":695,"content":"-  nsXULElement* xul = nsXULElement::FromContent(aRoot);"},{"type":"del","del":true,"ln":696,"content":"-  if (xul) {"},{"type":"del","del":true,"ln":697,"content":"-    nsGenericElement::nsDOMSlots* slots = xul->GetExistingDOMSlots();"},{"type":"del","del":true,"ln":698,"content":"-    if (slots) {"},{"type":"del","del":true,"ln":699,"content":"-      NS_IF_RELEASE(slots->mControllers);"},{"type":"del","del":true,"ln":700,"content":"-    }"},{"type":"del","del":true,"ln":701,"content":"-  }"},{"type":"del","del":true,"ln":702,"content":"-"},{"type":"del","del":true,"ln":703,"content":"-  nsIDocument *document = aRoot->GetOwnerDoc();"},{"type":"del","del":true,"ln":704,"content":"-  if (document) {"},{"type":"del","del":true,"ln":705,"content":"-    document->BindingManager()->ChangeDocumentFor(aRoot, document, nsnull);"},{"type":"del","del":true,"ln":706,"content":"-    document->ClearBoxObjectFor(aRoot);"},{"type":"del","del":true,"ln":707,"content":"-  }"},{"type":"del","del":true,"ln":708,"content":"-"},{"type":"del","del":true,"ln":709,"content":"-  PRUint32 i, count = aRoot->GetChildCount();"},{"type":"del","del":true,"ln":710,"content":"-  for (i = 0; i < count; ++i) {"},{"type":"del","del":true,"ln":711,"content":"-    DestroySubtree(aRoot->GetChildAt(i));"},{"type":"del","del":true,"ln":712,"content":"-  }"},{"type":"del","del":true,"ln":713,"content":"-}"}],"oldStart":687,"oldLines":27,"newStart":687,"newLines":3}],"deletions":24,"additions":0,"from":"content/base/src/nsNodeUtils.cpp","to":"content/base/src/nsNodeUtils.cpp","index":["32993d6..ec11d40","100755"]},{"chunks":[{"content":"@@ -269,14 +269,6 @@ public:","changes":[{"type":"normal","normal":true,"ln1":269,"ln2":269,"content":"    */"},{"type":"normal","normal":true,"ln1":270,"ln2":270,"content":"   static void UnlinkUserData(nsINode *aNode);"},{"type":"normal","normal":true,"ln1":271,"ln2":271,"content":" "},{"type":"del","del":true,"ln":272,"content":"-  /**"},{"type":"del","del":true,"ln":273,"content":"-   * Remove neccesary components of all nodes in a subtree to avoid leaking."},{"type":"del","del":true,"ln":274,"content":"-   * So far this removes XBL bindings and XUL controllers."},{"type":"del","del":true,"ln":275,"content":"-   *"},{"type":"del","del":true,"ln":276,"content":"-   * @param aRoot the node that is the root of the subtree to clear."},{"type":"del","del":true,"ln":277,"content":"-   */"},{"type":"del","del":true,"ln":278,"content":"-  static void DestroySubtree(nsIContent* aRoot);"},{"type":"del","del":true,"ln":279,"content":"-"},{"type":"normal","normal":true,"ln1":280,"ln2":272,"content":" private:"},{"type":"normal","normal":true,"ln1":281,"ln2":273,"content":"   friend PLDHashOperator PR_CALLBACK"},{"type":"normal","normal":true,"ln1":282,"ln2":274,"content":"     AdoptFunc(nsAttrHashKey::KeyType aKey, nsIDOMNode *aData, void* aUserArg);"}],"oldStart":269,"oldLines":14,"newStart":269,"newLines":6}],"deletions":8,"additions":0,"from":"content/base/src/nsNodeUtils.h","to":"content/base/src/nsNodeUtils.h","index":["8193d53..4dac9f0","100755"]},{"chunks":[{"content":"@@ -323,7 +323,7 @@ protected:","changes":[{"type":"normal","normal":true,"ln1":323,"ln2":323,"content":"   /** The request currently being submitted */"},{"type":"normal","normal":true,"ln1":324,"ln2":324,"content":"   nsCOMPtr<nsIRequest> mSubmittingRequest;"},{"type":"normal","normal":true,"ln1":325,"ln2":325,"content":"   /** The web progress object we are currently listening to */"},{"type":"del","del":true,"ln":326,"content":"-  nsWeakPtr mWebProgress;"},{"type":"add","add":true,"ln":326,"content":"+  nsCOMPtr<nsIWebProgress> mWebProgress;"},{"type":"normal","normal":true,"ln1":327,"ln2":327,"content":" "},{"type":"normal","normal":true,"ln1":328,"ln2":328,"content":"   /** The default submit element -- WEAK */"},{"type":"normal","normal":true,"ln1":329,"ln2":329,"content":"   nsIFormControl* mDefaultSubmitElement;"}],"oldStart":323,"oldLines":7,"newStart":323,"newLines":7},{"content":"@@ -1025,12 +1025,10 @@ nsHTMLFormElement::SubmitSubmission(nsIFormSubmission* aFormSubmission)","changes":[{"type":"normal","normal":true,"ln1":1025,"ln2":1025,"content":"     PRBool pending = PR_FALSE;"},{"type":"normal","normal":true,"ln1":1026,"ln2":1026,"content":"     mSubmittingRequest->IsPending(&pending);"},{"type":"normal","normal":true,"ln1":1027,"ln2":1027,"content":"     if (pending && !schemeIsJavaScript) {"},{"type":"del","del":true,"ln":1028,"content":"-      nsCOMPtr<nsIWebProgress> webProgress = do_GetInterface(docShell);"},{"type":"del","del":true,"ln":1029,"content":"-      NS_ASSERTION(webProgress, \"nsIDocShell not converted to nsIWebProgress!\");"},{"type":"del","del":true,"ln":1030,"content":"-      rv = webProgress->AddProgressListener(this, nsIWebProgress::NOTIFY_STATE_ALL);"},{"type":"add","add":true,"ln":1028,"content":"+      mWebProgress = do_GetInterface(docShell);"},{"type":"add","add":true,"ln":1029,"content":"+      NS_ASSERTION(mWebProgress, \"nsIDocShell not converted to nsIWebProgress!\");"},{"type":"add","add":true,"ln":1030,"content":"+      rv = mWebProgress->AddProgressListener(this, nsIWebProgress::NOTIFY_STATE_ALL);"},{"type":"normal","normal":true,"ln1":1031,"ln2":1031,"content":"       NS_ENSURE_SUBMIT_SUCCESS(rv);"},{"type":"del","del":true,"ln":1032,"content":"-      mWebProgress = do_GetWeakReference(webProgress);"},{"type":"del","del":true,"ln":1033,"content":"-      NS_ASSERTION(mWebProgress, \"can't hold weak ref to webprogress!\");"},{"type":"normal","normal":true,"ln1":1034,"ln2":1032,"content":"     } else {"},{"type":"normal","normal":true,"ln1":1035,"ln2":1033,"content":"       ForgetCurrentSubmission();"},{"type":"normal","normal":true,"ln1":1036,"ln2":1034,"content":"     }"}],"oldStart":1025,"oldLines":12,"newStart":1025,"newLines":10},{"content":"@@ -1647,11 +1645,10 @@ nsHTMLFormElement::ForgetCurrentSubmission()","changes":[{"type":"normal","normal":true,"ln1":1647,"ln2":1645,"content":"   mNotifiedObservers = PR_FALSE;"},{"type":"normal","normal":true,"ln1":1648,"ln2":1646,"content":"   mIsSubmitting = PR_FALSE;"},{"type":"normal","normal":true,"ln1":1649,"ln2":1647,"content":"   mSubmittingRequest = nsnull;"},{"type":"del","del":true,"ln":1650,"content":"-  nsCOMPtr<nsIWebProgress> webProgress = do_QueryReferent(mWebProgress);"},{"type":"del","del":true,"ln":1651,"content":"-  if (webProgress) {"},{"type":"del","del":true,"ln":1652,"content":"-    webProgress->RemoveProgressListener(this);"},{"type":"add","add":true,"ln":1648,"content":"+  if (mWebProgress) {"},{"type":"add","add":true,"ln":1649,"content":"+    mWebProgress->RemoveProgressListener(this);"},{"type":"add","add":true,"ln":1650,"content":"+    mWebProgress = nsnull;"},{"type":"normal","normal":true,"ln1":1653,"ln2":1651,"content":"   }"},{"type":"del","del":true,"ln":1654,"content":"-  mWebProgress = nsnull;"},{"type":"normal","normal":true,"ln1":1655,"ln2":1652,"content":" }"},{"type":"normal","normal":true,"ln1":1656,"ln2":1653,"content":" "},{"type":"normal","normal":true,"ln1":1657,"ln2":1654,"content":" // nsIWebProgressListener"}],"oldStart":1647,"oldLines":11,"newStart":1645,"newLines":10}],"deletions":10,"additions":7,"from":"content/html/content/src/nsHTMLFormElement.cpp","to":"content/html/content/src/nsHTMLFormElement.cpp","index":["bf94cda..513ffad","100644"]},{"chunks":[{"content":"@@ -104,15 +104,8 @@ nsXTFElementWrapper::Init()","changes":[{"type":"normal","normal":true,"ln1":104,"ln2":104,"content":" //----------------------------------------------------------------------"},{"type":"normal","normal":true,"ln1":105,"ln2":105,"content":" // nsISupports implementation"},{"type":"normal","normal":true,"ln1":106,"ln2":106,"content":" "},{"type":"del","del":true,"ln":107,"content":"-NS_IMPL_ADDREF_INHERITED(nsXTFElementWrapper, nsXTFElementWrapperBase)"},{"type":"del","del":true,"ln":108,"content":"-NS_IMPL_RELEASE_INHERITED(nsXTFElementWrapper, nsXTFElementWrapperBase)"},{"type":"del","del":true,"ln":109,"content":"-"},{"type":"del","del":true,"ln":110,"content":"-NS_IMPL_CYCLE_COLLECTION_CLASS(nsXTFElementWrapper)"},{"type":"del","del":true,"ln":111,"content":"-NS_IMPL_CYCLE_COLLECTION_TRAVERSE_BEGIN_INHERITED(nsXTFElementWrapper,"},{"type":"del","del":true,"ln":112,"content":"-                                                  nsXTFElementWrapperBase)"},{"type":"del","del":true,"ln":113,"content":"-  NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR(mXTFElement)"},{"type":"del","del":true,"ln":114,"content":"-  NS_IMPL_CYCLE_COLLECTION_TRAVERSE_NSCOMPTR(mAttributeHandler)"},{"type":"del","del":true,"ln":115,"content":"-NS_IMPL_CYCLE_COLLECTION_TRAVERSE_END"},{"type":"add","add":true,"ln":107,"content":"+NS_IMPL_ADDREF_INHERITED(nsXTFElementWrapper,nsXTFElementWrapperBase)"},{"type":"add","add":true,"ln":108,"content":"+NS_IMPL_RELEASE_INHERITED(nsXTFElementWrapper,nsXTFElementWrapperBase)"},{"type":"normal","normal":true,"ln1":116,"ln2":109,"content":" "},{"type":"normal","normal":true,"ln1":117,"ln2":110,"content":" NS_IMETHODIMP"},{"type":"normal","normal":true,"ln1":118,"ln2":111,"content":" nsXTFElementWrapper::QueryInterface(REFNSIID aIID, void** aInstancePtr)"}],"oldStart":104,"oldLines":15,"newStart":104,"newLines":8}],"deletions":9,"additions":2,"from":"content/xtf/src/nsXTFElementWrapper.cpp","to":"content/xtf/src/nsXTFElementWrapper.cpp","index":["a73f124..2d0eb36","100644"]},{"chunks":[{"content":"@@ -65,8 +65,6 @@ public:","changes":[{"type":"normal","normal":true,"ln1":65,"ln2":65,"content":" "},{"type":"normal","normal":true,"ln1":66,"ln2":66,"content":"   // nsISupports interface"},{"type":"normal","normal":true,"ln1":67,"ln2":67,"content":"   NS_DECL_ISUPPORTS_INHERITED"},{"type":"del","del":true,"ln":68,"content":"-  NS_DECL_CYCLE_COLLECTION_CLASS_INHERITED_NO_UNLINK(nsXTFElementWrapper,"},{"type":"del","del":true,"ln":69,"content":"-                                                     nsXTFElementWrapperBase)"},{"type":"normal","normal":true,"ln1":70,"ln2":68,"content":" "},{"type":"normal","normal":true,"ln1":71,"ln2":69,"content":"   // nsIXTFElementWrapper"},{"type":"normal","normal":true,"ln1":72,"ln2":70,"content":"   NS_DECL_NSIXTFELEMENTWRAPPER"}],"oldStart":65,"oldLines":8,"newStart":65,"newLines":6}],"deletions":2,"additions":0,"from":"content/xtf/src/nsXTFElementWrapper.h","to":"content/xtf/src/nsXTFElementWrapper.h","index":["556d633..b85fae77","100644"]}]}