diff --git a/netwerk/protocol/http/nsHttpHandler.cpp b/netwerk/protocol/http/nsHttpHandler.cpp
--- a/netwerk/protocol/http/nsHttpHandler.cpp
+++ b/netwerk/protocol/http/nsHttpHandler.cpp
@@ -325,16 +325,17 @@ nsHttpHandler::Init()
     
     mObserverService = mozilla::services::GetObserverService();
     if (mObserverService) {
         mObserverService->AddObserver(this, "profile-change-net-teardown", PR_TRUE);
         mObserverService->AddObserver(this, "profile-change-net-restore", PR_TRUE);
         mObserverService->AddObserver(this, NS_XPCOM_SHUTDOWN_OBSERVER_ID, PR_TRUE);
         mObserverService->AddObserver(this, "net:clear-active-logins", PR_TRUE);
         mObserverService->AddObserver(this, NS_PRIVATE_BROWSING_SWITCH_TOPIC, PR_TRUE);
+        mObserverService->AddObserver(this, "net:prune-dead-connections", PR_TRUE);
     }
  
     return NS_OK;
 }
 
 nsresult
 nsHttpHandler::InitConnectionMgr()
 {
@@ -1639,16 +1640,21 @@ nsHttpHandler::Observe(nsISupports *subj
         mAuthCache.ClearAll();
     }
     else if (strcmp(topic, NS_PRIVATE_BROWSING_SWITCH_TOPIC) == 0) {
         if (NS_LITERAL_STRING(NS_PRIVATE_BROWSING_ENTER).Equals(data))
             mInPrivateBrowsingMode = PR_TRUE;
         else if (NS_LITERAL_STRING(NS_PRIVATE_BROWSING_LEAVE).Equals(data))
             mInPrivateBrowsingMode = PR_FALSE;
     }
+    else if (strcmp(topic, "net:prune-dead-connections") == 0) {
+        if (mConnMgr) {
+            mConnMgr->PruneDeadConnections();
+        }
+    }
   
     return NS_OK;
 }
 
 //-----------------------------------------------------------------------------
 // nsHttpsHandler implementation
 //-----------------------------------------------------------------------------
 
diff --git a/security/manager/ssl/src/nsSDR.cpp b/security/manager/ssl/src/nsSDR.cpp
--- a/security/manager/ssl/src/nsSDR.cpp
+++ b/security/manager/ssl/src/nsSDR.cpp
@@ -356,17 +356,26 @@ LogoutAndTeardown()
     return rv;
 
   {
     nsNSSShutDownPreventionLock locker;
     PK11_LogoutAll();
     SSL_ClearSessionCache();
   }
 
-  return nssComponent->LogoutAuthenticatedPK11();
+  rv = nssComponent->LogoutAuthenticatedPK11();
+
+  // After we just logged out, we need to prune dead connections to make
+  // sure that all connections that should be stopped, are stopped. See
+  // bug 517584.
+  nsCOMPtr<nsIObserverService> os = mozilla::services::GetObserverService();
+  if (os)
+    os->NotifyObservers(nsnull, "net:prune-dead-connections", nsnull);
+
+  return rv;
 }
 
 /* void setWindow(in nsISupports w); */
 NS_IMETHODIMP nsSecretDecoderRing::
 SetWindow(nsISupports *w)
 {
   return NS_OK;
 }
