# HG changeset patch
# User Peter Van der Beken <peterv@propagandism.org>
# Date 1332891096 25200
# Node ID be2a574f0b87395b9f4e3140c96418cc5216a5a1
# Parent  c50d5e4f03c8103367cd0355c16038f1f8f82e30
Stop using enablePrivilege in test_bug480509.html

diff --git a/security/manager/ssl/tests/mochitest/bugs/test_bug480509.html b/security/manager/ssl/tests/mochitest/bugs/test_bug480509.html
--- a/security/manager/ssl/tests/mochitest/bugs/test_bug480509.html
+++ b/security/manager/ssl/tests/mochitest/bugs/test_bug480509.html
@@ -61,18 +61,17 @@ function onFrameLoad()
 
 function onWindowLoad()
 {
   var req = new XMLHttpRequest();
   var certListener = new badCertListener();
   try
   {
     req.open("GET", "https://www.bank1.com/", false);
-    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
-    req.channel.notificationCallbacks = certListener;
+    SpecialPowers.setPrivilegedProps(req, "channel.notificationCallbacks", certListener);
     req.send(null);
   }
   catch(ex)
   {
     // ignore
   }
   
   ok(certListener.badCertCaught, "We Caught the invalid certificate");
diff --git a/testing/mochitest/tests/SimpleTest/specialpowersAPI.js b/testing/mochitest/tests/SimpleTest/specialpowersAPI.js
--- a/testing/mochitest/tests/SimpleTest/specialpowersAPI.js
+++ b/testing/mochitest/tests/SimpleTest/specialpowersAPI.js
@@ -923,16 +923,33 @@ SpecialPowersAPI.prototype = {
       if (obj[p]) {
         obj = obj[p];
       } else {
         return null;
       }
     }
     return obj;
   },
+  setPrivilegedProps: function(obj, props, val) {
+    var parts = props.split('.');
+
+    if (parts.length == 0) {
+      return;
+    }
+
+    for (var i = 0; i < parts.length - 1; i++) {
+      var p = parts[i];
+      if (obj[p]) {
+        obj = obj[p];
+      } else {
+        return;
+      }
+    }
+    obj[parts[i]] = val;
+  },
 
   get focusManager() {
     if (this._fm != null)
       return this._fm;
 
     this._fm = Components.classes["@mozilla.org/focus-manager;1"].
                         getService(Components.interfaces.nsIFocusManager);
 
