{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas10c13b9\""},"diff":[{"chunks":[{"content":"@@ -1558,7 +1558,7 @@ nsNavHistory::EvaluateQueryForNode(const nsCOMArray<nsNavHistoryQuery>& aQueries","changes":[{"type":"normal","normal":true,"ln1":1558,"ln2":1558,"content":"       nsCOMArray<nsNavHistoryQuery> queries;"},{"type":"normal","normal":true,"ln1":1559,"ln2":1559,"content":"       queries.AppendObject(query);"},{"type":"normal","normal":true,"ln1":1560,"ln2":1560,"content":"       nsCOMArray<nsNavHistoryResultNode> filteredSet;"},{"type":"del","del":true,"ln":1561,"content":"-      nsresult rv = FilterResultSet(nsnull, inputSet, &filteredSet, queries, aOptions);"},{"type":"add","add":true,"ln":1561,"content":"+      nsresult rv = FilterResultSet(nsnull, inputSet, &filteredSet, queries);"},{"type":"normal","normal":true,"ln1":1562,"ln2":1562,"content":"       if (NS_FAILED(rv))"},{"type":"normal","normal":true,"ln1":1563,"ln2":1563,"content":"         continue;"},{"type":"normal","normal":true,"ln1":1564,"ln2":1564,"content":"       if (! filteredSet.Count())"}],"oldStart":1558,"oldLines":7,"newStart":1558,"newLines":7},{"content":"@@ -2144,32 +2144,6 @@ PRBool IsHistoryMenuQuery(const nsCOMArray<nsNavHistoryQuery>& aQueries, nsNavHi","changes":[{"type":"normal","normal":true,"ln1":2144,"ln2":2144,"content":"   return PR_TRUE;"},{"type":"normal","normal":true,"ln1":2145,"ln2":2145,"content":" }"},{"type":"normal","normal":true,"ln1":2146,"ln2":2146,"content":" "},{"type":"del","del":true,"ln":2147,"content":"-static"},{"type":"del","del":true,"ln":2148,"content":"-PRBool NeedToFilterResultSet(const nsCOMArray<nsNavHistoryQuery>& aQueries, "},{"type":"del","del":true,"ln":2149,"content":"-                             nsNavHistoryQueryOptions *aOptions)"},{"type":"del","del":true,"ln":2150,"content":"-{"},{"type":"del","del":true,"ln":2151,"content":"-  // optimize the case where we just want a list with no grouping: this"},{"type":"del","del":true,"ln":2152,"content":"-  // directly fills in the results and we avoid a copy of the whole list"},{"type":"del","del":true,"ln":2153,"content":"-  PRUint32 groupCount;"},{"type":"del","del":true,"ln":2154,"content":"-  const PRUint16 *groupings = aOptions->GroupingMode(&groupCount);"},{"type":"del","del":true,"ln":2155,"content":"-"},{"type":"del","del":true,"ln":2156,"content":"-  if (groupCount != 0 || aOptions->ExcludeQueries())"},{"type":"del","del":true,"ln":2157,"content":"-    return PR_TRUE;"},{"type":"del","del":true,"ln":2158,"content":"-"},{"type":"del","del":true,"ln":2159,"content":"-  PRInt32 i;"},{"type":"del","del":true,"ln":2160,"content":"-  for (i = 0; i < aQueries.Count(); i ++) {"},{"type":"del","del":true,"ln":2161,"content":"-    if (aQueries[i]->Folders().Length() != 0) {"},{"type":"del","del":true,"ln":2162,"content":"-      return PR_TRUE;"},{"type":"del","del":true,"ln":2163,"content":"-    } else {"},{"type":"del","del":true,"ln":2164,"content":"-      PRBool hasSearchTerms;"},{"type":"del","del":true,"ln":2165,"content":"-      nsresult rv = aQueries[i]->GetHasSearchTerms(&hasSearchTerms);"},{"type":"del","del":true,"ln":2166,"content":"-      if (NS_FAILED(rv) || hasSearchTerms)"},{"type":"del","del":true,"ln":2167,"content":"-        return PR_TRUE;"},{"type":"del","del":true,"ln":2168,"content":"-    }"},{"type":"del","del":true,"ln":2169,"content":"-  }"},{"type":"del","del":true,"ln":2170,"content":"-  return PR_FALSE;"},{"type":"del","del":true,"ln":2171,"content":"-}"},{"type":"del","del":true,"ln":2172,"content":"-"},{"type":"normal","normal":true,"ln1":2173,"ln2":2147,"content":" nsresult"},{"type":"normal","normal":true,"ln1":2174,"ln2":2148,"content":" nsNavHistory::ConstructQueryString(const nsCOMArray<nsNavHistoryQuery>& aQueries,"},{"type":"normal","normal":true,"ln1":2175,"ln2":2149,"content":"                                    nsNavHistoryQueryOptions *aOptions, "}],"oldStart":2144,"oldLines":32,"newStart":2144,"newLines":6},{"content":"@@ -2181,11 +2155,6 @@ nsNavHistory::ConstructQueryString(const nsCOMArray<nsNavHistoryQuery>& aQueries","changes":[{"type":"normal","normal":true,"ln1":2181,"ln2":2155,"content":"     return NS_ERROR_INVALID_ARG;"},{"type":"normal","normal":true,"ln1":2182,"ln2":2156,"content":"   }"},{"type":"normal","normal":true,"ln1":2183,"ln2":2157,"content":" "},{"type":"del","del":true,"ln":2184,"content":"-  // determine whether we can push maxResults constraints"},{"type":"del","del":true,"ln":2185,"content":"-  // into the queries as LIMIT, or if we need to do result count clamping later"},{"type":"del","del":true,"ln":2186,"content":"-  // using FilterResultSet()"},{"type":"del","del":true,"ln":2187,"content":"-  PRBool canLimitInSQL = !NeedToFilterResultSet(aQueries, aOptions);"},{"type":"del","del":true,"ln":2188,"content":"-"},{"type":"normal","normal":true,"ln1":2189,"ln2":2158,"content":"   // for the very special query for the history menu "},{"type":"normal","normal":true,"ln1":2190,"ln2":2159,"content":"   // we generate a super-optimized SQL query"},{"type":"normal","normal":true,"ln1":2191,"ln2":2160,"content":"   if (IsHistoryMenuQuery(aQueries, aOptions)) {"}],"oldStart":2181,"oldLines":11,"newStart":2155,"newLines":6},{"content":"@@ -2200,11 +2169,8 @@ nsNavHistory::ConstructQueryString(const nsCOMArray<nsNavHistoryQuery>& aQueries","changes":[{"type":"normal","normal":true,"ln1":2200,"ln2":2169,"content":"       \"(h.id IN (SELECT DISTINCT h.id FROM moz_historyvisits, \""},{"type":"normal","normal":true,"ln1":2201,"ln2":2170,"content":"       \" moz_places h WHERE place_id = \""},{"type":"normal","normal":true,"ln1":2202,"ln2":2171,"content":"       \" h.id AND hidden <> 1 AND visit_type <> 4 AND visit_type <> 0 \""},{"type":"del","del":true,"ln":2203,"content":"-      \" ORDER BY visit_date DESC\");"},{"type":"del","del":true,"ln":2204,"content":"-    if (canLimitInSQL) {"},{"type":"del","del":true,"ln":2205,"content":"-      queryString += NS_LITERAL_CSTRING(\" LIMIT \");"},{"type":"del","del":true,"ln":2206,"content":"-      queryString.AppendInt(aOptions->MaxResults());"},{"type":"del","del":true,"ln":2207,"content":"-    }"},{"type":"add","add":true,"ln":2172,"content":"+      \" ORDER BY visit_date DESC LIMIT \");"},{"type":"add","add":true,"ln":2173,"content":"+    queryString.AppendInt(aOptions->MaxResults());"},{"type":"normal","normal":true,"ln1":2208,"ln2":2174,"content":"     queryString += NS_LITERAL_CSTRING(\")) GROUP BY h.id ORDER BY 6 DESC\"); // v.visit_date"},{"type":"normal","normal":true,"ln1":2209,"ln2":2175,"content":"     return NS_OK;"},{"type":"normal","normal":true,"ln1":2210,"ln2":2176,"content":"   }"}],"oldStart":2200,"oldLines":11,"newStart":2169,"newLines":8},{"content":"@@ -2272,7 +2238,8 @@ nsNavHistory::ConstructQueryString(const nsCOMArray<nsNavHistoryQuery>& aQueries","changes":[{"type":"normal","normal":true,"ln1":2272,"ln2":2238,"content":"       \"LEFT OUTER JOIN moz_historyvisits v ON b.fk = v.place_id \""},{"type":"normal","normal":true,"ln1":2273,"ln2":2239,"content":"       \"LEFT OUTER JOIN moz_favicons f ON h.favicon_id = f.id \");"},{"type":"normal","normal":true,"ln1":2274,"ln2":2240,"content":"       groupBy = NS_LITERAL_CSTRING(\" GROUP BY b.id\");"},{"type":"del","del":true,"ln":2275,"content":"-    } else {"},{"type":"add","add":true,"ln":2241,"content":"+    }"},{"type":"add","add":true,"ln":2242,"content":"+    else {"},{"type":"normal","normal":true,"ln1":2276,"ln2":2243,"content":"       // XXX: implement support for nsINavHistoryQueryOptions::QUERY_TYPE_UNIFIED "},{"type":"normal","normal":true,"ln1":2277,"ln2":2244,"content":"       return NS_ERROR_NOT_IMPLEMENTED;"},{"type":"normal","normal":true,"ln1":2278,"ln2":2245,"content":"     }"}],"oldStart":2272,"oldLines":7,"newStart":2238,"newLines":8},{"content":"@@ -2367,8 +2334,8 @@ nsNavHistory::ConstructQueryString(const nsCOMArray<nsNavHistoryQuery>& aQueries","changes":[{"type":"normal","normal":true,"ln1":2367,"ln2":2334,"content":"       NS_NOTREACHED(\"Invalid sorting mode\");"},{"type":"normal","normal":true,"ln1":2368,"ln2":2335,"content":"   }"},{"type":"normal","normal":true,"ln1":2369,"ln2":2336,"content":" "},{"type":"del","del":true,"ln":2370,"content":"-  // limit clause if there are 'maxResults' and can use limit in our SQL"},{"type":"del","del":true,"ln":2371,"content":"-  if (canLimitInSQL && aOptions->MaxResults() > 0) {"},{"type":"add","add":true,"ln":2337,"content":"+  // limit clause if there are 'maxResults'"},{"type":"add","add":true,"ln":2338,"content":"+  if (aOptions->MaxResults() > 0) {"},{"type":"normal","normal":true,"ln1":2372,"ln2":2339,"content":"     queryString += NS_LITERAL_CSTRING(\" LIMIT \");"},{"type":"normal","normal":true,"ln1":2373,"ln2":2340,"content":"     queryString.AppendInt(aOptions->MaxResults());"},{"type":"normal","normal":true,"ln1":2374,"ln2":2341,"content":"     queryString.AppendLiteral(\" \");"}],"oldStart":2367,"oldLines":8,"newStart":2334,"newLines":8},{"content":"@@ -2423,30 +2390,55 @@ nsNavHistory::GetQueryResults(nsNavHistoryQueryResultNode *aResultNode,","changes":[{"type":"normal","normal":true,"ln1":2423,"ln2":2390,"content":"   // bind parameters"},{"type":"normal","normal":true,"ln1":2424,"ln2":2391,"content":"   PRInt32 numParameters = 0;"},{"type":"normal","normal":true,"ln1":2425,"ln2":2392,"content":" "},{"type":"del","del":true,"ln":2426,"content":"-  // optimize the case where we just use the results as is"},{"type":"del","del":true,"ln":2427,"content":"-  // and we don't need to do any post-query filtering"},{"type":"del","del":true,"ln":2428,"content":"-  if (NeedToFilterResultSet(aQueries, aOptions)) {"},{"type":"add","add":true,"ln":2393,"content":"+  // optimize the case where we just want a list with no grouping: this"},{"type":"add","add":true,"ln":2394,"content":"+  // directly fills in the results and we avoid a copy of the whole list"},{"type":"add","add":true,"ln":2395,"content":"+  PRBool resultAsList = PR_TRUE;"},{"type":"add","add":true,"ln":2396,"content":"+  PRUint32 groupCount;"},{"type":"add","add":true,"ln":2397,"content":"+  const PRUint16 *groupings = aOptions->GroupingMode(&groupCount);"},{"type":"add","add":true,"ln":2398,"content":"+"},{"type":"add","add":true,"ln":2399,"content":"+  if (groupCount != 0 || aOptions->ExcludeQueries()) {"},{"type":"add","add":true,"ln":2400,"content":"+    resultAsList = PR_FALSE;"},{"type":"add","add":true,"ln":2401,"content":"+  }"},{"type":"add","add":true,"ln":2402,"content":"+"},{"type":"add","add":true,"ln":2403,"content":"+  PRInt32 i;"},{"type":"add","add":true,"ln":2404,"content":"+  for (i = 0; i < aQueries.Count(); i ++) {"},{"type":"add","add":true,"ln":2405,"content":"+    PRInt32 clauseParameters = 0;"},{"type":"add","add":true,"ln":2406,"content":"+    rv = BindQueryClauseParameters(statement, numParameters,"},{"type":"add","add":true,"ln":2407,"content":"+                                   aQueries[i], aOptions, &clauseParameters);"},{"type":"add","add":true,"ln":2408,"content":"+    NS_ENSURE_SUCCESS(rv, rv);"},{"type":"add","add":true,"ln":2409,"content":"+    numParameters += clauseParameters;"},{"type":"add","add":true,"ln":2410,"content":"+    if (resultAsList) {"},{"type":"add","add":true,"ln":2411,"content":"+      if (aQueries[i]->Folders().Length() != 0) {"},{"type":"add","add":true,"ln":2412,"content":"+        resultAsList = PR_FALSE;"},{"type":"add","add":true,"ln":2413,"content":"+      } else {"},{"type":"add","add":true,"ln":2414,"content":"+        PRBool hasSearchTerms;"},{"type":"add","add":true,"ln":2415,"content":"+        rv = aQueries[i]->GetHasSearchTerms(&hasSearchTerms);"},{"type":"add","add":true,"ln":2416,"content":"+        if (hasSearchTerms)"},{"type":"add","add":true,"ln":2417,"content":"+          resultAsList = PR_FALSE;"},{"type":"add","add":true,"ln":2418,"content":"+        NS_ENSURE_SUCCESS(rv, rv);"},{"type":"add","add":true,"ln":2419,"content":"+      }"},{"type":"add","add":true,"ln":2420,"content":"+    }"},{"type":"add","add":true,"ln":2421,"content":"+  }"},{"type":"add","add":true,"ln":2422,"content":"+"},{"type":"add","add":true,"ln":2423,"content":"+  if (resultAsList) {"},{"type":"add","add":true,"ln":2424,"content":"+    rv = ResultsAsList(statement, aOptions, aResults);"},{"type":"add","add":true,"ln":2425,"content":"+    NS_ENSURE_SUCCESS(rv, rv);"},{"type":"add","add":true,"ln":2426,"content":"+  } else {"},{"type":"normal","normal":true,"ln1":2429,"ln2":2427,"content":"     // generate the toplevel results"},{"type":"normal","normal":true,"ln1":2430,"ln2":2428,"content":"     nsCOMArray<nsNavHistoryResultNode> toplevel;"},{"type":"normal","normal":true,"ln1":2431,"ln2":2429,"content":"     rv = ResultsAsList(statement, aOptions, &toplevel);"},{"type":"normal","normal":true,"ln1":2432,"ln2":2430,"content":"     NS_ENSURE_SUCCESS(rv, rv);"},{"type":"normal","normal":true,"ln1":2433,"ln2":2431,"content":" "},{"type":"del","del":true,"ln":2434,"content":"-    PRUint32 groupCount;"},{"type":"del","del":true,"ln":2435,"content":"-    const PRUint16 *groupings = aOptions->GroupingMode(&groupCount);"},{"type":"del","del":true,"ln":2436,"content":"-"},{"type":"normal","normal":true,"ln1":2437,"ln2":2432,"content":"     if (groupCount == 0) {"},{"type":"del","del":true,"ln":2438,"content":"-      FilterResultSet(aResultNode, toplevel, aResults, aQueries, aOptions);"},{"type":"add","add":true,"ln":2433,"content":"+      FilterResultSet(aResultNode, toplevel, aResults, aQueries);"},{"type":"normal","normal":true,"ln1":2439,"ln2":2434,"content":"     } else {"},{"type":"normal","normal":true,"ln1":2440,"ln2":2435,"content":"       nsCOMArray<nsNavHistoryResultNode> filteredResults;"},{"type":"del","del":true,"ln":2441,"content":"-      FilterResultSet(aResultNode, toplevel, &filteredResults, aQueries, aOptions);"},{"type":"add","add":true,"ln":2436,"content":"+      FilterResultSet(aResultNode, toplevel, &filteredResults, aQueries);"},{"type":"normal","normal":true,"ln1":2442,"ln2":2437,"content":"       rv = RecursiveGroup(aResultNode, filteredResults, groupings, groupCount,"},{"type":"normal","normal":true,"ln1":2443,"ln2":2438,"content":"                           aResults);"},{"type":"normal","normal":true,"ln1":2444,"ln2":2439,"content":"       NS_ENSURE_SUCCESS(rv, rv);"},{"type":"normal","normal":true,"ln1":2445,"ln2":2440,"content":"     }"},{"type":"del","del":true,"ln":2446,"content":"-  } else {"},{"type":"del","del":true,"ln":2447,"content":"-    rv = ResultsAsList(statement, aOptions, aResults);"},{"type":"del","del":true,"ln":2448,"content":"-    NS_ENSURE_SUCCESS(rv, rv);"},{"type":"del","del":true,"ln":2449,"content":"-  } "},{"type":"add","add":true,"ln":2441,"content":"+  }"},{"type":"normal","normal":true,"ln1":2450,"ln2":2442,"content":" "},{"type":"normal","normal":true,"ln1":2451,"ln2":2443,"content":"   return NS_OK;"},{"type":"normal","normal":true,"ln1":2452,"ln2":2444,"content":" }"}],"oldStart":2423,"oldLines":30,"newStart":2390,"newLines":55},{"content":"@@ -4135,22 +4127,16 @@ nsNavHistory::URIHasTag(nsIURI* aURI, const nsAString& aTag)","changes":[{"type":"normal","normal":true,"ln1":4135,"ln2":4127,"content":" "},{"type":"normal","normal":true,"ln1":4136,"ln2":4128,"content":" // nsNavHistory::FilterResultSet"},{"type":"normal","normal":true,"ln1":4137,"ln2":4129,"content":" //"},{"type":"del","del":true,"ln":4138,"content":"-// This does some post-query-execution filtering:"},{"type":"del","del":true,"ln":4139,"content":"-//   - searching on title & url"},{"type":"del","del":true,"ln":4140,"content":"-//   - parent folder (recursively)"},{"type":"del","del":true,"ln":4141,"content":"-//   - excludeQueries"},{"type":"del","del":true,"ln":4142,"content":"-//   - tags"},{"type":"del","del":true,"ln":4143,"content":"-//   - limit count"},{"type":"del","del":true,"ln":4144,"content":"-//"},{"type":"del","del":true,"ln":4145,"content":"-// Note:  changes to filtering in FilterResultSet() "},{"type":"del","del":true,"ln":4146,"content":"-// may require changes to NeedToFilterResultSet()"},{"type":"add","add":true,"ln":4130,"content":"+//    This does some post-query-execution filtering:"},{"type":"add","add":true,"ln":4131,"content":"+//      - searching on title & url"},{"type":"add","add":true,"ln":4132,"content":"+//      - parent folder (recursively)"},{"type":"add","add":true,"ln":4133,"content":"+//      - excludeQueries"},{"type":"normal","normal":true,"ln1":4147,"ln2":4134,"content":" "},{"type":"normal","normal":true,"ln1":4148,"ln2":4135,"content":" nsresult"},{"type":"normal","normal":true,"ln1":4149,"ln2":4136,"content":" nsNavHistory::FilterResultSet(nsNavHistoryQueryResultNode* aQueryNode,"},{"type":"normal","normal":true,"ln1":4150,"ln2":4137,"content":"                               const nsCOMArray<nsNavHistoryResultNode>& aSet,"},{"type":"normal","normal":true,"ln1":4151,"ln2":4138,"content":"                               nsCOMArray<nsNavHistoryResultNode>* aFiltered,"},{"type":"del","del":true,"ln":4152,"content":"-                              const nsCOMArray<nsNavHistoryQuery>& aQueries,"},{"type":"del","del":true,"ln":4153,"content":"-                              nsNavHistoryQueryOptions *aOptions)"},{"type":"add","add":true,"ln":4139,"content":"+                              const nsCOMArray<nsNavHistoryQuery>& aQueries)"},{"type":"normal","normal":true,"ln1":4154,"ln2":4140,"content":" {"},{"type":"normal","normal":true,"ln1":4155,"ln2":4141,"content":"   nsresult rv;"},{"type":"normal","normal":true,"ln1":4156,"ln2":4142,"content":" "}],"oldStart":4135,"oldLines":22,"newStart":4127,"newLines":16},{"content":"@@ -4274,9 +4260,6 @@ nsNavHistory::FilterResultSet(nsNavHistoryQueryResultNode* aQueryNode,","changes":[{"type":"normal","normal":true,"ln1":4274,"ln2":4260,"content":"     }"},{"type":"normal","normal":true,"ln1":4275,"ln2":4261,"content":"     if (appendNode)"},{"type":"normal","normal":true,"ln1":4276,"ln2":4262,"content":"       aFiltered->AppendObject(aSet[nodeIndex]);"},{"type":"del","del":true,"ln":4277,"content":"-      "},{"type":"del","del":true,"ln":4278,"content":"-    if (aOptions->MaxResults() > 0 && aFiltered->Count() >= aOptions->MaxResults())"},{"type":"del","del":true,"ln":4279,"content":"-      break;"},{"type":"normal","normal":true,"ln1":4280,"ln2":4263,"content":"   }"},{"type":"normal","normal":true,"ln1":4281,"ln2":4264,"content":" "},{"type":"normal","normal":true,"ln1":4282,"ln2":4265,"content":"   // de-allocate the matrixes"}],"oldStart":4274,"oldLines":9,"newStart":4260,"newLines":6}],"deletions":66,"additions":49,"from":"toolkit/components/places/src/nsNavHistory.cpp","to":"toolkit/components/places/src/nsNavHistory.cpp","index":["b74bf49..f4cf4c6","100644"]},{"chunks":[{"content":"@@ -516,8 +516,7 @@ protected:","changes":[{"type":"normal","normal":true,"ln1":516,"ln2":516,"content":"   nsresult FilterResultSet(nsNavHistoryQueryResultNode *aParentNode,"},{"type":"normal","normal":true,"ln1":517,"ln2":517,"content":"                            const nsCOMArray<nsNavHistoryResultNode>& aSet,"},{"type":"normal","normal":true,"ln1":518,"ln2":518,"content":"                            nsCOMArray<nsNavHistoryResultNode>* aFiltered,"},{"type":"del","del":true,"ln":519,"content":"-                           const nsCOMArray<nsNavHistoryQuery>& aQueries,"},{"type":"del","del":true,"ln":520,"content":"-                           nsNavHistoryQueryOptions* aOptions);"},{"type":"add","add":true,"ln":519,"content":"+                           const nsCOMArray<nsNavHistoryQuery>& aQueries);"},{"type":"normal","normal":true,"ln1":521,"ln2":520,"content":" "},{"type":"normal","normal":true,"ln1":522,"ln2":521,"content":"   // observers"},{"type":"normal","normal":true,"ln1":523,"ln2":522,"content":"   nsMaybeWeakPtrArray<nsINavHistoryObserver> mObservers;"}],"oldStart":516,"oldLines":8,"newStart":516,"newLines":7}],"deletions":2,"additions":1,"from":"toolkit/components/places/src/nsNavHistory.h","to":"toolkit/components/places/src/nsNavHistory.h","index":["d6f4fbd..650b0c3","100644"]}]}