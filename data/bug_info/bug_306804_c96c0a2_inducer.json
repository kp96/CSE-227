{"bug_id":306804,"commitHash":"c96c0a2","commit_info":{"sha":"c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c","commit":{"author":{"name":"bzbarsky%mit.edu","email":"bzbarsky%mit.edu","date":"2005-09-10T04:16:59Z"},"committer":{"name":"bzbarsky%mit.edu","email":"bzbarsky%mit.edu","date":"2005-09-10T04:16:59Z"},"message":"Throw if window.open is called on a window that has no chrome.  Bug 306804, r+sr=jst","tree":{"sha":"acb6836a79eb8da08b9b23efdf73a689b0378706","url":"https://api.github.com/repos/mozilla/gecko-dev/git/trees/acb6836a79eb8da08b9b23efdf73a689b0378706"},"url":"https://api.github.com/repos/mozilla/gecko-dev/git/commits/c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/mozilla/gecko-dev/commits/c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c","html_url":"https://github.com/mozilla/gecko-dev/commit/c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c","comments_url":"https://api.github.com/repos/mozilla/gecko-dev/commits/c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c/comments","author":null,"committer":null,"parents":[{"sha":"2555a451fdaba67f5bcf9fd3a14c142e12a1107a","url":"https://api.github.com/repos/mozilla/gecko-dev/commits/2555a451fdaba67f5bcf9fd3a14c142e12a1107a","html_url":"https://github.com/mozilla/gecko-dev/commit/2555a451fdaba67f5bcf9fd3a14c142e12a1107a"}],"stats":{"total":16,"additions":14,"deletions":2},"files":[{"sha":"103ff86eaa96d16894495bbc693d987552a30130","filename":"dom/src/base/nsGlobalWindow.cpp","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/mozilla/gecko-dev/blob/c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c/dom/src/base/nsGlobalWindow.cpp","raw_url":"https://github.com/mozilla/gecko-dev/raw/c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c/dom/src/base/nsGlobalWindow.cpp","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/dom/src/base/nsGlobalWindow.cpp?ref=c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c","patch":"@@ -5565,6 +5565,14 @@ nsGlobalWindow::OpenInternal(const nsAString& aUrl, const nsAString& aName,\n                                   aExtraArgument, aReturn),\n                    NS_ERROR_NOT_INITIALIZED);\n \n+  nsCOMPtr<nsIWebBrowserChrome> chrome;\n+  GetWebBrowserChrome(getter_AddRefs(chrome));\n+  if (!chrome) {\n+    // No chrome means we don't want to go through with this open call\n+    // -- see nsIWindowWatcher.idl\n+    return NS_ERROR_NOT_AVAILABLE;\n+  }\n+  \n   nsXPIDLCString url;\n   nsresult rv = NS_OK;  \n "},{"sha":"6ecca124461e82d300775d67ce75ba4bb3159719","filename":"embedding/components/windowwatcher/public/nsIWindowWatcher.idl","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/mozilla/gecko-dev/blob/c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c/embedding/components/windowwatcher/public/nsIWindowWatcher.idl","raw_url":"https://github.com/mozilla/gecko-dev/raw/c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c/embedding/components/windowwatcher/public/nsIWindowWatcher.idl","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/embedding/components/windowwatcher/public/nsIWindowWatcher.idl?ref=c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c","patch":"@@ -75,7 +75,9 @@ interface nsIWindowWatcher : nsISupports {\n \n   /** Create a new window. It will automatically be added to our list\n       (via addWindow()).\n-      @param aParent parent window. null if not.\n+      @param aParent parent window, if any. Null if no parent.  If it is\n+             impossible to get to an nsIWebBrowserChrome from aParent, this\n+             method will effectively act as if aParent were null.\n       @param aURL url to which to open the new window. Must already be\n              escaped, if applicable. can be null.\n       @param aName window name from JS window.open. can be null."},{"sha":"6275846315be065760a368948d984632691303ea","filename":"embedding/components/windowwatcher/public/nsPIWindowWatcher.idl","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/mozilla/gecko-dev/blob/c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c/embedding/components/windowwatcher/public/nsPIWindowWatcher.idl","raw_url":"https://github.com/mozilla/gecko-dev/raw/c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c/embedding/components/windowwatcher/public/nsPIWindowWatcher.idl","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/embedding/components/windowwatcher/public/nsPIWindowWatcher.idl?ref=c96c0a25cd2a8dd07dbe22b29b0552ad1a44df3c","patch":"@@ -74,7 +74,9 @@ interface nsPIWindowWatcher : nsISupports\n \n   /** Like the public interface's open(), but can deal with openDialog\n       style arguments.\n-      @param aParent parent window, if any. null if not.\n+      @param aParent parent window, if any. Null if no parent.  If it is\n+             impossible to get to an nsIWebBrowserChrome from aParent, this\n+             method will effectively act as if aParent were null.\n       @param aURL url to which to open the new window. Must already be\n              escaped, if applicable. can be null.\n       @param aName window name from JS window.open. can be null."}]},"blames":["e23ea875","8c2bc6fc","ac3d6182","7b061d9e","ac3d6182","1bc94a11","09750f9a","7b061d9e"]}