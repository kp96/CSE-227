{"bug_id":307867,"commitHash":"376ca84","commit_info":{"sha":"376ca84976bc2e00e2443ac850e5ec6bf766b92b","commit":{"author":{"name":"bzbarsky%mit.edu","email":"bzbarsky%mit.edu","date":"2005-09-30T03:30:40Z"},"committer":{"name":"bzbarsky%mit.edu","email":"bzbarsky%mit.edu","date":"2005-09-30T03:30:40Z"},"message":"Make wildcards work for the default policy too.  Bug 307867, r=caillon, sr=dveditz","tree":{"sha":"2b1284cefa43f2fd535134d6de160d9b13a99360","url":"https://api.github.com/repos/mozilla/gecko-dev/git/trees/2b1284cefa43f2fd535134d6de160d9b13a99360"},"url":"https://api.github.com/repos/mozilla/gecko-dev/git/commits/376ca84976bc2e00e2443ac850e5ec6bf766b92b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/mozilla/gecko-dev/commits/376ca84976bc2e00e2443ac850e5ec6bf766b92b","html_url":"https://github.com/mozilla/gecko-dev/commit/376ca84976bc2e00e2443ac850e5ec6bf766b92b","comments_url":"https://api.github.com/repos/mozilla/gecko-dev/commits/376ca84976bc2e00e2443ac850e5ec6bf766b92b/comments","author":null,"committer":null,"parents":[{"sha":"e69c4732470cce0fed88f3829d4e98112c21f93d","url":"https://api.github.com/repos/mozilla/gecko-dev/commits/e69c4732470cce0fed88f3829d4e98112c21f93d","html_url":"https://github.com/mozilla/gecko-dev/commit/e69c4732470cce0fed88f3829d4e98112c21f93d"}],"stats":{"total":65,"additions":40,"deletions":25},"files":[{"sha":"6ca007a2799d50c97f114462751aee1fbdabb79a","filename":"caps/src/nsScriptSecurityManager.cpp","status":"modified","additions":40,"deletions":25,"changes":65,"blob_url":"https://github.com/mozilla/gecko-dev/blob/376ca84976bc2e00e2443ac850e5ec6bf766b92b/caps/src/nsScriptSecurityManager.cpp","raw_url":"https://github.com/mozilla/gecko-dev/raw/376ca84976bc2e00e2443ac850e5ec6bf766b92b/caps/src/nsScriptSecurityManager.cpp","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/caps/src/nsScriptSecurityManager.cpp?ref=376ca84976bc2e00e2443ac850e5ec6bf766b92b","patch":"@@ -1033,6 +1033,12 @@ nsScriptSecurityManager::LookupPolicy(nsIPrincipal* aPrincipal,\n         if ((dpolicy == mDefaultPolicy) && aCachedClassPolicy)\n             *aCachedClassPolicy = cpolicy;\n     }\n+\n+    // We look for a PropertyPolicy in the following places:\n+    // 1)  The ClassPolicy for our class we got from our DomainPolicy\n+    // 2)  The mWildcardPolicy of our DomainPolicy\n+    // 3)  The ClassPolicy for our class we got from mDefaultPolicy\n+    // 4)  The mWildcardPolicy of our mDefaultPolicy\n     PropertyPolicy* ppolicy = nsnull;\n     if (cpolicy != NO_POLICY_FOR_CLASS)\n     {\n@@ -1041,38 +1047,47 @@ nsScriptSecurityManager::LookupPolicy(nsIPrincipal* aPrincipal,\n                                                       (void*)aProperty,\n                                                       PL_DHASH_LOOKUP));\n     }\n-    else\n+\n+    // If there is no class policy for this property, and we have a wildcard\n+    // policy, try that.\n+    if (dpolicy->mWildcardPolicy &&\n+        (!ppolicy || PL_DHASH_ENTRY_IS_FREE(ppolicy)))\n     {\n-        // If there's no per-domain policy and no default policy, we're done\n-        if (dpolicy == mDefaultPolicy)\n-            return NS_OK;\n+        ppolicy =\n+            NS_STATIC_CAST(PropertyPolicy*,\n+                           PL_DHashTableOperate(dpolicy->mWildcardPolicy->mPolicy,\n+                                                (void*)aProperty,\n+                                                PL_DHASH_LOOKUP));\n+    }\n+\n+    // If dpolicy is not the defauly policy and there's no class or wildcard\n+    // policy for this property, check the default policy for this class and\n+    // the default wildcard policy\n+    if (dpolicy != mDefaultPolicy &&\n+        (!ppolicy || PL_DHASH_ENTRY_IS_FREE(ppolicy)))\n+    {\n+        cpolicy = NS_STATIC_CAST(ClassPolicy*,\n+                                 PL_DHashTableOperate(mDefaultPolicy,\n+                                                      aClassName,\n+                                                      PL_DHASH_LOOKUP));\n \n-        // This class is not present in the domain policy, check its wildcard policy\n-        if (dpolicy->mWildcardPolicy)\n+        if (PL_DHASH_ENTRY_IS_BUSY(cpolicy))\n         {\n             ppolicy =\n-              NS_STATIC_CAST(PropertyPolicy*,\n-                             PL_DHashTableOperate(dpolicy->mWildcardPolicy->mPolicy,\n-                                                  (void*)aProperty,\n-                                                  PL_DHASH_LOOKUP));\n+                NS_STATIC_CAST(PropertyPolicy*,\n+                               PL_DHashTableOperate(cpolicy->mPolicy,\n+                                                    (void*)aProperty,\n+                                                    PL_DHASH_LOOKUP));\n         }\n \n-        // If there's no wildcard policy, check the default policy for this class\n-        if (!ppolicy || PL_DHASH_ENTRY_IS_FREE(ppolicy))\n+        if ((!ppolicy || PL_DHASH_ENTRY_IS_FREE(ppolicy)) &&\n+            mDefaultPolicy->mWildcardPolicy)\n         {\n-            cpolicy = NS_STATIC_CAST(ClassPolicy*,\n-                                     PL_DHashTableOperate(mDefaultPolicy,\n-                                                          aClassName,\n-                                                          PL_DHASH_LOOKUP));\n-\n-            if (PL_DHASH_ENTRY_IS_BUSY(cpolicy))\n-            {\n-                ppolicy =\n-                  NS_STATIC_CAST(PropertyPolicy*,\n-                                 PL_DHashTableOperate(cpolicy->mPolicy,\n-                                                      (void*)aProperty,\n-                                                      PL_DHASH_LOOKUP));\n-            }\n+            ppolicy =\n+              NS_STATIC_CAST(PropertyPolicy*,\n+                             PL_DHashTableOperate(mDefaultPolicy->mWildcardPolicy->mPolicy,\n+                                                  (void*)aProperty,\n+                                                  PL_DHASH_LOOKUP));\n         }\n     }\n "}]},"blames":["ddc015e3","4756b716","66caced6","b7cdb7de"]}