? obj-i386-apple-darwin9.1.0
Index: browser/app/profile/firefox.js
===================================================================
RCS file: /cvsroot/mozilla/browser/app/profile/firefox.js,v
retrieving revision 1.228
diff -u -8 -p -r1.228 firefox.js
--- browser/app/profile/firefox.js	20 Nov 2007 10:08:55 -0000	1.228
+++ browser/app/profile/firefox.js	20 Nov 2007 22:24:23 -0000
@@ -576,8 +576,14 @@ pref("browser.sessionstore.max_tabs_undo
 // allow META refresh by default
 pref("accessibility.blockautorefresh", false);
 
 // import bookmarks.html into Places bookmarks
 pref("browser.places.importBookmarksHTML", true);
 
 // if false, will add the "Places" folder to the personal toolbar
 pref("browser.places.createdDefaultQueries", false);
+
+// Controls behavior of the "Add Exception" dialog launched from SSL error pages
+// 0 - don't pre-populate anything
+// 1 - pre-populate site URL, but don't fetch certificate
+// 2 - pre-populate site URL and pre-fetch certificate
+pref("browser.ssl_override_behavior", 1);
Index: browser/base/content/browser.js
===================================================================
RCS file: /cvsroot/mozilla/browser/base/content/browser.js,v
retrieving revision 1.895
diff -u -8 -p -r1.895 browser.js
--- browser/base/content/browser.js	20 Nov 2007 07:55:40 -0000	1.895
+++ browser/base/content/browser.js	20 Nov 2007 22:24:26 -0000
@@ -2299,18 +2299,29 @@ function BrowserOnCommand(event) {
     
     // If the event came from an ssl error page, it is probably either the "Add
     // Exceptionâ€¦" or "Get me out of here!" button
     if (/^about:neterror\?e=nssBadCert/.test(event.originalTarget.ownerDocument.documentURI)) {
       var ot = event.originalTarget;
       var errorDoc = ot.ownerDocument;
       
       if (ot == errorDoc.getElementById('exceptionDialogButton')) {
-        var params = { location : content.location.href,
-                       exceptionAdded : false };
+        var params = { exceptionAdded : false };
+        
+        try {
+          switch (gPrefService.getIntPref("browser.ssl_override_behavior")) {
+            case 2 : // Pre-fetch & pre-populate
+              params.prefetchCert = true;
+            case 1 : // Pre-populate
+              params.location = content.location.href;
+          }
+        } catch (e) {
+          Components.utils.reportError("Couldn't get ssl_override pref: " + e);
+        }
+        
         window.openDialog('chrome://pippki/content/exceptionDialog.xul',
                           '','chrome,centerscreen,modal', params);
         
         // If the user added the exception cert, attempt to reload the page
         if (params.exceptionAdded)
           content.location.reload();
       }
       else if (ot == errorDoc.getElementById('getMeOutOfHereButton')) {
Index: security/manager/pki/resources/content/exceptionDialog.js
===================================================================
RCS file: /cvsroot/mozilla/security/manager/pki/resources/content/exceptionDialog.js,v
retrieving revision 1.6
diff -u -8 -p -r1.6 exceptionDialog.js
--- security/manager/pki/resources/content/exceptionDialog.js	19 Nov 2007 15:32:44 -0000	1.6
+++ security/manager/pki/resources/content/exceptionDialog.js	20 Nov 2007 22:24:55 -0000
@@ -77,26 +77,31 @@ function initExceptionDialog() {
   gPKIBundle = srGetStrBundle("chrome://pippki/locale/pippki.properties");
 
   var brandName = gBundleBrand.GetStringFromName("brandShortName");
   
   setText("warningText", gPKIBundle.formatStringFromName("addExceptionBrandedWarning",
                                                          [brandName], 1));
   gDialog.getButton("extra1").disabled = true;
   
-  if (window.arguments[0]
-      && window.arguments[0].location) {
-    // We were pre-seeded with a location.  Populate the location bar, and check
-    // the cert
-    document.getElementById("locationTextBox").value = window.arguments[0].location;
-    checkCert();
+  var args = window.arguments;
+  if (args && args[0]) {
+    if (args[0].location) {
+      // We were pre-seeded with a location.
+      document.getElementById("locationTextBox").value = args[0].location;
+      document.getElementById('checkCertButton').disabled = false;
+      
+      // We can optionally pre-fetch the certificate too
+      if (args[0].prefetchCert)
+        checkCert();
+    }
+    
+    // Set out parameter to false by default
+    args[0].exceptionAdded = false; 
   }
-  
-  // Set out parameter to false by default
-  window.arguments[0].exceptionAdded = false;
 }
 
 // returns true if found and global status could be set
 function findRecentBadCert(uri) {
   try {
     var recentCertsSvc = Components.classes["@mozilla.org/security/recentbadcerts;1"]
                          .getService(Components.interfaces.nsIRecentBadCertsService);
     if (!recentCertsSvc)
@@ -336,11 +341,14 @@ function addException() {
   var permanentCheckbox = document.getElementById("permanent");
 
   overrideService.rememberValidityOverride(
     getURI().hostPort,
     gCert,
     flags,
     !permanentCheckbox.checked);
   
-  window.arguments[0].exceptionAdded = true;
+  var args = window.arguments;
+  if (args && args[0])
+    args[0].exceptionAdded = true;
+  
   gDialog.acceptDialog();
 }
