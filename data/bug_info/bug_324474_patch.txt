Index: mozilla/security/manager/ssl/src/nsCMS.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsCMS.cpp,v
retrieving revision 1.25
diff -u -r1.25 nsCMS.cpp
--- mozilla/security/manager/ssl/src/nsCMS.cpp	12 Apr 2006 15:43:32 -0000	1.25
+++ mozilla/security/manager/ssl/src/nsCMS.cpp	30 Jun 2006 04:30:28 -0000
@@ -287,6 +287,17 @@
   PR_ASSERT(nsigners > 0);
   si = NSS_CMSSignedData_GetSignerInfo(sigd, 0);
 
+
+  // See bug 324474. We want to make sure the signing cert is 
+  // still valid at the current time.
+  if (CERT_VerifyCertificateNow(CERT_GetDefaultCertDB(), si->cert, PR_TRUE, 
+                                certificateUsageEmailSigner,
+                                si->cmsg->pwfn_arg, NULL) != SECSuccess) {
+    PR_LOG(gPIPNSSLog, PR_LOG_DEBUG, ("nsCMSMessage::CommonVerifySignature - signing cert not trusted now\n"));
+    rv = NS_ERROR_CMS_VERIFY_UNTRUSTED;
+    goto loser;
+  }
+
   // We verify the first signer info,  only //
   if (NSS_CMSSignedData_VerifySignerInfo(sigd, 0, CERT_GetDefaultCertDB(), certUsageEmailSigner) != SECSuccess) {
     PR_LOG(gPIPNSSLog, PR_LOG_DEBUG, ("nsCMSMessage::CommonVerifySignature - unable to verify signature\n"));
@@ -296,7 +307,7 @@
       rv = NS_ERROR_CMS_VERIFY_NOCERT;
     }
     else if(NSSCMSVS_SigningCertNotTrusted == si->verificationStatus) {
-      PR_LOG(gPIPNSSLog, PR_LOG_DEBUG, ("nsCMSMessage::CommonVerifySignature - signing cert not trusted\n"));
+      PR_LOG(gPIPNSSLog, PR_LOG_DEBUG, ("nsCMSMessage::CommonVerifySignature - signing cert not trusted at signing time\n"));
       rv = NS_ERROR_CMS_VERIFY_UNTRUSTED;
     }
     else if(NSSCMSVS_Unverified == si->verificationStatus) {
