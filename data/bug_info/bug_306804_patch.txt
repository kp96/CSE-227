Index: embedding/components/windowwatcher/public/nsIWindowWatcher.idl
===================================================================
RCS file: /home/bzbarsky/mozilla/cvs-mirror/mozilla/embedding/components/windowwatcher/public/nsIWindowWatcher.idl,v
retrieving revision 1.14
diff -u -p -d -8 -r1.14 nsIWindowWatcher.idl
--- embedding/components/windowwatcher/public/nsIWindowWatcher.idl	11 Jan 2005 19:36:39 -0000	1.14
+++ embedding/components/windowwatcher/public/nsIWindowWatcher.idl	9 Sep 2005 19:23:23 -0000
@@ -70,17 +70,19 @@ interface nsIWebBrowserChrome;
 interface nsIWindowCreator;
 
 [scriptable, uuid(002286a8-494b-43b3-8ddd-49e3fc50622b)]
 
 interface nsIWindowWatcher : nsISupports {
 
   /** Create a new window. It will automatically be added to our list
       (via addWindow()).
-      @param aParent parent window. null if not.
+      @param aParent parent window, if any. Null if no parent.  If it is
+             impossible to get to an nsIWebBrowserChrome from aParent, this
+             method will effectively act as if aParent were null.
       @param aURL url to which to open the new window. Must already be
              escaped, if applicable. can be null.
       @param aName window name from JS window.open. can be null.
       @param aFeatures window features from JS window.open. can be null.
       @param aArguments extra argument(s) to the new window, to be attached
              as the |arguments| property. An nsISupportsArray will be
              unwound into multiple arguments (but not recursively!).
              can be null.
Index: embedding/components/windowwatcher/public/nsPIWindowWatcher.idl
===================================================================
RCS file: /home/bzbarsky/mozilla/cvs-mirror/mozilla/embedding/components/windowwatcher/public/nsPIWindowWatcher.idl,v
retrieving revision 1.9
diff -u -p -d -8 -r1.9 nsPIWindowWatcher.idl
--- embedding/components/windowwatcher/public/nsPIWindowWatcher.idl	3 Mar 2005 17:26:33 -0000	1.9
+++ embedding/components/windowwatcher/public/nsPIWindowWatcher.idl	9 Sep 2005 19:30:35 -0000
@@ -69,17 +69,19 @@ interface nsPIWindowWatcher : nsISupport
 
   /** A window has been closed. Remove it from our list.
       @param aWindow the window to remove
   */
   void removeWindow(in nsIDOMWindow aWindow);
 
   /** Like the public interface's open(), but can deal with openDialog
       style arguments.
-      @param aParent parent window, if any. null if not.
+      @param aParent parent window, if any. Null if no parent.  If it is
+             impossible to get to an nsIWebBrowserChrome from aParent, this
+             method will effectively act as if aParent were null.
       @param aURL url to which to open the new window. Must already be
              escaped, if applicable. can be null.
       @param aName window name from JS window.open. can be null.
       @param aFeatures window features from JS window.open. can be null.
       @param aDialog use dialog defaults (see nsIDOMWindowInternal::openDialog)
       @param argc count of argv arguments
       @param argv extra JS arguments, if any
                   (see nsIDOMWindowInternal::openDialog)
Index: dom/src/base/nsGlobalWindow.cpp
===================================================================
RCS file: /home/bzbarsky/mozilla/cvs-mirror/mozilla/dom/src/base/nsGlobalWindow.cpp,v
retrieving revision 1.784
diff -u -p -d -8 -r1.784 nsGlobalWindow.cpp
--- dom/src/base/nsGlobalWindow.cpp	1 Sep 2005 23:02:55 -0000	1.784
+++ dom/src/base/nsGlobalWindow.cpp	9 Sep 2005 19:33:15 -0000
@@ -5560,16 +5560,24 @@ nsGlobalWindow::OpenInternal(const nsASt
                              jsval *argv, PRUint32 argc,
                              nsISupports *aExtraArgument,
                              nsIDOMWindow **aReturn)
 {
   FORWARD_TO_OUTER(OpenInternal, (aUrl, aName, aOptions, aDialog, argv, argc,
                                   aExtraArgument, aReturn),
                    NS_ERROR_NOT_INITIALIZED);
 
+  nsCOMPtr<nsIWebBrowserChrome> chrome;
+  GetWebBrowserChrome(getter_AddRefs(chrome));
+  if (!chrome) {
+    // No chrome means we don't want to go through with this open call
+    // -- see nsIWindowWatcher.idl
+    return NS_ERROR_NOT_AVAILABLE;
+  }
+  
   nsXPIDLCString url;
   nsresult rv = NS_OK;  
 
   *aReturn = nsnull;
 
   if (!aUrl.IsEmpty()) {
     // fix bug 35076
     // Escape all non ASCII characters in the url.
