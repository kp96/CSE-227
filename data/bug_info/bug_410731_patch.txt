Index: src/security/CertificatesWindowController.h
===================================================================
RCS file: /cvsroot/mozilla/camino/src/security/CertificatesWindowController.h,v
retrieving revision 1.2
diff -u -8 -r1.2 CertificatesWindowController.h
--- src/security/CertificatesWindowController.h	15 Nov 2005 04:06:24 -0000	1.2
+++ src/security/CertificatesWindowController.h	30 Jul 2008 23:07:32 -0000
@@ -34,18 +34,16 @@
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 
 #import <AppKit/AppKit.h>
 
-class CertDataOwner;
-
 @class ExtendedSplitView;
 @class ExtendedOutlineView;
 
 @interface CertificatesWindowController : NSWindowController
 {
   IBOutlet ExtendedSplitView*   mSplitter;
   
   IBOutlet NSTableView*         mCategoriesTable;
@@ -53,18 +51,16 @@
 
   IBOutlet NSTableColumn*       mDetailsColumn;
   
   IBOutlet NSMenu*              mUserCertsContextMenu;
   IBOutlet NSMenu*              mOtherCertsContextMenu;
   
   NSArray*                      mCertificatesData;
   NSString*                     mDetailsColumnKey;
-  
-  CertDataOwner*                mDataOwner;   // container for C++ stuff
 }
 
 + (CertificatesWindowController*)sharedCertificatesWindowController;
 
 - (IBAction)viewSelectedCertificates:(id)sender;
 - (IBAction)deleteSelectedCertificates:(id)sender;
 
 - (IBAction)backupSelectedCertificates:(id)sender;
Index: src/security/CertificatesWindowController.mm
===================================================================
RCS file: /cvsroot/mozilla/camino/src/security/CertificatesWindowController.mm,v
retrieving revision 1.11
diff -u -8 -r1.11 CertificatesWindowController.mm
--- src/security/CertificatesWindowController.mm	25 Jul 2007 15:28:41 -0000	1.11
+++ src/security/CertificatesWindowController.mm	30 Jul 2008 23:07:33 -0000
@@ -56,30 +56,16 @@
 
 #import "ExtendedSplitView.h"
 #import "ExtendedOutlineView.h"
 #import "CertificateItem.h"
 #import "CertificateView.h"
 #import "ViewCertificateDialogController.h"
 #import "CertificatesWindowController.h"
 
-// C++ class that holds owning refs to XPCOM interfaces for the window controller
-class CertDataOwner
-{
-public:
-
-  CertDataOwner()
-  {
-    mCertCache = do_CreateInstance("@mozilla.org/security/nsscertcache;1");
-    mCertCache->CacheAllCerts();
-  }
-
-  nsCOMPtr<nsINSSCertCache>   mCertCache;
-};
-
 #pragma mark -
 
 @interface CertificatesWindowController(Private)
 
 - (void)reloadCertData;
 - (void)clearCertData;
 
 - (void)setupCertsData;
@@ -415,17 +401,16 @@
 {
   if (self == gCertificatesWindowController)
     gCertificatesWindowController = nil;
 
   [[NSNotificationCenter defaultCenter] removeObserver:self];
 
   [mCertificatesData release];
   [mDetailsColumnKey release];
-  delete mDataOwner;
   [super dealloc];
 }
 
 - (void)awakeFromNib
 {
   [self setShouldCascadeWindows:NO];
   [[self window] setFrameAutosaveName:@"CertificatesWindow"];
 
@@ -576,19 +561,16 @@
 #pragma mark -
 
 - (void)reloadCertData
 {
   int curSelectedRow = [mCategoriesTable selectedRow];
   if (curSelectedRow == -1)
     curSelectedRow = 0;
 
-  delete mDataOwner;
-  mDataOwner = new CertDataOwner;
-
   [self setupCertsData];
   [mCategoriesTable reloadData];
 
   [mCategoriesTable selectRow:curSelectedRow byExtendingSelection:NO];
   [self categorySelectionChanged];  
 }
 
 - (void)setupCertsData
@@ -692,18 +674,30 @@
 - (void)categorySelectionChanged
 {
   int rowIndex = [mCategoriesTable selectedRow];
   NSDictionary* rowDict = nil;
   if (rowIndex != -1 && (unsigned int)rowIndex < [mCertificatesData count])
   {
     rowDict = [mCertificatesData objectAtIndex:rowIndex];
     CertificatesDataSource* certsDataSource = [rowDict objectForKey:@"data_source"];
-    [certsDataSource ensureCertsLoaded:mDataOwner->mCertCache.get()];
-    [mCertsOutlineView setDataSource:certsDataSource];
+    nsCOMPtr<nsINSSCertCache> certCache = do_CreateInstance("@mozilla.org/security/nsscertcache;1");
+    
+    // If we can't access the cert cache (for example during app shutdown),
+    // let's just clear the view, and move on.
+    if (certCache)
+    {
+        certCache->CacheAllCerts();
+        [certsDataSource ensureCertsLoaded:certCache];
+        [mCertsOutlineView setDataSource:certsDataSource];
+    }
+    else
+    {
+        [mCertsOutlineView setDataSource:nil]; 
+    }
   }
   else
   {
     [mCertsOutlineView setDataSource:nil];
   }
 
   // rejigger the columns
   if (rowDict)
