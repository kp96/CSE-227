{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas6f0a465\""},"diff":[{"chunks":[{"content":"@@ -766,7 +766,13 @@ nsSHistory::EvictWindowContentViewers(PRInt32 aFromIndex, PRInt32 aToIndex)","changes":[{"type":"normal","normal":true,"ln1":766,"ln2":766,"content":" {"},{"type":"normal","normal":true,"ln1":767,"ln2":767,"content":"   // To enforce the per SHistory object limit on cached content viewers, we"},{"type":"normal","normal":true,"ln1":768,"ln2":768,"content":"   // need to release all of the content viewers that are no longer in the"},{"type":"del","del":true,"ln":769,"content":"-  // \"window\" that now ends/begins at aToIndex."},{"type":"add","add":true,"ln":769,"content":"+  // \"window\" that now ends/begins at aToIndex.  Existing content viewers"},{"type":"add","add":true,"ln":770,"content":"+  // should be in the window from"},{"type":"add","add":true,"ln":771,"content":"+  // aFromIndex - gHistoryMaxViewers to aFromIndex + gHistoryMaxViewers"},{"type":"add","add":true,"ln":772,"content":"+  //"},{"type":"add","add":true,"ln":773,"content":"+  // We make the assumption that entries outside this range have no viewers so"},{"type":"add","add":true,"ln":774,"content":"+  // that we don't have to walk the whole entire session history checking for"},{"type":"add","add":true,"ln":775,"content":"+  // content viewers."},{"type":"normal","normal":true,"ln1":770,"ln2":776,"content":" "},{"type":"normal","normal":true,"ln1":771,"ln2":777,"content":"   // This can happen on the first load of a page in a particular window"},{"type":"normal","normal":true,"ln1":772,"ln2":778,"content":"   if (aFromIndex < 0 || aToIndex < 0) {"}],"oldStart":766,"oldLines":7,"newStart":766,"newLines":13},{"content":"@@ -787,7 +793,7 @@ nsSHistory::EvictWindowContentViewers(PRInt32 aFromIndex, PRInt32 aToIndex)","changes":[{"type":"normal","normal":true,"ln1":787,"ln2":793,"content":"     if (startIndex >= mLength) {"},{"type":"normal","normal":true,"ln1":788,"ln2":794,"content":"       return;"},{"type":"normal","normal":true,"ln1":789,"ln2":795,"content":"     }"},{"type":"del","del":true,"ln":790,"content":"-    endIndex = PR_MIN(mLength, aFromIndex + gHistoryMaxViewers);"},{"type":"add","add":true,"ln":796,"content":"+    endIndex = PR_MIN(mLength, aFromIndex + gHistoryMaxViewers + 1);"},{"type":"normal","normal":true,"ln1":791,"ln2":797,"content":"   }"},{"type":"normal","normal":true,"ln1":792,"ln2":798,"content":"   "},{"type":"normal","normal":true,"ln1":793,"ln2":799,"content":"   EvictContentViewersInRange(startIndex, endIndex);"}],"oldStart":787,"oldLines":7,"newStart":793,"newLines":7}],"deletions":2,"additions":8,"from":"docshell/shistory/src/nsSHistory.cpp","to":"docshell/shistory/src/nsSHistory.cpp","index":["fd231b6..102beae","100644"]}]}