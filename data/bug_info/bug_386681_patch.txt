Index: mozilla/browser/base/content/browser.js
===================================================================
RCS file: /cvsroot/mozilla/browser/base/content/browser.js,v
retrieving revision 1.813
diff -u -1 -0 -r1.813 browser.js
--- mozilla/browser/base/content/browser.js	6 Jul 2007 12:45:10 -0000	1.813
+++ mozilla/browser/base/content/browser.js	7 Jul 2007 02:25:36 -0000
@@ -3901,30 +3901,41 @@
       return false;
     }
     return true;
   },
 
   onSecurityChange : function(aWebProgress, aRequest, aState)
   {
     const wpl = Components.interfaces.nsIWebProgressListener;
     this.securityButton.removeAttribute("label");
 
-    switch (aState) {
+    var wpl_security_bits = (wpl.STATE_IS_SECURE |
+                             wpl.STATE_IS_BROKEN |
+                             wpl.STATE_IS_INSECURE |
+                             wpl.STATE_SECURE_HIGH |
+                             wpl.STATE_SECURE_MED |
+                             wpl.STATE_SECURE_LOW);
+
+    /* aState is defined as a bitmask that may be extended in the future.
+     * We filter out any unknown bits before testing for known values.
+     */
+    switch (aState & wpl_security_bits) {
       case wpl.STATE_IS_SECURE | wpl.STATE_SECURE_HIGH:
         this.securityButton.setAttribute("level", "high");
         if (this.urlBar)
           this.urlBar.setAttribute("level", "high");
         try {
           this.securityButton.setAttribute("label",
             gBrowser.contentWindow.location.host);
         } catch(exception) {}
         break;
+      case wpl.STATE_IS_SECURE | wpl.STATE_SECURE_MED:
       case wpl.STATE_IS_SECURE | wpl.STATE_SECURE_LOW:
         this.securityButton.setAttribute("level", "low");
         if (this.urlBar)
           this.urlBar.setAttribute("level", "low");
         try {
           this.securityButton.setAttribute("label",
             gBrowser.contentWindow.location.host);
         } catch(exception) {}
         break;
       case wpl.STATE_IS_BROKEN:
