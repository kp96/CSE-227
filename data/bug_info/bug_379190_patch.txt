? mozilla/security/manager/ssl/src/nsNSSComponent.cpp.x
Index: mozilla/security/manager/ssl/src/nsNSSCertificateDB.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsNSSCertificateDB.cpp,v
retrieving revision 1.26
diff -u -1 -0 -p -r1.26 nsNSSCertificateDB.cpp
--- mozilla/security/manager/ssl/src/nsNSSCertificateDB.cpp	6 Dec 2006 16:31:32 -0000	1.26
+++ mozilla/security/manager/ssl/src/nsNSSCertificateDB.cpp	8 May 2007 13:48:36 -0000
@@ -135,25 +135,29 @@ nsNSSCertificateDB::FindCertByNickname(n
 NS_IMETHODIMP 
 nsNSSCertificateDB::FindCertByDBKey(const char *aDBkey, nsISupports *aToken,
                                    nsIX509Cert **_cert)
 {
   nsNSSShutDownPreventionLock locker;
   SECItem keyItem = {siBuffer, nsnull, 0};
   SECItem *dummy;
   CERTIssuerAndSN issuerSN;
   unsigned long moduleID,slotID;
   *_cert = nsnull; 
-  if (!aDBkey) return NS_ERROR_FAILURE;
+  if (!aDBkey || !*aDBkey)
+    return NS_ERROR_FAILURE;
+
   dummy = NSSBase64_DecodeBuffer(nsnull, &keyItem, aDBkey,
                                  (PRUint32)PL_strlen(aDBkey)); 
-  CERTCertificate *cert;
+  if (!dummy)
+    return NS_ERROR_FAILURE;
 
+  CERTCertificate *cert;
   // someday maybe we can speed up the search using the moduleID and slotID
   moduleID = NS_NSS_GET_LONG(keyItem.data);
   slotID = NS_NSS_GET_LONG(&keyItem.data[NS_NSS_LONG]);
 
   // build the issuer/SN structure
   issuerSN.serialNumber.len = NS_NSS_GET_LONG(&keyItem.data[NS_NSS_LONG*2]);
   issuerSN.derIssuer.len = NS_NSS_GET_LONG(&keyItem.data[NS_NSS_LONG*3]);
   issuerSN.serialNumber.data= &keyItem.data[NS_NSS_LONG*4];
   issuerSN.derIssuer.data= &keyItem.data[NS_NSS_LONG*4+
                                               issuerSN.serialNumber.len];
