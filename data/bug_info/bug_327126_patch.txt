Index: security/manager/ssl/src/nsCrypto.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsCrypto.cpp,v
retrieving revision 1.55
diff -u -p -r1.55 nsCrypto.cpp
--- security/manager/ssl/src/nsCrypto.cpp	28 Jul 2005 18:15:20 -0000	1.55
+++ security/manager/ssl/src/nsCrypto.cpp	16 Feb 2006 01:13:41 -0000
@@ -69,6 +69,7 @@
 #include "nsIDOMCryptoDialogs.h"
 #include "nsIFormSigningDialog.h"
 #include "nsIProxyObjectManager.h"
+#include "nsIJSContextStack.h"
 #include "jsapi.h"
 #include "jsdbgapi.h"
 #include <ctype.h>
@@ -243,7 +244,7 @@ nsCrypto::~nsCrypto()
 NS_IMETHODIMP
 nsCrypto::SetEnableSmartCardEvents(PRBool aEnable)
 {
-  nsresult rv;
+  nsresult rv = NS_OK;
 
   // this has the side effect of starting the nssComponent (and initializing
   // NSS) even if it isn't already going. Starting the nssComponent is a 
@@ -1773,15 +1774,22 @@ nsCryptoRunnable::Run()
   if (NS_FAILED(rv))
     return NS_ERROR_FAILURE;
 
+  // make sure the right context is on the stack for security checks
+  nsCOMPtr<nsIJSContextStack> stack(do_GetService("@mozilla.org/js/xpc/ContextStack;1"));
+  if (!stack || NS_FAILED(stack->Push(cx)))
+    return NS_ERROR_FAILURE;
+
   jsval retval;
   if (JS_EvaluateScriptForPrincipals(cx, m_args->m_scope, principals,
                                      m_args->m_jsCallback, 
                                      strlen(m_args->m_jsCallback),
                                      nsnull, 0,
                                      &retval) != JS_TRUE) {
-    return NS_ERROR_FAILURE;
+    rv = NS_ERROR_FAILURE;
   }
-  return NS_OK;
+
+  stack->Pop(nsnull);
+  return rv;
 }
 
 //Quick helper function to check if a newly issued cert
