Index: caps/src/nsScriptSecurityManager.cpp
===================================================================
RCS file: /cvsroot/mozilla/caps/src/nsScriptSecurityManager.cpp,v
retrieving revision 1.311
diff -u -8 -p -r1.311 nsScriptSecurityManager.cpp
--- caps/src/nsScriptSecurityManager.cpp	10 Nov 2006 23:49:01 -0000	1.311
+++ caps/src/nsScriptSecurityManager.cpp	15 Nov 2006 23:11:21 -0000
@@ -47,16 +47,17 @@
 #include "nsINestedURI.h"
 #include "nspr.h"
 #include "nsJSPrincipals.h"
 #include "nsSystemPrincipal.h"
 #include "nsPrincipal.h"
 #include "nsNullPrincipal.h"
 #include "nsXPIDLString.h"
 #include "nsCRT.h"
+#include "nsCRTGlue.h"
 #include "nsIJSContextStack.h"
 #include "nsDOMError.h"
 #include "nsDOMCID.h"
 #include "jsdbgapi.h"
 #include "nsIXPConnect.h"
 #include "nsIXPCSecurityManager.h"
 #include "nsTextFormatter.h"
 #include "nsIStringBundle.h"
@@ -365,17 +366,17 @@ nsScriptSecurityManager::SecurityCompare
 ////////////////////
 // Policy Storage //
 ////////////////////
 
 // Table of security levels
 PR_STATIC_CALLBACK(PRBool)
 DeleteCapability(nsHashKey *aKey, void *aData, void* closure)
 {
-    nsMemory::Free(aData);
+    NS_Free(aData);
     return PR_TRUE;
 }
 
 //-- Per-Domain Policy - applies to one or more protocols or hosts
 struct DomainEntry
 {
     DomainEntry(const char* aOrigin,
                 DomainPolicy* aDomainPolicy) : mOrigin(aOrigin),
@@ -3397,17 +3398,17 @@ nsScriptSecurityManager::InitDomainPolic
             secLevel.level = SCRIPT_SECURITY_SAME_ORIGIN_ACCESS;
         else 
         {  //-- pref value is the name of a capability
             nsCStringKey secLevelKey(prefValue);
             secLevel.capability =
                 NS_REINTERPRET_CAST(char*, mCapabilities->Get(&secLevelKey));
             if (!secLevel.capability)
             {
-                secLevel.capability = nsCRT::strdup(prefValue);
+                secLevel.capability = NS_strdup(prefValue);
                 if (!secLevel.capability)
                     break;
                 mCapabilities->Put(&secLevelKey, 
                                    secLevel.capability);
             }
         }
 
         *end = '\0';
