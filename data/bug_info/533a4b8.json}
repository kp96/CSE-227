{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas533a4b8\""},"diff":[{"chunks":[{"content":"@@ -1558,7 +1558,7 @@ nsNavHistory::EvaluateQueryForNode(const nsCOMArray<nsNavHistoryQuery>& aQueries","changes":[{"type":"normal","normal":true,"ln1":1558,"ln2":1558,"content":"       nsCOMArray<nsNavHistoryQuery> queries;"},{"type":"normal","normal":true,"ln1":1559,"ln2":1559,"content":"       queries.AppendObject(query);"},{"type":"normal","normal":true,"ln1":1560,"ln2":1560,"content":"       nsCOMArray<nsNavHistoryResultNode> filteredSet;"},{"type":"del","del":true,"ln":1561,"content":"-      nsresult rv = FilterResultSet(nsnull, inputSet, &filteredSet, queries);"},{"type":"add","add":true,"ln":1561,"content":"+      nsresult rv = FilterResultSet(nsnull, inputSet, &filteredSet, queries, aOptions);"},{"type":"normal","normal":true,"ln1":1562,"ln2":1562,"content":"       if (NS_FAILED(rv))"},{"type":"normal","normal":true,"ln1":1563,"ln2":1563,"content":"         continue;"},{"type":"normal","normal":true,"ln1":1564,"ln2":1564,"content":"       if (! filteredSet.Count())"}],"oldStart":1558,"oldLines":7,"newStart":1558,"newLines":7},{"content":"@@ -2144,6 +2144,32 @@ PRBool IsHistoryMenuQuery(const nsCOMArray<nsNavHistoryQuery>& aQueries, nsNavHi","changes":[{"type":"normal","normal":true,"ln1":2144,"ln2":2144,"content":"   return PR_TRUE;"},{"type":"normal","normal":true,"ln1":2145,"ln2":2145,"content":" }"},{"type":"normal","normal":true,"ln1":2146,"ln2":2146,"content":" "},{"type":"add","add":true,"ln":2147,"content":"+static"},{"type":"add","add":true,"ln":2148,"content":"+PRBool NeedToFilterResultSet(const nsCOMArray<nsNavHistoryQuery>& aQueries, "},{"type":"add","add":true,"ln":2149,"content":"+                             nsNavHistoryQueryOptions *aOptions)"},{"type":"add","add":true,"ln":2150,"content":"+{"},{"type":"add","add":true,"ln":2151,"content":"+  // optimize the case where we just want a list with no grouping: this"},{"type":"add","add":true,"ln":2152,"content":"+  // directly fills in the results and we avoid a copy of the whole list"},{"type":"add","add":true,"ln":2153,"content":"+  PRUint32 groupCount;"},{"type":"add","add":true,"ln":2154,"content":"+  const PRUint16 *groupings = aOptions->GroupingMode(&groupCount);"},{"type":"add","add":true,"ln":2155,"content":"+"},{"type":"add","add":true,"ln":2156,"content":"+  if (groupCount != 0 || aOptions->ExcludeQueries())"},{"type":"add","add":true,"ln":2157,"content":"+    return PR_TRUE;"},{"type":"add","add":true,"ln":2158,"content":"+"},{"type":"add","add":true,"ln":2159,"content":"+  PRInt32 i;"},{"type":"add","add":true,"ln":2160,"content":"+  for (i = 0; i < aQueries.Count(); i ++) {"},{"type":"add","add":true,"ln":2161,"content":"+    if (aQueries[i]->Folders().Length() != 0) {"},{"type":"add","add":true,"ln":2162,"content":"+      return PR_TRUE;"},{"type":"add","add":true,"ln":2163,"content":"+    } else {"},{"type":"add","add":true,"ln":2164,"content":"+      PRBool hasSearchTerms;"},{"type":"add","add":true,"ln":2165,"content":"+      nsresult rv = aQueries[i]->GetHasSearchTerms(&hasSearchTerms);"},{"type":"add","add":true,"ln":2166,"content":"+      if (NS_FAILED(rv) || hasSearchTerms)"},{"type":"add","add":true,"ln":2167,"content":"+        return PR_TRUE;"},{"type":"add","add":true,"ln":2168,"content":"+    }"},{"type":"add","add":true,"ln":2169,"content":"+  }"},{"type":"add","add":true,"ln":2170,"content":"+  return PR_FALSE;"},{"type":"add","add":true,"ln":2171,"content":"+}"},{"type":"add","add":true,"ln":2172,"content":"+"},{"type":"normal","normal":true,"ln1":2147,"ln2":2173,"content":" nsresult"},{"type":"normal","normal":true,"ln1":2148,"ln2":2174,"content":" nsNavHistory::ConstructQueryString(const nsCOMArray<nsNavHistoryQuery>& aQueries,"},{"type":"normal","normal":true,"ln1":2149,"ln2":2175,"content":"                                    nsNavHistoryQueryOptions *aOptions, "}],"oldStart":2144,"oldLines":6,"newStart":2144,"newLines":32},{"content":"@@ -2155,6 +2181,11 @@ nsNavHistory::ConstructQueryString(const nsCOMArray<nsNavHistoryQuery>& aQueries","changes":[{"type":"normal","normal":true,"ln1":2155,"ln2":2181,"content":"     return NS_ERROR_INVALID_ARG;"},{"type":"normal","normal":true,"ln1":2156,"ln2":2182,"content":"   }"},{"type":"normal","normal":true,"ln1":2157,"ln2":2183,"content":" "},{"type":"add","add":true,"ln":2184,"content":"+  // determine whether we can push maxResults constraints"},{"type":"add","add":true,"ln":2185,"content":"+  // into the queries as LIMIT, or if we need to do result count clamping later"},{"type":"add","add":true,"ln":2186,"content":"+  // using FilterResultSet()"},{"type":"add","add":true,"ln":2187,"content":"+  PRBool canLimitInSQL = !NeedToFilterResultSet(aQueries, aOptions);"},{"type":"add","add":true,"ln":2188,"content":"+"},{"type":"normal","normal":true,"ln1":2158,"ln2":2189,"content":"   // for the very special query for the history menu "},{"type":"normal","normal":true,"ln1":2159,"ln2":2190,"content":"   // we generate a super-optimized SQL query"},{"type":"normal","normal":true,"ln1":2160,"ln2":2191,"content":"   if (IsHistoryMenuQuery(aQueries, aOptions)) {"}],"oldStart":2155,"oldLines":6,"newStart":2181,"newLines":11},{"content":"@@ -2169,8 +2200,11 @@ nsNavHistory::ConstructQueryString(const nsCOMArray<nsNavHistoryQuery>& aQueries","changes":[{"type":"normal","normal":true,"ln1":2169,"ln2":2200,"content":"       \"(h.id IN (SELECT DISTINCT h.id FROM moz_historyvisits, \""},{"type":"normal","normal":true,"ln1":2170,"ln2":2201,"content":"       \" moz_places h WHERE place_id = \""},{"type":"normal","normal":true,"ln1":2171,"ln2":2202,"content":"       \" h.id AND hidden <> 1 AND visit_type <> 4 AND visit_type <> 0 \""},{"type":"del","del":true,"ln":2172,"content":"-      \" ORDER BY visit_date DESC LIMIT \");"},{"type":"del","del":true,"ln":2173,"content":"-    queryString.AppendInt(aOptions->MaxResults());"},{"type":"add","add":true,"ln":2203,"content":"+      \" ORDER BY visit_date DESC\");"},{"type":"add","add":true,"ln":2204,"content":"+    if (canLimitInSQL) {"},{"type":"add","add":true,"ln":2205,"content":"+      queryString += NS_LITERAL_CSTRING(\" LIMIT \");"},{"type":"add","add":true,"ln":2206,"content":"+      queryString.AppendInt(aOptions->MaxResults());"},{"type":"add","add":true,"ln":2207,"content":"+    }"},{"type":"normal","normal":true,"ln1":2174,"ln2":2208,"content":"     queryString += NS_LITERAL_CSTRING(\")) GROUP BY h.id ORDER BY 6 DESC\"); // v.visit_date"},{"type":"normal","normal":true,"ln1":2175,"ln2":2209,"content":"     return NS_OK;"},{"type":"normal","normal":true,"ln1":2176,"ln2":2210,"content":"   }"}],"oldStart":2169,"oldLines":8,"newStart":2200,"newLines":11},{"content":"@@ -2238,8 +2272,7 @@ nsNavHistory::ConstructQueryString(const nsCOMArray<nsNavHistoryQuery>& aQueries","changes":[{"type":"normal","normal":true,"ln1":2238,"ln2":2272,"content":"       \"LEFT OUTER JOIN moz_historyvisits v ON b.fk = v.place_id \""},{"type":"normal","normal":true,"ln1":2239,"ln2":2273,"content":"       \"LEFT OUTER JOIN moz_favicons f ON h.favicon_id = f.id \");"},{"type":"normal","normal":true,"ln1":2240,"ln2":2274,"content":"       groupBy = NS_LITERAL_CSTRING(\" GROUP BY b.id\");"},{"type":"del","del":true,"ln":2241,"content":"-    }"},{"type":"del","del":true,"ln":2242,"content":"-    else {"},{"type":"add","add":true,"ln":2275,"content":"+    } else {"},{"type":"normal","normal":true,"ln1":2243,"ln2":2276,"content":"       // XXX: implement support for nsINavHistoryQueryOptions::QUERY_TYPE_UNIFIED "},{"type":"normal","normal":true,"ln1":2244,"ln2":2277,"content":"       return NS_ERROR_NOT_IMPLEMENTED;"},{"type":"normal","normal":true,"ln1":2245,"ln2":2278,"content":"     }"}],"oldStart":2238,"oldLines":8,"newStart":2272,"newLines":7},{"content":"@@ -2334,8 +2367,8 @@ nsNavHistory::ConstructQueryString(const nsCOMArray<nsNavHistoryQuery>& aQueries","changes":[{"type":"normal","normal":true,"ln1":2334,"ln2":2367,"content":"       NS_NOTREACHED(\"Invalid sorting mode\");"},{"type":"normal","normal":true,"ln1":2335,"ln2":2368,"content":"   }"},{"type":"normal","normal":true,"ln1":2336,"ln2":2369,"content":" "},{"type":"del","del":true,"ln":2337,"content":"-  // limit clause if there are 'maxResults'"},{"type":"del","del":true,"ln":2338,"content":"-  if (aOptions->MaxResults() > 0) {"},{"type":"add","add":true,"ln":2370,"content":"+  // limit clause if there are 'maxResults' and can use limit in our SQL"},{"type":"add","add":true,"ln":2371,"content":"+  if (canLimitInSQL && aOptions->MaxResults() > 0) {"},{"type":"normal","normal":true,"ln1":2339,"ln2":2372,"content":"     queryString += NS_LITERAL_CSTRING(\" LIMIT \");"},{"type":"normal","normal":true,"ln1":2340,"ln2":2373,"content":"     queryString.AppendInt(aOptions->MaxResults());"},{"type":"normal","normal":true,"ln1":2341,"ln2":2374,"content":"     queryString.AppendLiteral(\" \");"}],"oldStart":2334,"oldLines":8,"newStart":2367,"newLines":8},{"content":"@@ -2390,55 +2423,30 @@ nsNavHistory::GetQueryResults(nsNavHistoryQueryResultNode *aResultNode,","changes":[{"type":"normal","normal":true,"ln1":2390,"ln2":2423,"content":"   // bind parameters"},{"type":"normal","normal":true,"ln1":2391,"ln2":2424,"content":"   PRInt32 numParameters = 0;"},{"type":"normal","normal":true,"ln1":2392,"ln2":2425,"content":" "},{"type":"del","del":true,"ln":2393,"content":"-  // optimize the case where we just want a list with no grouping: this"},{"type":"del","del":true,"ln":2394,"content":"-  // directly fills in the results and we avoid a copy of the whole list"},{"type":"del","del":true,"ln":2395,"content":"-  PRBool resultAsList = PR_TRUE;"},{"type":"del","del":true,"ln":2396,"content":"-  PRUint32 groupCount;"},{"type":"del","del":true,"ln":2397,"content":"-  const PRUint16 *groupings = aOptions->GroupingMode(&groupCount);"},{"type":"del","del":true,"ln":2398,"content":"-"},{"type":"del","del":true,"ln":2399,"content":"-  if (groupCount != 0 || aOptions->ExcludeQueries()) {"},{"type":"del","del":true,"ln":2400,"content":"-    resultAsList = PR_FALSE;"},{"type":"del","del":true,"ln":2401,"content":"-  }"},{"type":"del","del":true,"ln":2402,"content":"-"},{"type":"del","del":true,"ln":2403,"content":"-  PRInt32 i;"},{"type":"del","del":true,"ln":2404,"content":"-  for (i = 0; i < aQueries.Count(); i ++) {"},{"type":"del","del":true,"ln":2405,"content":"-    PRInt32 clauseParameters = 0;"},{"type":"del","del":true,"ln":2406,"content":"-    rv = BindQueryClauseParameters(statement, numParameters,"},{"type":"del","del":true,"ln":2407,"content":"-                                   aQueries[i], aOptions, &clauseParameters);"},{"type":"del","del":true,"ln":2408,"content":"-    NS_ENSURE_SUCCESS(rv, rv);"},{"type":"del","del":true,"ln":2409,"content":"-    numParameters += clauseParameters;"},{"type":"del","del":true,"ln":2410,"content":"-    if (resultAsList) {"},{"type":"del","del":true,"ln":2411,"content":"-      if (aQueries[i]->Folders().Length() != 0) {"},{"type":"del","del":true,"ln":2412,"content":"-        resultAsList = PR_FALSE;"},{"type":"del","del":true,"ln":2413,"content":"-      } else {"},{"type":"del","del":true,"ln":2414,"content":"-        PRBool hasSearchTerms;"},{"type":"del","del":true,"ln":2415,"content":"-        rv = aQueries[i]->GetHasSearchTerms(&hasSearchTerms);"},{"type":"del","del":true,"ln":2416,"content":"-        if (hasSearchTerms)"},{"type":"del","del":true,"ln":2417,"content":"-          resultAsList = PR_FALSE;"},{"type":"del","del":true,"ln":2418,"content":"-        NS_ENSURE_SUCCESS(rv, rv);"},{"type":"del","del":true,"ln":2419,"content":"-      }"},{"type":"del","del":true,"ln":2420,"content":"-    }"},{"type":"del","del":true,"ln":2421,"content":"-  }"},{"type":"del","del":true,"ln":2422,"content":"-"},{"type":"del","del":true,"ln":2423,"content":"-  if (resultAsList) {"},{"type":"del","del":true,"ln":2424,"content":"-    rv = ResultsAsList(statement, aOptions, aResults);"},{"type":"del","del":true,"ln":2425,"content":"-    NS_ENSURE_SUCCESS(rv, rv);"},{"type":"del","del":true,"ln":2426,"content":"-  } else {"},{"type":"add","add":true,"ln":2426,"content":"+  // optimize the case where we just use the results as is"},{"type":"add","add":true,"ln":2427,"content":"+  // and we don't need to do any post-query filtering"},{"type":"add","add":true,"ln":2428,"content":"+  if (NeedToFilterResultSet(aQueries, aOptions)) {"},{"type":"normal","normal":true,"ln1":2427,"ln2":2429,"content":"     // generate the toplevel results"},{"type":"normal","normal":true,"ln1":2428,"ln2":2430,"content":"     nsCOMArray<nsNavHistoryResultNode> toplevel;"},{"type":"normal","normal":true,"ln1":2429,"ln2":2431,"content":"     rv = ResultsAsList(statement, aOptions, &toplevel);"},{"type":"normal","normal":true,"ln1":2430,"ln2":2432,"content":"     NS_ENSURE_SUCCESS(rv, rv);"},{"type":"normal","normal":true,"ln1":2431,"ln2":2433,"content":" "},{"type":"add","add":true,"ln":2434,"content":"+    PRUint32 groupCount;"},{"type":"add","add":true,"ln":2435,"content":"+    const PRUint16 *groupings = aOptions->GroupingMode(&groupCount);"},{"type":"add","add":true,"ln":2436,"content":"+"},{"type":"normal","normal":true,"ln1":2432,"ln2":2437,"content":"     if (groupCount == 0) {"},{"type":"del","del":true,"ln":2433,"content":"-      FilterResultSet(aResultNode, toplevel, aResults, aQueries);"},{"type":"add","add":true,"ln":2438,"content":"+      FilterResultSet(aResultNode, toplevel, aResults, aQueries, aOptions);"},{"type":"normal","normal":true,"ln1":2434,"ln2":2439,"content":"     } else {"},{"type":"normal","normal":true,"ln1":2435,"ln2":2440,"content":"       nsCOMArray<nsNavHistoryResultNode> filteredResults;"},{"type":"del","del":true,"ln":2436,"content":"-      FilterResultSet(aResultNode, toplevel, &filteredResults, aQueries);"},{"type":"add","add":true,"ln":2441,"content":"+      FilterResultSet(aResultNode, toplevel, &filteredResults, aQueries, aOptions);"},{"type":"normal","normal":true,"ln1":2437,"ln2":2442,"content":"       rv = RecursiveGroup(aResultNode, filteredResults, groupings, groupCount,"},{"type":"normal","normal":true,"ln1":2438,"ln2":2443,"content":"                           aResults);"},{"type":"normal","normal":true,"ln1":2439,"ln2":2444,"content":"       NS_ENSURE_SUCCESS(rv, rv);"},{"type":"normal","normal":true,"ln1":2440,"ln2":2445,"content":"     }"},{"type":"del","del":true,"ln":2441,"content":"-  }"},{"type":"add","add":true,"ln":2446,"content":"+  } else {"},{"type":"add","add":true,"ln":2447,"content":"+    rv = ResultsAsList(statement, aOptions, aResults);"},{"type":"add","add":true,"ln":2448,"content":"+    NS_ENSURE_SUCCESS(rv, rv);"},{"type":"add","add":true,"ln":2449,"content":"+  } "},{"type":"normal","normal":true,"ln1":2442,"ln2":2450,"content":" "},{"type":"normal","normal":true,"ln1":2443,"ln2":2451,"content":"   return NS_OK;"},{"type":"normal","normal":true,"ln1":2444,"ln2":2452,"content":" }"}],"oldStart":2390,"oldLines":55,"newStart":2423,"newLines":30},{"content":"@@ -4127,16 +4135,22 @@ nsNavHistory::URIHasTag(nsIURI* aURI, const nsAString& aTag)","changes":[{"type":"normal","normal":true,"ln1":4127,"ln2":4135,"content":" "},{"type":"normal","normal":true,"ln1":4128,"ln2":4136,"content":" // nsNavHistory::FilterResultSet"},{"type":"normal","normal":true,"ln1":4129,"ln2":4137,"content":" //"},{"type":"del","del":true,"ln":4130,"content":"-//    This does some post-query-execution filtering:"},{"type":"del","del":true,"ln":4131,"content":"-//      - searching on title & url"},{"type":"del","del":true,"ln":4132,"content":"-//      - parent folder (recursively)"},{"type":"del","del":true,"ln":4133,"content":"-//      - excludeQueries"},{"type":"add","add":true,"ln":4138,"content":"+// This does some post-query-execution filtering:"},{"type":"add","add":true,"ln":4139,"content":"+//   - searching on title & url"},{"type":"add","add":true,"ln":4140,"content":"+//   - parent folder (recursively)"},{"type":"add","add":true,"ln":4141,"content":"+//   - excludeQueries"},{"type":"add","add":true,"ln":4142,"content":"+//   - tags"},{"type":"add","add":true,"ln":4143,"content":"+//   - limit count"},{"type":"add","add":true,"ln":4144,"content":"+//"},{"type":"add","add":true,"ln":4145,"content":"+// Note:  changes to filtering in FilterResultSet() "},{"type":"add","add":true,"ln":4146,"content":"+// may require changes to NeedToFilterResultSet()"},{"type":"normal","normal":true,"ln1":4134,"ln2":4147,"content":" "},{"type":"normal","normal":true,"ln1":4135,"ln2":4148,"content":" nsresult"},{"type":"normal","normal":true,"ln1":4136,"ln2":4149,"content":" nsNavHistory::FilterResultSet(nsNavHistoryQueryResultNode* aQueryNode,"},{"type":"normal","normal":true,"ln1":4137,"ln2":4150,"content":"                               const nsCOMArray<nsNavHistoryResultNode>& aSet,"},{"type":"normal","normal":true,"ln1":4138,"ln2":4151,"content":"                               nsCOMArray<nsNavHistoryResultNode>* aFiltered,"},{"type":"del","del":true,"ln":4139,"content":"-                              const nsCOMArray<nsNavHistoryQuery>& aQueries)"},{"type":"add","add":true,"ln":4152,"content":"+                              const nsCOMArray<nsNavHistoryQuery>& aQueries,"},{"type":"add","add":true,"ln":4153,"content":"+                              nsNavHistoryQueryOptions *aOptions)"},{"type":"normal","normal":true,"ln1":4140,"ln2":4154,"content":" {"},{"type":"normal","normal":true,"ln1":4141,"ln2":4155,"content":"   nsresult rv;"},{"type":"normal","normal":true,"ln1":4142,"ln2":4156,"content":" "}],"oldStart":4127,"oldLines":16,"newStart":4135,"newLines":22},{"content":"@@ -4260,6 +4274,9 @@ nsNavHistory::FilterResultSet(nsNavHistoryQueryResultNode* aQueryNode,","changes":[{"type":"normal","normal":true,"ln1":4260,"ln2":4274,"content":"     }"},{"type":"normal","normal":true,"ln1":4261,"ln2":4275,"content":"     if (appendNode)"},{"type":"normal","normal":true,"ln1":4262,"ln2":4276,"content":"       aFiltered->AppendObject(aSet[nodeIndex]);"},{"type":"add","add":true,"ln":4277,"content":"+      "},{"type":"add","add":true,"ln":4278,"content":"+    if (aOptions->MaxResults() > 0 && aFiltered->Count() >= aOptions->MaxResults())"},{"type":"add","add":true,"ln":4279,"content":"+      break;"},{"type":"normal","normal":true,"ln1":4263,"ln2":4280,"content":"   }"},{"type":"normal","normal":true,"ln1":4264,"ln2":4281,"content":" "},{"type":"normal","normal":true,"ln1":4265,"ln2":4282,"content":"   // de-allocate the matrixes"}],"oldStart":4260,"oldLines":6,"newStart":4274,"newLines":9}],"deletions":49,"additions":66,"from":"toolkit/components/places/src/nsNavHistory.cpp","to":"toolkit/components/places/src/nsNavHistory.cpp","index":["f4cf4c6..b74bf49","100644"]},{"chunks":[{"content":"@@ -516,7 +516,8 @@ protected:","changes":[{"type":"normal","normal":true,"ln1":516,"ln2":516,"content":"   nsresult FilterResultSet(nsNavHistoryQueryResultNode *aParentNode,"},{"type":"normal","normal":true,"ln1":517,"ln2":517,"content":"                            const nsCOMArray<nsNavHistoryResultNode>& aSet,"},{"type":"normal","normal":true,"ln1":518,"ln2":518,"content":"                            nsCOMArray<nsNavHistoryResultNode>* aFiltered,"},{"type":"del","del":true,"ln":519,"content":"-                           const nsCOMArray<nsNavHistoryQuery>& aQueries);"},{"type":"add","add":true,"ln":519,"content":"+                           const nsCOMArray<nsNavHistoryQuery>& aQueries,"},{"type":"add","add":true,"ln":520,"content":"+                           nsNavHistoryQueryOptions* aOptions);"},{"type":"normal","normal":true,"ln1":520,"ln2":521,"content":" "},{"type":"normal","normal":true,"ln1":521,"ln2":522,"content":"   // observers"},{"type":"normal","normal":true,"ln1":522,"ln2":523,"content":"   nsMaybeWeakPtrArray<nsINavHistoryObserver> mObservers;"}],"oldStart":516,"oldLines":7,"newStart":516,"newLines":8}],"deletions":1,"additions":2,"from":"toolkit/components/places/src/nsNavHistory.h","to":"toolkit/components/places/src/nsNavHistory.h","index":["650b0c3..d6f4fbd","100644"]}]}