Index: jsscript.c
===================================================================
RCS file: /cvsroot/mozilla/js/src/jsscript.c,v
retrieving revision 3.80
diff -p -U10 -r3.80 jsscript.c
--- jsscript.c	8 Oct 2005 00:28:44 -0000	3.80
+++ jsscript.c	8 Oct 2005 04:46:27 -0000
@@ -299,20 +299,24 @@ script_exec(JSContext *cx, JSObject *obj
              * use.  We could use parent (see above), but Script.prototype.exec
              * might be a shared/sealed "superglobal" method.  A more general
              * approach would use cx->globalObject, which will be the same as
              * exec.__parent__ in the non-superglobal case.  In the superglobal
              * case it's the right object: the global, not the superglobal.
              */
             scopeobj = cx->globalObject;
         }
     }
 
+    OBJ_TO_INNER_OBJECT(cx, scopeobj);
+    if (!scopeobj)
+        return JS_FALSE;
+
     /* Belt-and-braces: check that this script object has access to scopeobj. */
     principals = script->principals;
     if (principals) {
         rt = cx->runtime;
         if (rt->findObjectPrincipals) {
             scopePrincipals = rt->findObjectPrincipals(cx, scopeobj);
             if (scopePrincipals &&
                 !principals->subsume(principals, scopePrincipals)) {
                 JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,
                                      JSMSG_BAD_INDIRECT_CALL,
