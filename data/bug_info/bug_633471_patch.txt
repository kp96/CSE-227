# HG changeset patch
# Parent 5a096b270075e87ce5aa771b868beee515194eb7
Bug 633471 crash if I delete a PKCS#11 certificate when smart card is logged out
r=kaie

diff --git a/security/manager/ssl/src/nsCertTree.cpp b/security/manager/ssl/src/nsCertTree.cpp
--- a/security/manager/ssl/src/nsCertTree.cpp
+++ b/security/manager/ssl/src/nsCertTree.cpp
@@ -260,15 +260,17 @@ nsCertTree::CountOrganizations()
   certCount = mDispInfo.Length();
   if (certCount == 0) return 0;
   nsCOMPtr<nsIX509Cert> orgCert = nsnull;
-  if (mDispInfo.ElementAt(0)->mAddonInfo) {
-    orgCert = mDispInfo.ElementAt(0)->mAddonInfo->mCert;
+  nsCertAddonInfo *addonInfo = mDispInfo.ElementAt(0)->mAddonInfo;
+  if (addonInfo) {
+    orgCert = addonInfo->mCert;
   }
   nsCOMPtr<nsIX509Cert> nextCert = nsnull;
   PRInt32 orgCount = 1;
   for (i=1; i<certCount; i++) {
     nextCert = nsnull;
-    if (mDispInfo.ElementAt(i)->mAddonInfo) {
-      nextCert = mDispInfo.ElementAt(i)->mAddonInfo->mCert;
+    addonInfo = mDispInfo.SafeElementAt(i)->mAddonInfo;
+    if (addonInfo) {
+      nextCert = addonInfo->mCert;
     }
     // XXX we assume issuer org is always criterion 1
     if (CmpBy(&mCompareCache, orgCert, nextCert, sort_IssuerOrg, sort_None, sort_None) != 0) {
@@ -313,10 +315,11 @@ nsCertTree::GetCertAtIndex(PRInt32 index
     return nsnull;
 
   nsIX509Cert *rawPtr = nsnull;
+  nsCertAddonInfo *addonInfo;
   if (certdi->mCert) {
     rawPtr = certdi->mCert;
-  } else if (certdi->mAddonInfo) {
-    rawPtr = certdi->mAddonInfo->mCert;
+  } else if ((addonInfo = certdi->mAddonInfo)) {
+    rawPtr = addonInfo->mCert;
   }
   NS_IF_ADDREF(rawPtr);
   return rawPtr;
@@ -338,7 +341,7 @@ nsCertTree::GetDispInfoAtIndex(PRInt32 i
       PRInt32 certIndex = cIndex + index - idx;
       if (outAbsoluteCertOffset)
         *outAbsoluteCertOffset = certIndex;
-      nsRefPtr<nsCertTreeDispInfo> certdi = mDispInfo.ElementAt(certIndex);
+      nsRefPtr<nsCertTreeDispInfo> certdi = mDispInfo.SafeElementAt(certIndex);
       if (certdi) {
         nsCertTreeDispInfo *raw = certdi.get();
         NS_IF_ADDREF(raw);
@@ -616,9 +619,10 @@ nsCertTree::GetCertsByTypeFromCertList(C
       int InsertPosition = 0;
       for (; InsertPosition < count; ++InsertPosition) {
         nsCOMPtr<nsIX509Cert> cert = nsnull;
-        nsRefPtr<nsCertTreeDispInfo> elem = mDispInfo.ElementAt(InsertPosition);
-        if (elem->mAddonInfo) {
-          cert = mDispInfo.ElementAt(InsertPosition)->mAddonInfo->mCert;
+        nsRefPtr<nsCertTreeDispInfo> elem = mDispInfo.SafeElementAt(InsertPosition);
+        nsCertAddonInfo *addonInfo = elem->mAddonInfo;
+        if (addonInfo) {
+          cert = addonInfo->mCert;
         }
         if ((*aCertCmpFn)(aCertCmpFnArg, pipCert, cert) < 0) {
           break;
@@ -747,8 +751,9 @@ nsCertTree::UpdateUIContents()
 if (count) {
   PRUint32 j = 0;
   nsCOMPtr<nsIX509Cert> orgCert = nsnull;
-  if (mDispInfo.ElementAt(j)->mAddonInfo) {
-    orgCert = mDispInfo.ElementAt(j)->mAddonInfo->mCert;
+  nsCertAddonInfo *addonInfo = mDispInfo.ElementAt(j)->mAddonInfo;
+  if (addonInfo) {
+    orgCert = addonInfo->mCert;
   }
   for (PRInt32 i=0; i<mNumOrgs; i++) {
     nsString &orgNameRef = mTreeArray[i].orgName;
@@ -765,15 +770,16 @@ if (count) {
     mTreeArray[i].numChildren = 1;
     if (++j >= count) break;
     nsCOMPtr<nsIX509Cert> nextCert = nsnull;
-    if (mDispInfo.ElementAt(j)->mAddonInfo) {
-      nextCert = mDispInfo.ElementAt(j)->mAddonInfo->mCert;
+    nsCertAddonInfo *addonInfo = mDispInfo.SafeElementAt(j)->mAddonInfo;
+    if (addonInfo) {
+      nextCert = addonInfo->mCert;
     }
     while (0 == CmpBy(&mCompareCache, orgCert, nextCert, sort_IssuerOrg, sort_None, sort_None)) {
       mTreeArray[i].numChildren++;
       if (++j >= count) break;
       nextCert = nsnull;
-      if (mDispInfo.ElementAt(j)->mAddonInfo) {
-        nextCert = mDispInfo.ElementAt(j)->mAddonInfo->mCert;
+      if ((addonInfo = mDispInfo.SafeElementAt(j)->mAddonInfo)) {
+        nextCert = addonInfo->mCert;
       }
     }
     orgCert = nextCert;
@@ -813,18 +819,19 @@ nsCertTree::DeleteEntryObject(PRUint32 i
     if (index < idx + nc) { // cert is within range of this thread
       PRInt32 certIndex = cIndex + index - idx;
 
-      nsRefPtr<nsCertTreeDispInfo> certdi = mDispInfo.ElementAt(certIndex);
+      nsRefPtr<nsCertTreeDispInfo> certdi = mDispInfo.SafeElementAt(certIndex);
       nsCOMPtr<nsIX509Cert> cert = nsnull;
-      if (certdi->mAddonInfo) {
-        cert = certdi->mAddonInfo->mCert;
+      nsCertAddonInfo *addonInfo = certdi->mAddonInfo;
+      if (addonInfo) {
+        cert = addonInfo->mCert;
       }
       PRBool canRemoveEntry = PR_FALSE;
-
+      addonInfo = certdi->mAddonInfo;
       if (certdi->mTypeOfEntry == nsCertTreeDispInfo::host_port_override) {
         mOverrideService->ClearValidityOverride(certdi->mAsciiHost, certdi->mPort);
-        if (certdi->mAddonInfo) {
-          certdi->mAddonInfo->mUsageCount--;
-          if (certdi->mAddonInfo->mUsageCount == 0) {
+        if (addonInfo) {
+          addonInfo->mUsageCount--;
+          if (addonInfo->mUsageCount == 0) {
             // The certificate stored in the database is no longer
             // referenced by any other object displayed.
             // That means we no longer need to keep it around
@@ -834,7 +841,7 @@ nsCertTree::DeleteEntryObject(PRUint32 i
         } 
       }
       else {
-        if (certdi->mAddonInfo->mUsageCount > 1) {
+        if (addonInfo->mUsageCount > 1) {
           // user is trying to delete a perm trusted cert,
           // although there are still overrides stored,
           // so, we keep the cert, but remove the trust
@@ -1144,8 +1151,10 @@ nsCertTree::GetCellText(PRInt32 row, nsI
     return NS_ERROR_FAILURE;
 
   nsCOMPtr<nsIX509Cert> cert = certdi->mCert;
-  if (!cert && certdi->mAddonInfo) {
-    cert = certdi->mAddonInfo->mCert;
+  if (!cert) {
+    nsCertAddonInfo *addonInfo = certdi->mAddonInfo;
+    if (addonInfo)
+      cert = addonInfo->mCert;
   }
 
   PRInt32 colIndex;
