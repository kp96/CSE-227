Create exceptions using the current scope chain as the head of the scope chain.

diff --git a/js/src/xpconnect/src/xpcthrower.cpp b/js/src/xpconnect/src/xpcthrower.cpp
--- a/js/src/xpconnect/src/xpcthrower.cpp
+++ b/js/src/xpconnect/src/xpcthrower.cpp
@@ -260,6 +260,16 @@ XPCThrower::BuildAndThrowException(JSCon
         JS_ReportOutOfMemory(cx);
 }
 
+static JSObject*
+GetGlobalObject(JSContext* cx, JSObject* start)
+{
+    JSObject* parent;
+
+    while((parent = JS_GetParent(cx, start)) != nsnull)
+        start = parent;
+    return start;
+}
+
 // static
 JSBool
 XPCThrower::ThrowExceptionObject(JSContext* cx, nsIException* e)
@@ -270,8 +280,10 @@ XPCThrower::ThrowExceptionObject(JSConte
         nsXPConnect* xpc = nsXPConnect::GetXPConnect();
         if(xpc)
         {
-            // XXX funky JS_GetGlobalObject alert!
-            JSObject* glob = JS_GetGlobalObject(cx);
+            JSObject* glob = JS_GetScopeChain(cx);
+            if(!glob)
+                return JS_FALSE;
+            glob = GetGlobalObject(cx, glob);
 
             nsCOMPtr<nsIXPConnectJSObjectHolder> holder;
             nsresult rv = xpc->WrapNative(cx, glob, e,
