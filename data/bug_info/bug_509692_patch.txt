* * *
* * *

diff --git a/build/automation.py.in b/build/automation.py.in
--- a/build/automation.py.in
+++ b/build/automation.py.in
@@ -241,20 +241,21 @@ user_pref("browser.warnOnQuit", false);
 user_pref("browser.warnOnQuit", false);
 user_pref("accessibility.typeaheadfind.autostart", false);
 user_pref("javascript.options.showInConsole", true);
 user_pref("layout.debug.enable_data_xbl", true);
 user_pref("browser.EULA.override", true);
 user_pref("javascript.options.jit.content", true);
 user_pref("gfx.color_management.force_srgb", true);
 user_pref("security.default_personal_cert", "Select Automatically"); // Need to client auth test be w/o any dialogs
 user_pref("network.http.prompt-temp-redirect", false);
 user_pref("media.cache_size", 100);
+user_pref("security.warn_viewing_mixed", false);
 
 user_pref("geo.wifi.uri", "http://localhost:8888/tests/dom/tests/mochitest/geolocation/network_geolocation.sjs");
 user_pref("camino.warn_when_closing", false); // Camino-only, harmless to others
 """
   prefs.append(part)
 
   locations = readLocations()
 
   # Grant God-power to all the privileged servers on which tests run.
   privileged = filter(lambda loc: "privileged" in loc.options, locations)
diff --git a/build/pgo/genpgocert.py.in b/build/pgo/genpgocert.py.in
--- a/build/pgo/genpgocert.py.in
+++ b/build/pgo/genpgocert.py.in
@@ -194,28 +194,28 @@ def createSSLServerCertificate(profileDi
   return 0
 
 
 if len(sys.argv) == 1:
   print "Specify --gen-server or --gen-ca"
   sys.exit(1)
 
 if sys.argv[1] == "--gen-server":
   certificateStatus = createSSLServerCertificate(PROFILE_DIR, CERTS_SRC_DIR)
   if certificateStatus != 0:
-    print "ERROR FAIL: SSL Server Certificate generation"
+    print "TEST-UNEXPECTED-FAIL | SSL Server Certificate generation"
   
   sys.exit(certificateStatus)
   
 if sys.argv[1] == "--gen-ca":
   certificateStatus = createCertificateAuthority(PROFILE_DIR, CERTS_SRC_DIR)
   if certificateStatus != 0:
-    print "ERROR FAIL: Certificate Authority generation"
+    print "TEST-UNEXPECTED-FAIL | Certificate Authority generation"
   else:
     print "\n\n"
     print "==================================================="
     print " IMPORTANT:"
     print " To use this new certificate authority in tests"
     print " run 'make' at testing/mochitest"
     print "==================================================="
 
   sys.exit(certificateStatus)
 
diff --git a/build/pgo/server-locations.txt b/build/pgo/server-locations.txt
--- a/build/pgo/server-locations.txt
+++ b/build/pgo/server-locations.txt
@@ -151,10 +151,14 @@ https://sub.sectest1.example.org:443
 https://sub.sectest1.example.org:443
 
 #
 # Used while testing the url-classifier
 #
 http://malware.example.com:80
 
 # Bug 483437, 484111
 https://www.bank1.com:443           privileged,cert=escapeattack1
 https://www.bank2.com:443           privileged,cert=escapeattack2
+
+# Bug 483437, 484111
+https://www.bank1.com:443           privileged,cert=escapeattack1
+https://www.bank2.com:443           privileged,cert=escapeattack2
diff --git a/security/manager/ssl/tests/mochitest/Makefile.in b/security/manager/ssl/tests/mochitest/Makefile.in
--- a/security/manager/ssl/tests/mochitest/Makefile.in
+++ b/security/manager/ssl/tests/mochitest/Makefile.in
@@ -33,30 +33,27 @@
 # and other provisions required by the GPL or the LGPL. If you do not delete
 # the provisions above, a recipient may use your version of this file under
 # the terms of any one of the MPL, the GPL or the LGPL.
 #
 # ***** END LICENSE BLOCK *****
 
 DEPTH		= ../../../../..
 topsrcdir	= @top_srcdir@
 srcdir		= @srcdir@
 VPATH		= @srcdir@
-relativesrcdir	= security/ssl
 
-include $(DEPTH)/config/autoconf.mk
+MODULE		= pipnss
+DIRS = \
+  bugs \
+  mixedcontent \
+  $(NULL)
+
 include $(topsrcdir)/config/rules.mk
-
-# _CHROME_FILES	= \
-#		$(NULL)
-#	test_bug413909.html \ # Leaks the world.
-
-# libs:: $(_CHROME_FILES)
-#	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/chrome/$(relativesrcdir)
 
 _TEST_FILES = \
         test_bug480509.html \
         test_bug483440.html \
         test_bug484111.html \
         $(NULL)
 
 libs:: $(_TEST_FILES)
 	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir) 
diff --git a/security/manager/ssl/tests/mochitest/bugs/Makefile.in b/security/manager/ssl/tests/mochitest/bugs/Makefile.in
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/bugs/Makefile.in
@@ -0,0 +1,61 @@
+#
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Mozilla Foundation.
+# Portions created by the Initial Developer are Copyright (C) 2007
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Jan Bambas <honzab@firemni.cz>
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either of the GNU General Public License Version 2 or later (the "GPL"),
+# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+DEPTH		= ../../../../../..
+topsrcdir	= @top_srcdir@
+srcdir		= @srcdir@
+VPATH		= @srcdir@
+relativesrcdir	= security/ssl/bugs
+
+include $(DEPTH)/config/autoconf.mk
+include $(topsrcdir)/config/rules.mk
+
+_TEST_FILES = \
+        test_bug480509.html \
+        test_bug483440.html \
+        test_bug484111.html \
+        $(NULL)
+
+_CHROME_FILES = \
+        test_bug413909.html \
+        $(NULL)
+
+libs:: $(_TEST_FILES)
+	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir)
+libs:: $(_CHROME_FILES)
+	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/chrome/$(relativesrcdir)
diff --git a/security/manager/ssl/tests/mochitest/test_bug413909.html b/security/manager/ssl/tests/mochitest/bugs/test_bug413909.html
rename from security/manager/ssl/tests/mochitest/test_bug413909.html
rename to security/manager/ssl/tests/mochitest/bugs/test_bug413909.html
diff --git a/security/manager/ssl/tests/mochitest/bugs/test_bug480509.html b/security/manager/ssl/tests/mochitest/bugs/test_bug480509.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/bugs/test_bug480509.html
@@ -0,0 +1,88 @@
+<html>
+<head>
+  <title>Test bug 483437 and bug 480509</title>
+  <script type="text/javascript" src="chrome://mochikit/content/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>        
+  <link rel="stylesheet" type="text/css" href="chrome://mochikit/content/tests/SimpleTest/test.css" />
+</head>
+<body onload="onWindowLoad()">
+
+<iframe src="https://www.bank1.com/" onload="onFrameLoad()"></iframe>
+
+<script class="testbody" type="text/javascript">
+
+SimpleTest.waitForExplicitFinish();
+
+function badCertListener() 
+{
+}
+
+badCertListener.prototype = {
+  badCertCaught: false,
+
+  getInterface: function (aIID) {
+    return this.QueryInterface(aIID);
+  },
+
+  QueryInterface: function(aIID) {
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+    if (aIID.equals(Components.interfaces.nsIBadCertListener2) ||
+        aIID.equals(Components.interfaces.nsIInterfaceRequestor) ||
+        aIID.equals(Components.interfaces.nsISupports))
+      return this;
+
+    throw Components.results.NS_ERROR_NO_INTERFACE;
+  },  
+
+  testCert: function(cert1, expected)
+  {
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+    var certDumpTree1 = Components.classes["@mozilla.org/security/nsASN1Tree;1"]
+                       .createInstance(Components.interfaces.nsIASN1Tree);
+    certDumpTree1.loadASN1Structure(cert1.ASN1Structure);
+    var value1 = certDumpTree1.getDisplayData(9);
+    
+    is(value1, expected, "Incorrect subject recognized");
+  },
+  
+  notifyCertProblem: function(socketInfo, sslStatus, targetHost) {
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+    var cert = sslStatus.QueryInterface(Components.interfaces.nsISSLStatus)
+      .serverCert;
+    this.testCert(cert, "CN = www.bank1.com\\00www.bad-guy.com\n");
+
+    this.badCertCaught = true;
+    return true;
+  }
+}
+
+function onFrameLoad()
+{
+  ok(false, "Attackers page failed to load");
+}
+
+function onWindowLoad()
+{
+  var req = new XMLHttpRequest();
+  var certListener = new badCertListener();
+  try
+  {
+    req.open("GET", "https://www.bank1.com/", false);
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+    req.channel.notificationCallbacks = certListener;
+    req.send(null);
+  }
+  catch(ex)
+  {
+    // ignore
+  }
+  
+  ok(certListener.badCertCaught, "We Caught the invalid certificate");
+  
+  SimpleTest.finish();
+}
+
+</script>
+
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/bugs/test_bug483440.html b/security/manager/ssl/tests/mochitest/bugs/test_bug483440.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/bugs/test_bug483440.html
@@ -0,0 +1,65 @@
+<html>
+<head>
+  <title>Test bug 483437 and bug 480509</title>
+  <script type="text/javascript" src="chrome://mochikit/content/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>        
+  <link rel="stylesheet" type="text/css" href="chrome://mochikit/content/tests/SimpleTest/test.css" />
+</head>
+<body>
+
+<script class="testbody" type="text/javascript">
+
+netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+
+var certdb = Components.classes["@mozilla.org/security/x509certdb;1"]
+  .getService(Components.interfaces.nsIX509CertDB);
+
+function test(certNick, expected)
+{
+  var cert1 = certdb.findCertByNickname(null, certNick);
+  var certDumpTree1 = Components.classes["@mozilla.org/security/nsASN1Tree;1"]
+                     .createInstance(Components.interfaces.nsIASN1Tree);
+  certDumpTree1.loadASN1Structure(cert1.ASN1Structure);
+  var value1 = certDumpTree1.getDisplayData(9);
+  
+  is(value1, expected, "Incorrect OID recognized");
+}
+
+test("bug483440-attack2b", 
+     "Object Identifier (2 5 4 Unknown) = www.bank.com\n"+
+     "OU = Hacking Division\n"+
+     "CN = www.badguy.com\nO = Badguy Inc\n");
+
+test("bug483440-pk10oflo",
+     "Object Identifier (2 5 4 Unknown) = www.bank.com\n"+
+     "OU = Hacking Division\n"+
+     "CN = www.badguy.com\nO = Badguy Inc\n");
+
+test("bug483440-attack7",
+
+     // Check 88 80 80 80 01, not leading, have to pass
+     "Object Identifier (2 5 4 2147483649) = attack1\n"+
+     
+     // Check 90 80 80 80 01, not leading, have to fail
+     "Object Identifier (2 5 4 Unknown) = attack2\n"+
+     
+     // Check 80 80 80 80 80, not leading, have to fail
+     "Object Identifier (2 5 4 Unknown) = attack3\n"+
+     
+     // Check 81 81, trailing, have to fail
+     "Object Identifier (2 5 4 3 Unknown) = attack4\n"+
+     
+     // Check FF FF FF 7F, not leading, have to pass
+     "Object Identifier (2 5 4 268435455) = attack5\n"+
+     
+     // Check 80 leading, have to fail
+     "Object Identifier (Unknown 3) = attack6\n"+
+     
+     // Check 14757 = 2*40 + 14677 leading single byle encoded as F325, 
+     // have to pass
+     "Object Identifier (2 14677 4 3) = attack7\n");
+
+</script>
+
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/bugs/test_bug484111.html b/security/manager/ssl/tests/mochitest/bugs/test_bug484111.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/bugs/test_bug484111.html
@@ -0,0 +1,72 @@
+<html>
+<head>
+  <title>Test bug 484111</title>
+  <script type="text/javascript" src="chrome://mochikit/content/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"></script>        
+  <link rel="stylesheet" type="text/css" href="chrome://mochikit/content/tests/SimpleTest/test.css" />
+</head>
+<body onload="onWindowLoad()">
+
+<iframe src="https://www.bank2.com/" onload="onFrameLoad()"></iframe>
+
+<script class="testbody" type="text/javascript">
+
+SimpleTest.waitForExplicitFinish();
+
+function badCertListener() 
+{
+}
+
+badCertListener.prototype = {
+  badCertCaught: false,
+
+  getInterface: function (aIID) {
+    return this.QueryInterface(aIID);
+  },
+
+  QueryInterface: function(aIID) {
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+    if (aIID.equals(Components.interfaces.nsIBadCertListener2) ||
+        aIID.equals(Components.interfaces.nsIInterfaceRequestor) ||
+        aIID.equals(Components.interfaces.nsISupports))
+      return this;
+
+    throw Components.results.NS_ERROR_NO_INTERFACE;
+  },  
+
+  notifyCertProblem: function(socketInfo, sslStatus, targetHost) {
+    this.badCertCaught = true;
+    return true;
+  }
+}
+
+function onFrameLoad()
+{
+  ok(false, "Attackers page failed to load");
+}
+
+function onWindowLoad()
+{
+  var req = new XMLHttpRequest();
+  var certListener = new badCertListener();
+  try
+  {
+    req.open("GET", "https://www.bank2.com/", false);
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+    req.channel.notificationCallbacks = certListener;
+    req.send(null);
+  }
+  catch(ex)
+  {
+    // ignore
+  }
+  
+  ok(certListener.badCertCaught, "We Caught the invalid certificate");
+  
+  SimpleTest.finish();
+}
+
+</script>
+
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/Makefile.in b/security/manager/ssl/tests/mochitest/mixedcontent/Makefile.in
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/Makefile.in
@@ -0,0 +1,102 @@
+#
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is mozilla.org code.
+#
+# The Initial Developer of the Original Code is
+# Mozilla Foundation.
+# Portions created by the Initial Developer are Copyright (C) 2007
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Jan Bambas <honzab@firemni.cz>
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either of the GNU General Public License Version 2 or later (the "GPL"),
+# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+DEPTH		= ../../../../../..
+topsrcdir	= @top_srcdir@
+srcdir		= @srcdir@
+VPATH		= @srcdir@
+relativesrcdir	= security/ssl/mixedcontent
+
+include $(DEPTH)/config/autoconf.mk
+include $(topsrcdir)/config/rules.mk
+
+_TEST_FILES = \
+        alloworigin.sjs \
+        backward.html \
+        bug329869.js \
+        bug383369step2.html \
+        bug383369step3.html \
+        download.auto \
+        download.auto^headers^ \
+        emptyimage.sjs \
+        hugebmp.sjs \
+        iframe.html \
+        iframe2.html \
+        iframeMetaRedirect.html \
+        mixedContentTest.js \
+        moonsurface.jpg \
+        redirect.sjs \
+        somestyle.css \
+        test_bug329869.html \
+        test_bug383369.html \
+        test_bug455367.html \
+        test_bug472986.html \
+        test_cssBefore1.html \
+        test_cssContent1.html \
+        test_cssContent2.html \
+        test_documentWrite1.html \
+        test_documentWrite2.html \
+        test_dynDelayedUnsecurePicture.html \
+        test_dynDelayedUnsecureXHR.html \
+        test_dynUnsecureBackground.html \
+        test_dynUnsecureIframeRedirect.html \
+        test_dynUnsecurePicture.html \
+        test_dynUnsecurePicturePreload.html \
+        test_innerHtmlDelayedUnsecurePicture.html \
+        test_innerHtmlUnsecurePicture.html \
+        test_secureAll.html \
+        test_securePicture.html \
+        test_unsecureBackground.html \
+        test_unsecureCSS.html \
+        test_unsecureIframe.html \
+        test_unsecureIframe2.html \
+        test_unsecureIframeRedirect.html \
+        test_unsecurePicture.html \
+        test_unsecurePictureDup.html \
+        test_unsecurePictureInIframe.html \
+        test_unsecureRedirect.html \
+        unsecureIframe.html \
+        unsecurePictureDup.html \
+        $(NULL)
+
+#        test_dynUnsecureRedirect.html \ intermitently fails, quit often, bug 487402
+#        test_unsecureIframeMetaRedirect.html \ also intermittently fails, less often, bug 487632
+
+
+libs:: $(_TEST_FILES)
+	$(INSTALL) $(foreach f,$^,"$f") $(DEPTH)/_tests/testing/mochitest/tests/$(relativesrcdir)
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/alloworigin.sjs b/security/manager/ssl/tests/mochitest/mixedcontent/alloworigin.sjs
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/alloworigin.sjs
@@ -0,0 +1,6 @@
+function handleRequest(request, response)
+{
+  response.setStatusLine(request.httpVersion, 200, "OK");
+  response.setHeader("Access-Control-Allow-Origin", "*");
+  response.write("<html><body>hello!</body></html>");
+}
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/backward.html b/security/manager/ssl/tests/mochitest/mixedcontent/backward.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/backward.html
@@ -0,0 +1,20 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <script type="text/javascript">
+
+  window.onload = function()
+  {
+    window.setTimeout(function()
+    {
+      netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+
+      window.QueryInterface(Components.interfaces.nsIInterfaceRequestor)
+        .getInterface(Components.interfaces.nsIWebNavigation)
+        .goBack();
+    }, 100);
+  }
+  
+  </script>
+</head>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/bug329869.js b/security/manager/ssl/tests/mochitest/mixedcontent/bug329869.js
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/bug329869.js
@@ -0,0 +1,3 @@
+document.write("This is insecure XSS script " + document.cookie);
+isSecurityState("broken", "security broken after document write from unsecure script");
+finish();
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/bug383369step2.html b/security/manager/ssl/tests/mochitest/mixedcontent/bug383369step2.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/bug383369step2.html
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Bug 383369 test, step 2</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/does_not_exist.css">
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  window.onload = function runTest()
+  {
+    window.setTimeout(function () 
+    {
+      window.location = 
+        "https://example.com/tests/security/ssl/mixedcontent/bug383369step3.html?runtest";
+    }, 0);
+  }
+
+  function afterNavigationTest()
+  {
+  }
+
+  </script>
+</head>
+
+<body>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/bug383369step3.html b/security/manager/ssl/tests/mochitest/mixedcontent/bug383369step3.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/bug383369step3.html
@@ -0,0 +1,29 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Bug 383369 test, final step</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("secure", "secure page after insecure download and insecure subcontent still secure");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("secure", "still secure after back/forward");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/download.auto b/security/manager/ssl/tests/mochitest/mixedcontent/download.auto
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/download.auto
@@ -0,0 +1,1 @@
+Temporary file for security/mixedconent tests
\ No newline at end of file
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/download.auto^headers^ b/security/manager/ssl/tests/mochitest/mixedcontent/download.auto^headers^
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/download.auto^headers^
@@ -0,0 +1,2 @@
+Content-disposition: "attachment"
+Content-type: application/x-auto-download
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/emptyimage.sjs b/security/manager/ssl/tests/mochitest/mixedcontent/emptyimage.sjs
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/emptyimage.sjs
@@ -0,0 +1,5 @@
+function handleRequest(request, response)
+{
+  response.setStatusLine(request.httpVersion, 200, "OK");
+  //response.setHeader("Content-type", "image/gif");
+}
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/hugebmp.sjs b/security/manager/ssl/tests/mochitest/mixedcontent/hugebmp.sjs
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/hugebmp.sjs
@@ -0,0 +1,13 @@
+function handleRequest(request, response)
+{
+  response.setStatusLine(request.httpVersion, 200, "OK");
+  response.setHeader("Content-type", "image/bitmap");
+  
+  let bmpheader = "\x42\x4D\x36\x10\x0E\x00\x00\x00\x00\x00\x36\x00\x00\x00\x28\x00\x00\x00\x80\x02\x00\x00\xE0\x01\x00\x00\x01\x00\x18\x00\x00\x00\x00\x00\x00\x10\x0E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00";
+  let bmpdatapiece = "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
+
+  response.bodyOutputStream.write(bmpheader, 54);
+  // Fill 640*480*3 nulls
+  for (let i = 0; i < (640 * 480 * 3) / 64; ++i)
+    response.bodyOutputStream.write(bmpdatapiece, 64);
+}
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/iframe.html b/security/manager/ssl/tests/mochitest/mixedcontent/iframe.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/iframe.html
@@ -0,0 +1,12 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+</head>
+
+<body>
+  This is frame 1: 
+  <script>
+    document.write(location.href);
+  </script>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/iframe2.html b/security/manager/ssl/tests/mochitest/mixedcontent/iframe2.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/iframe2.html
@@ -0,0 +1,13 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+</head>
+
+<body>
+  This is frame 2: 
+  <script>
+    document.write(location.href);
+  </script>
+  <iframe src="http://example.com/tests/security/ssl/mixedcontent/iframe.html"></iframe>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/iframeMetaRedirect.html b/security/manager/ssl/tests/mochitest/mixedcontent/iframeMetaRedirect.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/iframeMetaRedirect.html
@@ -0,0 +1,8 @@
+<!DOCTYPE HTML>
+<META http-equiv="Refresh"
+      Content="0; URL=http://example.com/tests/security/ssl/mixedcontent/iframe.html">
+<html>
+  <body>
+    Redirecting by meta tag...
+  </body>
+</html>
\ No newline at end of file
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/mixedContentTest.js b/security/manager/ssl/tests/mochitest/mixedcontent/mixedContentTest.js
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/mixedContentTest.js
@@ -0,0 +1,210 @@
+/**
+ * Helper script for mixed content testing. It opens a new top-level window
+ * from a secure origin and '?runtest' query. That tells us to run the test
+ * body, function runTest(). Then we wait for call of finish(). On its first
+ * call it loads helper page 'backward.html' that immediately navigates
+ * back to the test secure test. This checks the bfcache. We got second call
+ * to onload and this time we call afterNavigationTest() function to let the
+ * test check security state after re-navigation back. Then we again wait for
+ * finish() call, that this time finishes completelly the test.
+ */
+
+// Tells the framework if to load the test in an insecure page (http://)
+var loadAsInsecure = false;
+// Set true to bypass the navigation forward/back test
+var bypassNavigationTest = false;
+// Set true to do forward/back navigation over an http:// page, test state leaks
+var navigateToInsecure = false;
+// Open the test in two separate windows, test requests sharing among windows
+var openTwoWindows = false;
+// Override the name of the test page to load, useful e.g. to prevent load
+// of images or other content before the test starts; this is actually
+// a 'redirect' to a different test page.
+var testPage = "";
+// Assign a function to this variable to have a clean up at the end
+var testCleanUp = null;
+
+
+// Internal variables
+var _windowCount = 0;
+
+window.onload = function onLoad()
+{
+  if (location.search == "?runtest")
+  {
+    try
+    {
+      if (history.length == 1)
+        runTest();
+      else
+        afterNavigationTest();
+    }
+    catch (ex)
+    {
+      ok(false, "Exception thrown during test: " + ex);
+      finish();
+    }
+  }
+  else
+  {
+    window.addEventListener("message", onMessageReceived, false);
+
+    var secureTestLocation;
+    if (loadAsInsecure)
+      secureTestLocation = "http://example.com";
+    else
+      secureTestLocation = "https://example.com";
+    secureTestLocation += location.pathname
+    if (testPage != "")
+    {
+      array = secureTestLocation.split("/");
+      array.pop();
+      array.push(testPage);
+      secureTestLocation = array.join("/");
+    }
+    secureTestLocation += "?runtest";
+
+    if (openTwoWindows)
+    {
+      _windowCount = 2;
+      window.open(secureTestLocation, "_new1", "");
+      window.open(secureTestLocation, "_new2", "");
+    }
+    else
+    {
+      _windowCount = 1;
+      window.open(secureTestLocation);
+    }
+  }
+}
+
+function onMessageReceived(event)
+{
+  switch (event.data)
+  {
+    // Indication of all test parts finish (from any of the frames)
+    case "done":
+      if (--_windowCount == 0)
+      {
+        if (testCleanUp)
+          testCleanUp();
+          
+        SimpleTest.finish();
+      }
+      break;
+
+    // Any other message indicates error or succes message of a test
+    default:
+      var failureRegExp = new RegExp("^FAILURE");
+      var todoRegExp = new RegExp("^TODO");
+      if (event.data.match(todoRegExp))
+        SimpleTest.todo(false, event.data);
+      else
+        SimpleTest.ok(!event.data.match(failureRegExp), event.data);
+      break;
+  }
+}
+
+function postMsg(message)
+{
+  opener.postMessage(message, "http://localhost:8888");
+}
+
+function finish()
+{
+  if (history.length == 1 && !bypassNavigationTest)
+  {
+    window.setTimeout(function()
+    {
+      window.location.assign(navigateToInsecure ?
+        "http://example.com/tests/security/ssl/mixedcontent/backward.html" :
+        "https://example.com/tests/security/ssl/mixedcontent/backward.html");
+    }, 0);
+  }
+  else
+  {
+    postMsg("done");
+    window.close();
+  }
+}
+
+function ok(a, message)
+{
+  if (!a)
+    postMsg("FAILURE: " + message);
+  else
+    postMsg(message);
+}
+
+function is(a, b, message)
+{
+  if (a != b)
+    postMsg("FAILURE: " + message + ", expected "+b+" got "+a);
+  else
+    postMsg(message + ", expected "+b+" got "+a);
+}
+
+function todo(a, message)
+{
+  if (a)
+    postMsg("FAILURE: TODO works? " + message);
+  else
+    postMsg("TODO: " + message);
+}
+
+function todoSecurityState(expectedState, message)
+{
+  isSecurityState(expectedState, message, todo);
+}
+
+function isSecurityState(expectedState, message, test)
+{
+  netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+  
+  if (!test)
+    test = ok;
+
+  // Quit nasty but working :)
+  var ui = window
+    .QueryInterface(Components.interfaces.nsIInterfaceRequestor)
+    .getInterface(Components.interfaces.nsIWebNavigation)
+    .QueryInterface(Components.interfaces.nsIDocShell)
+    .securityUI;
+
+  var isInsecure = !ui ||
+    (ui.state & Components.interfaces.nsIWebProgressListener.STATE_IS_INSECURE);
+  var isBroken = ui &&
+    (ui.state & Components.interfaces.nsIWebProgressListener.STATE_IS_BROKEN);
+  var isEV = ui &&
+    (ui.state & Components.interfaces.nsIWebProgressListener.STATE_IDENTITY_EV_TOPLEVEL);
+
+  var gotState;
+  if (isInsecure)
+    gotState = "insecure";
+  else if (isBroken)
+    gotState = "broken";
+  else if (isEV)
+    gotState = "EV";
+  else
+    gotState = "secure";
+
+  test(gotState == expectedState, (message || "") + ", " + "expected " + expectedState + " got " + gotState);
+
+  switch (expectedState)
+  {
+    case "insecure":
+      test(isInsecure && !isBroken && !isEV, "for 'insecure' excpected flags [1,0,0], " + (message || ""));
+      break;
+    case "broken":
+      test(ui && !isInsecure && isBroken && !isEV, "for 'broken' expected  flags [0,1,0], " + (message || ""));
+      break;
+    case "secure":
+      test(ui && !isInsecure && !isBroken && !isEV, "for 'secure' expected flags [0,0,0], " + (message || ""));
+      break;
+    case "EV":
+      test(ui && !isInsecure && !isBroken && isEV, "for 'EV' expected flags [0,0,1], " + (message || ""));
+      break;
+    default:
+      throw "Invalid isSecurityState state";
+  }
+}
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/moonsurface.jpg b/security/manager/ssl/tests/mochitest/mixedcontent/moonsurface.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..c0ffca256a9cf8dc390187ad55e2babe2bff1434
GIT binary patch
literal 52159
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
ID=0tz*&B7OQvd(}

diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/redirect.sjs b/security/manager/ssl/tests/mochitest/mixedcontent/redirect.sjs
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/redirect.sjs
@@ -0,0 +1,5 @@
+function handleRequest(request, response)
+{
+  response.setStatusLine(request.httpVersion, 307, "Moved temporarly");
+  response.setHeader("Location", request.queryString);
+}
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/somestyle.css b/security/manager/ssl/tests/mochitest/mixedcontent/somestyle.css
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/somestyle.css
@@ -0,0 +1,4 @@
+body
+{
+  background-color: lightBlue;
+}
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_bug329869.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_bug329869.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_bug329869.html
@@ -0,0 +1,34 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>dymanic script load</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("secure");
+    window.setTimeout(function() 
+    {
+      var newElement = document.createElement("script");
+      newElement.src= "http://example.org/tests/security/ssl/mixedcontent/bug329869.js";
+      document.body.appendChild(newElement);
+    }, 500);
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_bug383369.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_bug383369.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_bug383369.html
@@ -0,0 +1,91 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Bug 383369 test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  // We want to start this test from an insecure context
+  loadAsInsecure = true;
+  // We don't want to go through the navigation back/forward test
+  bypassNavigationTest = true;
+
+  function runTest()
+  {
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+  
+    // Force download to be w/o user assistance for our testing mime type
+    const mimeSvc = Components.classes["@mozilla.org/mime;1"]
+      .getService(Components.interfaces.nsIMIMEService);
+    var handlerInfo = mimeSvc.getFromTypeAndExtension("application/x-auto-download", "auto");
+    handlerInfo.preferredAction = Components.interfaces.nsIHandlerInfo.saveToDisk;
+    handlerInfo.alwaysAskBeforeHandling = false;
+    handlerInfo.preferredApplicationHandler = null;
+    
+    const handlerSvc = Components.classes["@mozilla.org/uriloader/handler-service;1"]
+      .getService(Components.interfaces.nsIHandlerService);
+    handlerSvc.store(handlerInfo);
+    
+    var dirProvider = Components.classes["@mozilla.org/file/directory_service;1"]
+      .getService(Components.interfaces.nsIProperties);
+    var profileDir = dirProvider.get("ProfDS", Components.interfaces.nsIFile);
+    profileDir.append("downloads");
+    
+    var prefs = Components.classes["@mozilla.org/preferences-service;1"]
+      .getService(Components.interfaces.nsIPrefService);
+    prefs = prefs.getBranch("browser.download.");
+        
+    prefs.setCharPref("dir", profileDir.path);
+    prefs.setIntPref("folderList", 2);
+    prefs.setBoolPref("manager.closeWhenDone", true);
+    prefs.setBoolPref("manager.showWhenStarting", false);
+  
+    var downloadManager = Components.classes["@mozilla.org/download-manager;1"]
+      .getService(Components.interfaces.nsIDownloadManager);
+    var theWindow = window;
+    window.setTimeout(function()
+    {
+      netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+      downloadManager.cleanUp();
+      theWindow.location = "bug383369step2.html";
+    }, 3000);
+  
+    window.location = "download.auto";
+  }
+
+  function afterNavigationTest()
+  {
+  }
+  
+  testCleanUp = function cleanup()
+  {
+    netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
+
+    const mimeSvc = Components.classes["@mozilla.org/mime;1"]
+      .getService(Components.interfaces.nsIMIMEService);
+    var handlerInfo = mimeSvc.getFromTypeAndExtension("application/x-auto-download", "auto");
+    
+    const handlerSvc = Components.classes["@mozilla.org/uriloader/handler-service;1"]
+      .getService(Components.interfaces.nsIHandlerService);
+    handlerSvc.remove(handlerInfo);
+    
+    var prefs = Components.classes["@mozilla.org/preferences-service;1"]
+      .getService(Components.interfaces.nsIPrefService);
+    prefs = prefs.getBranch("browser.download.");
+
+    prefs.setCharPref("dir", "");
+    prefs.setIntPref("folderList", 0);
+    prefs.setBoolPref("manager.closeWhenDone", false);
+    prefs.setBoolPref("manager.showWhenStarting", true);
+  }
+  
+  </script>
+</head>
+
+<body>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_bug455367.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_bug455367.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_bug455367.html
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>No content image doesn't break security</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("secure", "secure");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("secure", "secure after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <img src="https://example.com/tests/security/ssl/mixedcontent/redirect.sjs?http://example.com/tests/security/ssl/mixedcontent/emptyimage.sjs" />
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_bug472986.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_bug472986.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_bug472986.html
@@ -0,0 +1,42 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>img.src replace</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  // Clear the default onload assigned to test start because we must
+  // wait for replaced image to load and only after that test the security state
+  var onLoadFunction = window.onload;
+  window.onload = function()
+  {
+    window.setTimeout(onLoadFunction, 500);
+  }
+
+  function runTest()
+  {
+    isSecurityState("secure", "secure");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("secure", "secure after navigation");
+    finish();
+  }
+  
+  </script>
+</head>
+
+<body>
+  <img id="img1" src="https://example.com/tests/security/ssl/mixedcontent/hugebmp.sjs" />
+  <script type="text/javascript">
+    var img1 = document.getElementById("img1");
+    img1.src = "https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg";
+  </script>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_cssBefore1.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_cssBefore1.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_cssBefore1.html
@@ -0,0 +1,38 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>CSS :before styling 1</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+  <style type="text/css">
+    p:before
+    {
+      content: url(http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg);
+    }
+  </style>
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure content added by :before styling breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <p>
+    There is a moon surface left to this text
+  </p>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_cssContent1.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_cssContent1.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_cssContent1.html
@@ -0,0 +1,37 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>CSS conent styling 1</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <style type="text/css">
+    p
+    {
+      content: url(http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg);
+    }
+  </style>
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure content added by :before styling breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <p></p>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_cssContent2.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_cssContent2.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_cssContent2.html
@@ -0,0 +1,37 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>CSS conent styling 2</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("secure");
+    document.getElementById("para").style.content =
+      "url('http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg')";
+
+    window.setTimeout(function() {
+      isSecurityState("broken", "insecure content added by styling breaks security");
+      finish();
+    }, 500);
+  }
+
+  function afterNavigationTest()
+  {
+    is(document.getElementById("para").style.content, "");
+    isSecurityState("secure", "security full after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <p id="para"></p>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_documentWrite1.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_documentWrite1.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_documentWrite1.html
@@ -0,0 +1,33 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>document.write('<img src="http://">')</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure <img> written dynamically breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <script class="testbody" type="text/javascript">
+  document.write(
+    "<img src='http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg' />");
+  </script>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_documentWrite2.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_documentWrite2.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_documentWrite2.html
@@ -0,0 +1,33 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>document.write('<iframe src="http://">')</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure iframe written dynamically breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <script class="testbody" type="text/javascript">
+  document.write(
+    "<iframe src='http://example.com/tests/security/ssl/mixedcontent/iframe.html'></iframe>");
+  </script>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_dynDelayedUnsecurePicture.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynDelayedUnsecurePicture.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynDelayedUnsecurePicture.html
@@ -0,0 +1,42 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>img.src changes to unsecure test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("secure");
+    window.setTimeout(function() {
+      // Don't do this synchronously from onload handler
+      document.getElementById("image1").src =
+        "http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg";
+    }, 0);
+
+    window.setTimeout(function() {
+      isSecurityState("broken", "src='http://...' changed to broken");
+      finish();
+    }, 500);
+  }
+
+  function afterNavigationTest()
+  {
+    is(document.getElementById("image1").src,
+      "https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg",
+      "img.src secure again");
+    isSecurityState("secure", "security full after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <img id="image1" src="https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg" />
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_dynDelayedUnsecureXHR.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynDelayedUnsecureXHR.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynDelayedUnsecureXHR.html
@@ -0,0 +1,46 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>unsecure XHR test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("secure");
+    window.setTimeout(function()
+    {
+      try
+      {
+        var req = new XMLHttpRequest();
+        req.open("GET", "http://example.com/tests/security/ssl/mixedcontent/alloworigin.sjs", false);
+        req.send(null);
+
+        // Change should be immediate, the request was sent synchronously
+        todoSecurityState("broken", "security broken after insecure XHR");
+      }
+      catch (ex)
+      {
+        ok(false, ex);
+      }
+
+      finish();
+    }, 0);
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("secure", "security full after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecureBackground.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecureBackground.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecureBackground.html
@@ -0,0 +1,40 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>body.background changes to unsecure test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  // This test, as is, equals to https://kuix.de/misc/test17/358438.php
+
+  function runTest()
+  {
+    isSecurityState("secure");
+    document.body.background =
+      "http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg";
+
+    window.setTimeout(function() {
+      isSecurityState("broken", "document.body.background='http://...' changed to broken");
+      finish();
+    }, 500);
+  }
+
+  function afterNavigationTest()
+  {
+    is(document.body.background,
+      "https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg",
+      "document backround secure again");
+    isSecurityState("secure", "secure after re-navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body background="https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg">
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecureIframeRedirect.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecureIframeRedirect.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecureIframeRedirect.html
@@ -0,0 +1,38 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>iframe.src changes to unsecure redirect test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("secure");
+    var self = window;
+    var iframe = document.getElementById("iframe1");
+    iframe.onload = function() {
+      self.isSecurityState("broken", "src='redirect to unsecure' changed to broken");
+      self.finish();
+    }
+    
+    iframe.src =
+      "https://example.com/tests/security/ssl/mixedcontent/redirect.sjs?http://example.com/tests/security/ssl/mixedcontent/iframe.html";
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <iframe id="iframe1" src="https://example.com/tests/security/ssl/mixedcontent/iframe.html"></iframe>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecurePicture.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecurePicture.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecurePicture.html
@@ -0,0 +1,41 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>img.src changes to unsecure test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  // This test, as is, equals to https://kuix.de/misc/test17/358438.php
+
+  function runTest()
+  {
+    isSecurityState("secure");
+    document.getElementById("image1").src =
+      "http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg";
+
+    window.setTimeout(function() {
+      isSecurityState("broken", "src='http://...' changed to broken");
+      finish();
+    }, 500);
+  }
+
+  function afterNavigationTest()
+  {
+    is(document.getElementById("image1").src,
+      "https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg",
+      "img.src secure again");
+    isSecurityState("secure", "security full after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <img id="image1" src="https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg" />
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecurePicturePreload.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecurePicturePreload.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecurePicturePreload.html
@@ -0,0 +1,32 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>img.src changes to unsecure test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  (new Image()).src =
+    "http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg";
+
+  function runTest()
+  {
+    isSecurityState("broken", "(new Image()).src='http://...' changed to broken");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecureRedirect.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecureRedirect.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_dynUnsecureRedirect.html
@@ -0,0 +1,39 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>img.src changes to unsecure redirect test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("secure");
+    document.getElementById("image1").src =
+      "https://example.com/tests/security/ssl/mixedcontent/redirect.sjs?http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg";
+
+    window.setTimeout(function() {
+      isSecurityState("broken", "src='redirect to unsecure' changed to broken");
+      finish();
+    }, 500);
+  }
+
+  function afterNavigationTest()
+  {
+    is(document.getElementById("image1").src,
+      "https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg",
+      "img.src secure again");
+    isSecurityState("secure", "security full after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <img id="image1" src="https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg" />
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_innerHtmlDelayedUnsecurePicture.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_innerHtmlDelayedUnsecurePicture.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_innerHtmlDelayedUnsecurePicture.html
@@ -0,0 +1,40 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>innerHTML changes to unsecure test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("secure");
+    
+    window.setTimeout(function() 
+    {
+      document.getElementById("buddy").innerHTML =
+        "<img id='image1' src='http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg' />";
+    }, 1);
+
+    window.setTimeout(function() 
+    {
+      isSecurityState("broken", "innerHTML loading insecure changed to broken");
+      finish();
+    }, 500);
+  }
+
+  function afterNavigationTest()
+  {
+    is(document.getElementById("buddy").innerHTML, "", "innerHTML back to previous");
+    isSecurityState("secure");
+    finish();    
+  }
+
+  </script>
+</head>
+
+<body id="buddy"></body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_innerHtmlUnsecurePicture.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_innerHtmlUnsecurePicture.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_innerHtmlUnsecurePicture.html
@@ -0,0 +1,36 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>innerHTML changes to unsecure test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("secure");
+    
+    document.getElementById("buddy").innerHTML =
+      "<img id='image1' src='http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg' />";
+
+    window.setTimeout(function() {
+      isSecurityState("broken", "innerHTML loading insecure changed to broken");
+      finish();
+    }, 500);
+  }
+
+  function afterNavigationTest()
+  {
+    is(document.getElementById("buddy").innerHTML, "", "innerHTML back to previous");
+    isSecurityState("secure");
+    finish();    
+  }
+
+  </script>
+</head>
+
+<body id="buddy"></body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_secureAll.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_secureAll.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_secureAll.html
@@ -0,0 +1,38 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>All secure anti-regression check</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <link rel="stylesheet" type="text/css" 
+    href="https://example.com/tests/security/ssl/mixedcontent/somestyle.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  // Navigation test goes over an insecure page, test state leak
+  navigateToInsecure = true;
+
+  function runTest()
+  {
+    isSecurityState("secure", "insecure <img> load breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("secure", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <img src="https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg" />
+  <img src="https://example.com/tests/security/ssl/mixedcontent/redirect.sjs?https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg" />
+  <iframe src="https://example.com/tests/security/ssl/mixedcontent/redirect.sjs?https://example.com/tests/security/ssl/mixedcontent/iframe.html" />
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_securePicture.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_securePicture.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_securePicture.html
@@ -0,0 +1,32 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Secure img load</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  loadAsInsecure = true;
+
+  function runTest()
+  {
+    isSecurityState("insecure", "left insecure");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("insecure", "left insecure after renavigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <img src="https://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg" />
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureBackground.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureBackground.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureBackground.html
@@ -0,0 +1,31 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>background unsecure test</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  // This test, as is, equals to https://kuix.de/misc/test17/358438.php
+
+  function runTest()
+  {
+    isSecurityState("broken", "security broken");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body background="http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg">
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureCSS.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureCSS.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureCSS.html
@@ -0,0 +1,32 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Unsecure css load</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+  
+  <link rel="stylesheet" type="text/css" 
+    href="http://example.com/tests/security/ssl/mixedcontent/somestyle.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure <img> load breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframe.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframe.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframe.html
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Unsecure iframe load</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure <iframe> load breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <iframe src="http://example.com/tests/security/ssl/mixedcontent/iframe.html"></iframe>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframe2.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframe2.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframe2.html
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Unsecure iframe load</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure <iframe> load breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <iframe src="https://example.com/tests/security/ssl/mixedcontent/iframe2.html"></iframe>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframeMetaRedirect.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframeMetaRedirect.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframeMetaRedirect.html
@@ -0,0 +1,37 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Unsecure redirect iframe load</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    window.setTimeout(function()
+    {
+      isSecurityState("broken", "insecure meta-tag <iframe> load breaks security");
+      finish();
+    }, 500);
+  }
+
+  function afterNavigationTest()
+  {
+    window.setTimeout(function()
+    {
+      isSecurityState("broken", "security still broken after navigation");
+      finish();
+    }, 500);
+  }
+
+  </script>
+</head>
+
+<body>
+  <iframe src="https://example.com/tests/security/ssl/mixedcontent/iframeMetaRedirect.html"></iframe>
+</body>
+</html>
+ 
\ No newline at end of file
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframeRedirect.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframeRedirect.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureIframeRedirect.html
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Unsecure redirect iframe load</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure <iframe> load breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <iframe src="https://example.com/tests/security/ssl/mixedcontent/redirect.sjs?http://example.com/tests/security/ssl/mixedcontent/iframe.html"></iframe>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecurePicture.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecurePicture.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecurePicture.html
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Unsecure img load</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure <img> load breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <img src="http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg" />
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecurePictureDup.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecurePictureDup.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecurePictureDup.html
@@ -0,0 +1,20 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Unsecure img load in two windows</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+    
+  openTwoWindows = true;
+  testPage = "unsecurePictureDup.html";
+
+  </script>
+</head>
+
+<body>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecurePictureInIframe.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecurePictureInIframe.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecurePictureInIframe.html
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Unsecure img in iframe load</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure <img> in an <iframe> load breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <iframe src="http://example.com/tests/security/ssl/mixedcontent/unsecureIframe.html"></iframe>
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureRedirect.html b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureRedirect.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/test_unsecureRedirect.html
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Redirect from secure to unsecure img</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+
+  function runTest()
+  {
+    isSecurityState("broken", "insecure <img> load breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <img src="https://example.com/tests/security/ssl/mixedcontent/redirect.sjs?http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg" />
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/unsecureIframe.html b/security/manager/ssl/tests/mochitest/mixedcontent/unsecureIframe.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/unsecureIframe.html
@@ -0,0 +1,9 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+</head>
+
+<body>
+  <img src="http://example.com/tests/security/ssl/mixedcontent/moonsurface.jpg" />
+</body>
+</html>
diff --git a/security/manager/ssl/tests/mochitest/mixedcontent/unsecurePictureDup.html b/security/manager/ssl/tests/mochitest/mixedcontent/unsecurePictureDup.html
new file mode 100644
--- /dev/null
+++ b/security/manager/ssl/tests/mochitest/mixedcontent/unsecurePictureDup.html
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML>
+<html>
+<head>
+  <title>Unsecure img load in two windows</title>
+  <script type="text/javascript" src="/MochiKit/packed.js"></script>
+  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
+  <script type="text/javascript" src="mixedContentTest.js"></script>
+  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
+
+  <script class="testbody" type="text/javascript">
+    
+  function runTest()
+  {
+    isSecurityState("broken", "insecure <img> load breaks security");
+    finish();
+  }
+
+  function afterNavigationTest()
+  {
+    isSecurityState("broken", "security still broken after navigation");
+    finish();
+  }
+
+  </script>
+</head>
+
+<body>
+  <img src="http://example.com/tests/security/ssl/mixedcontent/hugebmp.sjs" />
+</body>
+</html>
