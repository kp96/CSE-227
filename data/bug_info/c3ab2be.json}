{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basc3ab2be\""},"diff":[{"chunks":[{"content":"@@ -4199,22 +4199,28 @@ nsNavHistory::FilterResultSet(nsNavHistoryQueryResultNode* aQueryNode,","changes":[{"type":"normal","normal":true,"ln1":4199,"ln2":4199,"content":"           // check ancestors"},{"type":"normal","normal":true,"ln1":4200,"ln2":4200,"content":"           PRInt64 ancestor = parentId, lastAncestor;"},{"type":"normal","normal":true,"ln1":4201,"ln2":4201,"content":"           PRBool belongs = PR_FALSE;"},{"type":"add","add":true,"ln":4202,"content":"+          nsTArray<PRInt64> ancestorFolders;"},{"type":"normal","normal":true,"ln1":4202,"ln2":4203,"content":" "},{"type":"normal","normal":true,"ln1":4203,"ln2":4204,"content":"           while (!belongs) {"},{"type":"normal","normal":true,"ln1":4204,"ln2":4205,"content":"             // Avoid using |ancestor| itself if GetFolderIdForItem failed."},{"type":"normal","normal":true,"ln1":4205,"ln2":4206,"content":"             lastAncestor = ancestor;"},{"type":"add","add":true,"ln":4207,"content":"+            ancestorFolders.AppendElement(ancestor);"},{"type":"normal","normal":true,"ln1":4206,"ln2":4208,"content":" "},{"type":"normal","normal":true,"ln1":4207,"ln2":4209,"content":"             // GetFolderIdForItems throws when called for the places-root"},{"type":"normal","normal":true,"ln1":4208,"ln2":4210,"content":"             if (NS_FAILED(bookmarks->GetFolderIdForItem(ancestor,&ancestor))) {"},{"type":"normal","normal":true,"ln1":4209,"ln2":4211,"content":"               break;"},{"type":"add","add":true,"ln":4212,"content":"+            } else if (excludeFolders[queryIndex]->IndexOf(ancestor) != -1) {"},{"type":"add","add":true,"ln":4213,"content":"+              break;"},{"type":"normal","normal":true,"ln1":4210,"ln2":4214,"content":"             } else if (includeFolders[queryIndex]->IndexOf(ancestor) != -1) {"},{"type":"normal","normal":true,"ln1":4211,"ln2":4215,"content":"               belongs = PR_TRUE;"},{"type":"normal","normal":true,"ln1":4212,"ln2":4216,"content":"             }"},{"type":"normal","normal":true,"ln1":4213,"ln2":4217,"content":"           }"},{"type":"add","add":true,"ln":4218,"content":"+          // if the parentId or any of its ancestors \"belong\","},{"type":"add","add":true,"ln":4219,"content":"+          // include all of them.  otherwise, exclude all of them."},{"type":"normal","normal":true,"ln1":4214,"ln2":4220,"content":"           if (belongs) {"},{"type":"del","del":true,"ln":4215,"content":"-            includeFolders[queryIndex]->AppendElement(lastAncestor);"},{"type":"add","add":true,"ln":4221,"content":"+            includeFolders[queryIndex]->AppendElements(ancestorFolders);"},{"type":"normal","normal":true,"ln1":4216,"ln2":4222,"content":"           } else {"},{"type":"del","del":true,"ln":4217,"content":"-            excludeFolders[queryIndex]->AppendElement(lastAncestor);"},{"type":"add","add":true,"ln":4223,"content":"+            excludeFolders[queryIndex]->AppendElements(ancestorFolders);"},{"type":"normal","normal":true,"ln1":4218,"ln2":4224,"content":"             continue;"},{"type":"normal","normal":true,"ln1":4219,"ln2":4225,"content":"           }"},{"type":"normal","normal":true,"ln1":4220,"ln2":4226,"content":"         }"}],"oldStart":4199,"oldLines":22,"newStart":4199,"newLines":28}],"deletions":2,"additions":8,"from":"toolkit/components/places/src/nsNavHistory.cpp","to":"toolkit/components/places/src/nsNavHistory.cpp","index":["df8b219..f4cf4c6","100644"]}]}