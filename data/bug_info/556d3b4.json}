{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas556d3b4\""},"diff":[{"chunks":[{"content":"@@ -128,6 +128,8 @@ public:","changes":[{"type":"normal","normal":true,"ln1":128,"ln2":128,"content":" "},{"type":"normal","normal":true,"ln1":129,"ln2":129,"content":"     gfxAtsuiFont* FindFontFor(ATSUFontID fid);"},{"type":"normal","normal":true,"ln1":130,"ln2":130,"content":" "},{"type":"add","add":true,"ln":131,"content":"+    PRBool HasFont(ATSUFontID fid);"},{"type":"add","add":true,"ln":132,"content":"+"},{"type":"normal","normal":true,"ln1":131,"ln2":133,"content":" protected:"},{"type":"normal","normal":true,"ln1":132,"ln2":134,"content":"     static PRBool FindATSUFont(const nsAString& aName,"},{"type":"normal","normal":true,"ln1":133,"ln2":135,"content":"                                const nsACString& aGenericName,"}],"oldStart":128,"oldLines":6,"newStart":128,"newLines":8}],"deletions":0,"additions":2,"from":"gfx/thebes/public/gfxAtsuiFonts.h","to":"gfx/thebes/public/gfxAtsuiFonts.h","index":["31e70f3..ba1e09a","100644"]},{"chunks":[{"content":"@@ -429,7 +429,7 @@ gfxAtsuiFontGroup::gfxAtsuiFontGroup(const nsAString& families,","changes":[{"type":"normal","normal":true,"ln1":429,"ln2":429,"content":"         GetOrMakeFont(fontID, aStyle, &mFonts);"},{"type":"normal","normal":true,"ln1":430,"ln2":430,"content":"     }"},{"type":"normal","normal":true,"ln1":431,"ln2":431,"content":" "},{"type":"del","del":true,"ln":432,"content":"-    CreateFontFallbacksFromFontList(&mFonts, &mFallbacks, kATSULastResortOnlyFallback);"},{"type":"add","add":true,"ln":432,"content":"+    CreateFontFallbacksFromFontList(&mFonts, &mFallbacks, kATSUSequentialFallbacksExclusive);"},{"type":"normal","normal":true,"ln1":433,"ln2":433,"content":" }"},{"type":"normal","normal":true,"ln1":434,"ln2":434,"content":" "},{"type":"normal","normal":true,"ln1":435,"ln2":435,"content":" PRBool"}],"oldStart":429,"oldLines":7,"newStart":429,"newLines":7},{"content":"@@ -443,7 +443,7 @@ gfxAtsuiFontGroup::FindATSUFont(const nsAString& aName,","changes":[{"type":"normal","normal":true,"ln1":443,"ln2":443,"content":"     gfxQuartzFontCache *fc = gfxQuartzFontCache::SharedFontCache();"},{"type":"normal","normal":true,"ln1":444,"ln2":444,"content":"     ATSUFontID fontID = fc->FindATSUFontIDForFamilyAndStyle (aName, fontStyle);"},{"type":"normal","normal":true,"ln1":445,"ln2":445,"content":" "},{"type":"del","del":true,"ln":446,"content":"-    if (fontID != kATSUInvalidFontID) {"},{"type":"add","add":true,"ln":446,"content":"+    if (fontID != kATSUInvalidFontID && !fontGroup->HasFont(fontID)) {"},{"type":"normal","normal":true,"ln1":447,"ln2":447,"content":"         //fprintf (stderr, \"..FindATSUFont: %s\\n\", NS_ConvertUTF16toUTF8(aName).get());"},{"type":"normal","normal":true,"ln1":448,"ln2":448,"content":"         GetOrMakeFont(fontID, fontStyle, &fontGroup->mFonts);"},{"type":"normal","normal":true,"ln1":449,"ln2":449,"content":"     }"}],"oldStart":443,"oldLines":7,"newStart":443,"newLines":7},{"content":"@@ -673,6 +673,16 @@ gfxAtsuiFontGroup::FindFontFor(ATSUFontID fid)","changes":[{"type":"normal","normal":true,"ln1":673,"ln2":673,"content":"     return GetOrMakeFont(fid, GetStyle(), &mFonts);"},{"type":"normal","normal":true,"ln1":674,"ln2":674,"content":" }"},{"type":"normal","normal":true,"ln1":675,"ln2":675,"content":" "},{"type":"add","add":true,"ln":676,"content":"+PRBool"},{"type":"add","add":true,"ln":677,"content":"+gfxAtsuiFontGroup::HasFont(ATSUFontID fid)"},{"type":"add","add":true,"ln":678,"content":"+{"},{"type":"add","add":true,"ln":679,"content":"+    for (PRUint32 i = 0; i < mFonts.Length(); ++i) {"},{"type":"add","add":true,"ln":680,"content":"+        if (fid == static_cast<gfxAtsuiFont *>(mFonts.ElementAt(i).get())->GetATSUFontID())"},{"type":"add","add":true,"ln":681,"content":"+            return PR_TRUE;"},{"type":"add","add":true,"ln":682,"content":"+    }"},{"type":"add","add":true,"ln":683,"content":"+    return PR_FALSE;"},{"type":"add","add":true,"ln":684,"content":"+}"},{"type":"add","add":true,"ln":685,"content":"+"},{"type":"normal","normal":true,"ln1":676,"ln2":686,"content":" /**"},{"type":"normal","normal":true,"ln1":677,"ln2":687,"content":"  * Simple wrapper for ATSU \"direct data arrays\""},{"type":"normal","normal":true,"ln1":678,"ln2":688,"content":"  */"}],"oldStart":673,"oldLines":6,"newStart":673,"newLines":16},{"content":"@@ -1519,6 +1529,12 @@ gfxAtsuiFontGroup::InitTextRun(gfxTextRun *aRun,","changes":[{"type":"normal","normal":true,"ln1":1519,"ln2":1529,"content":"                     break;"},{"type":"normal","normal":true,"ln1":1520,"ln2":1530,"content":"             }"},{"type":"normal","normal":true,"ln1":1521,"ln2":1531,"content":" "},{"type":"add","add":true,"ln":1532,"content":"+            if (firstTime && !HasFont(substituteFontID)) {"},{"type":"add","add":true,"ln":1533,"content":"+                // XXX We are using kATSUSequentialFallbacksExclusive at first time."},{"type":"add","add":true,"ln":1534,"content":"+                // But the method uses non-listed font in font fallbacks on 10.4. (ATSUI Reference does not say so...)"},{"type":"add","add":true,"ln":1535,"content":"+                status = kATSUFontsNotMatched;"},{"type":"add","add":true,"ln":1536,"content":"+            }"},{"type":"add","add":true,"ln":1537,"content":"+"},{"type":"normal","normal":true,"ln1":1522,"ln2":1538,"content":"             // then, handle any chars that were found in the fallback list"},{"type":"normal","normal":true,"ln1":1523,"ln2":1539,"content":"             if (status == kATSUFontsMatched) {"},{"type":"normal","normal":true,"ln1":1524,"ln2":1540,"content":"                 // substitute font will be used in [changedOffset, changedOffset + changedLength)"}],"oldStart":1519,"oldLines":6,"newStart":1529,"newLines":12}],"deletions":2,"additions":18,"from":"gfx/thebes/src/gfxAtsuiFonts.cpp","to":"gfx/thebes/src/gfxAtsuiFonts.cpp","index":["c4e4fc2..2a7dde5","100644"]}]}