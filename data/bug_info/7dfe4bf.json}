{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas7dfe4bf\""},"diff":[{"chunks":[{"content":"@@ -126,7 +126,9 @@ my @servers = (\"localhost:8888\", # MUST be first -- see PAC pref-setting code","changes":[{"type":"normal","normal":true,"ln1":126,"ln2":126,"content":"                \"sub1.test1.example.com:80\","},{"type":"normal","normal":true,"ln1":127,"ln2":127,"content":"                \"sub1.test2.example.com:80\","},{"type":"normal","normal":true,"ln1":128,"ln2":128,"content":"                \"sub2.test1.example.com:80\","},{"type":"del","del":true,"ln":129,"content":"-               \"sub2.test2.example.com:80\");"},{"type":"add","add":true,"ln":129,"content":"+               \"sub2.test2.example.com:80\","},{"type":"add","add":true,"ln":130,"content":"+               \"sectest1.example.org:80\","},{"type":"add","add":true,"ln":131,"content":"+               \"sub.sectest2.example.org:80\");"},{"type":"normal","normal":true,"ln1":130,"ln2":132,"content":" "},{"type":"normal","normal":true,"ln1":131,"ln2":133,"content":" "},{"type":"normal","normal":true,"ln1":132,"ln2":134,"content":" my $profile = \"mochitesttestingprofile\";"}],"oldStart":126,"oldLines":7,"newStart":126,"newLines":9},{"content":"@@ -305,7 +307,7 @@ sub winPathFromDir {","changes":[{"type":"normal","normal":true,"ln1":305,"ln2":307,"content":"           # we remember the match that is the longest"},{"type":"normal","normal":true,"ln1":306,"ln2":308,"content":"           $matchlen = $len;"},{"type":"normal","normal":true,"ln1":307,"ln2":309,"content":"           $bestmatch = $real;"},{"type":"del","del":true,"ln":308,"content":"-\t}"},{"type":"add","add":true,"ln":310,"content":"+        }"},{"type":"normal","normal":true,"ln1":309,"ln2":311,"content":"       }"},{"type":"normal","normal":true,"ln1":310,"ln2":312,"content":"     }"},{"type":"normal","normal":true,"ln1":311,"ln2":313,"content":"   }"}],"oldStart":305,"oldLines":7,"newStart":307,"newLines":7},{"content":"@@ -415,6 +417,13 @@ SERVERPREFEND","changes":[{"type":"normal","normal":true,"ln1":415,"ln2":417,"content":"     $i++;"},{"type":"normal","normal":true,"ln1":416,"ln2":418,"content":"   }"},{"type":"normal","normal":true,"ln1":417,"ln2":419,"content":" "},{"type":"add","add":true,"ln":420,"content":"+  # Now add the two servers that do NOT have God-power so we can properly test"},{"type":"add","add":true,"ln":421,"content":"+  # the granting and receiving of God-power"},{"type":"add","add":true,"ln":422,"content":"+  push(@servers,"},{"type":"add","add":true,"ln":423,"content":"+       \"sectest2.example.org:80\","},{"type":"add","add":true,"ln":424,"content":"+       \"sub.sectest1.example.org:80\");"},{"type":"add","add":true,"ln":425,"content":"+"},{"type":"add","add":true,"ln":426,"content":"+"},{"type":"normal","normal":true,"ln1":418,"ln2":427,"content":"   # Now actually create the preference to make the proxying happen, stripping"},{"type":"normal","normal":true,"ln1":419,"ln2":428,"content":"   # off the first server because it's the one to which we proxy all the others."},{"type":"normal","normal":true,"ln1":420,"ln2":429,"content":"   my $quotedServers = join(\", \", map(\"'\" . $_ . \"'\", @servers[1 .. $#servers]));"}],"oldStart":415,"oldLines":6,"newStart":417,"newLines":13}],"deletions":2,"additions":11,"from":"testing/mochitest/runtests.pl.in","to":"testing/mochitest/runtests.pl.in","index":["2862212..57c1e86","100644"]}]}