Index: nsNSSIOLayer.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsNSSIOLayer.cpp,v
retrieving revision 1.86
diff -u -r1.86 nsNSSIOLayer.cpp
--- nsNSSIOLayer.cpp	22 Jan 2003 03:41:35 -0000	1.86
+++ nsNSSIOLayer.cpp	31 Jan 2003 06:27:15 -0000
@@ -1054,8 +1054,7 @@
 }
 
 static PRInt32
-checkHandshake(PRBool calledFromRead, PRInt32 bytesTransfered, 
-               PRFileDesc* fd, nsNSSSocketInfo *socketInfo)
+checkHandshake(PRInt32 bytesTransfered, PRFileDesc* fd, nsNSSSocketInfo *socketInfo)
 {
   // This is where we work around all of those SSL servers that don't 
   // conform to the SSL spec and shutdown a connection when we request
@@ -1099,13 +1098,7 @@
 
         if (wantRetry) {
           // We want to cause the network layer to retry the connection.
-          if (calledFromRead) {
-            // This will cause a premature EOF
-            bytesTransfered = 0;
-          }
-          else { // called from write
-            PR_SetError(PR_CONNECT_RESET_ERROR, 0);
-          }
+          PR_SetError(PR_CONNECT_RESET_ERROR, 0);
         }
       }
 
@@ -1153,7 +1146,7 @@
   DEBUG_DUMP_BUFFER((unsigned char*)buf, bytesRead);
 #endif
 
-  return checkHandshake(PR_TRUE, bytesRead, fd, socketInfo);
+  return checkHandshake(bytesRead, fd, socketInfo);
 }
 
 static PRInt32 PR_CALLBACK
@@ -1185,7 +1178,7 @@
   PR_LOG(gPIPNSSLog, PR_LOG_DEBUG, ("[%p] wrote %d bytes\n", (void*)fd, bytesWritten));
 #endif
 
-  return checkHandshake(PR_FALSE, bytesWritten, fd, socketInfo);
+  return checkHandshake(bytesWritten, fd, socketInfo);
 }
 
 static void InitNSSMethods()
