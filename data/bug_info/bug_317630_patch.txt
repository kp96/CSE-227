? mozilla/security/manager/ssl/src/nsNSSComponent.cpp.x
Index: mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties
===================================================================
RCS file: /cvsroot/mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties,v
retrieving revision 1.21
diff -u -1 -0 -p -r1.21 pipnss.properties
--- mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties	17 Feb 2007 03:47:59 -0000	1.21
+++ mozilla/security/manager/locales/en-US/chrome/pipnss/pipnss.properties	20 Feb 2007 16:12:21 -0000
@@ -61,24 +61,24 @@ TokenDescription=Generic Crypto Services
 #
 # 32 bytes long after conversion to UTF8
 PrivateTokenDescription=Software Security Device
 #
 # 64 bytes long after conversion to UTF8
 SlotDescription=PSM Internal Cryptographic Services
 #
 # 64 bytes long after conversion to UTF8
 PrivateSlotDescription=PSM Private Keys
 #
+# 32
+Fips140TokenDescription=FIPS-140 Softw. Security Device
 # 64
-FipsSlotDescription=PSM Internal FIPS-140-1 Cryptographic Services
-# 64
-FipsPrivateSlotDescription=PSM FIPS-140-1 User Private Key Services
+Fips140SlotDescription=FIPS-140 Cryptographic, Key and Certificate Services
 # 32
 InternalToken=Software Security Device
 # End of size restriction.
 VerifySSLClient=SSL Client Certificate
 VerifySSLServer=SSL Server Certificate
 VerifySSLStepUp=SSL Server with Step-up
 VerifySSLCA=SSL Certificate Authority
 VerifyEmailSigner=Email Signer Certificate
 VerifyEmailRecip=Email Recipient Certificate
 VerifyProtectObjSign=Protected Object Signer
Index: mozilla/security/manager/ssl/src/nsNSSComponent.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsNSSComponent.cpp,v
retrieving revision 1.145
diff -u -1 -0 -p -r1.145 nsNSSComponent.cpp
--- mozilla/security/manager/ssl/src/nsNSSComponent.cpp	17 Feb 2007 03:47:59 -0000	1.145
+++ mozilla/security/manager/ssl/src/nsNSSComponent.cpp	20 Feb 2007 16:12:22 -0000
@@ -795,56 +795,56 @@ nsNSSComponent::UnloadLoadableRoots()
 nsresult
 nsNSSComponent::ConfigureInternalPKCS11Token()
 {
   nsNSSShutDownPreventionLock locker;
   nsAutoString manufacturerID;
   nsAutoString libraryDescription;
   nsAutoString tokenDescription;
   nsAutoString privateTokenDescription;
   nsAutoString slotDescription;
   nsAutoString privateSlotDescription;
-  nsAutoString fipsSlotDescription;
-  nsAutoString fipsPrivateSlotDescription;
+  nsAutoString fips140TokenDescription;
+  nsAutoString fips140SlotDescription;
 
   nsresult rv;
   rv = GetPIPNSSBundleString("ManufacturerID", manufacturerID);
   if (NS_FAILED(rv)) return rv;
 
   rv = GetPIPNSSBundleString("LibraryDescription", libraryDescription);
   if (NS_FAILED(rv)) return rv;
 
   rv = GetPIPNSSBundleString("TokenDescription", tokenDescription);
   if (NS_FAILED(rv)) return rv;
 
   rv = GetPIPNSSBundleString("PrivateTokenDescription", privateTokenDescription);
   if (NS_FAILED(rv)) return rv;
 
   rv = GetPIPNSSBundleString("SlotDescription", slotDescription);
   if (NS_FAILED(rv)) return rv;
 
   rv = GetPIPNSSBundleString("PrivateSlotDescription", privateSlotDescription);
   if (NS_FAILED(rv)) return rv;
 
-  rv = GetPIPNSSBundleString("FipsSlotDescription", fipsSlotDescription);
+  rv = GetPIPNSSBundleString("Fips140TokenDescription", fips140TokenDescription);
   if (NS_FAILED(rv)) return rv;
 
-  rv = GetPIPNSSBundleString("FipsPrivateSlotDescription", fipsPrivateSlotDescription);
+  rv = GetPIPNSSBundleString("Fips140SlotDescription", fips140SlotDescription);
   if (NS_FAILED(rv)) return rv;
 
   PK11_ConfigurePKCS11(NS_ConvertUTF16toUTF8(manufacturerID).get(),
                        NS_ConvertUTF16toUTF8(libraryDescription).get(),
                        NS_ConvertUTF16toUTF8(tokenDescription).get(),
                        NS_ConvertUTF16toUTF8(privateTokenDescription).get(),
                        NS_ConvertUTF16toUTF8(slotDescription).get(),
                        NS_ConvertUTF16toUTF8(privateSlotDescription).get(),
-                       NS_ConvertUTF16toUTF8(fipsSlotDescription).get(),
-                       NS_ConvertUTF16toUTF8(fipsPrivateSlotDescription).get(),
+                       NS_ConvertUTF16toUTF8(fips140TokenDescription).get(),
+                       NS_ConvertUTF16toUTF8(fips140SlotDescription).get(),
                        0, 0);
   return NS_OK;
 }
 
 nsresult
 nsNSSComponent::InitializePIPNSSBundle()
 {
   // Called during init only, no mutex required.
 
   nsresult rv;
