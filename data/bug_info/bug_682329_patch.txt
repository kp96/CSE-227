# HG changeset patch
# Parent 162bc9725dc026d9c3b7bc0c48d9c379a8e89398
# User Brian Smith <bsmith@mozilla.com>

diff --git a/netwerk/test/browser/browser_NetUtil.js b/netwerk/test/browser/browser_NetUtil.js
--- a/netwerk/test/browser/browser_NetUtil.js
+++ b/netwerk/test/browser/browser_NetUtil.js
@@ -17,59 +17,62 @@ function nextTest() {
   else
     executeSoon(finish);
 }
 
 var tests = [
   test_asyncFetchBadCert,
 ];
 
 var gCertErrorDialogShown = 0;
 
+// We used to show a dialog box by default when we encountered an SSL
+// certificate error. Now we treat these errors just like other
+// networking errors; the dialog is no longer shown.
 function test_asyncFetchBadCert() {
   let listener = new WindowListener("chrome://pippki/content/certerror.xul", function (domwindow) {
     gCertErrorDialogShown++;
 
     // Close the dialog
     domwindow.document.documentElement.cancelDialog();
   });
 
   Services.wm.addListener(listener);
 
   // Try a load from an untrusted cert, with errors supressed
   NetUtil.asyncFetch("https://untrusted.example.com", function (aInputStream, aStatusCode, aRequest) {
     ok(!Components.isSuccessCode(aStatusCode), "request failed");
     ok(aRequest instanceof Ci.nsIHttpChannel, "request is an nsIHttpChannel");
 
-    is(gCertErrorDialogShown, 0, "cert error was suppressed");
+    is(gCertErrorDialogShown, 0, "cert error dialog was not shown");
 
     // Now try again with a channel whose notificationCallbacks doesn't suprress errors
     let channel = NetUtil.newChannel("https://untrusted.example.com");
     channel.notificationCallbacks = {
       QueryInterface: XPCOMUtils.generateQI([Ci.nsIProgressEventSink,
                                              Ci.nsIInterfaceRequestor]),
       getInterface: function (aIID) this.QueryInterface(aIID),
       onProgress: function () {},
       onStatus: function () {}
     };
     NetUtil.asyncFetch(channel, function (aInputStream, aStatusCode, aRequest) {
       ok(!Components.isSuccessCode(aStatusCode), "request failed");
       ok(aRequest instanceof Ci.nsIHttpChannel, "request is an nsIHttpChannel");
 
-      is(gCertErrorDialogShown, 1, "cert error was not suppressed");
+      is(gCertErrorDialogShown, 0, "cert error dialog was not shown");
 
       // Now try a valid request
       NetUtil.asyncFetch("https://example.com", function (aInputStream, aStatusCode, aRequest) {
         ok(Components.isSuccessCode(aStatusCode), "request succeeded");
         ok(aRequest instanceof Ci.nsIHttpChannel, "request is an nsIHttpChannel");
         ok(aRequest.requestSucceeded, "HTTP request succeeded");
   
-        is(gCertErrorDialogShown, 1, "cert error was not shown");
+        is(gCertErrorDialogShown, 0, "cert error dialog was not shown");
 
         Services.wm.removeListener(listener);
         nextTest();
       });
     });
 
   });
 }
 
 function WindowListener(aURL, aCallback) {
