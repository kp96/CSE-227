diff --git a/mailnews/base/util/nsMsgUtils.cpp b/mailnews/base/util/nsMsgUtils.cpp
--- a/mailnews/base/util/nsMsgUtils.cpp
+++ b/mailnews/base/util/nsMsgUtils.cpp
@@ -1685,60 +1685,65 @@ NS_MSG_BASE nsresult MsgEscapeURL(const 
 
 NS_MSG_BASE char *MsgEscapeHTML(const char *string)
 {
+  char *rv = nsnull;
   /* XXX Hardcoded max entity len. The +1 is for the trailing null. */
-  char *rv = (char *) nsMemory::Alloc(strlen(string) * 6 + 1);
+  PRUint32 len = PL_strlen(string);
+  if (len >= (PR_UINT32_MAX / 6))
+    return nsnull;
+
+  rv = (char *)NS_Alloc( (6 * len) + 1 );
   char *ptr = rv;
 
   if(rv)
-  {
-    for(; *string != '\0'; string++)
     {
-      if(*string == '<')
-      {
-        *ptr++ = '&';
-        *ptr++ = 'l';
-        *ptr++ = 't';
-        *ptr++ = ';';
-      }
-      else if(*string == '>')
-      {
-        *ptr++ = '&';
-        *ptr++ = 'g';
-        *ptr++ = 't';
-        *ptr++ = ';';
-      }
-      else if(*string == '&')
-      {
-        *ptr++ = '&';
-        *ptr++ = 'a';
-        *ptr++ = 'm';
-        *ptr++ = 'p';
-        *ptr++ = ';';
-      }
-      else if (*string == '"')
-      {
-        *ptr++ = '&';
-        *ptr++ = 'q';
-        *ptr++ = 'u';
-        *ptr++ = 'o';
-        *ptr++ = 't';
-        *ptr++ = ';';
-      }      
-      else if (*string == '\'')
-      {
-        *ptr++ = '&';
-        *ptr++ = '#';
-        *ptr++ = '3';
-        *ptr++ = '9';
-        *ptr++ = ';';
-      }
-      else
-      {
-        *ptr++ = *string;
-      }
+      for(; *string != '\0'; string++)
+        {
+          if(*string == '<')
+            {
+              *ptr++ = '&';
+              *ptr++ = 'l';
+              *ptr++ = 't';
+              *ptr++ = ';';
+            }
+          else if(*string == '>')
+            {
+              *ptr++ = '&';
+              *ptr++ = 'g';
+              *ptr++ = 't';
+              *ptr++ = ';';
+            }
+          else if(*string == '&')
+            {
+              *ptr++ = '&';
+              *ptr++ = 'a';
+              *ptr++ = 'm';
+              *ptr++ = 'p';
+              *ptr++ = ';';
+            }
+          else if (*string == '"')
+            {
+              *ptr++ = '&';
+              *ptr++ = 'q';
+              *ptr++ = 'u';
+              *ptr++ = 'o';
+              *ptr++ = 't';
+              *ptr++ = ';';
+            }
+          else if (*string == '\'')
+            {
+              *ptr++ = '&';
+              *ptr++ = '#';
+              *ptr++ = '3';
+              *ptr++ = '9';
+              *ptr++ = ';';
+            }
+          else
+            {
+              *ptr++ = *string;
+            }
+        }
+      *ptr = '\0';
     }
-    *ptr = '\0';
-  }
 
   return(rv);
 }
@@ -1752,8 +1757,13 @@ NS_MSG_BASE PRUnichar *MsgEscapeHTML(con
   }
 
   /* XXX Hardcoded max entity len. */
+  if (aSourceBufferLen >=
+    ((PR_UINT32_MAX - sizeof(PRUnichar)) / (6 * sizeof(PRUnichar))) )
+      return nsnull;
+
   PRUnichar *resultBuffer = (PRUnichar *)nsMemory::Alloc(aSourceBufferLen *
                             6 * sizeof(PRUnichar) + sizeof(PRUnichar('\0')));
+                                                        
   PRUnichar *ptr = resultBuffer;
 
   if (resultBuffer) {
