Index: caps/src/nsScriptSecurityManager.cpp
===================================================================
RCS file: /cvsroot/mozilla/caps/src/nsScriptSecurityManager.cpp,v
retrieving revision 1.287
diff -u -8 -p -r1.287 nsScriptSecurityManager.cpp
--- caps/src/nsScriptSecurityManager.cpp	24 Feb 2006 04:38:46 -0000	1.287
+++ caps/src/nsScriptSecurityManager.cpp	10 Mar 2006 16:38:49 -0000
@@ -1270,32 +1270,32 @@ nsScriptSecurityManager::CheckLoadURIWit
         return NS_ERROR_DOM_BAD_URI;
     }
 
     //-- get the target scheme
     nsCAutoString targetScheme;
     rv = GetBaseURIScheme(aTargetURI, targetScheme);
     if (NS_FAILED(rv)) return rv;
 
-    if (nsCRT::strcasecmp(targetScheme.get(), sourceScheme.get()) == 0)
-    {
-        // every scheme can access another URI from the same scheme
-        return NS_OK;
-    }
-
     //-- Some callers do not allow loading javascript: or data: URLs
     if (((aFlags & (nsIScriptSecurityManager::DISALLOW_SCRIPT |
                     nsIScriptSecurityManager::DISALLOW_SCRIPT_OR_DATA)) &&
          targetScheme.Equals("javascript")) ||
         ((aFlags & nsIScriptSecurityManager::DISALLOW_SCRIPT_OR_DATA) &&
          targetScheme.Equals("data")))
     {
        return NS_ERROR_DOM_BAD_URI;
     }
 
+    if (nsCRT::strcasecmp(targetScheme.get(), sourceScheme.get()) == 0)
+    {
+        // every scheme can access another URI from the same scheme
+        return NS_OK;
+    }
+
     //-- If the schemes don't match, the policy is specified in this table.
     enum Action { AllowProtocol, DenyProtocol, PrefControlled, ChromeProtocol};
     static const struct
     {
         const char *name;
         Action action;
     } protocolList[] =
     {
