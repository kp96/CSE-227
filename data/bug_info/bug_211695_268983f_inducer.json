{"bug_id":211695,"commitHash":"268983f","commit_info":{"sha":"268983f1b3ffa6688f0857ef14e5fb8df7c64b7e","commit":{"author":{"name":"neil%parkwaycc.co.uk","email":"neil%parkwaycc.co.uk","date":"2003-08-12T11:20:50Z"},"committer":{"name":"neil%parkwaycc.co.uk","email":"neil%parkwaycc.co.uk","date":"2003-08-12T11:20:50Z"},"message":"Bug 211695 Fix bugs in nsCertTree.cpp r=varga sr=alecf moa=kaie a=asa","tree":{"sha":"1c85a18b19443817c80a96978acffd2b55fffb8d","url":"https://api.github.com/repos/mozilla/gecko-dev/git/trees/1c85a18b19443817c80a96978acffd2b55fffb8d"},"url":"https://api.github.com/repos/mozilla/gecko-dev/git/commits/268983f1b3ffa6688f0857ef14e5fb8df7c64b7e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/mozilla/gecko-dev/commits/268983f1b3ffa6688f0857ef14e5fb8df7c64b7e","html_url":"https://github.com/mozilla/gecko-dev/commit/268983f1b3ffa6688f0857ef14e5fb8df7c64b7e","comments_url":"https://api.github.com/repos/mozilla/gecko-dev/commits/268983f1b3ffa6688f0857ef14e5fb8df7c64b7e/comments","author":null,"committer":null,"parents":[{"sha":"7c04e81463af003b0b1eb019c5fbe7d9f3dca199","url":"https://api.github.com/repos/mozilla/gecko-dev/commits/7c04e81463af003b0b1eb019c5fbe7d9f3dca199","html_url":"https://github.com/mozilla/gecko-dev/commit/7c04e81463af003b0b1eb019c5fbe7d9f3dca199"}],"stats":{"total":48,"additions":29,"deletions":19},"files":[{"sha":"bb49ecc5012263380f3856465fe2a8d7b4daec3f","filename":"security/manager/ssl/src/nsCertTree.cpp","status":"modified","additions":29,"deletions":19,"changes":48,"blob_url":"https://github.com/mozilla/gecko-dev/blob/268983f1b3ffa6688f0857ef14e5fb8df7c64b7e/security/manager/ssl/src/nsCertTree.cpp","raw_url":"https://github.com/mozilla/gecko-dev/raw/268983f1b3ffa6688f0857ef14e5fb8df7c64b7e/security/manager/ssl/src/nsCertTree.cpp","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/security/manager/ssl/src/nsCertTree.cpp?ref=268983f1b3ffa6688f0857ef14e5fb8df7c64b7e","patch":"@@ -219,11 +219,10 @@ nsCertTree::GetThreadDescAtIndex(PRInt32 index)\n     if (index == idx) {\n       return &mTreeArray[i];\n     }\n-    if (mTreeArray[i].open == PR_FALSE) {\n-      idx++;\n-    } else {\n-      idx += mTreeArray[i].numChildren + 1;\n+    if (mTreeArray[i].open) {\n+      idx += mTreeArray[i].numChildren;\n     }\n+    idx++;\n     if (idx > index) break;\n   }\n   return nsnull;\n@@ -413,11 +412,13 @@ nsCertTree::UpdateUIContents()\n     }\n     orgCert = nextCert;\n   }\n-  mNumRows = count + mNumOrgs;\n   if (mTree) {\n-    mTree->RowCountChanged(0, mNumRows);\n-    mTree->Invalidate();\n+    mTree->BeginUpdateBatch();\n+    mTree->RowCountChanged(0, -mNumRows);\n   }\n+  mNumRows = count + mNumOrgs;\n+  if (mTree)\n+    mTree->EndUpdateBatch();\n   return NS_OK;\n }\n \n@@ -480,11 +481,10 @@ nsCertTree::GetRowCount(PRInt32 *aRowCount)\n {\n   PRUint32 count = 0;\n   for (PRInt32 i=0; i<mNumOrgs; i++) {\n-    if (mTreeArray[i].open == PR_TRUE) {\n-      count += mTreeArray[i].numChildren + 1;\n-    } else {\n-      count++;\n+    if (mTreeArray[i].open) {\n+      count += mTreeArray[i].numChildren;\n     }\n+    count++;\n   }\n   *aRowCount = count;\n   return NS_OK;\n@@ -553,7 +553,7 @@ NS_IMETHODIMP\n nsCertTree::IsContainerOpen(PRInt32 index, PRBool *_retval)\n {\n   treeArrayEl *el = GetThreadDescAtIndex(index);\n-  if (el && el->open == PR_TRUE) {\n+  if (el && el->open) {\n     *_retval = PR_TRUE;\n   } else {\n     *_retval = PR_FALSE;\n@@ -582,14 +582,14 @@ NS_IMETHODIMP\n nsCertTree::GetParentIndex(PRInt32 rowIndex, PRInt32 *_retval)\n {\n   int i, idx = 0;\n-  for (i=0; i<mNumOrgs; i++) {\n-    if (rowIndex == idx) break; // index is for thread\n-    if (rowIndex < idx + mTreeArray[i].numChildren + 1) {\n-      *_retval = idx;\n-      return NS_OK;\n+  for (i = 0; i < mNumOrgs && idx < rowIndex; i++, idx++) {\n+    if (mTreeArray[i].open) {\n+      if (rowIndex <= idx + mTreeArray[i].numChildren) {\n+        *_retval = idx;\n+        return NS_OK;\n+      }\n+      idx += mTreeArray[i].numChildren;\n     }\n-    idx += mTreeArray[i].numChildren + 1;\n-    if (idx > rowIndex) break;\n   }\n   *_retval = -1;\n   return NS_OK;\n@@ -600,6 +600,16 @@ NS_IMETHODIMP\n nsCertTree::HasNextSibling(PRInt32 rowIndex, PRInt32 afterIndex, \n                                PRBool *_retval)\n {\n+  int i, idx = 0;\n+  for (i = 0; i < mNumOrgs && idx <= rowIndex; i++, idx++) {\n+    if (mTreeArray[i].open) {\n+      idx += mTreeArray[i].numChildren;\n+      if (afterIndex <= idx) {\n+        *_retval = afterIndex < idx;\n+        return NS_OK;\n+      }\n+    }\n+  }\n   *_retval = PR_FALSE;\n   return NS_OK;\n }"}]},"blames":["2b5e9f73","d38a0937","02d9df0c"]}