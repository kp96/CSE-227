Index: src/nsNSSCertificateDB.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsNSSCertificateDB.cpp,v
retrieving revision 1.15
diff -u -8 -r1.15 nsNSSCertificateDB.cpp
--- src/nsNSSCertificateDB.cpp	5 Nov 2004 15:23:35 -0000	1.15
+++ src/nsNSSCertificateDB.cpp	2 Sep 2005 05:01:42 -0000
@@ -936,22 +936,28 @@
 }
 
 NS_IMETHODIMP 
 nsNSSCertificateDB::IsCertTrusted(nsIX509Cert *cert, 
                                   PRUint32 certType,
                                   PRUint32 trustType,
                                   PRBool *_isTrusted)
 {
+  NS_ENSURE_ARG_POINTER(_isTrusted);
+  *_isTrusted = PR_FALSE;
+
   nsNSSShutDownPreventionLock locker;
   SECStatus srv;
   nsNSSCertificate *pipCert = NS_STATIC_CAST(nsNSSCertificate *, cert);
   CERTCertificate *nsscert = pipCert->GetCert();
   CERTCertTrust nsstrust;
   srv = CERT_GetCertTrust(nsscert, &nsstrust);
+  if (srv != SECSuccess)
+    return NS_ERROR_FAILURE;
+
   nsNSSCertTrust trust(&nsstrust);
   CERT_DestroyCertificate(nsscert);
   if (certType == nsIX509Cert::CA_CERT) {
     if (trustType & nsIX509CertDB::TRUSTED_SSL) {
       *_isTrusted = trust.HasTrustedCA(PR_TRUE, PR_FALSE, PR_FALSE);
     } else if (trustType & nsIX509CertDB::TRUSTED_EMAIL) {
       *_isTrusted = trust.HasTrustedCA(PR_FALSE, PR_TRUE, PR_FALSE);
     } else if (trustType & nsIX509CertDB::TRUSTED_OBJSIGN) {
