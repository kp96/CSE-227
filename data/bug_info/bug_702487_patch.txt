# HG changeset patch
# Parent 370fddba9e0eea32c23bd6ec7e8f6a1488a89dcd

diff --git a/mobile/android/components/PromptService.js b/mobile/android/components/PromptService.js
--- a/mobile/android/components/PromptService.js
+++ b/mobile/android/components/PromptService.js
@@ -192,19 +192,20 @@ Prompt.prototype = {
 
   confirm: function confirm(aTitle, aText) {
     let data = this.commonPrompt(aTitle, aText, null, "", {value: false}, []);
     return (data.button == 0);
   },
 
   confirmCheck: function confirmCheck(aTitle, aText, aCheckMsg, aCheckState) {
     let data = this.commonPrompt(aTitle, aText, null, aCheckMsg, aCheckState, []);
+    let ok = data.button == 0;
     if (aCheckMsg)
       aCheckState.value = data.checkbox == "true";
-    return (data.button == 0);
+    return ok;
   },
 
   confirmEx: function confirmEx(aTitle, aText, aButtonFlags, aButton0,
                       aButton1, aButton2, aCheckMsg, aCheckState) {
     let buttons = [];
     let titles = [aButton0, aButton1, aButton2];
     for (let i = 0; i < 3; i++) {
       let bTitle = null;
@@ -245,58 +246,65 @@ Prompt.prototype = {
     aCheckState.value = data.checkbox == "true";
     return data.button;
   },
 
   nsIPrompt_prompt: function nsIPrompt_prompt(aTitle, aText, aValue, aCheckMsg, aCheckState) {
     let inputs = [{ type: "textbox", value: aValue.value }];
     let data = this.commonPrompt(aTitle, aText, null, aCheckMsg, aCheckState, inputs);
 
+    let ok = data.button == 0;
     if (aCheckMsg)
       aCheckState.value = data.checkbox == "true";
-    if (data.textbox)
+    if (ok)
       aValue.value = data.textbox;
-    return (data.button == 0);
+    return ok;
   },
 
   nsIPrompt_promptPassword: function nsIPrompt_promptPassword(
       aTitle, aText, aPassword, aCheckMsg, aCheckState) {
     let inputs = [{ type: "password", hint: "Password", value: aPassword.value || "" }];
     let data = this.commonPrompt(aTitle, aText, null, aCheckMsg, aCheckState, inputs);
 
+    let ok = data.button == 0;
     if (aCheckMsg)
       aCheckState.value = data.checkbox == "true";
-    if (data.password)
+    if (ok)
       aPassword.value = data.password;
-    return (data.button == 0);
+    return ok;
   },
 
   nsIPrompt_promptUsernameAndPassword: function nsIPrompt_promptUsernameAndPassword(
       aTitle, aText, aUsername, aPassword, aCheckMsg, aCheckState) {
     let inputs = [{ type: "textbox",  hint: PromptUtils.getLocaleString("username", "passwdmgr"), value: aUsername.value },
                   { type: "password", hint: PromptUtils.getLocaleString("password", "passwdmgr"), value: aPassword.value }];
     let data = this.commonPrompt(aTitle, aText, null, aCheckMsg, aCheckState, inputs);
+
+    let ok = data.button == 0;
     if (aCheckMsg)
       aCheckState.value = data.checkbox == "true";
-    if (data.textbox)
+    if (ok) {
       aUsername.value = data.textbox;
-    if (data.password)
       aPassword.value = data.password;
-    return (data.button == 0);
+    }
+    return ok;
   },
 
   select: function select(aTitle, aText, aCount, aSelectList, aOutSelection) {
     let data = this.commonPrompt(aTitle, aText, [
       { label: PromptUtils.getLocaleString("OK") }
     ], "", {value: false}, [
       { type: "menulist",  values: aSelectList },
     ]);
-    if (data.menulist)
+
+    let ok = data.button == 0;
+    if (ok)
       aOutSelection.value = data.menulist;
-    return (data.button == 0);
+
+    return ok;
   },
 
   /* ----------  nsIAuthPrompt  ---------- */
 
   nsIAuthPrompt_prompt : function (title, text, passwordRealm, savePassword, defaultText, result) {
     // TODO: Port functions from nsLoginManagerPrompter.js to here
     if (defaultText)
       result.value = defaultText;
@@ -327,17 +335,18 @@ Prompt.prototype = {
     if (aUser)
       ok = this.nsIPrompt_promptUsernameAndPassword(aTitle, aText, aUser, aPass, checkMsg, check);
     else
       ok = this.nsIPrompt_promptPassword(aTitle, aText, aPass, checkMsg, check);
 
     if (ok && canSave && check.value)
       PromptUtils.savePassword(hostname, realm, aUser, aPass);
 
-    return ok;  },
+    return ok;
+  },
 
   /* ----------  nsIAuthPrompt2  ---------- */
 
   promptAuth: function promptAuth(aChannel, aLevel, aAuthInfo) {
     let checkMsg = null;
     let check = { value: false };
     let message = PromptUtils.makeDialogText(aChannel, aAuthInfo);
     let [username, password] = PromptUtils.getAuthInfo(aAuthInfo);
