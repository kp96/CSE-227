Index: nsCertTree.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsCertTree.cpp,v
retrieving revision 1.33
diff -u -r1.33 nsCertTree.cpp
--- nsCertTree.cpp
+++ nsCertTree.cpp
@@ -132,11 +132,15 @@
   }
 }
 
-void nsCertTree::InitCompareHash()
+nsresult nsCertTree::InitCompareHash()
 {
   ClearCompareHash();
-  PL_DHashTableInit(&mCompareCache, &gMapOps, nsnull,
-                    sizeof(CompareCacheHashEntry), 128);
+  if (!PL_DHashTableInit(&mCompareCache, &gMapOps, nsnull,
+                         sizeof(CompareCacheHashEntry), 128)) {
+    mCompareCache.ops = nsnull;
+    return NS_ERROR_OUT_OF_MEMORY;
+  }
+  return NS_OK;
 }
 
 nsCertTree::~nsCertTree()
@@ -358,14 +362,15 @@
 NS_IMETHODIMP 
 nsCertTree::LoadCertsFromCache(nsINSSCertCache *aCache, PRUint32 aType)
 {
-  nsresult rv;
   if (mTreeArray) {
     FreeCertArray();
     delete [] mTreeArray;
     mTreeArray = NULL;
     mNumRows = 0;
   }
-  InitCompareHash();
+  nsresult rv = InitCompareHash();
+  if (NS_FAILED(rv)) return rv;
+
   rv = GetCertsByTypeFromCache(aCache, aType, 
                                GetCompareFuncFromCertType(aType), &mCompareCache,
                                getter_AddRefs(mCertArray));
@@ -376,14 +381,15 @@
 NS_IMETHODIMP 
 nsCertTree::LoadCerts(PRUint32 aType)
 {
-  nsresult rv;
   if (mTreeArray) {
     FreeCertArray();
     delete [] mTreeArray;
     mTreeArray = NULL;
     mNumRows = 0;
   }
-  InitCompareHash();
+  nsresult rv = InitCompareHash();
+  if (NS_FAILED(rv)) return rv;
+
   rv = GetCertsByType(aType, 
                       GetCompareFuncFromCertType(aType), &mCompareCache,
                       getter_AddRefs(mCertArray));
Index: nsCertTree.h
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsCertTree.h,v
retrieving revision 1.8
diff -u -r1.8 nsCertTree.h
--- nsCertTree.h
+++ nsCertTree.h
@@ -72,7 +72,7 @@
     sort_CommonName, sort_IssuedDateDescending, sort_Email, sort_None };
 
 protected:
-  void InitCompareHash();
+  nsresult InitCompareHash();
   void ClearCompareHash();
   void RemoveCacheEntry(void *key);
 
