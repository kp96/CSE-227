{"bug_id":119500,"commitHash":"b354997","commit_info":{"sha":"b354997d97673e83d2b920c8f31c107e6d27b94c","commit":{"author":{"name":"relyea%netscape.com","email":"relyea%netscape.com","date":"2005-09-29T23:44:39Z"},"committer":{"name":"relyea%netscape.com","email":"relyea%netscape.com","date":"2005-09-29T23:44:39Z"},"message":"Bug 119500 PKCS#11 CKF_PROTECTED_AUTHENTICATION_PATH token flag not supported\nwtc's review r=wtc","tree":{"sha":"3eb6a31f1926f3bf6e8c5b2cbd15c73bab813dc6","url":"https://api.github.com/repos/mozilla/gecko-dev/git/trees/3eb6a31f1926f3bf6e8c5b2cbd15c73bab813dc6"},"url":"https://api.github.com/repos/mozilla/gecko-dev/git/commits/b354997d97673e83d2b920c8f31c107e6d27b94c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/mozilla/gecko-dev/commits/b354997d97673e83d2b920c8f31c107e6d27b94c","html_url":"https://github.com/mozilla/gecko-dev/commit/b354997d97673e83d2b920c8f31c107e6d27b94c","comments_url":"https://api.github.com/repos/mozilla/gecko-dev/commits/b354997d97673e83d2b920c8f31c107e6d27b94c/comments","author":null,"committer":null,"parents":[{"sha":"3884e9dfd21248cab6b8f354cbd42f6ef568c05b","url":"https://api.github.com/repos/mozilla/gecko-dev/commits/3884e9dfd21248cab6b8f354cbd42f6ef568c05b","html_url":"https://github.com/mozilla/gecko-dev/commit/3884e9dfd21248cab6b8f354cbd42f6ef568c05b"}],"stats":{"total":17,"additions":9,"deletions":8},"files":[{"sha":"a9bc39943e75f5b6169c503a7ca2498bbdaf886b","filename":"security/nss/lib/pk11wrap/pk11auth.c","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/mozilla/gecko-dev/blob/b354997d97673e83d2b920c8f31c107e6d27b94c/security/nss/lib/pk11wrap/pk11auth.c","raw_url":"https://github.com/mozilla/gecko-dev/raw/b354997d97673e83d2b920c8f31c107e6d27b94c/security/nss/lib/pk11wrap/pk11auth.c","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/security/nss/lib/pk11wrap/pk11auth.c?ref=b354997d97673e83d2b920c8f31c107e6d27b94c","patch":"@@ -567,7 +567,7 @@ PK11_DoPassword(PK11SlotInfo *slot, PRBool loadCerts, void *wincx)\n \t * we can skip our own C_Login call (which would force the token to\n \t * try to login again).\n \t * \n-\t * Applications that don't know about protectedPinAuth will return a \n+\t * Applications that don't know about protectedAuthPath will return a \n \t * password, which we will ignore and trigger the token to \n \t * 'authenticate' itself anyway. Hopefully the blinking display on \n \t * the reader, or the flashing light under the thumbprint reader will \n@@ -579,13 +579,14 @@ PK11_DoPassword(PK11SlotInfo *slot, PRBool loadCerts, void *wincx)\n \t    if (strcmp(password, PK11_PW_RETRY) == 0) {\n \t\trv = SECWouldBlock;\n \t\tPORT_Free(password);\n-\t\tbreak;\n-\t     /* applicaton tried to authenticate and succeeded we're done */\n-\t     } else if (strcmp(password, PK11_PW_AUTHENTICATED) == 0) {\n+\t\tcontinue;\n+\t    }\n+\t    /* applicaton tried to authenticate and succeeded we're done */\n+\t    if (strcmp(password, PK11_PW_AUTHENTICATED) == 0) {\n \t\trv = SECSuccess;\n \t\tPORT_Free(password);\n \t\tbreak;\n-\t     }\n+\t    }\n \t}\n \trv = pk11_CheckPassword(slot,password);\n \tPORT_Memset(password, 0, PORT_Strlen(password));"},{"sha":"cc63eddc718d2e586efd3055b3fa6b71ae64e1a2","filename":"security/nss/lib/pk11wrap/secmodt.h","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/mozilla/gecko-dev/blob/b354997d97673e83d2b920c8f31c107e6d27b94c/security/nss/lib/pk11wrap/secmodt.h","raw_url":"https://github.com/mozilla/gecko-dev/raw/b354997d97673e83d2b920c8f31c107e6d27b94c/security/nss/lib/pk11wrap/secmodt.h","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/security/nss/lib/pk11wrap/secmodt.h?ref=b354997d97673e83d2b920c8f31c107e6d27b94c","patch":"@@ -390,7 +390,7 @@ typedef PRBool (PR_CALLBACK *PK11IsLoggedInFunc)(PK11SlotInfo *slot, void *arg);\n \n /*\n  * Special strings the password callback function can return only if\n- * the slot is an protected pin path slot.\n+ * the slot is an protected auth path slot.\n  */ \n #define PK11_PW_RETRY\t\t\"RETRY\"\t/* an failed attempt to authenticate\n \t\t\t\t\t * has already been made, just retry\n@@ -399,9 +399,9 @@ typedef PRBool (PR_CALLBACK *PK11IsLoggedInFunc)(PK11SlotInfo *slot, void *arg);\n \t\t\t\t\t * has completed. Continue without\n \t\t\t\t\t * another call to C_Login */\n /* All other non-null values mean that that NSS could call C_Login to force\n- * the authentication. The following define is to add applications in \n+ * the authentication. The following define is to aid applications in \n  * documenting that is what it's trying to do */\n-#define PK11_PW_TRY\t\t\"\"      /* Default: a prompt has been presented\n+#define PK11_PW_TRY\t\t\"TRY\"   /* Default: a prompt has been presented\n \t\t\t\t\t * to the user, initiate a C_Login\n \t\t\t\t\t * to authenticate the token */\n "}]},"blames":["9c9cecb9","d0af60d0","8c4b7edd","77fd9994","9c9cecb9"]}