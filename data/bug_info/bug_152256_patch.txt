Index: dom/src/base/nsBarProps.cpp
===================================================================
RCS file: /cvsroot/mozilla/dom/src/base/nsBarProps.cpp,v
retrieving revision 1.14.10.1
diff -u -r1.14.10.1 nsBarProps.cpp
--- dom/src/base/nsBarProps.cpp	10 Apr 2002 02:34:09 -0000	1.14.10.1
+++ dom/src/base/nsBarProps.cpp	19 Jun 2002 03:55:00 -0000
@@ -48,6 +48,9 @@
 #include "nsIDOMWindowInternal.h"
 #include "nsDOMClassInfo.h"
 
+#include "nsIPrefBranch.h"
+#include "nsIPrefService.h"
+
 //
 //  Basic (virtual) BarProp class implementation
 //
@@ -237,6 +240,23 @@
 NS_IMETHODIMP
 StatusbarPropImpl::SetVisible(PRBool aVisible)
 {
+  if (!aVisible) {
+    // See if the user is forbidding sites from hiding the statusbar.
+    nsresult rv;
+    nsCOMPtr<nsIPrefService> prefs = do_GetService(NS_PREFSERVICE_CONTRACTID, &rv);
+    if (NS_SUCCEEDED(rv)) {
+      nsCOMPtr<nsIPrefBranch> prefBranch;
+      rv = prefs->GetBranch("dom.disable_window_open_feature.", getter_AddRefs(prefBranch));
+      if (NS_SUCCEEDED(rv)) {
+        PRBool forceEnable = PR_FALSE;
+        rv = prefBranch->GetBoolPref("status", &forceEnable);
+        if (NS_SUCCEEDED(rv) && forceEnable && !GlobalWindowImpl::IsCallerChrome()) {
+          return NS_OK;
+        }
+      }
+    }
+  }
+
   return BarPropImpl::SetVisibleByFlag(aVisible,
                                        nsIWebBrowserChrome::CHROME_STATUSBAR);
 }
Index: dom/src/base/nsGlobalWindow.h
===================================================================
RCS file: /cvsroot/mozilla/dom/src/base/nsGlobalWindow.h,v
retrieving revision 1.181.2.2
diff -u -r1.181.2.2 nsGlobalWindow.h
--- dom/src/base/nsGlobalWindow.h	18 May 2002 04:13:22 -0000	1.181.2.2
+++ dom/src/base/nsGlobalWindow.h	19 Jun 2002 03:55:00 -0000
@@ -201,6 +201,7 @@
   GlobalWindowImpl();
 
   static void ShutDown();
+  static PRBool IsCallerChrome();
 
 protected:
   // Object Management
@@ -243,7 +244,6 @@
   nsresult CheckSecurityWidthAndHeight(PRInt32* width, PRInt32* height);
   nsresult CheckSecurityLeftAndTop(PRInt32* left, PRInt32* top);
   static nsresult CheckSecurityIsChromeCaller(PRBool *isChrome);
-  static PRBool IsCallerChrome();
 
   void MakeScriptDialogTitle(const nsAString &aInTitle, nsAString &aOutTitle);
 
