{"bug_id":307770,"commitHash":"0995a3d","commit_info":{"sha":"0995a3d991344541d9dda3f96987a691298e10c4","commit":{"author":{"name":"gavin@gavinsharp.com","email":"gavin@gavinsharp.com","date":"2007-08-19T20:51:30Z"},"committer":{"name":"gavin@gavinsharp.com","email":"gavin@gavinsharp.com","date":"2007-08-19T20:51:30Z"},"message":"Bug 307770: pass the blocked host to xpinstall-install-blocked observers so that they can offer to whitelist the correct URI (fix installation of XPIs from target=\"blank\" links), r=mano, sr=dveditz","tree":{"sha":"814b04e5afea7ff39e5544a94a970da614af85b1","url":"https://api.github.com/repos/mozilla/gecko-dev/git/trees/814b04e5afea7ff39e5544a94a970da614af85b1"},"url":"https://api.github.com/repos/mozilla/gecko-dev/git/commits/0995a3d991344541d9dda3f96987a691298e10c4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/mozilla/gecko-dev/commits/0995a3d991344541d9dda3f96987a691298e10c4","html_url":"https://github.com/mozilla/gecko-dev/commit/0995a3d991344541d9dda3f96987a691298e10c4","comments_url":"https://api.github.com/repos/mozilla/gecko-dev/commits/0995a3d991344541d9dda3f96987a691298e10c4/comments","author":{"login":"gavinsharp","id":327839,"avatar_url":"https://avatars3.githubusercontent.com/u/327839?v=4","gravatar_id":"","url":"https://api.github.com/users/gavinsharp","html_url":"https://github.com/gavinsharp","followers_url":"https://api.github.com/users/gavinsharp/followers","following_url":"https://api.github.com/users/gavinsharp/following{/other_user}","gists_url":"https://api.github.com/users/gavinsharp/gists{/gist_id}","starred_url":"https://api.github.com/users/gavinsharp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gavinsharp/subscriptions","organizations_url":"https://api.github.com/users/gavinsharp/orgs","repos_url":"https://api.github.com/users/gavinsharp/repos","events_url":"https://api.github.com/users/gavinsharp/events{/privacy}","received_events_url":"https://api.github.com/users/gavinsharp/received_events","type":"User","site_admin":false},"committer":{"login":"gavinsharp","id":327839,"avatar_url":"https://avatars3.githubusercontent.com/u/327839?v=4","gravatar_id":"","url":"https://api.github.com/users/gavinsharp","html_url":"https://github.com/gavinsharp","followers_url":"https://api.github.com/users/gavinsharp/followers","following_url":"https://api.github.com/users/gavinsharp/following{/other_user}","gists_url":"https://api.github.com/users/gavinsharp/gists{/gist_id}","starred_url":"https://api.github.com/users/gavinsharp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gavinsharp/subscriptions","organizations_url":"https://api.github.com/users/gavinsharp/orgs","repos_url":"https://api.github.com/users/gavinsharp/repos","events_url":"https://api.github.com/users/gavinsharp/events{/privacy}","received_events_url":"https://api.github.com/users/gavinsharp/received_events","type":"User","site_admin":false},"parents":[{"sha":"aa99ae9139692d9d45cd64d61091a4931c94ec06","url":"https://api.github.com/repos/mozilla/gecko-dev/commits/aa99ae9139692d9d45cd64d61091a4931c94ec06","html_url":"https://github.com/mozilla/gecko-dev/commit/aa99ae9139692d9d45cd64d61091a4931c94ec06"}],"stats":{"total":22,"additions":12,"deletions":10},"files":[{"sha":"57eaded043d25c925006f49ea32bfd540de3ad61","filename":"browser/base/content/browser.js","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/mozilla/gecko-dev/blob/0995a3d991344541d9dda3f96987a691298e10c4/browser/base/content/browser.js","raw_url":"https://github.com/mozilla/gecko-dev/raw/0995a3d991344541d9dda3f96987a691298e10c4/browser/base/content/browser.js","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/browser/base/content/browser.js?ref=0995a3d991344541d9dda3f96987a691298e10c4","patch":"@@ -668,7 +668,7 @@ const gXPInstallObserver = {\n       var shell = aSubject.QueryInterface(Components.interfaces.nsIDocShell);\n       browser = this._getBrowser(shell);\n       if (browser) {\n-        var host = browser.docShell.QueryInterface(Components.interfaces.nsIWebNavigation).currentURI.host;\n+        var host = aData;\n         var brandShortName = brandBundle.getString(\"brandShortName\");\n         var notificationName, messageString, buttons;\n         if (!gPrefService.getBoolPref(\"xpinstall.enabled\")) {\n@@ -693,9 +693,6 @@ const gXPInstallObserver = {\n           }\n         }\n         else {\n-          // XXXben - use regular software install warnings for now until we can\n-          // properly differentiate themes. It's likely in fact that themes won't\n-          // be blocked so this code path will only be reached for extensions.\n           notificationName = \"xpinstall\"\n           messageString = browserBundle.getFormattedString(\"xpinstallPromptWarning\",\n                                                            [brandShortName, host]);\n@@ -704,7 +701,7 @@ const gXPInstallObserver = {\n             label: browserBundle.getString(\"xpinstallPromptWarningButton\"),\n             accessKey: browserBundle.getString(\"xpinstallPromptWarningButton.accesskey\"),\n             popup: null,\n-            callback: function() { return xpinstallEditPermissions(shell); }\n+            callback: function() { return xpinstallEditPermissions(shell, host); }\n           }];\n         }\n \n@@ -721,16 +718,15 @@ const gXPInstallObserver = {\n   }\n };\n \n-function xpinstallEditPermissions(aDocShell)\n+function xpinstallEditPermissions(aDocShell, aHost)\n {\n   var browser = gXPInstallObserver._getBrowser(aDocShell);\n   if (browser) {\n     var bundlePreferences = document.getElementById(\"bundle_preferences\");\n-    var webNav = aDocShell.QueryInterface(Components.interfaces.nsIWebNavigation);\n     var params = { blockVisible   : false,\n                    sessionVisible : false,\n                    allowVisible   : true,\n-                   prefilledHost  : webNav.currentURI.host,\n+                   prefilledHost  : aHost,\n                    permissionType : \"install\",\n                    windowTitle    : bundlePreferences.getString(\"addons_permissions_title\"),\n                    introText      : bundlePreferences.getString(\"addonspermissionstext\") };"},{"sha":"b3989a950a9a010c5686f03acbc15c394c5ad48d","filename":"xpinstall/src/nsInstallTrigger.cpp","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/mozilla/gecko-dev/blob/0995a3d991344541d9dda3f96987a691298e10c4/xpinstall/src/nsInstallTrigger.cpp","raw_url":"https://github.com/mozilla/gecko-dev/raw/0995a3d991344541d9dda3f96987a691298e10c4/xpinstall/src/nsInstallTrigger.cpp","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/xpinstall/src/nsInstallTrigger.cpp?ref=0995a3d991344541d9dda3f96987a691298e10c4","patch":"@@ -193,6 +193,10 @@ nsInstallTrigger::HandleContent(const char * aContentType,\n     // We have what we need to start an XPInstall, now figure out if we are\n     // going to honor this request based on PermissionManager settings\n     PRBool enabled = PR_FALSE;\n+    // Keep the host so that it can be sent to the\n+    // xpinstall-install-blocked observers to display the host to be\n+    // whitelisted\n+    nsCAutoString host;\n \n     if ( useReferrer )\n     {\n@@ -205,6 +209,7 @@ nsInstallTrigger::HandleContent(const char * aContentType,\n         // site is one which is allowed to annoy the user with modal dialogs.\n \n         enabled = AllowInstall( referringURI );\n+        referringURI->GetHost(host);\n     }\n     else\n     {\n@@ -241,6 +246,7 @@ nsInstallTrigger::HandleContent(const char * aContentType,\n         // trusted sites.\n \n         enabled = AllowInstall( uri );\n+        uri->GetHost(host);\n     }\n \n \n@@ -257,8 +263,8 @@ nsInstallTrigger::HandleContent(const char * aContentType,\n         nsCOMPtr<nsIObserverService> os(do_GetService(\"@mozilla.org/observer-service;1\"));\n         if (os) {\n             os->NotifyObservers(win->GetDocShell(),\n-                                \"xpinstall-install-blocked\", \n-                                NS_LITERAL_STRING(\"install-chrome\").get());\n+                                \"xpinstall-install-blocked\",\n+                                NS_ConvertUTF8toUTF16(host).get());\n         }\n         rv = NS_ERROR_ABORT;\n     }"}]},"blames":["5171657d","ebb48b88","970fb992","0cd8d981","2fb9feaa","b3631c7c","d59fc6db","ba335cf4","148fb053","1dbecf32","dda30fd2","8f186315","afaefbac"]}