Index: mozilla/security/manager/ssl/src/nsNSSCertHelper.cpp
===================================================================
RCS file: /cvsroot/mozilla/security/manager/ssl/src/nsNSSCertHelper.cpp,v
retrieving revision 1.31
diff -u -8 -p -r1.31 nsNSSCertHelper.cpp
--- mozilla/security/manager/ssl/src/nsNSSCertHelper.cpp	30 Oct 2007 20:59:26 -0000	1.31
+++ mozilla/security/manager/ssl/src/nsNSSCertHelper.cpp	14 Dec 2007 00:45:09 -0000
@@ -1059,27 +1059,30 @@ ProcessGeneralName(PRArenaPool *arena,
     break;
   case certURI:
     nssComponent->GetPIPNSSBundleString("CertDumpURI", key);
     value.AssignASCII((char*)current->name.other.data, current->name.other.len);
     break;
   case certIPAddress:
     {
       char buf[INET6_ADDRSTRLEN];
+      PRStatus IPStatus = PR_FAILURE;
       PRNetAddr addr;
+      memset(&addr, 0, sizeof(addr));
       nssComponent->GetPIPNSSBundleString("CertDumpIPAddress", key);
       if (current->name.other.len == 4) {
         addr.inet.family = PR_AF_INET;
         memcpy(&addr.inet.ip, current->name.other.data, current->name.other.len);
-        PR_NetAddrToString(&addr, buf, sizeof(buf));
-        value.AssignASCII(buf);
+        IPStatus = PR_NetAddrToString(&addr, buf, sizeof(buf));
       } else if (current->name.other.len == 16) {
         addr.ipv6.family = PR_AF_INET6;
         memcpy(&addr.ipv6.ip, current->name.other.data, current->name.other.len);
-        PR_NetAddrToString(&addr, buf, sizeof(buf));
+        IPStatus = PR_NetAddrToString(&addr, buf, sizeof(buf));
+      }
+      if (IPStatus == PR_SUCCESS) {
         value.AssignASCII(buf);
       } else {
         /* invalid IP address */
         ProcessRawBytes(nssComponent, &current->name.other, value);
       }
       break;
     }
   case certRegisterID:
