Index: src/security/CertificatesWindowController.h
===================================================================
RCS file: /cvsroot/mozilla/camino/src/security/CertificatesWindowController.h,v
retrieving revision 1.3
diff -u -8 -r1.3 CertificatesWindowController.h
--- src/security/CertificatesWindowController.h	30 Jul 2008 23:23:03 -0000	1.3
+++ src/security/CertificatesWindowController.h	23 Nov 2008 19:07:00 -0000
@@ -61,14 +61,12 @@
 + (CertificatesWindowController*)sharedCertificatesWindowController;
 
 - (IBAction)viewSelectedCertificates:(id)sender;
 - (IBAction)deleteSelectedCertificates:(id)sender;
 
 - (IBAction)backupSelectedCertificates:(id)sender;
 - (IBAction)backupAllCertificates:(id)sender;
 
-- (IBAction)restoreCertificates:(id)sender;
-
 - (IBAction)importCertificates:(id)sender;
 
 @end
 
Index: src/security/CertificatesWindowController.mm
===================================================================
RCS file: /cvsroot/mozilla/camino/src/security/CertificatesWindowController.mm,v
retrieving revision 1.15
diff -u -8 -r1.15 CertificatesWindowController.mm
--- src/security/CertificatesWindowController.mm	9 Nov 2008 20:35:11 -0000	1.15
+++ src/security/CertificatesWindowController.mm	23 Nov 2008 19:07:00 -0000
@@ -77,21 +77,19 @@
 - (PRUint32)selectedCertType;
 
 - (void)backupCertificates:(NSArray*)inCertificates;
 
 - (void)deleteCertSheetDidEnd:(NSWindow *)sheet returnCode:(int)returnCode contextInfo:(void  *)contextInfo;
 - (void)backupPanelDidEnd:(NSSavePanel *)sheet returnCode:(int)returnCode contextInfo:(void *)contextInfo;
 
 - (void)importPanelDidEnd:(NSOpenPanel *)sheet returnCode:(int)returnCode contextInfo:(void *)contextInfo;
-- (void)restorePanelDidEnd:(NSOpenPanel *)sheet returnCode:(int)returnCode contextInfo:(void *)contextInfo;
 
 - (void)deleteCertificates:(NSArray*)inCertItems;
 - (void)performBackup:(NSDictionary*)backupParams;
-- (void)performRestore:(NSString*)inFilePath;
 - (void)performImport:(NSString*)inFilePath;
 
 - (void)certificateChanged:(NSNotification*)inNotification;
 
 @end
 
 #pragma mark -
 
@@ -530,44 +528,31 @@
 - (IBAction)backupAllCertificates:(id)sender
 {
   NSArray* selectedCerts = [self allCertificatesOfCurrentType];
   if ([selectedCerts count] == 0) return;
 
   [self backupCertificates:selectedCerts];
 }
 
-- (IBAction)restoreCertificates:(id)sender
-{
-  NSOpenPanel* theOpenPanel = [NSOpenPanel openPanel];
-  
-  [theOpenPanel beginSheetForDirectory:nil
-                                  file:nil
-                                 types:[NSArray arrayWithObjects:@"p12", @"pfx", @"pkcs12", nil]
-                        modalForWindow:[self window]
-                         modalDelegate:self
-                        didEndSelector:@selector(restorePanelDidEnd:returnCode:contextInfo:)
-                           contextInfo:NULL];
-
-}
-
 
 - (IBAction)importCertificates:(id)sender
 {
   NSOpenPanel* theOpenPanel = [NSOpenPanel openPanel];
   
   [theOpenPanel beginSheetForDirectory:nil
                                   file:nil
-                                 types:[NSArray arrayWithObjects:@"crt", @"cert", @"cer", @"pem", @"der", @"p7b", @"pkcs7", nil]
+                                 types:[NSArray arrayWithObjects:
+                                         @"crt", @"cert", @"cer", @"pem", @"der", @"p7b", @"pkcs7",
+                                         @"p12", @"pfx", @"pkcs12",
+                                         nil]
                         modalForWindow:[self window]
                          modalDelegate:self
                         didEndSelector:@selector(importPanelDidEnd:returnCode:contextInfo:)
                            contextInfo:NULL];
-
-
 }
 
 #pragma mark -
 
 - (void)reloadCertData
 {
   int curSelectedRow = [mCategoriesTable selectedRow];
   if (curSelectedRow == -1)
@@ -805,26 +790,16 @@
                                             [sheet filename], @"file_path",
                                                selectedCerts, @"certs",
                                                               nil];
     [self performSelector:@selector(performBackup:) withObject:backupParams afterDelay:0];
   }
   [selectedCerts release];
 }
 
-- (void)restorePanelDidEnd:(NSOpenPanel *)sheet returnCode:(int)returnCode contextInfo:(void *)contextInfo
-{
-  if (returnCode == NSAlertDefaultReturn)
-  {
-    // pop out to the main event loop, so that the various password dialogs
-    // show after the save sheet has gone away
-    [self performSelector:@selector(performRestore:) withObject:[sheet filename] afterDelay:0];
-  }
-}
-
 - (void)importPanelDidEnd:(NSOpenPanel *)sheet returnCode:(int)returnCode contextInfo:(void *)contextInfo
 {
   if (returnCode == NSAlertDefaultReturn)
   {
     // pop out to the main event loop, so that the various password dialogs
     // show after the save sheet has gone away
     [self performSelector:@selector(performImport:) withObject:[sheet filename] afterDelay:0];
   }
@@ -847,45 +822,38 @@
   
   nsCOMPtr<nsIX509CertDB> certDB = do_GetService("@mozilla.org/security/x509certdb;1");
   if (certDB)
     certDB->ExportPKCS12File(nsnull /* any token */, destFile, numCerts, certList);
 
   delete [] certList;
 }
 
-
-- (void)performRestore:(NSString*)inFilePath
-{
-  nsCOMPtr<nsILocalFile> destFile;
-  NS_NewNativeLocalFile(nsDependentCString([inFilePath fileSystemRepresentation]), PR_TRUE, getter_AddRefs(destFile));
-  if (!destFile) return;
-  
-  nsCOMPtr<nsIX509CertDB> certDB = do_GetService("@mozilla.org/security/x509certdb;1");
-  if (certDB)
-  {
-    nsresult rv = certDB->ImportPKCS12File(nsnull /* any token */, destFile);
-    NSLog(@"ImportPKCS12File returned %X", rv);
-  }
-  
-  [self reloadCertData];
-}
-
 - (void)performImport:(NSString*)inFilePath
 {
   nsCOMPtr<nsILocalFile> destFile;
   NS_NewNativeLocalFile(nsDependentCString([inFilePath fileSystemRepresentation]), PR_TRUE, getter_AddRefs(destFile));
   if (!destFile) return;
   
   nsCOMPtr<nsIX509CertDB> certDB = do_GetService("@mozilla.org/security/x509certdb;1");
-  if (certDB)
-  {
-    // import certs that match the viewed type (why not import them all?)
-    nsresult rv = certDB->ImportCertsFromFile(nsnull /* any token */, destFile, [self selectedCertType]);
-    NSLog(@"ImportCertsFromFile returned %X", rv);
+  if (certDB) {
+    NSString* extension = [inFilePath pathExtension];
+    nsresult rv;
+    if ([extension caseInsensitiveCompare:@"p12"] == NSOrderedSame ||
+        [extension caseInsensitiveCompare:@"pfx"] == NSOrderedSame ||
+        [extension caseInsensitiveCompare:@"pkcs12"] == NSOrderedSame)
+    {
+      rv = certDB->ImportPKCS12File(nsnull /* any token */, destFile);
+    }
+    else {
+      // import certs that match the viewed type (why not import them all?)
+      rv = certDB->ImportCertsFromFile(nsnull /* any token */, destFile, [self selectedCertType]);
+    }
+    if (!NS_SUCCEEDED(rv))
+      NSLog(@"Import of certificate '%@' returned %X", inFilePath, rv);
   }
   
   [self reloadCertData];
 }
 
 - (void)certificateChanged:(NSNotification*)inNotification
 {
   CertificateItem* certItem = [inNotification object];
