{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basd8000ed\""},"diff":[{"chunks":[{"content":"@@ -56,7 +56,6 @@","changes":[{"type":"normal","normal":true,"ln1":56,"ln2":56,"content":" #include \"prprf.h\""},{"type":"normal","normal":true,"ln1":57,"ln2":57,"content":" #include \"nsIDOMEventListener.h\""},{"type":"normal","normal":true,"ln1":58,"ln2":58,"content":" #include \"nsIJSContextStack.h\""},{"type":"del","del":true,"ln":59,"content":"-#include \"nsJSEnvironment.h\""},{"type":"normal","normal":true,"ln1":60,"ln2":59,"content":" #include \"nsIScriptSecurityManager.h\""},{"type":"normal","normal":true,"ln1":61,"ln2":60,"content":" #include \"nsWeakPtr.h\""},{"type":"normal","normal":true,"ln1":62,"ln2":61,"content":" #include \"nsICharsetAlias.h\""}],"oldStart":56,"oldLines":7,"newStart":56,"newLines":6},{"content":"@@ -1777,7 +1776,6 @@ nsXMLHttpRequest::RequestCompleted()","changes":[{"type":"normal","normal":true,"ln1":1777,"ln2":1776,"content":"     ChangeState(XML_HTTP_REQUEST_OPENED);"},{"type":"normal","normal":true,"ln1":1778,"ln2":1777,"content":"   }"},{"type":"normal","normal":true,"ln1":1779,"ln2":1778,"content":" "},{"type":"del","del":true,"ln":1780,"content":"-  nsJSContext::MaybeCC(PR_FALSE);"},{"type":"normal","normal":true,"ln1":1781,"ln2":1779,"content":"   return rv;"},{"type":"normal","normal":true,"ln1":1782,"ln2":1780,"content":" }"},{"type":"normal","normal":true,"ln1":1783,"ln2":1781,"content":" "}],"oldStart":1777,"oldLines":7,"newStart":1776,"newLines":6},{"content":"@@ -2320,7 +2318,6 @@ nsXMLHttpRequest::Error(nsIDOMEvent* aEvent)","changes":[{"type":"normal","normal":true,"ln1":2320,"ln2":2318,"content":"     NotifyEventListeners(errorEventListeners, event);"},{"type":"normal","normal":true,"ln1":2321,"ln2":2319,"content":"   }"},{"type":"normal","normal":true,"ln1":2322,"ln2":2320,"content":" "},{"type":"del","del":true,"ln":2323,"content":"-  nsJSContext::MaybeCC(PR_FALSE);"},{"type":"normal","normal":true,"ln1":2324,"ln2":2321,"content":"   return NS_OK;"},{"type":"normal","normal":true,"ln1":2325,"ln2":2322,"content":" }"},{"type":"normal","normal":true,"ln1":2326,"ln2":2323,"content":" "}],"oldStart":2320,"oldLines":7,"newStart":2318,"newLines":6}],"deletions":3,"additions":0,"from":"content/base/src/nsXMLHttpRequest.cpp","to":"content/base/src/nsXMLHttpRequest.cpp","index":["40e3c9d..01a99f5","100644"]},{"chunks":[{"content":"@@ -136,9 +136,6 @@","changes":[{"type":"normal","normal":true,"ln1":136,"ln2":136,"content":" #include \"nsEventDispatcher.h\""},{"type":"normal","normal":true,"ln1":137,"ln2":137,"content":" #include \"nsPresShellIterator.h\""},{"type":"normal","normal":true,"ln1":138,"ln2":138,"content":" "},{"type":"del","del":true,"ln":139,"content":"-#include \"nsServiceManagerUtils.h\""},{"type":"del","del":true,"ln":140,"content":"-#include \"nsITimer.h\""},{"type":"del","del":true,"ln":141,"content":"-"},{"type":"normal","normal":true,"ln1":142,"ln2":139,"content":" #ifdef XP_MACOSX"},{"type":"normal","normal":true,"ln1":143,"ln2":140,"content":" #include <Events.h>"},{"type":"normal","normal":true,"ln1":144,"ln2":141,"content":" #endif"}],"oldStart":136,"oldLines":9,"newStart":136,"newLines":6},{"content":"@@ -147,8 +144,6 @@","changes":[{"type":"normal","normal":true,"ln1":147,"ln2":144,"content":" //#define DEBUG_DOCSHELL_FOCUS"},{"type":"normal","normal":true,"ln1":148,"ln2":145,"content":" #endif"},{"type":"normal","normal":true,"ln1":149,"ln2":146,"content":" "},{"type":"del","del":true,"ln":150,"content":"-#define NS_USER_INTERACTION_INTERVAL 5000 // ms"},{"type":"del","del":true,"ln":151,"content":"-"},{"type":"normal","normal":true,"ln1":152,"ln2":147,"content":" static NS_DEFINE_CID(kFrameTraversalCID, NS_FRAMETRAVERSAL_CID);"},{"type":"normal","normal":true,"ln1":153,"ln2":148,"content":" "},{"type":"normal","normal":true,"ln1":154,"ln2":149,"content":" "}],"oldStart":147,"oldLines":8,"newStart":144,"newLines":6},{"content":"@@ -176,41 +171,6 @@ static PRUint32 sESMInstanceCount = 0;","changes":[{"type":"normal","normal":true,"ln1":176,"ln2":171,"content":" static PRInt32 sChromeAccessModifier = 0, sContentAccessModifier = 0;"},{"type":"normal","normal":true,"ln1":177,"ln2":172,"content":" PRInt32 nsEventStateManager::sUserInputEventDepth = 0;"},{"type":"normal","normal":true,"ln1":178,"ln2":173,"content":" "},{"type":"del","del":true,"ln":179,"content":"-static PRUint32 gMouseOrKeyboardEventCounter = 0;"},{"type":"del","del":true,"ln":180,"content":"-static nsITimer* gUserInteractionTimer = nsnull;"},{"type":"del","del":true,"ln":181,"content":"-static nsITimerCallback* gUserInteractionTimerCallback = nsnull;"},{"type":"del","del":true,"ln":182,"content":"-"},{"type":"del","del":true,"ln":183,"content":"-class nsUITimerCallback : public nsITimerCallback"},{"type":"del","del":true,"ln":184,"content":"-{"},{"type":"del","del":true,"ln":185,"content":"-public:"},{"type":"del","del":true,"ln":186,"content":"-  nsUITimerCallback() : mPreviousCount(0) {}"},{"type":"del","del":true,"ln":187,"content":"-  NS_DECL_ISUPPORTS"},{"type":"del","del":true,"ln":188,"content":"-  NS_DECL_NSITIMERCALLBACK"},{"type":"del","del":true,"ln":189,"content":"-private:"},{"type":"del","del":true,"ln":190,"content":"-  PRUint32 mPreviousCount;"},{"type":"del","del":true,"ln":191,"content":"-};"},{"type":"del","del":true,"ln":192,"content":"-"},{"type":"del","del":true,"ln":193,"content":"-NS_IMPL_ISUPPORTS1(nsUITimerCallback, nsITimerCallback)"},{"type":"del","del":true,"ln":194,"content":"-"},{"type":"del","del":true,"ln":195,"content":"-// If aTimer is nsnull, this method always sends \"user-interaction-inactive\""},{"type":"del","del":true,"ln":196,"content":"-// notification."},{"type":"del","del":true,"ln":197,"content":"-NS_IMETHODIMP"},{"type":"del","del":true,"ln":198,"content":"-nsUITimerCallback::Notify(nsITimer* aTimer)"},{"type":"del","del":true,"ln":199,"content":"-{"},{"type":"del","del":true,"ln":200,"content":"-  nsresult rv;"},{"type":"del","del":true,"ln":201,"content":"-  nsCOMPtr<nsIObserverService> obs ="},{"type":"del","del":true,"ln":202,"content":"-      do_GetService(\"@mozilla.org/observer-service;1\", &rv);"},{"type":"del","del":true,"ln":203,"content":"-  NS_ENSURE_SUCCESS(rv, rv);"},{"type":"del","del":true,"ln":204,"content":"-  if ((gMouseOrKeyboardEventCounter == mPreviousCount) || !aTimer) {"},{"type":"del","del":true,"ln":205,"content":"-    gMouseOrKeyboardEventCounter = 0;"},{"type":"del","del":true,"ln":206,"content":"-    obs->NotifyObservers(nsnull, \"user-interaction-inactive\", nsnull);"},{"type":"del","del":true,"ln":207,"content":"-  } else {"},{"type":"del","del":true,"ln":208,"content":"-    obs->NotifyObservers(nsnull, \"user-interaction-active\", nsnull);"},{"type":"del","del":true,"ln":209,"content":"-  }"},{"type":"del","del":true,"ln":210,"content":"-  mPreviousCount = gMouseOrKeyboardEventCounter;"},{"type":"del","del":true,"ln":211,"content":"-  return NS_OK;"},{"type":"del","del":true,"ln":212,"content":"-}"},{"type":"del","del":true,"ln":213,"content":"-"},{"type":"normal","normal":true,"ln1":214,"ln2":174,"content":" enum {"},{"type":"normal","normal":true,"ln1":215,"ln2":175,"content":"  MOUSE_SCROLL_N_LINES,"},{"type":"normal","normal":true,"ln1":216,"ln2":176,"content":"  MOUSE_SCROLL_PAGE,"}],"oldStart":176,"oldLines":41,"newStart":171,"newLines":6},{"content":"@@ -471,18 +431,6 @@ nsEventStateManager::nsEventStateManager()","changes":[{"type":"normal","normal":true,"ln1":471,"ln2":431,"content":"     mTabbedThroughDocument(PR_FALSE),"},{"type":"normal","normal":true,"ln1":472,"ln2":432,"content":"     mAccessKeys(nsnull)"},{"type":"normal","normal":true,"ln1":473,"ln2":433,"content":" {"},{"type":"del","del":true,"ln":474,"content":"-  if (sESMInstanceCount == 0) {"},{"type":"del","del":true,"ln":475,"content":"-    gUserInteractionTimerCallback = new nsUITimerCallback();"},{"type":"del","del":true,"ln":476,"content":"-    if (gUserInteractionTimerCallback) {"},{"type":"del","del":true,"ln":477,"content":"-      NS_ADDREF(gUserInteractionTimerCallback);"},{"type":"del","del":true,"ln":478,"content":"-      CallCreateInstance(\"@mozilla.org/timer;1\", &gUserInteractionTimer);"},{"type":"del","del":true,"ln":479,"content":"-      if (gUserInteractionTimer) {"},{"type":"del","del":true,"ln":480,"content":"-        gUserInteractionTimer->InitWithCallback(gUserInteractionTimerCallback,"},{"type":"del","del":true,"ln":481,"content":"-                                                NS_USER_INTERACTION_INTERVAL,"},{"type":"del","del":true,"ln":482,"content":"-                                                nsITimer::TYPE_REPEATING_SLACK);"},{"type":"del","del":true,"ln":483,"content":"-      }"},{"type":"del","del":true,"ln":484,"content":"-    }"},{"type":"del","del":true,"ln":485,"content":"-  }"},{"type":"normal","normal":true,"ln1":486,"ln2":434,"content":"   ++sESMInstanceCount;"},{"type":"normal","normal":true,"ln1":487,"ln2":435,"content":" }"},{"type":"normal","normal":true,"ln1":488,"ln2":436,"content":" "}],"oldStart":471,"oldLines":18,"newStart":431,"newLines":6},{"content":"@@ -561,14 +509,6 @@ nsEventStateManager::~nsEventStateManager()","changes":[{"type":"normal","normal":true,"ln1":561,"ln2":509,"content":"   if(sESMInstanceCount == 0) {"},{"type":"normal","normal":true,"ln1":562,"ln2":510,"content":"     NS_IF_RELEASE(gLastFocusedContent);"},{"type":"normal","normal":true,"ln1":563,"ln2":511,"content":"     NS_IF_RELEASE(gLastFocusedDocument);"},{"type":"del","del":true,"ln":564,"content":"-    if (gUserInteractionTimerCallback) {"},{"type":"del","del":true,"ln":565,"content":"-      gUserInteractionTimerCallback->Notify(nsnull);"},{"type":"del","del":true,"ln":566,"content":"-      NS_RELEASE(gUserInteractionTimerCallback);"},{"type":"del","del":true,"ln":567,"content":"-    }"},{"type":"del","del":true,"ln":568,"content":"-    if (gUserInteractionTimer) {"},{"type":"del","del":true,"ln":569,"content":"-      gUserInteractionTimer->Cancel();"},{"type":"del","del":true,"ln":570,"content":"-      NS_RELEASE(gUserInteractionTimer);"},{"type":"del","del":true,"ln":571,"content":"-    }"},{"type":"normal","normal":true,"ln1":572,"ln2":512,"content":"   }"},{"type":"normal","normal":true,"ln1":573,"ln2":513,"content":" "},{"type":"normal","normal":true,"ln1":574,"ln2":514,"content":"   delete mAccessKeys;"}],"oldStart":561,"oldLines":14,"newStart":509,"newLines":6},{"content":"@@ -784,21 +724,6 @@ nsEventStateManager::PreHandleEvent(nsPresContext* aPresContext,","changes":[{"type":"normal","normal":true,"ln1":784,"ln2":724,"content":"     if (!mCurrentTarget) return NS_ERROR_NULL_POINTER;"},{"type":"normal","normal":true,"ln1":785,"ln2":725,"content":"   }"},{"type":"normal","normal":true,"ln1":786,"ln2":726,"content":" "},{"type":"del","del":true,"ln":787,"content":"-  if (NS_IS_TRUSTED_EVENT(aEvent) &&"},{"type":"del","del":true,"ln":788,"content":"-      ((aEvent->eventStructType == NS_MOUSE_EVENT  &&"},{"type":"del","del":true,"ln":789,"content":"-        static_cast<nsMouseEvent*>(aEvent)->reason == nsMouseEvent::eReal) ||"},{"type":"del","del":true,"ln":790,"content":"-       aEvent->eventStructType == NS_MOUSE_SCROLL_EVENT ||"},{"type":"del","del":true,"ln":791,"content":"-       aEvent->eventStructType == NS_KEY_EVENT)) {"},{"type":"del","del":true,"ln":792,"content":"-    if (gMouseOrKeyboardEventCounter == 0) {"},{"type":"del","del":true,"ln":793,"content":"-      nsCOMPtr<nsIObserverService> obs ="},{"type":"del","del":true,"ln":794,"content":"-        do_GetService(\"@mozilla.org/observer-service;1\");"},{"type":"del","del":true,"ln":795,"content":"-      if (obs) {"},{"type":"del","del":true,"ln":796,"content":"-        obs->NotifyObservers(nsnull, \"user-interaction-active\", nsnull);"},{"type":"del","del":true,"ln":797,"content":"-      }"},{"type":"del","del":true,"ln":798,"content":"-    }"},{"type":"del","del":true,"ln":799,"content":"-    ++gMouseOrKeyboardEventCounter;"},{"type":"del","del":true,"ln":800,"content":"-  }"},{"type":"del","del":true,"ln":801,"content":"-"},{"type":"normal","normal":true,"ln1":802,"ln2":727,"content":"   *aStatus = nsEventStatus_eIgnore;"},{"type":"normal","normal":true,"ln1":803,"ln2":728,"content":" "},{"type":"normal","normal":true,"ln1":804,"ln2":729,"content":"   nsMouseWheelTransaction::OnEvent(aEvent);"}],"oldStart":784,"oldLines":21,"newStart":724,"newLines":6}],"deletions":75,"additions":0,"from":"content/events/src/nsEventStateManager.cpp","to":"content/events/src/nsEventStateManager.cpp","index":["83fa7a2..2cd1b14b","100644"]},{"chunks":[{"content":"@@ -154,26 +154,8 @@ static PRLogModuleInfo* gJSDiagnostics;","changes":[{"type":"normal","normal":true,"ln1":154,"ln2":154,"content":" "},{"type":"normal","normal":true,"ln1":155,"ln2":155,"content":" #define JAVASCRIPT nsIProgrammingLanguage::JAVASCRIPT"},{"type":"normal","normal":true,"ln1":156,"ln2":156,"content":" "},{"type":"del","del":true,"ln":157,"content":"-// The max number of delayed cycle collects.."},{"type":"del","del":true,"ln":158,"content":"-#define NS_MAX_DELAYED_CCOLLECT     45"},{"type":"del","del":true,"ln":159,"content":"-// The max number of user interaction notifications in inactive state before"},{"type":"del","del":true,"ln":160,"content":"-// we try to call cycle collector more aggressively."},{"type":"del","del":true,"ln":161,"content":"-#define NS_CC_SOFT_LIMIT_INACTIVE   6"},{"type":"del","del":true,"ln":162,"content":"-// The max number of user interaction notifications in active state before"},{"type":"del","del":true,"ln":163,"content":"-// we try to call cycle collector more aggressively."},{"type":"del","del":true,"ln":164,"content":"-#define NS_CC_SOFT_LIMIT_ACTIVE     12"},{"type":"del","del":true,"ln":165,"content":"-// When higher probability MaybeCC is used, the number of sDelayedCCollectCount"},{"type":"del","del":true,"ln":166,"content":"-// is multiplied with this number."},{"type":"del","del":true,"ln":167,"content":"-#define NS_PROBABILITY_MULTIPLIER   3"},{"type":"del","del":true,"ln":168,"content":"-// Cycle collector should never run more often than this value"},{"type":"del","del":true,"ln":169,"content":"-#define NS_MIN_CC_INTERVAL          5000 // ms"},{"type":"del","del":true,"ln":170,"content":"-"},{"type":"normal","normal":true,"ln1":171,"ln2":157,"content":" // if you add statics here, add them to the list in nsJSRuntime::Startup"},{"type":"normal","normal":true,"ln1":172,"ln2":158,"content":" "},{"type":"del","del":true,"ln":173,"content":"-static PRUint32 sDelayedCCollectCount;"},{"type":"del","del":true,"ln":174,"content":"-static PRUint32 sCCollectCount;"},{"type":"del","del":true,"ln":175,"content":"-static PRTime sPreviousCCTime;"},{"type":"del","del":true,"ln":176,"content":"-static PRBool sPreviousCCDidCollect;"},{"type":"normal","normal":true,"ln1":177,"ln2":159,"content":" static nsITimer *sGCTimer;"},{"type":"normal","normal":true,"ln1":178,"ln2":160,"content":" static PRBool sReadyForGC;"},{"type":"normal","normal":true,"ln1":179,"ln2":161,"content":" "}],"oldStart":154,"oldLines":26,"newStart":154,"newLines":8},{"content":"@@ -217,75 +199,6 @@ static nsICollation *gCollation;","changes":[{"type":"normal","normal":true,"ln1":217,"ln2":199,"content":" "},{"type":"normal","normal":true,"ln1":218,"ln2":200,"content":" static nsIUnicodeDecoder *gDecoder;"},{"type":"normal","normal":true,"ln1":219,"ln2":201,"content":" "},{"type":"del","del":true,"ln":220,"content":"-// nsUserActivityObserver observes user-interaction-active and"},{"type":"del","del":true,"ln":221,"content":"-// user-interaction-inactive notifications. It counts the number of"},{"type":"del","del":true,"ln":222,"content":"-// notifications and if the number is bigger than NS_CC_SOFT_LIMIT_ACTIVE"},{"type":"del","del":true,"ln":223,"content":"-// (in case the current notification is user-interaction-active) or"},{"type":"del","del":true,"ln":224,"content":"-// NS_CC_SOFT_LIMIT_INACTIVE (current notification is user-interaction-inactive)"},{"type":"del","del":true,"ln":225,"content":"-// MaybeCC is called with aHigherParameter set to PR_TRUE, otherwise PR_FALSE."},{"type":"del","del":true,"ln":226,"content":"-//"},{"type":"del","del":true,"ln":227,"content":"-// When moving from active state to inactive, nsJSContext::CC() is called"},{"type":"del","del":true,"ln":228,"content":"-// unless the timer related to page load is active."},{"type":"del","del":true,"ln":229,"content":"-"},{"type":"del","del":true,"ln":230,"content":"-class nsUserActivityObserver : public nsIObserver"},{"type":"del","del":true,"ln":231,"content":"-{"},{"type":"del","del":true,"ln":232,"content":"-public:"},{"type":"del","del":true,"ln":233,"content":"-  nsUserActivityObserver()"},{"type":"del","del":true,"ln":234,"content":"-  : mUserActivityCounter(0), mOldCCollectCount(0), mUserIsActive(PR_FALSE) {}"},{"type":"del","del":true,"ln":235,"content":"-  NS_DECL_ISUPPORTS"},{"type":"del","del":true,"ln":236,"content":"-  NS_DECL_NSIOBSERVER"},{"type":"del","del":true,"ln":237,"content":"-private:"},{"type":"del","del":true,"ln":238,"content":"-  PRUint32 mUserActivityCounter;"},{"type":"del","del":true,"ln":239,"content":"-  PRUint32 mOldCCollectCount;"},{"type":"del","del":true,"ln":240,"content":"-  PRBool   mUserIsActive;"},{"type":"del","del":true,"ln":241,"content":"-};"},{"type":"del","del":true,"ln":242,"content":"-"},{"type":"del","del":true,"ln":243,"content":"-NS_IMPL_ISUPPORTS1(nsUserActivityObserver, nsIObserver)"},{"type":"del","del":true,"ln":244,"content":"-"},{"type":"del","del":true,"ln":245,"content":"-NS_IMETHODIMP"},{"type":"del","del":true,"ln":246,"content":"-nsUserActivityObserver::Observe(nsISupports* aSubject, const char* aTopic,"},{"type":"del","del":true,"ln":247,"content":"-                                const PRUnichar* aData)"},{"type":"del","del":true,"ln":248,"content":"-{"},{"type":"del","del":true,"ln":249,"content":"-  if (mOldCCollectCount != sCCollectCount) {"},{"type":"del","del":true,"ln":250,"content":"-    mOldCCollectCount = sCCollectCount;"},{"type":"del","del":true,"ln":251,"content":"-    // Cycle collector was called between user interaction notifications, so"},{"type":"del","del":true,"ln":252,"content":"-    // we can reset the counter."},{"type":"del","del":true,"ln":253,"content":"-    mUserActivityCounter = 0;"},{"type":"del","del":true,"ln":254,"content":"-  }"},{"type":"del","del":true,"ln":255,"content":"-  PRBool higherProbability = PR_FALSE;"},{"type":"del","del":true,"ln":256,"content":"-  ++mUserActivityCounter;"},{"type":"del","del":true,"ln":257,"content":"-  if (!strcmp(aTopic, \"user-interaction-inactive\")) {"},{"type":"del","del":true,"ln":258,"content":"-#ifdef DEBUG_smaug"},{"type":"del","del":true,"ln":259,"content":"-    printf(\"user-interaction-inactive\\n\");"},{"type":"del","del":true,"ln":260,"content":"-#endif"},{"type":"del","del":true,"ln":261,"content":"-    if (mUserIsActive) {"},{"type":"del","del":true,"ln":262,"content":"-      mUserIsActive = PR_FALSE;"},{"type":"del","del":true,"ln":263,"content":"-      if (!sGCTimer) {"},{"type":"del","del":true,"ln":264,"content":"-        nsJSContext::CC();"},{"type":"del","del":true,"ln":265,"content":"-        return NS_OK;"},{"type":"del","del":true,"ln":266,"content":"-      }"},{"type":"del","del":true,"ln":267,"content":"-    }"},{"type":"del","del":true,"ln":268,"content":"-    higherProbability = (mUserActivityCounter > NS_CC_SOFT_LIMIT_INACTIVE);"},{"type":"del","del":true,"ln":269,"content":"-  } else if (!strcmp(aTopic, \"user-interaction-active\")) {"},{"type":"del","del":true,"ln":270,"content":"-#ifdef DEBUG_smaug"},{"type":"del","del":true,"ln":271,"content":"-    printf(\"user-interaction-active\\n\");"},{"type":"del","del":true,"ln":272,"content":"-#endif"},{"type":"del","del":true,"ln":273,"content":"-    mUserIsActive = PR_TRUE;"},{"type":"del","del":true,"ln":274,"content":"-    higherProbability = (mUserActivityCounter > NS_CC_SOFT_LIMIT_ACTIVE);"},{"type":"del","del":true,"ln":275,"content":"-  } else if (!strcmp(aTopic, \"xpcom-shutdown\")) {"},{"type":"del","del":true,"ln":276,"content":"-    nsCOMPtr<nsIObserverService> obs ="},{"type":"del","del":true,"ln":277,"content":"-      do_GetService(\"@mozilla.org/observer-service;1\");"},{"type":"del","del":true,"ln":278,"content":"-    if (obs) {"},{"type":"del","del":true,"ln":279,"content":"-      obs->RemoveObserver(this, \"user-interaction-active\");"},{"type":"del","del":true,"ln":280,"content":"-      obs->RemoveObserver(this, \"user-interaction-inactive\");"},{"type":"del","del":true,"ln":281,"content":"-      obs->RemoveObserver(this, \"xpcom-shutdown\");"},{"type":"del","del":true,"ln":282,"content":"-    }"},{"type":"del","del":true,"ln":283,"content":"-    return NS_OK;"},{"type":"del","del":true,"ln":284,"content":"-  }"},{"type":"del","del":true,"ln":285,"content":"-  nsJSContext::MaybeCC(higherProbability);"},{"type":"del","del":true,"ln":286,"content":"-  return NS_OK;"},{"type":"del","del":true,"ln":287,"content":"-}"},{"type":"del","del":true,"ln":288,"content":"-"},{"type":"normal","normal":true,"ln1":289,"ln2":202,"content":" /****************************************************************"},{"type":"normal","normal":true,"ln1":290,"ln2":203,"content":"  ************************** AutoFree ****************************"},{"type":"normal","normal":true,"ln1":291,"ln2":204,"content":"  ****************************************************************/"}],"oldStart":217,"oldLines":75,"newStart":199,"newLines":6},{"content":"@@ -3307,73 +3220,6 @@ nsJSContext::PreserveWrapper(nsIXPConnectWrappedNative *aWrapper)","changes":[{"type":"normal","normal":true,"ln1":3307,"ln2":3220,"content":"   return nsDOMClassInfo::PreserveNodeWrapper(aWrapper);"},{"type":"normal","normal":true,"ln1":3308,"ln2":3221,"content":" }"},{"type":"normal","normal":true,"ln1":3309,"ln2":3222,"content":" "},{"type":"del","del":true,"ln":3310,"content":"-//static"},{"type":"del","del":true,"ln":3311,"content":"-void"},{"type":"del","del":true,"ln":3312,"content":"-nsJSContext::MaybeCCOrGC(nsIScriptContext* aContext)"},{"type":"del","del":true,"ln":3313,"content":"-{"},{"type":"del","del":true,"ln":3314,"content":"-  if (!nsJSContext::MaybeCC(PR_TRUE)) {"},{"type":"del","del":true,"ln":3315,"content":"-    nsCOMPtr<nsIScriptContext> context = aContext;"},{"type":"del","del":true,"ln":3316,"content":"-    if (context) {"},{"type":"del","del":true,"ln":3317,"content":"-      JSContext* cx = static_cast<JSContext*>(context->GetNativeContext());"},{"type":"del","del":true,"ln":3318,"content":"-      if (cx) {"},{"type":"del","del":true,"ln":3319,"content":"-#ifdef DEBUG_smaug"},{"type":"del","del":true,"ln":3320,"content":"-        printf(\"Will call JS_GC\\n\");"},{"type":"del","del":true,"ln":3321,"content":"-#endif"},{"type":"del","del":true,"ln":3322,"content":"-        ::JS_GC(cx);"},{"type":"del","del":true,"ln":3323,"content":"-#ifdef DEBUG_smaug"},{"type":"del","del":true,"ln":3324,"content":"-        printf(\"Did call JS_GC\\n\");"},{"type":"del","del":true,"ln":3325,"content":"-#endif"},{"type":"del","del":true,"ln":3326,"content":"-      }"},{"type":"del","del":true,"ln":3327,"content":"-    }"},{"type":"del","del":true,"ln":3328,"content":"-  }"},{"type":"del","del":true,"ln":3329,"content":"-}"},{"type":"del","del":true,"ln":3330,"content":"-"},{"type":"del","del":true,"ln":3331,"content":"-//static"},{"type":"del","del":true,"ln":3332,"content":"-void"},{"type":"del","del":true,"ln":3333,"content":"-nsJSContext::CC()"},{"type":"del","del":true,"ln":3334,"content":"-{"},{"type":"del","del":true,"ln":3335,"content":"-  sPreviousCCTime = PR_Now();"},{"type":"del","del":true,"ln":3336,"content":"-  sDelayedCCollectCount = 0;"},{"type":"del","del":true,"ln":3337,"content":"-  ++sCCollectCount;"},{"type":"del","del":true,"ln":3338,"content":"-#ifdef DEBUG_smaug"},{"type":"del","del":true,"ln":3339,"content":"-  printf(\"Will run cycle collector (%i)\\n\", sCCollectCount);"},{"type":"del","del":true,"ln":3340,"content":"-#endif"},{"type":"del","del":true,"ln":3341,"content":"-  // nsCycleCollector_collect() will run a ::JS_GC() indirectly, so"},{"type":"del","del":true,"ln":3342,"content":"-  // we do not explicitly call ::JS_GC() here."},{"type":"del","del":true,"ln":3343,"content":"-  sPreviousCCDidCollect = nsCycleCollector_collect();"},{"type":"del","del":true,"ln":3344,"content":"-#ifdef DEBUG_smaug"},{"type":"del","del":true,"ln":3345,"content":"-  printf(\"%s\\n\", sPreviousCCDidCollect ?"},{"type":"del","del":true,"ln":3346,"content":"-                   \"Cycle collector did collect nodes\" :"},{"type":"del","del":true,"ln":3347,"content":"-                   \"Cycle collector did not collect nodes\");"},{"type":"del","del":true,"ln":3348,"content":"-#endif"},{"type":"del","del":true,"ln":3349,"content":"-}"},{"type":"del","del":true,"ln":3350,"content":"-"},{"type":"del","del":true,"ln":3351,"content":"-//static"},{"type":"del","del":true,"ln":3352,"content":"-PRBool"},{"type":"del","del":true,"ln":3353,"content":"-nsJSContext::MaybeCC(PRBool aHigherProbability)"},{"type":"del","del":true,"ln":3354,"content":"-{"},{"type":"del","del":true,"ln":3355,"content":"-  ++sDelayedCCollectCount;"},{"type":"del","del":true,"ln":3356,"content":"-  // Increase the probability also if the previous call to cycle collector"},{"type":"del","del":true,"ln":3357,"content":"-  // collected something."},{"type":"del","del":true,"ln":3358,"content":"-  if (aHigherProbability || sPreviousCCDidCollect) {"},{"type":"del","del":true,"ln":3359,"content":"-    sDelayedCCollectCount *= NS_PROBABILITY_MULTIPLIER;"},{"type":"del","del":true,"ln":3360,"content":"-  }"},{"type":"del","del":true,"ln":3361,"content":"-"},{"type":"del","del":true,"ln":3362,"content":"-  if (!sGCTimer && (sDelayedCCollectCount > NS_MAX_DELAYED_CCOLLECT)) {"},{"type":"del","del":true,"ln":3363,"content":"-    if ((PR_Now() - sPreviousCCTime) >="},{"type":"del","del":true,"ln":3364,"content":"-        PRTime(NS_MIN_CC_INTERVAL * PR_USEC_PER_MSEC)) {"},{"type":"del","del":true,"ln":3365,"content":"-      nsJSContext::CC();"},{"type":"del","del":true,"ln":3366,"content":"-      return PR_TRUE;"},{"type":"del","del":true,"ln":3367,"content":"-    }"},{"type":"del","del":true,"ln":3368,"content":"-#ifdef DEBUG_smaug"},{"type":"del","del":true,"ln":3369,"content":"-    else {"},{"type":"del","del":true,"ln":3370,"content":"-      printf(\"Running cycle collector was delayed: NS_MIN_CC_INTERVAL\\n\");"},{"type":"del","del":true,"ln":3371,"content":"-    }"},{"type":"del","del":true,"ln":3372,"content":"-#endif"},{"type":"del","del":true,"ln":3373,"content":"-  }"},{"type":"del","del":true,"ln":3374,"content":"-  return PR_FALSE;"},{"type":"del","del":true,"ln":3375,"content":"-}"},{"type":"del","del":true,"ln":3376,"content":"-"},{"type":"normal","normal":true,"ln1":3377,"ln2":3223,"content":" NS_IMETHODIMP"},{"type":"normal","normal":true,"ln1":3378,"ln2":3224,"content":" nsJSContext::Notify(nsITimer *timer)"},{"type":"normal","normal":true,"ln1":3379,"ln2":3225,"content":" {"}],"oldStart":3307,"oldLines":73,"newStart":3220,"newLines":6},{"content":"@@ -3392,7 +3238,9 @@ nsJSContext::Notify(nsITimer *timer)","changes":[{"type":"normal","normal":true,"ln1":3392,"ln2":3238,"content":"     // loading and move on as if they weren't."},{"type":"normal","normal":true,"ln1":3393,"ln2":3239,"content":"     sPendingLoadCount = 0;"},{"type":"normal","normal":true,"ln1":3394,"ln2":3240,"content":" "},{"type":"del","del":true,"ln":3395,"content":"-    MaybeCCOrGC(this);"},{"type":"add","add":true,"ln":3241,"content":"+    // nsCycleCollector_collect() will run a ::JS_GC() indirectly,"},{"type":"add","add":true,"ln":3242,"content":"+    // so we do not explicitly call ::JS_GC() here. "},{"type":"add","add":true,"ln":3243,"content":"+    nsCycleCollector_collect();"},{"type":"normal","normal":true,"ln1":3396,"ln2":3244,"content":"   } else {"},{"type":"normal","normal":true,"ln1":3397,"ln2":3245,"content":"     FireGCTimer(PR_TRUE);"},{"type":"normal","normal":true,"ln1":3398,"ln2":3246,"content":"   }"}],"oldStart":3392,"oldLines":7,"newStart":3238,"newLines":9},{"content":"@@ -3411,7 +3259,7 @@ nsJSContext::LoadStart()","changes":[{"type":"normal","normal":true,"ln1":3411,"ln2":3259,"content":" "},{"type":"normal","normal":true,"ln1":3412,"ln2":3260,"content":" // static"},{"type":"normal","normal":true,"ln1":3413,"ln2":3261,"content":" void"},{"type":"del","del":true,"ln":3414,"content":"-nsJSContext::LoadEnd(nsIScriptGlobalObject* aGlobalObject)"},{"type":"add","add":true,"ln":3262,"content":"+nsJSContext::LoadEnd()"},{"type":"normal","normal":true,"ln1":3415,"ln2":3263,"content":" {"},{"type":"normal","normal":true,"ln1":3416,"ln2":3264,"content":"   // sPendingLoadCount is not a well managed load counter (and doesn't"},{"type":"normal","normal":true,"ln1":3417,"ln2":3265,"content":"   // need to be), so make sure we don't make it wrap backwards here."}],"oldStart":3411,"oldLines":7,"newStart":3259,"newLines":7},{"content":"@@ -3421,10 +3269,13 @@ nsJSContext::LoadEnd(nsIScriptGlobalObject* aGlobalObject)","changes":[{"type":"normal","normal":true,"ln1":3421,"ln2":3269,"content":" "},{"type":"normal","normal":true,"ln1":3422,"ln2":3270,"content":"   if (!sPendingLoadCount && sLoadInProgressGCTimer) {"},{"type":"normal","normal":true,"ln1":3423,"ln2":3271,"content":"     sGCTimer->Cancel();"},{"type":"add","add":true,"ln":3272,"content":"+"},{"type":"normal","normal":true,"ln1":3424,"ln2":3273,"content":"     NS_RELEASE(sGCTimer);"},{"type":"normal","normal":true,"ln1":3425,"ln2":3274,"content":"     sLoadInProgressGCTimer = PR_FALSE;"},{"type":"normal","normal":true,"ln1":3426,"ln2":3275,"content":" "},{"type":"del","del":true,"ln":3427,"content":"-    MaybeCCOrGC(aGlobalObject ? aGlobalObject->GetContext() : nsnull);"},{"type":"add","add":true,"ln":3276,"content":"+    // nsCycleCollector_collect() will run a ::JS_GC() indirectly, so"},{"type":"add","add":true,"ln":3277,"content":"+    // we do not explicitly call ::JS_GC() here."},{"type":"add","add":true,"ln":3278,"content":"+    nsCycleCollector_collect();"},{"type":"normal","normal":true,"ln1":3428,"ln2":3279,"content":"   }"},{"type":"normal","normal":true,"ln1":3429,"ln2":3280,"content":" }"},{"type":"normal","normal":true,"ln1":3430,"ln2":3281,"content":" "}],"oldStart":3421,"oldLines":10,"newStart":3269,"newLines":13},{"content":"@@ -3451,7 +3302,10 @@ nsJSContext::FireGCTimer(PRBool aLoadInProgress)","changes":[{"type":"normal","normal":true,"ln1":3451,"ln2":3302,"content":"     // timer."},{"type":"normal","normal":true,"ln1":3452,"ln2":3303,"content":"     sLoadInProgressGCTimer = PR_FALSE;"},{"type":"normal","normal":true,"ln1":3453,"ln2":3304,"content":" "},{"type":"del","del":true,"ln":3454,"content":"-    MaybeCCOrGC(this);"},{"type":"add","add":true,"ln":3305,"content":"+    // nsCycleCollector_collect() will run a ::JS_GC() indirectly, so"},{"type":"add","add":true,"ln":3306,"content":"+    // we do not explicitly call ::JS_GC() here."},{"type":"add","add":true,"ln":3307,"content":"+    nsCycleCollector_collect();"},{"type":"add","add":true,"ln":3308,"content":"+"},{"type":"normal","normal":true,"ln1":3455,"ln2":3309,"content":"     return;"},{"type":"normal","normal":true,"ln1":3456,"ln2":3310,"content":"   }"},{"type":"normal","normal":true,"ln1":3457,"ln2":3311,"content":" "}],"oldStart":3451,"oldLines":7,"newStart":3302,"newLines":10},{"content":"@@ -3559,10 +3413,6 @@ void","changes":[{"type":"normal","normal":true,"ln1":3559,"ln2":3413,"content":" nsJSRuntime::Startup()"},{"type":"normal","normal":true,"ln1":3560,"ln2":3414,"content":" {"},{"type":"normal","normal":true,"ln1":3561,"ln2":3415,"content":"   // initialize all our statics, so that we can restart XPCOM"},{"type":"del","del":true,"ln":3562,"content":"-  sDelayedCCollectCount = 0;"},{"type":"del","del":true,"ln":3563,"content":"-  sCCollectCount = 0;"},{"type":"del","del":true,"ln":3564,"content":"-  sPreviousCCTime = 0;"},{"type":"del","del":true,"ln":3565,"content":"-  sPreviousCCDidCollect = PR_FALSE;"},{"type":"normal","normal":true,"ln1":3566,"ln2":3416,"content":"   sGCTimer = nsnull;"},{"type":"normal","normal":true,"ln1":3567,"ln2":3417,"content":"   sReadyForGC = PR_FALSE;"},{"type":"normal","normal":true,"ln1":3568,"ln2":3418,"content":"   sLoadInProgressGCTimer = PR_FALSE;"}],"oldStart":3559,"oldLines":10,"newStart":3413,"newLines":6},{"content":"@@ -3697,15 +3547,6 @@ nsJSRuntime::Init()","changes":[{"type":"normal","normal":true,"ln1":3697,"ln2":3547,"content":"   MaxScriptRunTimePrefChangedCallback(\"dom.max_chrome_script_run_time\","},{"type":"normal","normal":true,"ln1":3698,"ln2":3548,"content":"                                       nsnull);"},{"type":"normal","normal":true,"ln1":3699,"ln2":3549,"content":" "},{"type":"del","del":true,"ln":3700,"content":"-  nsCOMPtr<nsIObserverService> obs ="},{"type":"del","del":true,"ln":3701,"content":"-    do_GetService(\"@mozilla.org/observer-service;1\", &rv);"},{"type":"del","del":true,"ln":3702,"content":"-  NS_ENSURE_SUCCESS(rv, rv);"},{"type":"del","del":true,"ln":3703,"content":"-  nsIObserver* activityObserver = new nsUserActivityObserver();"},{"type":"del","del":true,"ln":3704,"content":"-  NS_ENSURE_TRUE(activityObserver, NS_ERROR_OUT_OF_MEMORY);"},{"type":"del","del":true,"ln":3705,"content":"-  obs->AddObserver(activityObserver, \"user-interaction-inactive\", PR_FALSE);"},{"type":"del","del":true,"ln":3706,"content":"-  obs->AddObserver(activityObserver, \"user-interaction-active\", PR_FALSE);"},{"type":"del","del":true,"ln":3707,"content":"-  obs->AddObserver(activityObserver, \"xpcom-shutdown\", PR_FALSE);"},{"type":"del","del":true,"ln":3708,"content":"-"},{"type":"normal","normal":true,"ln1":3709,"ln2":3550,"content":"   rv = CallGetService(NS_SCRIPTSECURITYMANAGER_CONTRACTID, &sSecurityManager);"},{"type":"normal","normal":true,"ln1":3710,"ln2":3551,"content":" "},{"type":"normal","normal":true,"ln1":3711,"ln2":3552,"content":"   sIsInitialized = NS_SUCCEEDED(rv);"}],"oldStart":3697,"oldLines":15,"newStart":3547,"newLines":6}],"deletions":171,"additions":12,"from":"dom/src/base/nsJSEnvironment.cpp","to":"dom/src/base/nsJSEnvironment.cpp","index":["bcef36f..db881ff","100644"]},{"chunks":[{"content":"@@ -168,26 +168,7 @@ public:","changes":[{"type":"normal","normal":true,"ln1":168,"ln2":168,"content":"   NS_DECL_NSITIMERCALLBACK"},{"type":"normal","normal":true,"ln1":169,"ln2":169,"content":" "},{"type":"normal","normal":true,"ln1":170,"ln2":170,"content":"   static void LoadStart();"},{"type":"del","del":true,"ln":171,"content":"-  static void LoadEnd(nsIScriptGlobalObject* aGlobalObject);"},{"type":"del","del":true,"ln":172,"content":"-"},{"type":"del","del":true,"ln":173,"content":"-  // CC does always call cycle collector and it also updates the counters"},{"type":"del","del":true,"ln":174,"content":"-  // that MaybeCC uses."},{"type":"del","del":true,"ln":175,"content":"-  static void CC();"},{"type":"del","del":true,"ln":176,"content":"-"},{"type":"del","del":true,"ln":177,"content":"-  // MaybeCC calls cycle collector if certain conditions are fulfilled."},{"type":"del","del":true,"ln":178,"content":"-  // The conditions are:"},{"type":"del","del":true,"ln":179,"content":"-  // - The timer related to page load (sGCTimer) must not be active."},{"type":"del","del":true,"ln":180,"content":"-  // - At least NS_MIN_CC_INTERVAL milliseconds must have elapsed since the"},{"type":"del","del":true,"ln":181,"content":"-  //   previous cycle collector call."},{"type":"del","del":true,"ln":182,"content":"-  // - Certain number of MaybeCC calls have occurred."},{"type":"del","del":true,"ln":183,"content":"-  //   The number of needed MaybeCC calls depends on the aHigherProbability"},{"type":"del","del":true,"ln":184,"content":"-  //   parameter. If the parameter is true, probability for calling cycle"},{"type":"del","del":true,"ln":185,"content":"-  //   collector rises increasingly. If the parameter is all the time false,"},{"type":"del","del":true,"ln":186,"content":"-  //   at least NS_MAX_DELAYED_CCOLLECT MaybeCC calls are needed."},{"type":"del","del":true,"ln":187,"content":"-  //   If the previous call to cycle collector did collect something,"},{"type":"del","del":true,"ln":188,"content":"-  //   MaybeCC works effectively as if aHigherProbability was true."},{"type":"del","del":true,"ln":189,"content":"-  // @return PR_TRUE if cycle collector was called."},{"type":"del","del":true,"ln":190,"content":"-  static PRBool MaybeCC(PRBool aHigherProbability);"},{"type":"add","add":true,"ln":171,"content":"+  static void LoadEnd();"},{"type":"normal","normal":true,"ln1":191,"ln2":172,"content":" "},{"type":"normal","normal":true,"ln1":192,"ln2":173,"content":" protected:"},{"type":"normal","normal":true,"ln1":193,"ln2":174,"content":"   nsresult InitializeExternalClasses();"}],"oldStart":168,"oldLines":26,"newStart":168,"newLines":7},{"content":"@@ -210,8 +191,6 @@ protected:","changes":[{"type":"normal","normal":true,"ln1":210,"ln2":191,"content":"   nsresult JSObjectFromInterface(nsISupports *aSup, void *aScript, "},{"type":"normal","normal":true,"ln1":211,"ln2":192,"content":"                                  JSObject **aRet);"},{"type":"normal","normal":true,"ln1":212,"ln2":193,"content":" "},{"type":"del","del":true,"ln":213,"content":"-  static void MaybeCCOrGC(nsIScriptContext* aContext);"},{"type":"del","del":true,"ln":214,"content":"-"},{"type":"normal","normal":true,"ln1":215,"ln2":194,"content":" private:"},{"type":"normal","normal":true,"ln1":216,"ln2":195,"content":"   JSContext *mContext;"},{"type":"normal","normal":true,"ln1":217,"ln2":196,"content":"   PRUint32 mNumEvaluations;"}],"oldStart":210,"oldLines":8,"newStart":191,"newLines":6}],"deletions":22,"additions":1,"from":"dom/src/base/nsJSEnvironment.h","to":"dom/src/base/nsJSEnvironment.h","index":["e074b30..01d0187","100644"]},{"chunks":[{"content":"@@ -993,7 +993,7 @@ DocumentViewerImpl::LoadComplete(nsresult aStatus)","changes":[{"type":"normal","normal":true,"ln1":993,"ln2":993,"content":"     mPresShell->UnsuppressPainting();"},{"type":"normal","normal":true,"ln1":994,"ln2":994,"content":"   }"},{"type":"normal","normal":true,"ln1":995,"ln2":995,"content":" "},{"type":"del","del":true,"ln":996,"content":"-  nsJSContext::LoadEnd(mDocument ? mDocument->GetScriptGlobalObject() : nsnull);"},{"type":"add","add":true,"ln":996,"content":"+  nsJSContext::LoadEnd();"},{"type":"normal","normal":true,"ln1":997,"ln2":997,"content":" "},{"type":"normal","normal":true,"ln1":998,"ln2":998,"content":" #ifdef NS_PRINTING"},{"type":"normal","normal":true,"ln1":999,"ln2":999,"content":"   // Check to see if someone tried to print during the load"}],"oldStart":993,"oldLines":7,"newStart":993,"newLines":7}],"deletions":1,"additions":1,"from":"layout/base/nsDocumentViewer.cpp","to":"layout/base/nsDocumentViewer.cpp","index":["e75864f..f5d5717","100644"]},{"chunks":[{"content":"@@ -869,7 +869,7 @@ struct nsCycleCollector","changes":[{"type":"normal","normal":true,"ln1":869,"ln2":869,"content":"     PRBool Forget(nsISupports *n);"},{"type":"normal","normal":true,"ln1":870,"ln2":870,"content":"     void Allocated(void *n, size_t sz);"},{"type":"normal","normal":true,"ln1":871,"ln2":871,"content":"     void Freed(void *n);"},{"type":"del","del":true,"ln":872,"content":"-    PRBool Collect(PRUint32 aTryCollections = 1);"},{"type":"add","add":true,"ln":872,"content":"+    void Collect(PRUint32 aTryCollections = 1);"},{"type":"normal","normal":true,"ln1":873,"ln2":873,"content":"     void Shutdown();"},{"type":"normal","normal":true,"ln1":874,"ln2":874,"content":" "},{"type":"normal","normal":true,"ln1":875,"ln2":875,"content":" #ifdef DEBUG_CC"}],"oldStart":869,"oldLines":7,"newStart":869,"newLines":7},{"content":"@@ -2021,10 +2021,9 @@ nsCycleCollector::Freed(void *n)","changes":[{"type":"normal","normal":true,"ln1":2021,"ln2":2021,"content":" }"},{"type":"normal","normal":true,"ln1":2022,"ln2":2022,"content":" #endif"},{"type":"normal","normal":true,"ln1":2023,"ln2":2023,"content":" "},{"type":"del","del":true,"ln":2024,"content":"-PRBool"},{"type":"add","add":true,"ln":2024,"content":"+void"},{"type":"normal","normal":true,"ln1":2025,"ln2":2025,"content":" nsCycleCollector::Collect(PRUint32 aTryCollections)"},{"type":"normal","normal":true,"ln1":2026,"ln2":2026,"content":" {"},{"type":"del","del":true,"ln":2027,"content":"-    PRBool didCollect = PR_FALSE;"},{"type":"normal","normal":true,"ln1":2028,"ln2":2027,"content":" #if defined(DEBUG_CC) && !defined(__MINGW32__)"},{"type":"normal","normal":true,"ln1":2029,"ln2":2028,"content":"     if (!mParams.mDoNothing && mParams.mHookMalloc)"},{"type":"normal","normal":true,"ln1":2030,"ln2":2029,"content":"         InitMemHook();"}],"oldStart":2021,"oldLines":10,"newStart":2021,"newLines":9},{"content":"@@ -2032,7 +2031,7 @@ nsCycleCollector::Collect(PRUint32 aTryCollections)","changes":[{"type":"normal","normal":true,"ln1":2032,"ln2":2031,"content":" "},{"type":"normal","normal":true,"ln1":2033,"ln2":2032,"content":"     // This can legitimately happen in a few cases. See bug 383651."},{"type":"normal","normal":true,"ln1":2034,"ln2":2033,"content":"     if (mCollectionInProgress)"},{"type":"del","del":true,"ln":2035,"content":"-        return didCollect;"},{"type":"add","add":true,"ln":2034,"content":"+        return;"},{"type":"normal","normal":true,"ln1":2036,"ln2":2035,"content":" "},{"type":"normal","normal":true,"ln1":2037,"ln2":2036,"content":" #ifdef COLLECT_TIME_DEBUG"},{"type":"normal","normal":true,"ln1":2038,"ln2":2037,"content":"     printf(\"cc: Starting nsCycleCollector::Collect(%d)\\n\", aTryCollections);"}],"oldStart":2032,"oldLines":7,"newStart":2031,"newLines":7},{"content":"@@ -2169,11 +2168,8 @@ nsCycleCollector::Collect(PRUint32 aTryCollections)","changes":[{"type":"normal","normal":true,"ln1":2169,"ln2":2168,"content":"                 // mBuf.GetSize() == 0 check above), we should stop"},{"type":"normal","normal":true,"ln1":2170,"ln2":2169,"content":"                 // repeating collections if we didn't collect anything"},{"type":"normal","normal":true,"ln1":2171,"ln2":2170,"content":"                 // this time."},{"type":"del","del":true,"ln":2172,"content":"-                if (!collected) {"},{"type":"add","add":true,"ln":2171,"content":"+                if (!collected)"},{"type":"normal","normal":true,"ln1":2173,"ln2":2172,"content":"                     aTryCollections = 0;"},{"type":"del","del":true,"ln":2174,"content":"-                } else {"},{"type":"del","del":true,"ln":2175,"content":"-                    didCollect = PR_TRUE;"},{"type":"del","del":true,"ln":2176,"content":"-                }"},{"type":"normal","normal":true,"ln1":2177,"ln2":2173,"content":"             }"},{"type":"normal","normal":true,"ln1":2178,"ln2":2174,"content":" "},{"type":"normal","normal":true,"ln1":2179,"ln2":2175,"content":" #ifdef DEBUG_CC"}],"oldStart":2169,"oldLines":11,"newStart":2168,"newLines":8},{"content":"@@ -2198,7 +2194,6 @@ nsCycleCollector::Collect(PRUint32 aTryCollections)","changes":[{"type":"normal","normal":true,"ln1":2198,"ln2":2194,"content":" #ifdef DEBUG_CC"},{"type":"normal","normal":true,"ln1":2199,"ln2":2195,"content":"     ExplainLiveExpectedGarbage();"},{"type":"normal","normal":true,"ln1":2200,"ln2":2196,"content":" #endif"},{"type":"del","del":true,"ln":2201,"content":"-    return didCollect;"},{"type":"normal","normal":true,"ln1":2202,"ln2":2197,"content":" }"},{"type":"normal","normal":true,"ln1":2203,"ln2":2198,"content":" "},{"type":"normal","normal":true,"ln1":2204,"ln2":2199,"content":" void"}],"oldStart":2198,"oldLines":7,"newStart":2194,"newLines":6},{"content":"@@ -2599,10 +2594,11 @@ NS_CycleCollectorForget(nsISupports *n)","changes":[{"type":"normal","normal":true,"ln1":2599,"ln2":2594,"content":" }"},{"type":"normal","normal":true,"ln1":2600,"ln2":2595,"content":" "},{"type":"normal","normal":true,"ln1":2601,"ln2":2596,"content":" "},{"type":"del","del":true,"ln":2602,"content":"-PRBool"},{"type":"add","add":true,"ln":2597,"content":"+void "},{"type":"normal","normal":true,"ln1":2603,"ln2":2598,"content":" nsCycleCollector_collect()"},{"type":"normal","normal":true,"ln1":2604,"ln2":2599,"content":" {"},{"type":"del","del":true,"ln":2605,"content":"-    return sCollector ? sCollector->Collect() : PR_FALSE;"},{"type":"add","add":true,"ln":2600,"content":"+    if (sCollector)"},{"type":"add","add":true,"ln":2601,"content":"+        sCollector->Collect();"},{"type":"normal","normal":true,"ln1":2606,"ln2":2602,"content":" }"},{"type":"normal","normal":true,"ln1":2607,"ln2":2603,"content":" "},{"type":"normal","normal":true,"ln1":2608,"ln2":2604,"content":" nsresult "}],"oldStart":2599,"oldLines":10,"newStart":2594,"newLines":11}],"deletions":11,"additions":7,"from":"xpcom/base/nsCycleCollector.cpp","to":"xpcom/base/nsCycleCollector.cpp","index":["b362041..3bfbcea","100644"]},{"chunks":[{"content":"@@ -66,8 +66,7 @@ struct nsCycleCollectionLanguageRuntime","changes":[{"type":"normal","normal":true,"ln1":66,"ln2":66,"content":" NS_COM void nsCycleCollector_suspectCurrent(nsISupports *n);"},{"type":"normal","normal":true,"ln1":67,"ln2":67,"content":" // NS_COM PRBool nsCycleCollector_forget(nsISupports *n);"},{"type":"normal","normal":true,"ln1":68,"ln2":68,"content":" nsresult nsCycleCollector_startup();"},{"type":"del","del":true,"ln":69,"content":"-// Returns PR_TRUE if some nodes were collected."},{"type":"del","del":true,"ln":70,"content":"-NS_COM PRBool nsCycleCollector_collect();"},{"type":"add","add":true,"ln":69,"content":"+NS_COM void nsCycleCollector_collect();"},{"type":"normal","normal":true,"ln1":71,"ln2":70,"content":" void nsCycleCollector_shutdown();"},{"type":"normal","normal":true,"ln1":72,"ln2":71,"content":" "},{"type":"normal","normal":true,"ln1":73,"ln2":72,"content":" #ifdef DEBUG"}],"oldStart":66,"oldLines":8,"newStart":66,"newLines":7}],"deletions":2,"additions":1,"from":"xpcom/base/nsCycleCollector.h","to":"xpcom/base/nsCycleCollector.h","index":["ac8ceb5..0809ee6","100644"]}]}