{"bug_id":146873,"commitHash":"5e0e011","commit_info":{"sha":"5e0e0118e652e6e4f07aff31b054494b903f68fc","commit":{"author":{"name":"mkaply%us.ibm.com","email":"mkaply%us.ibm.com","date":"2003-02-25T05:58:21Z"},"committer":{"name":"mkaply%us.ibm.com","email":"mkaply%us.ibm.com","date":"2003-02-25T05:58:21Z"},"message":"IRIX bustage - for anyone blaming this code in the future, checkin was Bug 146873 by mstoltz","tree":{"sha":"775d9d9b7c0b3e33d27dcde06ea01146cc65e3bf","url":"https://api.github.com/repos/mozilla/gecko-dev/git/trees/775d9d9b7c0b3e33d27dcde06ea01146cc65e3bf"},"url":"https://api.github.com/repos/mozilla/gecko-dev/git/commits/5e0e0118e652e6e4f07aff31b054494b903f68fc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/mozilla/gecko-dev/commits/5e0e0118e652e6e4f07aff31b054494b903f68fc","html_url":"https://github.com/mozilla/gecko-dev/commit/5e0e0118e652e6e4f07aff31b054494b903f68fc","comments_url":"https://api.github.com/repos/mozilla/gecko-dev/commits/5e0e0118e652e6e4f07aff31b054494b903f68fc/comments","author":null,"committer":null,"parents":[{"sha":"44d6ed3db2532c70adb3e6cbdfc373f7dfca72d1","url":"https://api.github.com/repos/mozilla/gecko-dev/commits/44d6ed3db2532c70adb3e6cbdfc373f7dfca72d1","html_url":"https://github.com/mozilla/gecko-dev/commit/44d6ed3db2532c70adb3e6cbdfc373f7dfca72d1"}],"stats":{"total":98,"additions":49,"deletions":49},"files":[{"sha":"0c141d3bc1d6de18d69ce7c0c4e31502168c6433","filename":"js/src/liveconnect/nsCLiveconnect.cpp","status":"modified","additions":49,"deletions":49,"changes":98,"blob_url":"https://github.com/mozilla/gecko-dev/blob/5e0e0118e652e6e4f07aff31b054494b903f68fc/js/src/liveconnect/nsCLiveconnect.cpp","raw_url":"https://github.com/mozilla/gecko-dev/raw/5e0e0118e652e6e4f07aff31b054494b903f68fc/js/src/liveconnect/nsCLiveconnect.cpp","contents_url":"https://api.github.com/repos/mozilla/gecko-dev/contents/js/src/liveconnect/nsCLiveconnect.cpp?ref=5e0e0118e652e6e4f07aff31b054494b903f68fc","patch":"@@ -69,15 +69,15 @@ PR_END_EXTERN_C\n \n #include \"nsCLiveconnect.h\"\n \n-#include \"jsinterp.h\"  // XXX private API so we can auto-push a JSStackFrame\r\n+#include \"jsinterp.h\"  // XXX private API so we can auto-push a JSStackFrame\n #include \"nsIScriptSecurityManager.h\"\n #include \"nsIPrincipal.h\"\n #include \"nsNetUtil.h\"\n #include \"nsISecurityContext.h\"\n #include \"prmem.h\"\n \n static nsresult\n-CreatePrincipal(nsISupports* aSecuritySupports,\r\n+CreatePrincipal(nsISupports* aSecuritySupports,\n                 nsIScriptSecurityManager* aSecMan,\n                 nsIPrincipal ** aOutPrincipal)\n {\n@@ -127,7 +127,7 @@ CreatePrincipal(nsISupports* aSecuritySupports,\n class AutoPushJSContext\n {\n public:\n-    AutoPushJSContext(nsISupports* aSecuritySupports,\r\n+    AutoPushJSContext(nsISupports* aSecuritySupports,\n                       JSContext *cx);\n \n     ~AutoPushJSContext();\n@@ -163,51 +163,51 @@ AutoPushJSContext::AutoPushJSContext(nsISupports* aSecuritySupports,\n             }\n         }\n     }\n-\r\n-    nsCOMPtr<nsIScriptSecurityManager> secMan(\r\n-        do_GetService(NS_SCRIPTSECURITYMANAGER_CONTRACTID, &mPushResult));\r\n-\r\n-    if (NS_FAILED(mPushResult))\r\n-        return;\r\n-\r\n-    nsCOMPtr<nsIPrincipal> principal;\r\n-    if (aSecuritySupports)\r\n-        mPushResult = CreatePrincipal(aSecuritySupports, secMan, getter_AddRefs(principal));\r\n-    else\r\n-        mPushResult = secMan->GetPrincipalFromContext(cx, getter_AddRefs(principal));\r\n-\r\n-    if (NS_FAILED(mPushResult))\r\n-    {\r\n-        JS_ReportError(cx, \"failed to get a principal\");\r\n-        return;\r\n-    }\r\n-\r\n-    // See if Javascript is enabled for the current window\r\n-    PRBool jsEnabled = PR_FALSE;\r\n-    mPushResult = secMan->CanExecuteScripts(cx, principal, &jsEnabled);\r\n-    if (!jsEnabled)\r\n-        mPushResult = NS_ERROR_FAILURE;\r\n-\r\n-    memset(&mFrame, 0, sizeof(mFrame));\r\n-\r\n-    if (NS_SUCCEEDED(mPushResult))\r\n-    {\r\n-        // See if there are any scripts on the stack.\r\n-        // If not, we need to add a dummy frame with a principal.\r\n-\r\n-        PRBool hasScript = PR_FALSE;\r\n-        JSStackFrame* tempFP = cx->fp;\r\n-        while (tempFP)\r\n-        {\r\n-            if (tempFP->script)\r\n-            {\r\n-                hasScript = PR_TRUE;\r\n-                break;\r\n-            }\r\n-            tempFP = tempFP->down;\r\n-        };\r\n-\r\n-        if (!hasScript)\n+\n+    nsCOMPtr<nsIScriptSecurityManager> secMan(\n+        do_GetService(NS_SCRIPTSECURITYMANAGER_CONTRACTID, &mPushResult));\n+\n+    if (NS_FAILED(mPushResult))\n+        return;\n+\n+    nsCOMPtr<nsIPrincipal> principal;\n+    if (aSecuritySupports)\n+        mPushResult = CreatePrincipal(aSecuritySupports, secMan, getter_AddRefs(principal));\n+    else\n+        mPushResult = secMan->GetPrincipalFromContext(cx, getter_AddRefs(principal));\n+\n+    if (NS_FAILED(mPushResult))\n+    {\n+        JS_ReportError(cx, \"failed to get a principal\");\n+        return;\n+    }\n+\n+    // See if Javascript is enabled for the current window\n+    PRBool jsEnabled = PR_FALSE;\n+    mPushResult = secMan->CanExecuteScripts(cx, principal, &jsEnabled);\n+    if (!jsEnabled)\n+        mPushResult = NS_ERROR_FAILURE;\n+\n+    memset(&mFrame, 0, sizeof(mFrame));\n+\n+    if (NS_SUCCEEDED(mPushResult))\n+    {\n+        // See if there are any scripts on the stack.\n+        // If not, we need to add a dummy frame with a principal.\n+\n+        PRBool hasScript = PR_FALSE;\n+        JSStackFrame* tempFP = cx->fp;\n+        while (tempFP)\n+        {\n+            if (tempFP->script)\n+            {\n+                hasScript = PR_TRUE;\n+                break;\n+            }\n+            tempFP = tempFP->down;\n+        };\n+\n+        if (!hasScript\n         {\n             JSPrincipals* jsprinc;\n             principal->GetJSPrincipals(&jsprinc);\n@@ -223,7 +223,7 @@ AutoPushJSContext::AutoPushJSContext(nsISupports* aSecuritySupports,\n             }\n             else\n                 mPushResult = NS_ERROR_OUT_OF_MEMORY;\n-        }\r\n+        }\n     }\n }\n "}]},"blames":["1de8c0fe","db7833ec","d0f045a7","a62ae1df"]}