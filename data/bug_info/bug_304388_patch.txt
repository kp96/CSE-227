Index: xpfe/appshell/src/nsContentTreeOwner.cpp
===================================================================
RCS file: /cvsroot/mozilla/xpfe/appshell/src/nsContentTreeOwner.cpp,v
retrieving revision 1.80
diff -u -p -8 -r1.80 nsContentTreeOwner.cpp
--- xpfe/appshell/src/nsContentTreeOwner.cpp	17 Feb 2005 19:46:01 -0000	1.80
+++ xpfe/appshell/src/nsContentTreeOwner.cpp	29 Sep 2005 22:06:24 -0000
@@ -52,16 +52,19 @@
 #include "nsIDOMWindowInternal.h"
 #include "nsIDOMXULElement.h"
 #include "nsIEmbeddingSiteWindow.h"
 #include "nsIEmbeddingSiteWindow2.h"
 #include "nsIPrompt.h"
 #include "nsIAuthPrompt.h"
 #include "nsIWindowMediator.h"
 #include "nsIXULBrowserWindow.h"
+#include "nsIPrincipal.h"
+#include "nsIURIFixup.h"
+#include "nsCDefaultURIFixup.h"
 
 // Needed for nsIDocument::FlushPendingNotifications(...)
 #include "nsIDOMDocument.h"
 #include "nsIDocument.h"
 
 // CIDs
 static NS_DEFINE_CID(kWindowMediatorCID, NS_WINDOWMEDIATOR_CID);
 
@@ -596,16 +599,68 @@ NS_IMETHODIMP nsContentTreeOwner::SetTit
       title = docTitle;
     }
   
     title += mTitleSeparator + mWindowTitleModifier;
   }
   else
     title.Assign(mWindowTitleModifier); // Title will just be plain "Mozilla"
 
+  //
+  // if there is no location bar we modify the title to display at least
+  // the scheme and host (if any) as an anti-spoofing measure.
+  //
+  nsCOMPtr<nsIDOMElement> docShellElement;
+  mXULWindow->GetWindowDOMElement(getter_AddRefs(docShellElement));
+
+  if (docShellElement) {
+    nsAutoString chromeString;
+    docShellElement->GetAttribute(NS_LITERAL_STRING("chromehidden"), chromeString);
+    if (chromeString.Find(NS_LITERAL_STRING("location")) != kNotFound) {
+      //
+      // location bar is turned off, find the browser location
+      //
+      // use the document's nsPrincipal to find the true owner
+      // in case of javascript: or data: documents
+      //
+      nsCOMPtr<nsIDocShellTreeItem> dsitem;
+      GetPrimaryContentShell(getter_AddRefs(dsitem));
+      nsCOMPtr<nsIDOMDocument> domdoc(do_GetInterface(dsitem));
+      nsCOMPtr<nsIDocument> doc(do_QueryInterface(domdoc));
+      if (doc) {
+        nsCOMPtr<nsIURI> uri;
+        nsIPrincipal* principal = doc->GetPrincipal();
+        if (principal) {
+          principal->GetURI(getter_AddRefs(uri));
+          if (uri) {
+            //
+            // remove any user:pass information
+            //
+            nsCOMPtr<nsIURIFixup> fixup(do_GetService(NS_URIFIXUP_CONTRACTID));
+            if (fixup) {
+              nsCOMPtr<nsIURI> tmpuri;
+              nsresult rv = fixup->CreateExposableURI(uri,getter_AddRefs(tmpuri));
+              if (NS_SUCCEEDED(rv) && tmpuri) {
+                nsCAutoString prepath;
+                tmpuri->GetPrePath(prepath);
+                if (!prepath.IsEmpty()) {
+                  //
+                  // We have a scheme/host, update the title
+                  //
+                  title.Insert(NS_ConvertUTF8toUTF16(prepath) +
+                               mTitleSeparator, 0);
+                }
+              }
+            }
+          }
+        }
+      }
+    }
+  }
+
   return mXULWindow->SetTitle(title.get());
 }
 
 //*****************************************************************************
 // nsContentTreeOwner: Accessors
 //*****************************************************************************   
 
 void nsContentTreeOwner::XULWindow(nsXULWindow* aXULWindow)
Index: xpfe/global/resources/content/bindings/tabbrowser.xml
===================================================================
RCS file: /cvsroot/mozilla/xpfe/global/resources/content/bindings/tabbrowser.xml,v
retrieving revision 1.128
diff -u -p -8 -r1.128 tabbrowser.xml
--- xpfe/global/resources/content/bindings/tabbrowser.xml	26 Sep 2005 17:05:06 -0000	1.128
+++ xpfe/global/resources/content/bindings/tabbrowser.xml	29 Sep 2005 22:06:25 -0000
@@ -490,25 +490,41 @@
         </body>
       </method>
 
       <method name="updateTitlebar">
         <body>
           <![CDATA[
             var newTitle = "";
             var docTitle;
+            var docElement = this.ownerDocument.documentElement;
+            var sep = docElement.getAttribute("titlemenuseparator");
+
             if (this.docShell.contentViewer)
               docTitle = this.contentTitle;
 
             if (docTitle) {
-              newTitle += this.ownerDocument.documentElement.getAttribute("titlepreface");
+              newTitle += docElement.getAttribute("titlepreface");
               newTitle += docTitle;
-              newTitle += this.ownerDocument.documentElement.getAttribute("titlemenuseparator");
+              newTitle += sep;
             }
-            newTitle += this.ownerDocument.documentElement.getAttribute("titlemodifier");
+            newTitle += docElement.getAttribute("titlemodifier");
+
+            // If location bar is hidden and the URL type supports a host,
+            // add the scheme and host to the title to prevent spoofing.
+            // XXX https://bugzilla.mozilla.org/show_bug.cgi?id=22183#c239
+            try {
+              if (docElement.getAttribute("chromehidden").indexOf("location") != -1) {
+                var host = this.mURIFixup.createExposableURI(
+                             this.mCurrentBrowser.currentURI).prePath;
+                if (host)
+                  newTitle = host + sep + newTitle;
+              }
+            } catch (e) {}
+
             this.ownerDocument.title = newTitle;
           ]]>
         </body>
       </method>
 
       <method name="updatePopupMenu">
         <parameter name="aPopupMenu"/>
         <body>
Index: content/html/document/src/nsHTMLDocument.cpp
===================================================================
RCS file: /cvsroot/mozilla/content/html/document/src/nsHTMLDocument.cpp,v
retrieving revision 3.632
diff -u -p -8 -r3.632 nsHTMLDocument.cpp
--- content/html/document/src/nsHTMLDocument.cpp	24 Sep 2005 18:43:09 -0000	3.632
+++ content/html/document/src/nsHTMLDocument.cpp	29 Sep 2005 22:06:25 -0000
@@ -1975,16 +1975,20 @@ nsHTMLDocument::OpenCommon(const nsACStr
     // editor relies heavily on those. Midas is turned on, to make it
     // work, re-initialize it to give it a chance to add its event
     // listeners again.
 
     SetDesignMode(NS_LITERAL_STRING("off"));
     SetDesignMode(NS_LITERAL_STRING("on"));
   }
 
+  // Zap the old title -- otherwise it would hang around until document.close()
+  // (which might never come) if the new document doesn't explicitly set one.
+  SetTitle(EmptyString());
+
   // Store the security info of the caller now that we're done
   // resetting the document.
   mSecurityInfo = securityInfo;
 
   // Restore the principal to that of the caller.
   mPrincipal = callerPrincipal;
 
   // Recover if we had a problem obtaining the caller principal. In
Index: toolkit/content/widgets/tabbrowser.xml
===================================================================
RCS file: /cvsroot/mozilla/toolkit/content/widgets/tabbrowser.xml,v
retrieving revision 1.114
diff -u -p -8 -r1.114 tabbrowser.xml
--- toolkit/content/widgets/tabbrowser.xml	27 Sep 2005 00:07:39 -0000	1.114
+++ toolkit/content/widgets/tabbrowser.xml	29 Sep 2005 22:06:25 -0000
@@ -557,31 +557,46 @@
         </body>
       </method>
 
       <method name="updateTitlebar">
         <body>
           <![CDATA[
             var newTitle = "";
             var docTitle;
+            var docElement = this.ownerDocument.documentElement;
+            var sep = docElement.getAttribute("titlemenuseparator");
+
             if (this.docShell.contentViewer)
               docTitle = this.contentTitle;
             
             if (!docTitle)
-              docTitle = this.ownerDocument.documentElement.getAttribute("titledefault");
+              docTitle = docElement.getAttribute("titledefault");
 
-            var modifier = this.ownerDocument.documentElement.getAttribute("titlemodifier");
+            var modifier = docElement.getAttribute("titlemodifier");
             if (docTitle) {
-              newTitle += this.ownerDocument.documentElement.getAttribute("titlepreface");
+              newTitle += docElement.getAttribute("titlepreface");
               newTitle += docTitle;
-              var sep = this.ownerDocument.documentElement.getAttribute("titlemenuseparator");
               if (modifier)
                 newTitle += sep;
             }
             newTitle += modifier;
+            
+            // If location bar is hidden and the URL type supports a host,
+            // add the scheme and host to the title to prevent spoofing.
+            // XXX https://bugzilla.mozilla.org/show_bug.cgi?id=22183#c239
+            try {
+              if (docElement.getAttribute("chromehidden").indexOf("location") != -1) {
+                var host = this.mURIFixup.createExposableURI(
+                             this.mCurrentBrowser.currentURI).prePath;
+                if (host)
+                  newTitle = host + sep + newTitle;
+              }
+            } catch (e) {}
+                        
             this.ownerDocument.title = newTitle;
           ]]>
         </body>
       </method>
 
       <method name="updatePopupMenu">
         <parameter name="aPopupMenu"/>
         <body>
