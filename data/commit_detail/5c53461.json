{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5c53461\""},"diff":"\"5c53461 Fix orange from bug 390168 by adopting a slightly different approach.  Reviews from jst pending.\\ndiff --git a/content/html/document/src/nsWyciwygChannel.cpp b/content/html/document/src/nsWyciwygChannel.cpp\\nindex 88790ee..069b749 100644\\n--- a/content/html/document/src/nsWyciwygChannel.cpp\\n+++ b/content/html/document/src/nsWyciwygChannel.cpp\\n@@ -57,7 +57,7 @@ PRLogModuleInfo * gWyciwygLog = nsnull;\\n nsWyciwygChannel::nsWyciwygChannel()\\n   : mStatus(NS_OK),\\n     mIsPending(PR_FALSE),\\n-    mCharsetSet(PR_FALSE),\\n+    mNeedToWriteCharset(PR_FALSE),\\n     mCharsetSource(kCharsetUninitialized),\\n     mContentLength(-1),\\n     mLoadFlags(LOAD_NORMAL)\\n@@ -350,12 +350,9 @@ nsWyciwygChannel::WriteToCacheEntry(const nsAString &aData)\\n     mCacheEntry->SetSecurityInfo(mSecurityInfo);\\n   }\\n \\n-  if (mCharsetSet) {\\n-    mCacheEntry->SetMetaDataElement(\\\"charset\\\", mCharset.get());\\n-\\n-    nsCAutoString source;\\n-    source.AppendInt(mCharsetSource);\\n-    mCacheEntry->SetMetaDataElement(\\\"charset-source\\\", source.get());\\n+  if (mNeedToWriteCharset) {\\n+    WriteCharsetAndSourceToCache(mCharsetSource, mCharset);\\n+    mNeedToWriteCharset = PR_FALSE;\\n   }\\n   \\n   PRUint32 out;\\n@@ -406,9 +403,13 @@ nsWyciwygChannel::SetCharsetAndSource(PRInt32 aSource,\\n {\\n   NS_ENSURE_ARG(!aCharset.IsEmpty());\\n \\n-  mCharsetSet = PR_TRUE;\\n-  mCharsetSource = aSource;\\n-  mCharset = aCharset;\\n+  if (mCacheEntry) {\\n+    WriteCharsetAndSourceToCache(aSource, PromiseFlatCString(aCharset));\\n+  } else {\\n+    mNeedToWriteCharset = PR_TRUE;\\n+    mCharsetSource = aSource;\\n+    mCharset = aCharset;\\n+  }\\n \\n   return NS_OK;\\n }\\n@@ -638,4 +639,17 @@ nsWyciwygChannel::ReadFromCache()\\n   return mPump->AsyncRead(this, nsnull);\\n }\\n \\n+void\\n+nsWyciwygChannel::WriteCharsetAndSourceToCache(PRInt32 aSource,\\n+                                               const nsCString& aCharset)\\n+{\\n+  NS_PRECONDITION(mCacheEntry, \\\"Better have cache entry!\\\");\\n+  \\n+  mCacheEntry->SetMetaDataElement(\\\"charset\\\", aCharset.get());\\n+\\n+  nsCAutoString source;\\n+  source.AppendInt(aSource);\\n+  mCacheEntry->SetMetaDataElement(\\\"charset-source\\\", source.get());\\n+}\\n+\\n // vim: ts=2 sw=2\\ndiff --git a/content/html/document/src/nsWyciwygChannel.h b/content/html/document/src/nsWyciwygChannel.h\\nindex af0affc..cb0a7fc 100644\\n--- a/content/html/document/src/nsWyciwygChannel.h\\n+++ b/content/html/document/src/nsWyciwygChannel.h\\n@@ -83,10 +83,13 @@ public:\\n protected:\\n     nsresult ReadFromCache();\\n     nsresult OpenCacheEntry(const nsACString & aCacheKey, nsCacheAccessMode aWriteAccess, PRBool * aDelayFlag = nsnull);\\n+\\n+    void WriteCharsetAndSourceToCache(PRInt32 aSource,\\n+                                      const nsCString& aCharset);\\n        \\n     nsresult                            mStatus;\\n     PRPackedBool                        mIsPending;\\n-    PRPackedBool                        mCharsetSet;\\n+    PRPackedBool                        mNeedToWriteCharset;\\n     PRInt32                             mCharsetSource;\\n     nsCString                           mCharset;\\n     PRInt32                             mContentLength;\\n\""}