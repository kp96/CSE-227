{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas96c694a\""},"diff":"\"96c694a #140683 r=pedemont, sr=blizzard (OS/2 specific) OS/2 only - Add 256 color support\\ndiff --git a/widget/src/os2/nsPaletteOS2.cpp b/widget/src/os2/nsPaletteOS2.cpp\\nnew file mode 100644\\nindex 0000000..ad6c495\\n--- /dev/null\\n+++ b/widget/src/os2/nsPaletteOS2.cpp\\n@@ -0,0 +1,177 @@\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is an API for using the OS/2 Palette Manager.\\n+ *\\n+ * The Initial Developer of the Original Code is\\n+ * IBM Corporation.\\n+ * Portions created by the Initial Developer are Copyright (C) 2002\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n+ * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by deleting the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not delete\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL.\\n+ *\\n+ * ***** END LICENSE BLOCK ***** */\\n+\\n+#include \\\"nsPaletteOS2.h\\\"\\n+#include \\\"nsGfxDefs.h\\\"\\n+#ifdef DEBUG\\n+#include <stdio.h>\\n+#endif\\n+\\n+HPAL nsPaletteOS2::hGlobalPalette = NULLHANDLE;\\n+BOOL nsPaletteOS2::fPaletteInitialized = FALSE;\\n+ULONG nsPaletteOS2::aulTable[256];\\n+\\n+#define NUM_SYS_COLORS 24\\n+\\n+typedef struct _MYRGB {\\n+  BYTE red;\\n+  BYTE green;\\n+  BYTE blue;\\n+} MYRGB;\\n+\\n+MYRGB sysColors[NUM_SYS_COLORS] =\\n+{\\n+  0x00, 0x00, 0x00,   // CLR_BLACK\\n+  0x00, 0x00, 0x80,   // CLR_DARKBLUE\\n+  0x00, 0x80, 0x00,   // CLR_DARKGREEN\\n+  0x00, 0x80, 0x80,   // CLR_DARKCYAN\\n+  0x80, 0x00, 0x00,   // CLR_DARKRED\\n+  0x80, 0x00, 0x80,   // CLR_DARKPINK\\n+  0x80, 0x80, 0x00,   // CLR_BROWN\\n+  0x80, 0x80, 0x80,   // CLR_DARKGRAY\\n+  0xCC, 0xCC, 0xCC,   // CLR_PALEGRAY\\n+  0x00, 0x00, 0xFF,   // CLR_BLUE\\n+  0x00, 0xFF, 0x00,   // CLR_GREEN\\n+  0x00, 0xFF, 0xFF,   // CLR_CYAN\\n+  0xFF, 0x00, 0x00,   // CLR_RED\\n+  0xFF, 0x00, 0xFF,   // CLR_PINK\\n+  0xFF, 0xFF, 0x00,   // CLR_YELLOW\\n+  0xFE, 0xFE, 0xFE,   // CLR_OFFWHITE - can only use white at index 255\\n+\\n+  0xC0, 0xC0, 0xC0,   // Gray (Windows)\\n+  0xFF, 0xFB, 0xF0,   // Pale Yellow (Windows)\\n+  0xC0, 0xDC, 0xC0,   // Pale Green (Windows)\\n+  0xA4, 0xC8, 0xF0,   // Light Blue (Windows)\\n+  0xA4, 0xA0, 0xA4,   // Medium Gray (Windows)\\n+\\n+  0xFF, 0xFF, 0xE4,   // Tooltip color - see nsLookAndFeel.cpp\\n+\\n+  0x71, 0x71, 0x71,   // Interpolated color for entryfields\\n+  0xEF, 0xEF, 0xEF    // Interpolated color for entryfields\\n+\\n+};\\n+\\n+void nsPaletteOS2::InitializeGlobalPalette()\\n+{\\n+  fPaletteInitialized = TRUE;\\n+  LONG lCaps;\\n+  HPS hps = ::WinGetScreenPS(HWND_DESKTOP);\\n+  HDC hdc = ::GpiQueryDevice (hps);\\n+  ::DevQueryCaps(hdc, CAPS_ADDITIONAL_GRAPHICS, 1, &lCaps);\\n+  ::WinReleasePS(hps);\\n+\\n+  if (lCaps & CAPS_PALETTE_MANAGER) {\\n+    /* Create the color table */\\n+    int i,j,k,l, ulCurTableEntry = 0;\\n+  \\n+    /* First add the system colors */\\n+    for (i = 0; i < NUM_SYS_COLORS; i++) {\\n+      aulTable[ulCurTableEntry] = MK_RGB(sysColors[i].red, sysColors[i].green, sysColors[i].blue);\\n+      ulCurTableEntry++;\\n+    }\\n+  \\n+    /* Then put the color cube into the table, excluding */\\n+    /* any entry that is also in the system color table */\\n+    for (i=0x00;i <= 0xff;i+=0x33) {\\n+      for (j=0x00;j <= 0xff;j+=0x33) {\\n+        for (k=0x00;k <= 0xff ;k+=0x33) {\\n+          for (l=0;l<ulCurTableEntry;l++) {\\n+            if (aulTable[l] == MK_RGB(i, j, k))\\n+              break;\\n+          }\\n+          if (l == ulCurTableEntry) {\\n+            aulTable[ulCurTableEntry] = MK_RGB(i, j, k);\\n+            ulCurTableEntry++;\\n+          }\\n+        }\\n+      }\\n+    }\\n+  \\n+    /* Back current table entry up one so we overwrite the white that was written */\\n+    /* by the color cube */\\n+    ulCurTableEntry--;\\n+  \\n+    /* Then fudge the rest of the table to have entries that are neither white */\\n+    /* nor black - we'll use an offwhite */\\n+    while (ulCurTableEntry < 255) {\\n+      aulTable[ulCurTableEntry] = MK_RGB(254, 254, 254);\\n+      ulCurTableEntry++;\\n+    }\\n+  \\n+    /* Finally, make the last entry white */\\n+    aulTable[ulCurTableEntry] = MK_RGB(255, 255, 255);\\n+  \\n+#ifdef DEBUG_mikek\\n+    for (i=0;i<256 ;i++ )\\n+      printf(\\\"Entry[%d] in 256 color table is %x\\\\n\\\", i, aulTable[i]);\\n+#endif\\n+\\n+    /* Create the palette */\\n+    hGlobalPalette = ::GpiCreatePalette ((HAB)0, 0,\\n+                                         LCOLF_CONSECRGB, 256, aulTable);\\n+  }\\n+}\\n+\\n+void nsPaletteOS2::FreeGlobalPalette()\\n+{\\n+  if (hGlobalPalette) {\\n+    GpiDeletePalette(hGlobalPalette);\\n+    hGlobalPalette = NULLHANDLE;\\n+  }\\n+}\\n+\\n+void nsPaletteOS2::SelectGlobalPalette(HPS hps, HWND hwnd)\\n+{\\n+  if (!fPaletteInitialized)\\n+    InitializeGlobalPalette();\\n+  if (hGlobalPalette) {\\n+    GpiSelectPalette(hps, hGlobalPalette);\\n+    if (hwnd != NULLHANDLE) {\\n+      ULONG cclr;\\n+      WinRealizePalette(hwnd, hps, &cclr);\\n+    }\\n+  }\\n+}\\n+\\n+LONG nsPaletteOS2::QueryColorIndex(LONG lColor)\\n+{\\n+  for (int i=0;i<256;i++) {\\n+     if (lColor == aulTable[i]) {\\n+        return i;\\n+     }\\n+  }\\n+  return 0;\\n+}\\ndiff --git a/widget/src/os2/nsPaletteOS2.h b/widget/src/os2/nsPaletteOS2.h\\nnew file mode 100644\\nindex 0000000..d1ecf44\\n--- /dev/null\\n+++ b/widget/src/os2/nsPaletteOS2.h\\n@@ -0,0 +1,56 @@\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is an API for using the OS/2 Palette Manager.\\n+ *\\n+ * The Initial Developer of the Original Code is\\n+ * IBM Corporation.\\n+ * Portions created by the Initial Developer are Copyright (C) 2002\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n+ * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by deleting the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not delete\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL.\\n+ *\\n+ * ***** END LICENSE BLOCK ***** */\\n+\\n+#ifndef _nspaletteos2_h\\n+#define _nspaletteos2_h\\n+\\n+#define INCL_WIN\\n+#define INCL_GPI\\n+#include <os2.h>\\n+\\n+class nsPaletteOS2 {\\n+public:\\n+  static void FreeGlobalPalette();\\n+  static void InitializeGlobalPalette();\\n+  static void SelectGlobalPalette(HPS hps, HWND hwnd = NULLHANDLE);\\n+  static LONG QueryColorIndex(LONG lColor);\\n+private:\\n+  static HPAL hGlobalPalette;\\n+  static BOOL fPaletteInitialized;\\n+  static ULONG aulTable[256];\\n+};\\n+\\n+#endif\\n\""}