{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basa0327f6\""},"diff":"\"a0327f6 Bug 394109 Inconsistent text-decoration positioning. r+sr+a=roc\\ndiff --git a/gfx/thebes/src/gfxRect.cpp b/gfx/thebes/src/gfxRect.cpp\\nindex 7282be2..b7ece07 100644\\n--- a/gfx/thebes/src/gfxRect.cpp\\n+++ b/gfx/thebes/src/gfxRect.cpp\\n@@ -37,7 +37,7 @@\\n \\n #include \\\"gfxRect.h\\\"\\n \\n-#include <math.h>\\n+#include \\\"nsMathUtils.h\\\"\\n \\n gfxRect\\n gfxRect::Intersect(const gfxRect& aRect) const\\n@@ -76,10 +76,10 @@ gfxRect::Union(const gfxRect& aRect) const\\n void\\n gfxRect::Round()\\n {\\n-    gfxFloat x0 = floor(X() + 0.5);\\n-    gfxFloat y0 = floor(Y() + 0.5);\\n-    gfxFloat x1 = floor(XMost() + 0.5);\\n-    gfxFloat y1 = floor(YMost() + 0.5);\\n+    gfxFloat x0 = NS_round(X());\\n+    gfxFloat y0 = NS_round(Y());\\n+    gfxFloat x1 = NS_round(XMost());\\n+    gfxFloat y1 = NS_round(YMost());\\n \\n     pos.x = x0;\\n     pos.y = y0;\\ndiff --git a/layout/base/nsCSSRendering.cpp b/layout/base/nsCSSRendering.cpp\\nindex d36e2f9..7aadced 100644\\n--- a/layout/base/nsCSSRendering.cpp\\n+++ b/layout/base/nsCSSRendering.cpp\\n@@ -4437,7 +4437,7 @@ nsCSSRendering::PaintDecorationLine(gfxContext* aGfxContext,\\n \\n   // round to device pixels for suppressing the AA.\\n   gfxFloat x = NS_round(aPt.x);\\n-  gfxFloat y = NS_round(aPt.y + aAscent - offset);\\n+  gfxFloat y = NS_round(aPt.y + aAscent) - NS_round(offset);\\n   gfxFloat width = NS_round(aLineSize.width);\\n   gfxFloat height = NS_round(aLineSize.height);\\n   // The y position should be set to the middle of the line.\\ndiff --git a/layout/generic/nsTextFrameThebes.cpp b/layout/generic/nsTextFrameThebes.cpp\\nindex f1962e4..3a92b91 100644\\n--- a/layout/generic/nsTextFrameThebes.cpp\\n+++ b/layout/generic/nsTextFrameThebes.cpp\\n@@ -466,7 +466,9 @@ public:\\n                  const nsRect& aDirtyRect);\\n   // helper: paint quirks-mode CSS text decorations\\n   void PaintTextDecorations(gfxContext* aCtx, const gfxRect& aDirtyRect,\\n-                            const gfxPoint& aFramePt, nsTextPaintStyle& aTextStyle,\\n+                            const gfxPoint& aFramePt,\\n+                            const gfxPoint& aTextBaselinePt,\\n+                            nsTextPaintStyle& aTextStyle,\\n                             PropertyProvider& aProvider);\\n   // helper: paint text frame when we're impacted by at least one selection.\\n   // Return PR_FALSE if the text was not painted and we should continue with\\n@@ -3732,6 +3734,7 @@ FillClippedRect(gfxContext* aCtx, nsPresContext* aPresContext,\\n void \\n nsTextFrame::PaintTextDecorations(gfxContext* aCtx, const gfxRect& aDirtyRect,\\n                                   const gfxPoint& aFramePt,\\n+                                  const gfxPoint& aTextBaselinePt,\\n                                   nsTextPaintStyle& aTextPaintStyle,\\n                                   PropertyProvider& aProvider)\\n {\\n@@ -3798,7 +3801,7 @@ nsTextFrame::PaintTextDecorations(gfxContext* aCtx, const gfxRect& aDirtyRect,\\n   PRInt32 app = aTextPaintStyle.PresContext()->AppUnitsPerDevPixel();\\n \\n   // XXX aFramePt is in AppUnits, shouldn't it be nsFloatPoint?\\n-  gfxPoint pt(aFramePt.x / app, aFramePt.y / app);\\n+  gfxPoint pt(aFramePt.x / app, (aTextBaselinePt.y - mAscent) / app);\\n   gfxSize size(GetRect().width / app, 0);\\n   gfxFloat ascent = mAscent / app;\\n \\n@@ -4174,15 +4177,15 @@ nsTextFrame::PaintTextSelectionDecorations(gfxContext* aCtx,\\n                              aProvider, mTextRun);\\n   gfxFloat xOffset, hyphenWidth;\\n   PRUint32 offset, length;\\n+  PRInt32 app = aTextPaintStyle.PresContext()->AppUnitsPerDevPixel();\\n+  // XXX aTextBaselinePt is in AppUnits, shouldn't it be nsFloatPoint?\\n+  gfxPoint pt(0.0, (aTextBaselinePt.y - mAscent) / app);\\n   SelectionType type;\\n   while (iterator.GetNextSegment(&xOffset, &offset, &length, &hyphenWidth, &type)) {\\n     gfxFloat advance = hyphenWidth +\\n       mTextRun->GetAdvanceWidth(offset, length, &aProvider);\\n     if (type == aSelectionType) {\\n-      PRInt32 app = aTextPaintStyle.PresContext()->AppUnitsPerDevPixel();\\n-      // XXX aTextBaselinePt is in AppUnits, shouldn't it be nsFloatPoint?\\n-      gfxPoint pt((aTextBaselinePt.x + xOffset) / app,\\n-                  (aTextBaselinePt.y - mAscent) / app);\\n+      pt.x = (aTextBaselinePt.x + xOffset) / app;\\n       gfxFloat width = PR_ABS(advance) / app;\\n       DrawSelectionDecorations(aCtx, aSelectionType, aTextPaintStyle,\\n                                pt, width, mAscent / app, decorationMetrics,\\n@@ -4205,7 +4208,8 @@ nsTextFrame::PaintTextWithSelection(gfxContext* aCtx,\\n   SelectionType allTypes;\\n   PaintTextWithSelectionColors(aCtx, aFramePt, aTextBaselinePt, aDirtyRect,\\n                                aProvider, aTextPaintStyle, details, &allTypes);\\n-  PaintTextDecorations(aCtx, aDirtyRect, aFramePt, aTextPaintStyle, aProvider);\\n+  PaintTextDecorations(aCtx, aDirtyRect, aFramePt, aTextBaselinePt,\\n+                       aTextPaintStyle, aProvider);\\n   PRInt32 i;\\n   // Iterate through just the selection types that paint decorations and\\n   // paint decorations for any that actually occur in this frame. Paint\\n@@ -4297,7 +4301,8 @@ nsTextFrame::PaintText(nsIRenderingContext* aRenderingContext, nsPoint aPt,\\n                           0, hyphenTextRun->GetLength(), &dirtyRect, nsnull, nsnull);\\n     }\\n   }\\n-  PaintTextDecorations(ctx, dirtyRect, framePt, textPaintStyle, provider);\\n+  PaintTextDecorations(ctx, dirtyRect, framePt, textBaselinePt,\\n+                       textPaintStyle, provider);\\n }\\n \\n PRInt16\\ndiff --git a/layout/xul/base/src/nsTextBoxFrame.cpp b/layout/xul/base/src/nsTextBoxFrame.cpp\\nindex eb35e04e..a42b648 100644\\n--- a/layout/xul/base/src/nsTextBoxFrame.cpp\\n+++ b/layout/xul/base/src/nsTextBoxFrame.cpp\\n@@ -446,16 +446,18 @@ nsTextBoxFrame::PaintTitle(nsIRenderingContext& aRenderingContext,\\n \\n     nscoord offset;\\n     nscoord size;\\n-    nscoord baseline;\\n-    fontMet->GetMaxAscent(baseline);\\n+    nscoord ascent;\\n+    fontMet->GetMaxAscent(ascent);\\n     PRBool isRTL = vis->mDirection == NS_STYLE_DIRECTION_RTL;\\n \\n+    nscoord baseline =\\n+      presContext->RoundAppUnitsToNearestDevPixels(textRect.y + ascent);\\n     nsRefPtr<gfxContext> ctx = (gfxContext*)\\n       aRenderingContext.GetNativeGraphicData(nsIRenderingContext::NATIVE_THEBES_CONTEXT);\\n     gfxPoint pt(presContext->AppUnitsToGfxUnits(textRect.x),\\n                 presContext->AppUnitsToGfxUnits(textRect.y));\\n     gfxFloat width = presContext->AppUnitsToGfxUnits(textRect.width);\\n-    gfxFloat baselinePixel = presContext->AppUnitsToGfxUnits(baseline);\\n+    gfxFloat ascentPixel = presContext->AppUnitsToGfxUnits(ascent);\\n     if (decorations & (NS_FONT_DECORATION_OVERLINE | NS_FONT_DECORATION_UNDERLINE)) {\\n       fontMet->GetUnderline(offset, size);\\n       gfxFloat offsetPixel = presContext->AppUnitsToGfxUnits(offset);\\n@@ -463,7 +465,7 @@ nsTextBoxFrame::PaintTitle(nsIRenderingContext& aRenderingContext,\\n       if (decorations & NS_FONT_DECORATION_OVERLINE) {\\n         nsCSSRendering::PaintDecorationLine(ctx, overColor,\\n                                             pt, gfxSize(width, sizePixel),\\n-                                            baselinePixel, baselinePixel,\\n+                                            ascentPixel, ascentPixel,\\n                                             sizePixel,\\n                                             NS_STYLE_TEXT_DECORATION_OVERLINE,\\n                                             NS_STYLE_BORDER_STYLE_SOLID,\\n@@ -472,7 +474,7 @@ nsTextBoxFrame::PaintTitle(nsIRenderingContext& aRenderingContext,\\n       if (decorations & NS_FONT_DECORATION_UNDERLINE) {\\n         nsCSSRendering::PaintDecorationLine(ctx, underColor,\\n                                             pt, gfxSize(width, sizePixel),\\n-                                            baselinePixel, offsetPixel,\\n+                                            ascentPixel, offsetPixel,\\n                                             sizePixel,\\n                                             NS_STYLE_TEXT_DECORATION_UNDERLINE,\\n                                             NS_STYLE_BORDER_STYLE_SOLID,\\n@@ -485,7 +487,7 @@ nsTextBoxFrame::PaintTitle(nsIRenderingContext& aRenderingContext,\\n       gfxFloat sizePixel = presContext->AppUnitsToGfxUnits(size);\\n       nsCSSRendering::PaintDecorationLine(ctx, underColor,\\n                                           pt, gfxSize(width, sizePixel),\\n-                                          baselinePixel, offsetPixel,\\n+                                          ascentPixel, offsetPixel,\\n                                           sizePixel,\\n                                           NS_STYLE_TEXT_DECORATION_LINE_THROUGH,\\n                                           NS_STYLE_BORDER_STYLE_SOLID,\\n@@ -515,7 +517,7 @@ nsTextBoxFrame::PaintTitle(nsIRenderingContext& aRenderingContext,\\n            posResolve.logicalIndex = mAccessKeyInfo->mAccesskeyIndex;\\n            rv = bidiUtils->RenderText(mCroppedTitle.get(), mCroppedTitle.Length(), direction,\\n                                       presContext, aRenderingContext,\\n-                                      textRect.x, textRect.y + baseline,\\n+                                      textRect.x, baseline,\\n                                       &posResolve,\\n                                       1);\\n            mAccessKeyInfo->mBeforeWidth = posResolve.visualLeftTwips;\\n@@ -524,7 +526,7 @@ nsTextBoxFrame::PaintTitle(nsIRenderingContext& aRenderingContext,\\n         {\\n            rv = bidiUtils->RenderText(mCroppedTitle.get(), mCroppedTitle.Length(), direction,\\n                                       presContext, aRenderingContext,\\n-                                      textRect.x, textRect.y + baseline);\\n+                                      textRect.x, baseline);\\n         }\\n       }\\n     }\\n@@ -544,7 +546,7 @@ nsTextBoxFrame::PaintTitle(nsIRenderingContext& aRenderingContext,\\n                mAccessKeyInfo->mBeforeWidth = 0;\\n        }\\n \\n-       aRenderingContext.DrawString(mCroppedTitle, textRect.x, textRect.y + baseline);\\n+       aRenderingContext.DrawString(mCroppedTitle, textRect.x, baseline);\\n     }\\n \\n     if (mAccessKeyInfo && mAccessKeyInfo->mAccesskeyIndex != kNotFound) {\\n\""}