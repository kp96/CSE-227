{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas812d07f\""},"diff":"\"812d07f #179508 r=cls, pedemont, sr=blizzard for platform specific code Add shared unicode stuff between OS/2 widget and gfx into gkgfx\\ndiff --git a/widget/src/os2/nsGfxDefs.h b/widget/src/os2/nsGfxDefs.h\\nindex 54eaeb6..4745029 100644\\n--- a/widget/src/os2/nsGfxDefs.h\\n+++ b/widget/src/os2/nsGfxDefs.h\\n@@ -90,15 +90,4 @@ BOOL IsDBCS();\\n extern PRLogModuleInfo *gGFXOS2LogModule;\\n #endif\\n \\n-class OS2Uni {\\n-public:\\n-  static UconvObject GetUconvObject(int CodePage);\\n-  static FreeUconvObjects();\\n-private:\\n-  static nsHashtable gUconvObjects;\\n-};\\n-\\n-int WideCharToMultiByte( int CodePage, const PRUnichar *pText, ULONG ulLength, char* szBuffer, ULONG ulSize );\\n-int MultiByteToWideChar( int CodePage, const char*pText, ULONG ulLength, PRUnichar *szBuffer, ULONG ulSize );\\n-\\n #endif\\ndiff --git a/widget/src/os2/nsOS2Uni.cpp b/widget/src/os2/nsOS2Uni.cpp\\nnew file mode 100644\\nindex 0000000..b779f58\\n--- /dev/null\\n+++ b/widget/src/os2/nsOS2Uni.cpp\\n@@ -0,0 +1,132 @@\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is an API for accessing OS/2 Unicode support.\\n+ *\\n+ * The Initial Developer of the Original Code is\\n+ * IBM Corporation.\\n+ * Portions created by the Initial Developer are Copyright (C) 2002\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n+ * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by deleting the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not delete\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL.\\n+ *\\n+ * ***** END LICENSE BLOCK ***** */\\n+\\n+#include \\\"nsOS2Uni.h\\\"\\n+\\n+int WideCharToMultiByte( int CodePage, const PRUnichar *pText, ULONG ulLength, char* szBuffer, ULONG ulSize )\\n+{\\n+  UconvObject Converter = OS2Uni::GetUconvObject(CodePage);\\n+\\n+  UniChar *ucsString = (UniChar*) pText;\\n+  size_t   ucsLen = ulLength;\\n+  size_t   cplen = ulSize;\\n+  size_t   cSubs = 0;\\n+\\n+  char *tmp = szBuffer; // function alters the out pointer\\n+\\n+  int unirc = ::UniUconvFromUcs( Converter, &ucsString, &ucsLen,\\n+                                 (void**) &tmp, &cplen, &cSubs);\\n+\\n+  if( unirc != ULS_SUCCESS )\\n+    return 0;\\n+\\n+  if( unirc == UCONV_E2BIG)\\n+  {\\n+    // terminate output string (truncating)\\n+    *(szBuffer + ulSize - 1) = '\\\\0';\\n+  }\\n+\\n+  return ulSize - cplen;\\n+}\\n+\\n+int MultiByteToWideChar( int CodePage, const char*pText, ULONG ulLength, PRUnichar *szBuffer, ULONG ulSize )\\n+{\\n+  UconvObject Converter = OS2Uni::GetUconvObject(CodePage);\\n+\\n+  char *ucsString = (char*) pText;\\n+  size_t   ucsLen = ulLength;\\n+  size_t   cplen = ulSize;\\n+  size_t   cSubs = 0;\\n+\\n+  PRUnichar *tmp = szBuffer; // function alters the out pointer\\n+\\n+  int unirc = ::UniUconvToUcs( Converter, (void**)&ucsString, &ucsLen,\\n+                               NS_REINTERPRET_CAST(UniChar**, &tmp),\\n+                               &cplen, &cSubs);\\n+                               \\n+  if( unirc != ULS_SUCCESS )\\n+    return 0;\\n+\\n+  if( unirc == UCONV_E2BIG)\\n+  {\\n+    // terminate output string (truncating)\\n+    *(szBuffer + ulSize - 1) = '\\\\0';\\n+  }\\n+\\n+  return ulSize - cplen;\\n+}\\n+\\n+nsHashtable OS2Uni::gUconvObjects;\\n+\\n+UconvObject\\n+OS2Uni::GetUconvObject(int CodePage)\\n+{\\n+  nsPRUint32Key key(CodePage);\\n+  UconvObject uco = OS2Uni::gUconvObjects.Get(&key);\\n+  if (!uco) {\\n+    UniChar codepage[20];\\n+    int unirc = ::UniMapCpToUcsCp(CodePage, codepage, 20);\\n+    if (unirc == ULS_SUCCESS) {\\n+       unirc = ::UniCreateUconvObject(codepage, &uco);\\n+       if (unirc == ULS_SUCCESS) {\\n+          uconv_attribute_t attr;\\n+\\n+          ::UniQueryUconvObject(uco, &attr, sizeof(uconv_attribute_t), \\n+                                NULL, NULL, NULL);\\n+          attr.options = UCONV_OPTION_SUBSTITUTE_BOTH;\\n+          attr.subchar_len=1;\\n+          attr.subchar[0]='?';\\n+          ::UniSetUconvObject(uco, &attr);\\n+          OS2Uni::gUconvObjects.Put(&key, uco);\\n+       }\\n+    }\\n+  }\\n+  return uco;\\n+}\\n+\\n+PR_STATIC_CALLBACK(PRIntn)\\n+UconvObjectEnum(nsHashKey* hashKey, void *aData, void* closure)\\n+{\\n+  UniFreeUconvObject((UconvObject)aData);\\n+  return kHashEnumerateRemove;\\n+}\\n+\\n+void OS2Uni::FreeUconvObjects()\\n+{\\n+  if (gUconvObjects.Count()) {\\n+    gUconvObjects.Enumerate(UconvObjectEnum, nsnull);\\n+  }\\n+}\\ndiff --git a/widget/src/os2/nsOS2Uni.h b/widget/src/os2/nsOS2Uni.h\\nnew file mode 100644\\nindex 0000000..18e5e26\\n--- /dev/null\\n+++ b/widget/src/os2/nsOS2Uni.h\\n@@ -0,0 +1,56 @@\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is an API for accessing OS/2 Unicode support.\\n+ *\\n+ * The Initial Developer of the Original Code is\\n+ * IBM Corporation.\\n+ * Portions created by the Initial Developer are Copyright (C) 2002\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n+ * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by deleting the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not delete\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL.\\n+ *\\n+ * ***** END LICENSE BLOCK ***** */\\n+\\n+#ifndef _nsos2uni_h\\n+#define _nsos2uni_h\\n+\\n+#include <os2.h>\\n+#include <uconv.h>\\n+#include \\\"nsHashTable.h\\\"\\n+\\n+\\n+class OS2Uni {\\n+public:\\n+  static UconvObject GetUconvObject(int CodePage);\\n+  static void FreeUconvObjects();\\n+private:\\n+  static nsHashtable gUconvObjects;\\n+};\\n+\\n+int WideCharToMultiByte( int CodePage, const PRUnichar *pText, ULONG ulLength, char* szBuffer, ULONG ulSize );\\n+int MultiByteToWideChar( int CodePage, const char*pText, ULONG ulLength, PRUnichar *szBuffer, ULONG ulSize );\\n+\\n+#endif\\n\""}