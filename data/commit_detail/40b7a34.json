{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas40b7a34\""},"diff":"\"40b7a34 bug 350425 - ensure a11y support in breakpad.  r=campd\\ndiff --git a/toolkit/crashreporter/client/crashreporter_linux.cpp b/toolkit/crashreporter/client/crashreporter_linux.cpp\\nindex ab4654d..782e1a0 100644\\n--- a/toolkit/crashreporter/client/crashreporter_linux.cpp\\n+++ b/toolkit/crashreporter/client/crashreporter_linux.cpp\\n@@ -43,6 +43,7 @@\\n #include <sys/types.h>\\n #include <fcntl.h>\\n #include <errno.h>\\n+#include <dlfcn.h>\\n \\n #include <algorithm>\\n #include <cctype>\\n@@ -85,6 +86,11 @@ static StringTable gQueryParameters;\\n static string gSendURL;\\n static vector<string> gRestartArgs;\\n \\n+// handle from dlopen'ing libgnome\\n+static void* gnomeLib = NULL;\\n+// handle from dlopen'ing libgnomeui\\n+static void* gnomeuiLib = NULL;\\n+\\n static const char kIniFile[] = \\\"crashreporter.ini\\\";\\n \\n static void LoadSettings()\\n@@ -274,6 +280,35 @@ static void EmailChanged(GtkEditable* editable, gpointer userData)\\n   ShowReportInfo();\\n }\\n \\n+typedef struct _GnomeProgram GnomeProgram;\\n+typedef struct _GnomeModuleInfo GnomeModuleInfo;\\n+typedef GnomeProgram * (*_gnome_program_init_fn)(const char *, const char *,\\n+                                                 const GnomeModuleInfo *, int,\\n+                                                 char **, const char *, ...);\\n+typedef const GnomeModuleInfo * (*_libgnomeui_module_info_get_fn)();\\n+\\n+static void TryInitGnome()\\n+{\\n+  gnomeLib = dlopen(\\\"libgnome-2.so.0\\\", RTLD_LAZY);\\n+  if (!gnomeLib)\\n+    return;\\n+\\n+  gnomeuiLib = dlopen(\\\"libgnomeui-2.so.0\\\", RTLD_LAZY);\\n+  if (!gnomeuiLib)\\n+    return;\\n+ \\n+  _gnome_program_init_fn gnome_program_init =\\n+    reinterpret_cast<_gnome_program_init_fn>(dlsym(gnomeLib, \\\"gnome_program_init\\\"));\\n+  _libgnomeui_module_info_get_fn libgnomeui_module_info_get =\\n+    reinterpret_cast<_libgnomeui_module_info_get_fn>(dlsym(gnomeuiLib, \\\"libgnomeui_module_info_get\\\"));\\n+\\n+  if (gnome_program_init && libgnomeui_module_info_get) {\\n+    gnome_program_init(\\\"crashreporter\\\", \\\"1.0\\\", libgnomeui_module_info_get(),\\n+                       gArgc, gArgv, NULL);\\n+  }\\n+\\n+}\\n+\\n /* === Crashreporter UI Functions === */\\n \\n bool UIInit()\\n@@ -285,6 +320,7 @@ bool UIInit()\\n \\n   if (gtk_init_check(&gArgc, &gArgv)) {\\n     gInitialized = true;\\n+    TryInitGnome();\\n     return true;\\n   }\\n \\n@@ -293,6 +329,10 @@ bool UIInit()\\n \\n void UIShutdown()\\n {\\n+  if (gnomeLib)\\n+    dlclose(gnomeLib);\\n+  if (gnomeuiLib)\\n+    dlclose(gnomeuiLib);\\n }\\n \\n void UIShowDefaultUI()\\n\""}