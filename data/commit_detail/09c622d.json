{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas09c622d\""},"diff":"\"09c622d Bug 361909 - Work around race condition in download helper app dialog box.  Patch by Joshua McKenty <joshua@flock.com>, r=gavin\\ndiff --git a/toolkit/mozapps/downloads/src/nsHelperAppDlg.js.in b/toolkit/mozapps/downloads/src/nsHelperAppDlg.js.in\\nindex 80eef2d..f4c1806 100644\\n--- a/toolkit/mozapps/downloads/src/nsHelperAppDlg.js.in\\n+++ b/toolkit/mozapps/downloads/src/nsHelperAppDlg.js.in\\n@@ -87,26 +87,37 @@ nsUnknownContentTypeDialog.prototype = {\\n     show: function(aLauncher, aContext, aReason)  {\\n       this.mLauncher = aLauncher;\\n       this.mContext  = aContext;\\n-      // Display the dialog using the Window Watcher interface.\\n-      \\n-      var ir = aContext.QueryInterface(Components.interfaces.nsIInterfaceRequestor);\\n-      var dwi = ir.getInterface(Components.interfaces.nsIDOMWindowInternal);\\n-      var ww = Components.classes[\\\"@mozilla.org/embedcomp/window-watcher;1\\\"]\\n-                .getService(Components.interfaces.nsIWindowWatcher);\\n-      this.mDialog = ww.openWindow(dwi,\\n-                                   \\\"chrome://mozapps/content/downloads/unknownContentType.xul\\\",\\n-                                   null,\\n-                                   \\\"chrome,centerscreen,titlebar,dialog=yes,dependent\\\",\\n-                                   null);\\n-      // Hook this object to the dialog.\\n-      this.mDialog.dialog = this;\\n-      \\n-      // Hook up utility functions. \\n-      this.getSpecialFolderKey = this.mDialog.getSpecialFolderKey;\\n-      \\n-      // Watch for error notifications.\\n-      this.progressListener.helperAppDlg = this;\\n-      this.mLauncher.setWebProgressListener(this.progressListener);\\n+\\n+      const nsITimer = Components.interfaces.nsITimer;\\n+      this._timer = Components.classes[\\\"@mozilla.org/timer;1\\\"]\\n+                              .createInstance(nsITimer);\\n+      this._timer.initWithCallback(this, 0, nsITimer.TYPE_ONE_SHOT);\\n+    },\\n+\\n+    // When opening from new tab, if tab closes while dialog is opening,\\n+    // (which is a race condition on the XUL file being cached and the timer\\n+    // in nsExternalHelperAppService), the dialog gets a blur and doesn't\\n+    // activate the OK button.  So we wait a bit before doing opening it.\\n+    reallyShow: function() {\\n+        var ir = this.mContext.QueryInterface(Components.interfaces.nsIInterfaceRequestor);\\n+        var dwi = ir.getInterface(Components.interfaces.nsIDOMWindowInternal);\\n+        var ww = Components.classes[\\\"@mozilla.org/embedcomp/window-watcher;1\\\"]\\n+                           .getService(Components.interfaces.nsIWindowWatcher);\\n+        this.mDialog = ww.openWindow(dwi,\\n+                                     \\\"chrome://mozapps/content/downloads/unknownContentType.xul\\\",\\n+                                     null,\\n+                                     \\\"chrome,centerscreen,titlebar,dialog=yes,dependent\\\",\\n+                                     null);\\n+\\n+        // Hook this object to the dialog.\\n+        this.mDialog.dialog = this;\\n+\\n+        // Hook up utility functions.\\n+        this.getSpecialFolderKey = this.mDialog.getSpecialFolderKey;\\n+\\n+        // Watch for error notifications.\\n+        this.progressListener.helperAppDlg = this;\\n+        this.mLauncher.setWebProgressListener(this.progressListener);\\n     },\\n \\n     // promptForSaveToFile:  Display file picker dialog and return selected file.\\n@@ -454,17 +465,24 @@ nsUnknownContentTypeDialog.prototype = {\\n                               .createInstance(nsITimer);\\n       this._timer.initWithCallback(this, 250, nsITimer.TYPE_ONE_SHOT);\\n     },\\n-    \\n+\\n     _timer: null,\\n     notify: function (aTimer) {\\n-      try { // The user may have already canceled the dialog.\\n-        if (!this._blurred)\\n-          this.mDialog.document.documentElement.getButton('accept').disabled = false;\\n-      } catch (ex) {}\\n-      this._delayExpired = true;\\n-      this._timer = null; // the timer won't release us, so we have to release it\\n+      if (!this.mDialog) {\\n+        this.reallyShow();\\n+      } else {\\n+        // The user may have already canceled the dialog.\\n+        try {\\n+          if (!this._blurred) {\\n+            this.mDialog.document.documentElement.getButton(\\\"accept\\\").disabled = false;\\n+          }\\n+        } catch (ex) {}\\n+        this._delayExpired = true;\\n+      }\\n+      // The timer won't release us, so we have to release it.\\n+      this._timer = null;\\n     },\\n-    \\n+\\n     postShowCallback: function () {\\n       this.mDialog.sizeToContent();\\n \\n\""}