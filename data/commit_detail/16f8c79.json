{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas16f8c79\""},"diff":"\"16f8c79 fix for bug #346441 closing the rightmost tab in the overflow case looks bad. r=asaf\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 3316801..7ca88bb 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -1216,7 +1216,7 @@\\n \\n             // |setTimeout| here to ensure we're post reflow\\n             var _delayedUpdate = function(aTabContainer) {\\n-              aTabContainer.adjustTabstrip(false);\\n+              aTabContainer.adjustTabstrip();\\n \\n               if (aTabContainer.selectedItem != t)\\n                 aTabContainer._notifyBackgroundTab(t);\\n@@ -1352,7 +1352,7 @@\\n \\n             // see notes in addTab\\n             var _delayedUpdate = function(aTabContainer) {\\n-              aTabContainer.adjustTabstrip(true);\\n+              aTabContainer.adjustTabstrip();\\n               aTabContainer.mTabstrip._updateScrollButtonsDisabledState();\\n             }\\n             setTimeout(_delayedUpdate, 0, this.mTabContainer);\\n@@ -1436,6 +1436,26 @@\\n             this._browsers = null; \\n             this.mPanelContainer.removeChild(oldBrowser.parentNode);\\n \\n+            try {\\n+              // if we're at the right side (and not the logical end,\\n+              // which is why this works for both LTR and RTL)\\n+              // of the tabstrip, we need to ensure that we stay \\n+              // completely scrolled to the right side\\n+              var tabStrip = this.mTabContainer.mTabstrip;\\n+              var scrollPos = {};\\n+              tabStrip.scrollBoxObject.getPosition(scrollPos, {});\\n+              var scrolledSize = {};\\n+              tabStrip.scrollBoxObject.getScrolledSize(scrolledSize, {});\\n+\\n+              if (scrollPos.value + tabStrip.boxObject.width >= \\n+                  scrolledSize.value) {\\n+                tabStrip.scrollByPixels(-1 * this.mTabContainer.firstChild\\n+                                                 .boxObject.width);\\n+              }\\n+            }\\n+            catch (ex) {\\n+            }\\n+\\n             // Find the tab to select\\n             var newIndex = -1;\\n             if (currentIndex > index)\\n@@ -2514,7 +2534,7 @@\\n \\n           this.firstChild.minWidth = this.mTabMinWidth;\\n           this._updateDisableBackgroundClose();\\n-          this.adjustTabstrip(false);\\n+          this.adjustTabstrip();\\n \\n           pb2.addObserver(\\\"browser.tabs.disableBackgroundClose\\\", \\n                           this._prefObserver, true);\\n@@ -2525,7 +2545,7 @@\\n           function onResize() {\\n             var width = self.mTabstrip.boxObject.width;\\n             if (width != self.mTabstripWidth) {\\n-              self.adjustTabstrip(false);\\n+              self.adjustTabstrip();\\n               self.mTabstrip.scrollByIndex(1);\\n               self.mTabstrip.scrollBoxObject\\n                             .ensureElementIsVisible(self.selectedItem);\\n@@ -2599,7 +2619,7 @@\\n                   Components.classes['@mozilla.org/preferences-service;1'].\\n                   getService(Components.interfaces.nsIPrefBranch2);\\n               this.tabbox.mCloseButtons = pb2.getIntPref(\\\"browser.tabs.closeButtons\\\");\\n-              this.tabbox.adjustTabstrip(false);\\n+              this.tabbox.adjustTabstrip();\\n               break;\\n             }\\n           }\\n@@ -2620,7 +2640,6 @@\\n       <field name=\\\"mCloseButtons\\\">1</field>\\n \\n       <method name=\\\"adjustTabstrip\\\">\\n-        <parameter name=\\\"aRemovingTab\\\"/>\\n         <body><![CDATA[\\n           // modes for tabstrip\\n           // 0 - activetab  = close button on active tab only\\n@@ -2651,16 +2670,6 @@\\n             break;\\n           }\\n           this.mTabstripClosebutton.collapsed = this.mCloseButtons != 3;\\n-          if (aRemovingTab) {\\n-            // if we're at the end of the tabstrip, we need to ensure \\n-            // that we stay completely scrolled to the end\\n-            // this is a hack to determine if that's where we are already\\n-            var tabWidth = this.firstChild.boxObject.width;\\n-            var scrollPos = {};\\n-            this.mTabstrip.scrollBoxObject.getPosition(scrollPos, {});\\n-            if (scrollPos.value + this.mTabstrip.boxObject.width > tabWidth * (this.childNodes.length - 1))\\n-              this.mTabstrip.scrollByPixels(-1 * this.firstChild.boxObject.width);\\n-          }\\n         ]]></body>\\n       </method>\\n         \\n\""}