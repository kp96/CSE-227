{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basaf798b4\""},"diff":"\"af798b4 Bug 395557 - XPCOMUtilify FeedWriter. r=sayrer, a=mconnor\\ndiff --git a/browser/components/feeds/src/FeedWriter.js b/browser/components/feeds/src/FeedWriter.js\\nindex fff21f1..74a08d3 100755\\n--- a/browser/components/feeds/src/FeedWriter.js\\n+++ b/browser/components/feeds/src/FeedWriter.js\\n@@ -43,10 +43,11 @@ const Cc = Components.classes;\\n const Ci = Components.interfaces;\\n const Cr = Components.results;\\n \\n+Components.utils.import(\\\"resource://gre/modules/XPCOMUtils.jsm\\\");\\n+\\n function LOG(str) {\\n-  var prefB = \\n-    Cc[\\\"@mozilla.org/preferences-service;1\\\"].\\n-    getService(Ci.nsIPrefBranch);\\n+  var prefB = Cc[\\\"@mozilla.org/preferences-service;1\\\"].\\n+              getService(Ci.nsIPrefBranch);\\n \\n   var shouldLog = false;\\n   try {\\n@@ -75,7 +76,6 @@ function makeURI(aURLSpec, aCharset) {\\n   return null;\\n }\\n \\n-\\n const XML_NS = \\\"http://www.w3.org/XML/1998/namespace\\\"\\n const HTML_NS = \\\"http://www.w3.org/1999/xhtml\\\";\\n const XUL_NS = \\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\";\\n@@ -88,24 +88,16 @@ const PREF_SELECTED_ACTION = \\\"browser.feeds.handler\\\";\\n const PREF_SELECTED_READER = \\\"browser.feeds.handler.default\\\";\\n const PREF_SHOW_FIRST_RUN_UI = \\\"browser.feeds.showFirstRunUI\\\";\\n \\n-const FW_CLASSID = Components.ID(\\\"{49bb6593-3aff-4eb3-a068-2712c28bd58e}\\\");\\n-const FW_CLASSNAME = \\\"Feed Writer\\\";\\n-const FW_CONTRACTID = \\\"@mozilla.org/browser/feeds/result-writer;1\\\";\\n-\\n const TITLE_ID = \\\"feedTitleText\\\";\\n const SUBTITLE_ID = \\\"feedSubtitleText\\\";\\n \\n-const NH_CONTRACTID = \\\"@mozilla.org/browser/nav-history-service;1\\\";\\n-const FAV_CONTRACTID = \\\"@mozilla.org/browser/favicon-service;1\\\";\\n-\\n-function FeedWriter() {\\n-}\\n+function FeedWriter() {}\\n FeedWriter.prototype = {\\n   _getPropertyAsBag: function FW__getPropertyAsBag(container, property) {\\n     return container.fields.getProperty(property).\\n                      QueryInterface(Ci.nsIPropertyBag2);\\n   },\\n-  \\n+\\n   _getPropertyAsString: function FW__getPropertyAsString(container, property) {\\n     try {\\n       return container.fields.getPropertyAsAString(property);\\n@@ -114,14 +106,14 @@ FeedWriter.prototype = {\\n     }\\n     return \\\"\\\";\\n   },\\n-  \\n+\\n   _setContentText: function FW__setContentText(id, text) {\\n     var element = this._document.getElementById(id);\\n     while (element.hasChildNodes())\\n       element.removeChild(element.firstChild);\\n     element.appendChild(this._document.createTextNode(text));\\n   },\\n-  \\n+\\n   /**\\n    * Safely sets the href attribute on an anchor tag, providing the URI \\n    * specified can be loaded according to rules. \\n@@ -134,9 +126,8 @@ FeedWriter.prototype = {\\n    */\\n   _safeSetURIAttribute: \\n   function FW__safeSetURIAttribute(element, attribute, uri) {\\n-    var secman = \\n-        Cc[\\\"@mozilla.org/scriptsecuritymanager;1\\\"].\\n-        getService(Ci.nsIScriptSecurityManager);    \\n+    var secman = Cc[\\\"@mozilla.org/scriptsecuritymanager;1\\\"].\\n+                 getService(Ci.nsIScriptSecurityManager);    \\n     const flags = Ci.nsIScriptSecurityManager.DISALLOW_INHERIT_PRINCIPAL;\\n     try {\\n       secman.checkLoadURIStr(this._window.location.href, uri, flags);\\n@@ -151,10 +142,9 @@ FeedWriter.prototype = {\\n \\n   __faviconService: null,\\n   get _faviconService() {\\n-    if (!this.__faviconService) {\\n-      this.__faviconService =\\n-        Cc[FAV_CONTRACTID].getService(Ci.nsIFaviconService);\\n-    }\\n+    if (!this.__faviconService)\\n+      this.__faviconService = Cc[\\\"@mozilla.org/browser/favicon-service;1\\\"].\\n+                              getService(Ci.nsIFaviconService);\\n \\n     return this.__faviconService;\\n   },\\n@@ -168,7 +158,7 @@ FeedWriter.prototype = {\\n     }\\n     return this.__bundle;\\n   },\\n-  \\n+\\n   _getFormattedString: function FW__getFormattedString(key, params) {\\n     return this._bundle.formatStringFromName(key, params, params.length);\\n   },\\n@@ -261,12 +251,12 @@ FeedWriter.prototype = {\\n       this._setContentText(TITLE_ID, container.title.plainText());\\n       this._document.title = container.title.plainText();\\n     }\\n-    \\n+\\n     var feed = container.QueryInterface(Ci.nsIFeed);\\n     if (feed && feed.subtitle)\\n       this._setContentText(SUBTITLE_ID, container.subtitle.plainText());\\n   },\\n-  \\n+\\n   /**\\n    * Writes the title image into the preview document if one is present.\\n    * @param   container\\n@@ -280,13 +270,12 @@ FeedWriter.prototype = {\\n       var feedTitleImage = this._document.getElementById(\\\"feedTitleImage\\\");\\n       this._safeSetURIAttribute(feedTitleImage, \\\"src\\\", \\n                                 parts.getPropertyAsAString(\\\"url\\\"));\\n-      \\n+\\n       // Set up the title image link\\n       var feedTitleLink = this._document.getElementById(\\\"feedTitleLink\\\");\\n-      \\n-      var titleText = \\n-        this._getFormattedString(\\\"linkTitleTextFormat\\\", \\n-                                 [parts.getPropertyAsAString(\\\"title\\\")]);\\n+\\n+      var titleText = this._getFormattedString(\\\"linkTitleTextFormat\\\", \\n+                                               [parts.getPropertyAsAString(\\\"title\\\")]);\\n       feedTitleLink.setAttribute(\\\"title\\\", titleText);\\n       this._safeSetURIAttribute(feedTitleLink, \\\"href\\\", \\n                                 parts.getPropertyAsAString(\\\"link\\\"));\\n@@ -301,7 +290,7 @@ FeedWriter.prototype = {\\n       LOG(\\\"Failed to set Title Image (this is benign): \\\" + e);\\n     }\\n   },\\n-  \\n+\\n   /**\\n    * Writes all entries contained in the feed.\\n    * @param   container\\n@@ -373,7 +362,7 @@ FeedWriter.prototype = {\\n       feedContent.appendChild(clearDiv);\\n     }\\n   },\\n-  \\n+\\n   /**\\n    * Gets a valid nsIFeedContainer object from the parsed nsIFeedResult.\\n    * Displays error information if there was one.\\n@@ -386,7 +375,7 @@ FeedWriter.prototype = {\\n     var feedService = \\n         Cc[\\\"@mozilla.org/browser/feeds/result-service;1\\\"].\\n         getService(Ci.nsIFeedResultService);\\n- \\n+\\n     try {\\n       var result = \\n         feedService.getFeedResult(this._getOriginalURI(this._window));\\n@@ -408,7 +397,7 @@ FeedWriter.prototype = {\\n     }\\n     return container;\\n   },\\n-  \\n+\\n   /**\\n    * Get the human-readable display name of a file. This could be the \\n    * application name.\\n@@ -541,9 +530,7 @@ FeedWriter.prototype = {\\n     }\\n   },\\n \\n-  /**\\n-   * See nsIDOMEventListener\\n-   */\\n+  // nsIDomEventListener\\n   handleEvent: function(event) {\\n     // see comments in the write method\\n     event = new XPCNativeWrapper(event);\\n@@ -591,7 +578,7 @@ FeedWriter.prototype = {\\n       handler = prefs.getCharPref(PREF_SELECTED_READER);\\n     }\\n     catch (ex) { }\\n-    \\n+\\n     switch (handler) {\\n       case \\\"web\\\": {\\n         var handlersMenuList = this._document.getElementById(\\\"handlersMenuList\\\");\\n@@ -634,8 +621,7 @@ FeedWriter.prototype = {\\n       }\\n       case \\\"bookmarks\\\":\\n       default: {\\n-        var liveBookmarksMenuItem =\\n-          this._document.getElementById(\\\"liveBookmarksMenuItem\\\");\\n+        var liveBookmarksMenuItem = this._document.getElementById(\\\"liveBookmarksMenuItem\\\");\\n         if (liveBookmarksMenuItem)\\n           liveBookmarksMenuItem.doCommand();\\n       } \\n@@ -643,8 +629,7 @@ FeedWriter.prototype = {\\n   },\\n \\n   _initSubscriptionUI: function FW__initSubscriptionUI() {\\n-    var handlersMenuPopup =\\n-      this._document.getElementById(\\\"handlersMenuPopup\\\");\\n+    var handlersMenuPopup = this._document.getElementById(\\\"handlersMenuPopup\\\");\\n     if (!handlersMenuPopup)\\n       return;\\n \\n@@ -663,9 +648,8 @@ FeedWriter.prototype = {\\n       selectedApp = prefs.getComplexValue(PREF_SELECTED_APP,\\n                                           Ci.nsILocalFile);\\n \\n-      if (selectedApp.exists()) {\\n+      if (selectedApp.exists())\\n         this._initMenuItemWithFile(selectedApplicationItem, selectedApp);\\n-      }\\n       else {\\n         // Hide the menuitem if the last selected application doesn't exist\\n         selectedApplicationItem.hidden = true;\\n@@ -707,13 +691,13 @@ FeedWriter.prototype = {\\n     handlersMenuPopup.appendChild(this._document.createElementNS(XUL_NS,\\n                                   \\\"menuseparator\\\"));\\n \\n-    var historySvc = Cc[NH_CONTRACTID].getService(Ci.nsINavHistoryService);\\n+    var historySvc = Cc[\\\"@mozilla.org/browser/nav-history-service;1\\\"].\\n+                     getService(Ci.nsINavHistoryService);\\n     historySvc.addObserver(this, false);\\n \\n     // List of web handlers\\n-    var wccr = \\n-      Cc[\\\"@mozilla.org/embeddor.implemented/web-content-handler-registrar;1\\\"].\\n-      getService(Ci.nsIWebContentConverterService);\\n+    var wccr = Cc[\\\"@mozilla.org/embeddor.implemented/web-content-handler-registrar;1\\\"].\\n+               getService(Ci.nsIWebContentConverterService);\\n     var handlers = wccr.getContentHandlers(TYPE_MAYBE_FEED, {});\\n     if (handlers.length != 0) {\\n       for (var i = 0; i < handlers.length; ++i) {\\n@@ -750,7 +734,7 @@ FeedWriter.prototype = {\\n     this._document\\n         .getElementById(\\\"subscribeButton\\\")\\n         .addEventListener(\\\"command\\\", this, false);\\n-    \\n+\\n     // first-run ui\\n     var showFirstRunUI = true;\\n     try {\\n@@ -765,7 +749,7 @@ FeedWriter.prototype = {\\n       prefs.setBoolPref(PREF_SHOW_FIRST_RUN_UI, false);\\n     }\\n   },\\n-  \\n+\\n   /**\\n    * Returns the original URI object of the feed and ensures that this\\n    * component is only ever invoked from the preview document.  \\n@@ -773,10 +757,9 @@ FeedWriter.prototype = {\\n    *        The window of the document invoking the BrowserFeedWriter\\n    */\\n   _getOriginalURI: function FW__getOriginalURI(aWindow) {\\n-    var chan = \\n-        aWindow.QueryInterface(Ci.nsIInterfaceRequestor).\\n-        getInterface(Ci.nsIWebNavigation).\\n-        QueryInterface(Ci.nsIDocShell).currentDocumentChannel;\\n+    var chan = aWindow.QueryInterface(Ci.nsIInterfaceRequestor).\\n+               getInterface(Ci.nsIWebNavigation).\\n+               QueryInterface(Ci.nsIDocShell).currentDocumentChannel;\\n \\n     const SUBSCRIBE_PAGE_URI = \\\"chrome://browser/content/feeds/subscribe.xhtml\\\";\\n     var uri = makeURI(SUBSCRIBE_PAGE_URI);\\n@@ -794,9 +777,7 @@ FeedWriter.prototype = {\\n   _document: null,\\n   _feedURI: null,\\n \\n-  /**\\n-   * See nsIFeedWriter\\n-   */\\n+  // nsIFeedWriter\\n   init: function FW_init(aWindow) {\\n     // Explicitly wrap |window| in an XPCNativeWrapper to make sure\\n     // it's a real native object! This will throw an exception if we\\n@@ -821,9 +802,6 @@ FeedWriter.prototype = {\\n     prefs.addObserver(PREF_SELECTED_APP, this, false);\\n   },\\n \\n-  /**\\n-   * See nsIFeedWriter\\n-   */\\n   writeContent: function FW_writeContent() {\\n     if (!this._window)\\n       return;\\n@@ -833,7 +811,7 @@ FeedWriter.prototype = {\\n       var container = this._getContainer();\\n       if (!container)\\n         return;\\n-      \\n+\\n       this._setTitleText(container);\\n       this._setTitleImage(container);\\n       this._writeFeedContent(container);\\n@@ -843,9 +821,6 @@ FeedWriter.prototype = {\\n     }\\n   },\\n \\n-  /**\\n-   * See nsIFeedWriter\\n-   */\\n   close: function FW_close() {\\n     this._document\\n         .getElementById(\\\"handlersMenuPopup\\\")\\n@@ -855,9 +830,8 @@ FeedWriter.prototype = {\\n         .removeEventListener(\\\"command\\\", this, false);\\n     this._document = null;\\n     this._window = null;\\n-    var prefs =   \\n-        Cc[\\\"@mozilla.org/preferences-service;1\\\"].\\n-        getService(Ci.nsIPrefBranch2);\\n+    var prefs = Cc[\\\"@mozilla.org/preferences-service;1\\\"].\\n+                getService(Ci.nsIPrefBranch2);\\n     prefs.removeObserver(PREF_SELECTED_ACTION, this);\\n     prefs.removeObserver(PREF_SELECTED_READER, this);\\n     prefs.removeObserver(PREF_SELECTED_WEB, this);\\n@@ -868,15 +842,15 @@ FeedWriter.prototype = {\\n     this._selectedApplicationItemWrapped = null;\\n     this._defaultSystemReaderItemWrapped = null;\\n     this._FeedURI = null;\\n-    var historySvc = Cc[NH_CONTRACTID].getService(Ci.nsINavHistoryService);\\n+    var historySvc = Cc[\\\"@mozilla.org/browser/nav-history-service;1\\\"].\\n+                     getService(Ci.nsINavHistoryService);\\n     historySvc.removeObserver(this);\\n   },\\n \\n   _removeFeedFromCache: function FW__removeFeedFromCache() {\\n     if (this._feedURI) {\\n-      var feedService = \\n-          Cc[\\\"@mozilla.org/browser/feeds/result-service;1\\\"].\\n-          getService(Ci.nsIFeedResultService);\\n+      var feedService = Cc[\\\"@mozilla.org/browser/feeds/result-service;1\\\"].\\n+                        getService(Ci.nsIFeedResultService);\\n       feedService.removeFeedResult(this._feedURI);\\n       this._feedURI = null;\\n     }\\n@@ -884,9 +858,8 @@ FeedWriter.prototype = {\\n \\n   subscribe: function FW_subscribe() {\\n     // Subscribe to the feed using the selected handler and save prefs\\n-    var prefs =   \\n-        Cc[\\\"@mozilla.org/preferences-service;1\\\"].\\n-        getService(Ci.nsIPrefBranch);\\n+    var prefs = Cc[\\\"@mozilla.org/preferences-service;1\\\"].\\n+                getService(Ci.nsIPrefBranch);\\n     var defaultHandler = \\\"reader\\\";\\n     var useAsDefault = this._document.getElementById(\\\"alwaysUse\\\")\\n                                      .getAttribute(\\\"checked\\\");\\n@@ -913,16 +886,14 @@ FeedWriter.prototype = {\\n       prefs.setComplexValue(PREF_SELECTED_WEB, Ci.nsISupportsString,\\n                             supportsString);\\n \\n-      var wccr = \\n-        Cc[\\\"@mozilla.org/embeddor.implemented/web-content-handler-registrar;1\\\"].\\n-        getService(Ci.nsIWebContentConverterService);\\n+      var wccr = Cc[\\\"@mozilla.org/embeddor.implemented/web-content-handler-registrar;1\\\"].\\n+                 getService(Ci.nsIWebContentConverterService);\\n       var handler = wccr.getWebContentHandlerByURI(TYPE_MAYBE_FEED, webURI);\\n       if (handler) {\\n         if (useAsDefault)\\n           wccr.setAutoHandler(TYPE_MAYBE_FEED, handler);\\n \\n-        this._window.location.href =\\n-          handler.getHandlerURI(this._window.location.href);\\n+        this._window.location.href = handler.getHandlerURI(this._window.location.href);\\n       }\\n     }\\n     else {\\n@@ -947,8 +918,7 @@ FeedWriter.prototype = {\\n \\n       // Pull the title and subtitle out of the document\\n       var feedTitle = this._document.getElementById(TITLE_ID).textContent;\\n-      var feedSubtitle =\\n-        this._document.getElementById(SUBTITLE_ID).textContent;\\n+      var feedSubtitle = this._document.getElementById(SUBTITLE_ID).textContent;\\n       feedService.addToClientReader(this._window.location.href,\\n                                     feedTitle, feedSubtitle);\\n     }\\n@@ -963,9 +933,7 @@ FeedWriter.prototype = {\\n       prefs.setCharPref(PREF_SELECTED_ACTION, \\\"ask\\\");\\n   },\\n \\n-  /**\\n-   * See nsIObserver\\n-   */\\n+  // nsIObserver\\n   observe: function FW_observe(subject, topic, data) {\\n     if (!this._window) {\\n       // this._window is null unless this.write was called with a trusted\\n@@ -1019,9 +987,7 @@ FeedWriter.prototype = {\\n     return false;\\n   },\\n \\n-  /**\\n-   * See nsINavHistoryService\\n-   */\\n+   // nsINavHistoryService\\n    onPageChanged: function FW_onPageChanged(aURI, aWhat, aValue) {\\n      if (aWhat == Ci.nsINavHistoryObserver.ATTRIBUTE_FAVICON) {\\n        // Go through the readers menu and look for the corresponding\\n@@ -1046,80 +1012,24 @@ FeedWriter.prototype = {\\n    onClearHistory: function() { },\\n    onPageExpired: function() { },\\n \\n-  /**\\n-   * See nsIClassInfo\\n-   */\\n-  getInterfaces: function WCCR_getInterfaces(countRef) {\\n-    var interfaces = \\n-        [Ci.nsIFeedWriter, Ci.nsIClassInfo, Ci.nsISupports];\\n+  // nsIClassInfo\\n+  getInterfaces: function FW_getInterfaces(countRef) {\\n+    var interfaces = [Ci.nsIFeedWriter, Ci.nsIClassInfo, Ci.nsISupports];\\n     countRef.value = interfaces.length;\\n     return interfaces;\\n   },\\n-  getHelperForLanguage: function WCCR_getHelperForLanguage(language) {\\n-    return null;\\n-  },\\n-  contractID: FW_CONTRACTID,\\n-  classDescription: FW_CLASSNAME,\\n-  classID: FW_CLASSID,\\n+  getHelperForLanguage: function FW_getHelperForLanguage(language) null,\\n+  contractID: \\\"@mozilla.org/browser/feeds/result-writer;1\\\",\\n+  classDescription: \\\"Feed Writer\\\",\\n+  classID: Components.ID(\\\"{49bb6593-3aff-4eb3-a068-2712c28bd58e}\\\"),\\n   implementationLanguage: Ci.nsIProgrammingLanguage.JAVASCRIPT,\\n   flags: Ci.nsIClassInfo.DOM_OBJECT,\\n-\\n-  QueryInterface: function FW_QueryInterface(iid) {\\n-    if (iid.equals(Ci.nsIFeedWriter) ||\\n-        iid.equals(Ci.nsIClassInfo) ||\\n-        iid.equals(Ci.nsIDOMEventListener) ||\\n-        iid.equals(Ci.nsIObserver) ||\\n-        iid.equals(Ci.nsINavHistoryObserver) ||\\n-        iid.equals(Ci.nsISupports))\\n-      return this;\\n-    throw Cr.NS_ERROR_NO_INTERFACE;\\n-  }\\n-};\\n-\\n-var Module = {\\n-  QueryInterface: function M_QueryInterface(iid) {\\n-    if (iid.equals(Ci.nsIModule) ||\\n-        iid.equals(Ci.nsISupports))\\n-      return this;\\n-    throw Cr.NS_ERROR_NO_INTERFACE;\\n-  },\\n-\\n-  getClassObject: function M_getClassObject(cm, cid, iid) {\\n-    if (!iid.equals(Ci.nsIFactory))\\n-      throw Cr.NS_ERROR_NOT_IMPLEMENTED;\\n-    \\n-    if (cid.equals(FW_CLASSID))\\n-      return new GenericComponentFactory(FeedWriter);\\n-\\n-    throw Cr.NS_ERROR_NO_INTERFACE;\\n-  },\\n-  \\n-  registerSelf: function M_registerSelf(cm, file, location, type) {\\n-    var cr = cm.QueryInterface(Ci.nsIComponentRegistrar);\\n-    \\n-    cr.registerFactoryLocation(FW_CLASSID, FW_CLASSNAME, FW_CONTRACTID,\\n-                               file, location, type);\\n-    \\n-    var catman = \\n-        Cc[\\\"@mozilla.org/categorymanager;1\\\"].\\n-        getService(Ci.nsICategoryManager);\\n-    catman.addCategoryEntry(\\\"JavaScript global constructor\\\",\\n-                            \\\"BrowserFeedWriter\\\", FW_CONTRACTID, true, true);\\n-  },\\n-\\n-  unregisterSelf: function M_unregisterSelf(cm, location, type) {\\n-    var cr = cm.QueryInterface(Ci.nsIComponentRegistrar);\\n-    cr.unregisterFactoryLocation(FW_CLASSID, location);\\n-  },\\n-\\n-  canUnload: function M_canUnload(cm) {\\n-    return true;\\n-  }\\n+  _xpcom_categories: [{ category: \\\"JavaScript global constructor\\\",\\n+                        entry: \\\"BrowserFeedWriter\\\"}],\\n+  QueryInterface: XPCOMUtils.generateQI([Ci.nsIFeedWriter, Ci.nsIClassInfo,\\n+                                         Ci.nsIDOMEventListener, Ci.nsIObserver,\\n+                                         Ci.nsINavHistoryObserver])\\n };\\n \\n-function NSGetModule(cm, file) {\\n-  return Module;\\n-}\\n-\\n-#include ../../../../toolkit/content/debug.js\\n-#include GenericFactory.js\\n+function NSGetModule(cm, file)\\n+  XPCOMUtils.generateModule([FeedWriter]);\\n\""}