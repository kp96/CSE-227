{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas01eb769\""},"diff":"\"01eb769 Backing out bug 389188 due to potential private bytes increase on talos\\ndiff --git a/modules/libpr0n/build/Makefile.in b/modules/libpr0n/build/Makefile.in\\nindex eec0fcf..4a851f2 100644\\n--- a/modules/libpr0n/build/Makefile.in\\n+++ b/modules/libpr0n/build/Makefile.in\\n@@ -58,9 +58,6 @@ REQUIRES\\t= xpcom \\\\\\n \\t\\t  necko \\\\\\n \\t\\t  nkcache \\\\\\n \\t\\t  gfx \\\\\\n-\\t\\t  caps \\\\\\n-\\t\\t  xpconnect \\\\\\n-\\t\\t  js \\\\\\n \\t\\t  $(JPEG_REQUIRES) \\\\\\n \\t\\t  $(PNG_REQUIRES) \\\\\\n \\t\\t  $(ZLIB_REQUIRES) \\\\\\ndiff --git a/modules/libpr0n/public/imgIRequest.idl b/modules/libpr0n/public/imgIRequest.idl\\nindex 11b32a0..d9e053f 100644\\n--- a/modules/libpr0n/public/imgIRequest.idl\\n+++ b/modules/libpr0n/public/imgIRequest.idl\\n@@ -43,7 +43,6 @@\\n interface imgIContainer;\\n interface imgIDecoderObserver;\\n interface nsIURI;\\n-interface nsIPrincipal;\\n \\n /**\\n  * imgIRequest interface\\n@@ -52,7 +51,7 @@ interface nsIPrincipal;\\n  * @version 0.1\\n  * @see imagelib2\\n  */\\n-[scriptable, uuid(a297d3fa-5e0c-4e59-9f30-a01c9d4f3f8b)]\\n+[scriptable, uuid(ccf705f6-1dd1-11b2-82ef-e18eccf7f7ec)]\\n interface imgIRequest : nsIRequest\\n {\\n   /**\\n@@ -81,11 +80,6 @@ interface imgIRequest : nsIRequest\\n    */\\n   readonly attribute unsigned long imageStatus;\\n \\n-  /**\\n-   * The URI the image load was started with.  Note that this might not be the\\n-   * actual URI for the image (e.g. if HTTP redirects happened during the\\n-   * load).\\n-   */\\n   readonly attribute nsIURI URI;\\n \\n   readonly attribute imgIDecoderObserver decoderObserver;\\n@@ -99,10 +93,5 @@ interface imgIRequest : nsIRequest\\n    * for this image load.\\n    */\\n   imgIRequest clone(in imgIDecoderObserver aObserver);\\n-\\n-  /**\\n-   * The principal gotten from the channel the image was loaded from.\\n-   */\\n-  readonly attribute nsIPrincipal imagePrincipal;\\n };\\n \\ndiff --git a/modules/libpr0n/src/Makefile.in b/modules/libpr0n/src/Makefile.in\\nindex 2f85dbf..5db38f8 100644\\n--- a/modules/libpr0n/src/Makefile.in\\n+++ b/modules/libpr0n/src/Makefile.in\\n@@ -56,9 +56,6 @@ REQUIRES\\t= xpcom \\\\\\n \\t\\t  gfx \\\\\\n \\t\\t  thebes \\\\\\n \\t\\t  cairo \\\\\\n-\\t\\t  caps \\\\\\n-\\t\\t  xpconnect \\\\\\n-\\t\\t  js \\\\\\n \\t\\t  $(NULL)\\n \\n CPPSRCS\\t\\t= \\\\\\ndiff --git a/modules/libpr0n/src/imgRequest.cpp b/modules/libpr0n/src/imgRequest.cpp\\nindex 1b2f406..3e26715 100644\\n--- a/modules/libpr0n/src/imgRequest.cpp\\n+++ b/modules/libpr0n/src/imgRequest.cpp\\n@@ -61,7 +61,6 @@\\n #include \\\"nsIProxyObjectManager.h\\\"\\n #include \\\"nsIServiceManager.h\\\"\\n #include \\\"nsISupportsPrimitives.h\\\"\\n-#include \\\"nsIScriptSecurityManager.h\\\"\\n \\n #include \\\"nsString.h\\\"\\n #include \\\"nsXPIDLString.h\\\"\\n@@ -308,17 +307,6 @@ nsresult imgRequest::GetURI(nsIURI **aURI)\\n   return NS_ERROR_FAILURE;\\n }\\n \\n-nsresult imgRequest::GetPrincipal(nsIPrincipal **aPrincipal)\\n-{\\n-  LOG_FUNC(gImgLog, \\\"imgRequest::GetPrincipal\\\");\\n-\\n-  if (mPrincipal) {\\n-    NS_ADDREF(*aPrincipal = mPrincipal);\\n-  }\\n-\\n-  return NS_ERROR_FAILURE;\\n-}\\n-\\n void imgRequest::RemoveFromCache()\\n {\\n   LOG_SCOPE(gImgLog, \\\"imgRequest::RemoveFromCache\\\");\\n@@ -611,19 +599,7 @@ NS_IMETHODIMP imgRequest::OnStartRequest(nsIRequest *aRequest, nsISupports *ctxt\\n     proxy->OnStartRequest(aRequest, ctxt);\\n   }\\n \\n-  /* Get our principal */\\n   nsCOMPtr<nsIChannel> chan(do_QueryInterface(aRequest));\\n-  if (chan) {\\n-    nsCOMPtr<nsIScriptSecurityManager> secMan =\\n-      do_GetService(\\\"@mozilla.org/scriptsecuritymanager;1\\\");\\n-    if (secMan) {\\n-      nsresult rv = secMan->GetChannelPrincipal(chan,\\n-                                                getter_AddRefs(mPrincipal));\\n-      if (NS_FAILED(rv)) {\\n-        return rv;\\n-      }\\n-    }\\n-  }\\n \\n   /* get the expires info */\\n   if (mCacheEntry) {\\ndiff --git a/modules/libpr0n/src/imgRequest.h b/modules/libpr0n/src/imgRequest.h\\nindex 67fbf83..3de9607 100644\\n--- a/modules/libpr0n/src/imgRequest.h\\n+++ b/modules/libpr0n/src/imgRequest.h\\n@@ -52,7 +52,6 @@\\n #include \\\"nsIProperties.h\\\"\\n #include \\\"nsIStreamListener.h\\\"\\n #include \\\"nsIURI.h\\\"\\n-#include \\\"nsIPrincipal.h\\\"\\n \\n #include \\\"nsCategoryCache.h\\\"\\n #include \\\"nsCOMPtr.h\\\"\\n@@ -122,7 +121,6 @@ private:\\n   inline nsresult GetResultFromImageStatus(PRUint32 aStatus) const;\\n   void Cancel(nsresult aStatus);\\n   nsresult GetURI(nsIURI **aURI);\\n-  nsresult GetPrincipal(nsIPrincipal **aPrincipal);\\n   void RemoveFromCache();\\n   inline const char *GetMimeType() const {\\n     return mContentType.get();\\n@@ -153,7 +151,6 @@ public:\\n private:\\n   nsCOMPtr<nsIRequest> mRequest;\\n   nsCOMPtr<nsIURI> mURI;\\n-  nsCOMPtr<nsIPrincipal> mPrincipal;\\n   nsCOMPtr<imgIContainer> mImage;\\n   nsCOMPtr<imgIDecoder> mDecoder;\\n   nsCOMPtr<nsIProperties> mProperties;\\ndiff --git a/modules/libpr0n/src/imgRequestProxy.cpp b/modules/libpr0n/src/imgRequestProxy.cpp\\nindex 23e93ac..f960a28 100644\\n--- a/modules/libpr0n/src/imgRequestProxy.cpp\\n+++ b/modules/libpr0n/src/imgRequestProxy.cpp\\n@@ -342,15 +342,6 @@ NS_IMETHODIMP imgRequestProxy::Clone(imgIDecoderObserver* aObserver,\\n   return NS_OK;\\n }\\n \\n-/* readonly attribute nsIPrincipal imagePrincipal; */\\n-NS_IMETHODIMP imgRequestProxy::GetImagePrincipal(nsIPrincipal **aPrincipal)\\n-{\\n-  if (!mOwner)\\n-    return NS_ERROR_FAILURE;\\n-\\n-  return mOwner->GetPrincipal(aPrincipal);\\n-}\\n-\\n /** nsISupportsPriority methods **/\\n \\n NS_IMETHODIMP imgRequestProxy::GetPriority(PRInt32 *priority)\\n\""}