{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas8be4339\""},"diff":"\"8be4339 Adding tests.\\ndiff --git a/docshell/test/browser/Makefile.in b/docshell/test/browser/Makefile.in\\nindex 99fb3c4..6b40799 100644\\n--- a/docshell/test/browser/Makefile.in\\n+++ b/docshell/test/browser/Makefile.in\\n@@ -45,6 +45,8 @@ include $(topsrcdir)/config/rules.mk\\n \\n _BROWSER_TEST_FILES =\\t\\\\\\n \\t\\tbrowser_bug349769.js \\\\\\n+\\t\\tbrowser_bug388121-1.js \\\\\\n+\\t\\tbrowser_bug388121-2.js \\\\\\n \\t\\t$(NULL)\\n \\n libs:: $(_BROWSER_TEST_FILES)\\ndiff --git a/docshell/test/browser/browser_bug349769.js b/docshell/test/browser/browser_bug349769.js\\nindex 14a7536..eecf6bf 100644\\n--- a/docshell/test/browser/browser_bug349769.js\\n+++ b/docshell/test/browser/browser_bug349769.js\\n@@ -11,6 +11,7 @@ function test() {\\n \\n   function testLoad(event) {\\n     newBrowser.removeEventListener(\\\"load\\\", testLoad, true);\\n+    is (event.target, newBrowser.contentDocument, \\\"Unexpected target\\\");\\n     var prin = newBrowser.contentDocument.nodePrincipal;\\n     isnot(prin, null, \\\"Loaded principal must not be null when adding \\\" + uri);\\n     isnot(prin, undefined, \\\"Loaded principal must not be undefined when loading \\\" + uri);\\ndiff --git a/docshell/test/browser/browser_bug388121-1.js b/docshell/test/browser/browser_bug388121-1.js\\nnew file mode 100644\\nindex 0000000..54c3140\\n--- /dev/null\\n+++ b/docshell/test/browser/browser_bug388121-1.js\\n@@ -0,0 +1,27 @@\\n+function test() {\\n+  waitForExplicitFinish(); \\n+\\n+  var newTab;\\n+  var newBrowser;\\n+  const secMan = Components.classes[\\\"@mozilla.org/scriptsecuritymanager;1\\\"].\\n+                   getService(Components.interfaces.nsIScriptSecurityManager);\\n+\\n+  function testLoad(event) {\\n+    newBrowser.removeEventListener(\\\"load\\\", testLoad, true);\\n+    is (event.target, newBrowser.contentDocument, \\\"Unexpected target\\\");\\n+    var prin = newBrowser.contentDocument.nodePrincipal;\\n+    isnot(prin, null, \\\"Loaded principal must not be null\\\");\\n+    isnot(prin, undefined, \\\"Loaded principal must not be undefined\\\");\\n+    is(secMan.isSystemPrincipal(prin), false,\\n+       \\\"Loaded principal must not be system\\\");\\n+    gBrowser.removeTab(newTab);\\n+\\n+    finish();\\n+  }\\n+\\n+  newTab = gBrowser.addTab();\\n+  newBrowser = gBrowser.getBrowserForTab(newTab);\\n+  newBrowser.contentWindow.location.href = \\\"about:blank\\\"\\n+  newBrowser.addEventListener(\\\"load\\\", testLoad, true);\\n+}\\n+\\ndiff --git a/docshell/test/browser/browser_bug388121-2.js b/docshell/test/browser/browser_bug388121-2.js\\nnew file mode 100644\\nindex 0000000..5f5d8c4\\n--- /dev/null\\n+++ b/docshell/test/browser/browser_bug388121-2.js\\n@@ -0,0 +1,59 @@\\n+function test() {\\n+  waitForExplicitFinish(); \\n+\\n+  var w;\\n+  const secMan = Components.classes[\\\"@mozilla.org/scriptsecuritymanager;1\\\"].\\n+                   getService(Components.interfaces.nsIScriptSecurityManager);\\n+  var iteration = 1;\\n+  const uris = [\\\"\\\", \\\"about:blank\\\"];\\n+  var uri;\\n+  var origDoc;\\n+\\n+  function testLoad() {\\n+    if (w.document == origDoc) {\\n+      // Go back to polling\\n+      setTimeout(testLoad, 10);\\n+      return;\\n+    }\\n+    var prin = w.document.nodePrincipal;\\n+    isnot(prin, null, \\\"Loaded principal must not be null when adding \\\" + uri);\\n+    isnot(prin, undefined, \\\"Loaded principal must not be undefined when loading \\\" + uri);\\n+    is(secMan.isSystemPrincipal(prin), false,\\n+       \\\"Loaded principal must not be system when loading \\\" + uri);\\n+    w.close();\\n+\\n+    if (iteration == uris.length) {\\n+      finish();\\n+    } else {\\n+      ++iteration;\\n+      doTest();\\n+    }\\n+  }\\n+\\n+  function doTest() {\\n+    uri = uris[iteration - 1];\\n+    w = window.open(uri, \\\"_blank\\\", \\\"width=10,height=10\\\");\\n+    var prin = w.document.nodePrincipal;\\n+    if (!uri) {\\n+      uri = undefined;\\n+    }\\n+    isnot(prin, null, \\\"Forced principal must not be null when loading \\\" + uri);\\n+    isnot(prin, undefined,\\n+          \\\"Forced principal must not be undefined when loading \\\" + uri);\\n+    is(secMan.isSystemPrincipal(prin), false,\\n+       \\\"Forced principal must not be system when loading \\\" + uri);\\n+    if (uri == undefined) {\\n+      // No actual load here, so just move along.\\n+      w.close();\\n+      ++iteration;\\n+      doTest();\\n+    } else {\\n+      origDoc = w.document;\\n+      // Need to poll, because load listeners on the content window won't\\n+      // survive the load.\\n+      setTimeout(testLoad, 10);\\n+    }\\n+  }\\n+\\n+  doTest();\\n+}\\n\""}