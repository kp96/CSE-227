{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bascbf9643\""},"diff":"\"cbf9643 Bug 384147 - \\\"tabbing out list item doesn't merge with next list item at same depth\\\" [p=mfenniak-moz@mathieu.fenniak.net (Mathieu Fenniak) r=glazou sr=roc a1.9=roc]\\ndiff --git a/editor/composer/test/Makefile.in b/editor/composer/test/Makefile.in\\nindex d416fa5..c6a0747 100644\\n--- a/editor/composer/test/Makefile.in\\n+++ b/editor/composer/test/Makefile.in\\n@@ -46,6 +46,7 @@ include $(topsrcdir)/config/rules.mk\\n \\n _TEST_FILES = \\\\\\n \\t\\ttest_bug348497.html \\\\\\n+\\t\\ttest_bug384147.html \\\\\\n \\t\\t$(NULL)\\n \\n libs:: $(_TEST_FILES)\\ndiff --git a/editor/composer/test/test_bug384147.html b/editor/composer/test/test_bug384147.html\\nnew file mode 100644\\nindex 0000000..96c9e9c\\n--- /dev/null\\n+++ b/editor/composer/test/test_bug384147.html\\n@@ -0,0 +1,210 @@\\n+<!DOCTYPE HTML>\\n+<html>\\n+<!--\\n+https://bugzilla.mozilla.org/show_bug.cgi?id=384147\\n+-->\\n+<head>\\n+  <title>Test for Bug 384147</title>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/MochiKit/MochiKit.js\\\"></script>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/tests/SimpleTest/SimpleTest.js\\\"></script>\\n+  <script type=\\\"application/javascript\\\" src=\\\"/tests/SimpleTest/EventUtils.js\\\"></script>\\n+  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/tests/SimpleTest/test.css\\\" />\\n+</head>\\n+<body>\\n+<a target=\\\"_blank\\\" href=\\\"https://bugzilla.mozilla.org/show_bug.cgi?id=384147\\\">Mozilla Bug 384147</a>\\n+<p id=\\\"display\\\"></p>\\n+<div id=\\\"content\\\" style=\\\"display: block\\\">\\n+<div contentEditable id=\\\"editor\\\"></div>\\n+</div>\\n+<pre id=\\\"test\\\">\\n+<script class=\\\"testbody\\\" type=\\\"text/javascript;version=1.7\\\">\\n+\\n+/** Test for Bug 384147 **/\\n+\\n+SimpleTest.waitForExplicitFinish();\\n+\\n+// netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\\n+\\n+var editor = document.getElementById(\\\"editor\\\");\\n+\\n+editor.innerHTML = \\\"<ol><li>Item 1</li><li>Item 2</li><ol><li>Item 3</li></ol></ol><ul><li>Item 4</li><li>Item 5</li></ul>\\\";\\n+editor.focus();\\n+\\n+// I'm not sure why this can't be run directly, but it seems like the focus\\n+// hasn't yet been established properly.  Running it without setTimeout(..., 0)\\n+// results in the key events doing nothing.\\n+setTimeout(test, 0);\\n+\\n+function test() {\\n+\\n+  var sel = window.getSelection();\\n+\\n+  // Test the affect that the tab key has on list items.  Each test is\\n+  // documented with the initial state of the list on the left, and the\\n+  // expected state of the list on the right.  {\\\\t} indicates the list item\\n+  // that will be indented.  {\\\\st} indicates that a shift-tab will be simulated\\n+  // on that list item, outdenting it.\\n+  //\\n+  // Note: any test failing will likely result in all following tests failing\\n+  // as well, since each test depends on the document being in a given state.\\n+  // Unfortunately, due to the problems getting document focus and key events\\n+  // to fire consistently, it's difficult to reset state between tests.\\n+  // If there are test failures here, only debug the first test failure.\\n+\\n+  // *** test 1 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //  2. {\\\\t}Item 2                     1. Item 2\\n+  //    1. Item 3                       2. Item 3\\n+  //  * Item 4                        * Item 4\\n+  //  * Item 5                        * Item 5\\n+  sel.removeAllRanges();\\n+  sel.selectAllChildren(editor.getElementsByTagName(\\\"li\\\")[1]);\\n+  document.execCommand(\\\"indent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><li>Item 2</li><li>Item 3</li></ol></ol><ul><li>Item 4</li><li>Item 5</li></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 1\\\");\\n+\\n+  //  *** test 2 ***\\n+  //  1. Item 1                     1. Item 1\\n+  //    1. Item 2                     1. Item 2\\n+  //    2. {\\\\t}Item 3                   1. Item 3\\n+  //  * Item 4                        * Item 4\\n+  //  * Item 5                        * Item 5\\n+  sel.removeAllRanges();\\n+  sel.selectAllChildren(editor.getElementsByTagName(\\\"li\\\")[2]);\\n+  document.execCommand(\\\"indent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><li>Item 2</li><ol><li>Item 3</li></ol></ol></ol><ul><li>Item 4</li><li>Item 5</li></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 2\\\");\\n+\\n+  //  *** test 3 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //    1. Item 2                       1. Item 2\\n+  //      1. {\\\\st}Item 3                2. Item 3\\n+  //  * Item 4                        * Item 4\\n+  //  * Item 5                        * Item 5\\n+  document.execCommand(\\\"outdent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><li>Item 2</li><li>Item 3</li></ol></ol><ul><li>Item 4</li><li>Item 5</li></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 3\\\");\\n+\\n+  //  *** test 4 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //    1. Item 2                       1. Item 2\\n+  //    2. {\\\\st}Item 3                2. Item 3\\n+  //  * Item 4                        * Item 4\\n+  //  * Item 5                        * Item 5\\n+  document.execCommand(\\\"outdent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><li>Item 2</li></ol><li>Item 3</li></ol><ul><li>Item 4</li><li>Item 5</li></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 4\\\");\\n+\\n+  //  *** test 5 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //    1. {\\\\st}Item 2                2. Item 2\\n+  //  2. Item 3                       3. Item 3\\n+  //  * Item 4                        * Item 4\\n+  //  * Item 5                        * Item 5\\n+  sel.removeAllRanges();\\n+  sel.selectAllChildren(editor.getElementsByTagName(\\\"li\\\")[1]);\\n+  document.execCommand(\\\"outdent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><li>Item 2</li><li>Item 3</li></ol><ul><li>Item 4</li><li>Item 5</li></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 5\\\");\\n+\\n+  //  *** test 6 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //  2. {\\\\t}Item 2                     1. Item 2\\n+  //  3. Item 3                       2. Item 3\\n+  //  * Item 4                        * Item 4\\n+  //  * Item 5                        * Item 5\\n+  document.execCommand(\\\"indent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><li>Item 2</li></ol><li>Item 3</li></ol><ul><li>Item 4</li><li>Item 5</li></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 6\\\");\\n+\\n+  //  *** test 7 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //    1. Item 2                       1. Item 2\\n+  //  2. {\\\\t}Item 3                     2. Item 3\\n+  //  * Item 4                        * Item 4\\n+  //  * Item 5                        * Item 5\\n+  sel.removeAllRanges();\\n+  sel.selectAllChildren(editor.getElementsByTagName(\\\"li\\\")[2]);\\n+  document.execCommand(\\\"indent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><li>Item 2</li><li>Item 3</li></ol></ol><ul><li>Item 4</li><li>Item 5</li></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 7\\\");\\n+\\n+  // That covers the basics of merging lists on indent and outdent.\\n+  // We also want to check that ul / ol lists won't be merged together,\\n+  // since they're different types of lists.\\n+  //  *** test 8 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //    1. Item 2                       1. Item 2\\n+  //    2. Item 3                       2. Item 3\\n+  //  * {\\\\t}Item 4                      * Item 4\\n+  //  * Item 5                        * Item 5\\n+  sel.removeAllRanges();\\n+  sel.selectAllChildren(editor.getElementsByTagName(\\\"li\\\")[3]);\\n+  document.execCommand(\\\"indent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><li>Item 2</li><li>Item 3</li></ol></ol><ul><ul><li>Item 4</li></ul><li>Item 5</li></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 8\\\");\\n+\\n+  // Better test merging with <ul> rather than <ol> too.\\n+  //  *** test 9 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //    1. Item 2                       1. Item 2\\n+  //    2. Item 3                       2. Item 3\\n+  //    * Item 4                        * Item 4\\n+  //  * {\\\\t}Item 5                      * Item 5\\n+  sel.removeAllRanges();\\n+  sel.selectAllChildren(editor.getElementsByTagName(\\\"li\\\")[4]);\\n+  document.execCommand(\\\"indent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><li>Item 2</li><li>Item 3</li></ol></ol><ul><ul><li>Item 4</li><li>Item 5</li></ul></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 9\\\");\\n+\\n+  // Same test as test 8, but with outdent rather than indent.\\n+  //  *** test 10 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //    1. Item 2                       1. Item 2\\n+  //    2. Item 3                       2. Item 3\\n+  //    * {\\\\st}Item 4                 * Item 4\\n+  //    * Item 5                        * Item 5\\n+  sel.removeAllRanges();\\n+  sel.selectAllChildren(editor.getElementsByTagName(\\\"li\\\")[3]);\\n+  document.execCommand(\\\"outdent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><li>Item 2</li><li>Item 3</li></ol></ol><ul><li>Item 4</li><ul><li>Item 5</li></ul></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 10\\\");\\n+\\n+  // Test indenting multiple items at once.  Hold down \\\"shift\\\" and select\\n+  // upwards to get all the <ol> items and the first <ul> item.\\n+  //  *** test 11 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //    1. {\\\\t}Item 2                     1. Item 2\\n+  //    2. {\\\\t}Item 3                     2. Item 3\\n+  //  * {\\\\t}Item 4                      * Item 4\\n+  //    * Item 5                        * Item 5\\n+  sel.removeAllRanges();\\n+  var range = document.createRange();\\n+  range.setStart(editor.getElementsByTagName(\\\"li\\\")[1], 0);\\n+  range.setEnd(editor.getElementsByTagName(\\\"li\\\")[3], editor.getElementsByTagName(\\\"li\\\")[3].childNodes.length);\\n+  sel.addRange(range);\\n+  document.execCommand(\\\"indent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><ol><li>Item 2</li><li>Item 3</li></ol></ol></ol><ul><ul><li>Item 4</li><li>Item 5</li></ul></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 11\\\");\\n+\\n+  // Test outdenting multiple items at once.  Selection is already ready...\\n+  //  *** test 12 ***\\n+  //  1. Item 1                       1. Item 1\\n+  //      1. {\\\\st}Item 2                1. Item 2\\n+  //      2. {\\\\st}Item 3                2. Item 3\\n+  //    * {\\\\st}Item 4                 * Item 4\\n+  //    * Item 5                        * Item 5\\n+  document.execCommand(\\\"outdent\\\", false, null);\\n+  ok(editor.innerHTML == \\\"<ol><li>Item 1</li><ol><li>Item 2</li><li>Item 3</li></ol></ol><ul><li>Item 4</li><ul><li>Item 5</li></ul></ul>\\\",\\n+    \\\"html output doesn't match expected value in test 12\\\");\\n+\\n+  SimpleTest.finish();\\n+}\\n+\\n+\\n+\\n+</script>\\n+</pre>\\n+</body>\\n+</html>\\n+\\ndiff --git a/editor/libeditor/html/nsHTMLEditRules.cpp b/editor/libeditor/html/nsHTMLEditRules.cpp\\nindex 15571df..c38997a 100644\\n--- a/editor/libeditor/html/nsHTMLEditRules.cpp\\n+++ b/editor/libeditor/html/nsHTMLEditRules.cpp\\n@@ -3744,14 +3744,49 @@ nsHTMLEditRules::WillHTMLIndent(nsISelection *aSelection, PRBool *aCancel, PRBoo\\n     // some logic for putting list items into nested lists...\\n     if (nsHTMLEditUtils::IsList(curParent))\\n     {\\n+      sibling = nsnull;\\n+\\n+      // Check for whether we should join a list that follows curNode.\\n+      // We do this if the next element is a list, and the list is of the\\n+      // same type (li/ol) as curNode was a part it.\\n+      mHTMLEditor->GetNextHTMLSibling(curNode, address_of(sibling));\\n+      if (sibling && nsHTMLEditUtils::IsList(sibling))\\n+      {\\n+        nsAutoString curListTag, siblingListTag;\\n+        nsEditor::GetTagString(curParent, curListTag);\\n+        nsEditor::GetTagString(sibling, siblingListTag);\\n+        if (curListTag == siblingListTag)\\n+        {\\n+          res = mHTMLEditor->MoveNode(curNode, sibling, 0);\\n+          if (NS_FAILED(res)) return res;\\n+          continue;\\n+        }\\n+      }\\n+\\n+      // Check for whether we should join a list that preceeds curNode.\\n+      // We do this if the previous element is a list, and the list is of\\n+      // the same type (li/ol) as curNode was a part of.\\n+      mHTMLEditor->GetPriorHTMLSibling(curNode, address_of(sibling));\\n+      if (sibling && nsHTMLEditUtils::IsList(sibling))\\n+      {\\n+        nsAutoString curListTag, siblingListTag;\\n+        nsEditor::GetTagString(curParent, curListTag);\\n+        nsEditor::GetTagString(sibling, siblingListTag);\\n+        if (curListTag == siblingListTag)\\n+        {\\n+          res = mHTMLEditor->MoveNode(curNode, sibling, -1);\\n+          if (NS_FAILED(res)) return res;\\n+          continue;\\n+        }\\n+      }\\n+\\n+      sibling = nsnull;\\n+\\n       // check to see if curList is still appropriate.  Which it is if\\n       // curNode is still right after it in the same list.\\n       if (curList)\\n-      {\\n-        sibling = nsnull;\\n         mHTMLEditor->GetPriorHTMLSibling(curNode, address_of(sibling));\\n-      }\\n-      \\n+\\n       if (!curList || (sibling && sibling != curList) )\\n       {\\n         nsAutoString listTag;\\n\""}