{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas52c026d\""},"diff":"\"52c026d Bug 396758: taking the patch out as it broke the test cases.\\ndiff --git a/js/src/jsdbgapi.c b/js/src/jsdbgapi.c\\nindex 0d9d70d..6d2f533 100644\\n--- a/js/src/jsdbgapi.c\\n+++ b/js/src/jsdbgapi.c\\n@@ -1643,21 +1643,16 @@ JS_FlagScriptFilenamePrefix(JSRuntime *rt, const char *prefix, uint32 flags)\\n JS_PUBLIC_API(JSBool)\\n JS_IsSystemObject(JSContext *cx, JSObject *obj)\\n {\\n-    return STOBJ_IS_SYSTEM(obj);\\n+    return (*js_GetGCThingFlags(obj) & GCF_SYSTEM) != 0;\\n }\\n \\n JS_PUBLIC_API(void)\\n JS_FlagSystemObject(JSContext *cx, JSObject *obj)\\n {\\n-    /*\\n-     * We do not need to lock the object here. This method is the only API\\n-     * that modifies JSSLOT_CLASS after the object is created and the slot is\\n-     * initialized with the object's class. Since we just set the system flag\\n-     * here and access to jsval is atomic, any thread that calls the method\\n-     * will end up writing the same (jsval)class_pointer | 3 value into the\\n-     * slot.\\n-     */\\n-    STOBJ_SET_SYSTEM(obj);\\n+    uint8 *flagp;\\n+\\n+    flagp = js_GetGCThingFlags(obj);\\n+    *flagp |= GCF_SYSTEM;\\n }\\n \\n /************************************************************************/\\ndiff --git a/js/src/jsgc.h b/js/src/jsgc.h\\nindex 3e03c29..eeac04b 100644\\n--- a/js/src/jsgc.h\\n+++ b/js/src/jsgc.h\\n@@ -66,7 +66,8 @@ JS_BEGIN_EXTERN_C\\n #define GCF_TYPEMASK    JS_BITMASK(GCX_NTYPES_LOG2)\\n #define GCF_MARK        JS_BIT(GCX_NTYPES_LOG2)\\n #define GCF_FINAL       JS_BIT(GCX_NTYPES_LOG2 + 1)\\n-#define GCF_LOCKSHIFT   (GCX_NTYPES_LOG2 + 2)   /* lock bit shift */\\n+#define GCF_SYSTEM      JS_BIT(GCX_NTYPES_LOG2 + 2)\\n+#define GCF_LOCKSHIFT   (GCX_NTYPES_LOG2 + 3)   /* lock bit shift */\\n #define GCF_LOCK        JS_BIT(GCF_LOCKSHIFT)   /* lock request bit in API */\\n \\n extern JS_FRIEND_API(uint8 *)\\ndiff --git a/js/src/jsobj.c b/js/src/jsobj.c\\nindex dcd3664..d9c69bb 100644\\n--- a/js/src/jsobj.c\\n+++ b/js/src/jsobj.c\\n@@ -2472,17 +2472,10 @@ js_NewObject(JSContext *cx, JSClass *clasp, JSObject *proto, JSObject *parent)\\n     obj->map = NULL;\\n     obj->dslots = NULL;\\n \\n-    /* Set the proto and parent properties. */\\n+    /* Set the proto, parent, and class properties. */\\n     STOBJ_SET_PROTO(obj, proto);\\n     STOBJ_SET_PARENT(obj, parent);\\n-\\n-    /*\\n-     * Set the class slot with the initial value of the system flag set to\\n-     * false.\\n-     */\\n-    JS_ASSERT(((jsuword) clasp & 3) == 0);\\n     STOBJ_SET_SLOT(obj, JSSLOT_CLASS, PRIVATE_TO_JSVAL(clasp));\\n-    JS_ASSERT(!STOBJ_IS_SYSTEM(obj));\\n \\n     /* Initialize the remaining fixed slots. */\\n     for (i = JSSLOT_PRIVATE; i != JS_INITIAL_NSLOTS; ++i)\\ndiff --git a/js/src/jsobj.h b/js/src/jsobj.h\\nindex 783a228..19d44a0 100644\\n--- a/js/src/jsobj.h\\n+++ b/js/src/jsobj.h\\n@@ -164,17 +164,10 @@ struct JSObject {\\n #define STOBJ_SET_PARENT(obj,parent) \\\\\\n     ((obj)->fslots[JSSLOT_PARENT] = OBJECT_TO_JSVAL(parent))\\n \\n-/*\\n- * We use JSSLOT_CLASS to store both JSClass* and the system flag as an int-\\n- * tagged value (see jsapi.h for details) with the system flag stored in the\\n- * second lowest bit.\\n- */\\n-#define STOBJ_GET_CLASS(obj)    ((JSClass *)((obj)->fslots[JSSLOT_CLASS] & ~3))\\n-#define STOBJ_IS_SYSTEM(obj)    (((obj)->fslots[JSSLOT_CLASS] & 2) != 0)\\n-\\n-#define STOBJ_SET_SYSTEM(obj)   ((void)((obj)->fslots[JSSLOT_CLASS] |= 2))\\n+#define STOBJ_GET_CLASS(obj)                                                  \\\\\\n+    ((JSClass *)JSVAL_TO_PRIVATE((obj)->fslots[JSSLOT_CLASS]))\\n \\n-#define STOBJ_GET_PRIVATE(obj)                                          \\\\\\n+#define STOBJ_GET_PRIVATE(obj)                                                \\\\\\n     (JS_ASSERT(JSVAL_IS_INT(STOBJ_GET_SLOT(obj, JSSLOT_PRIVATE))),            \\\\\\n      JSVAL_TO_PRIVATE(STOBJ_GET_SLOT(obj, JSSLOT_PRIVATE)))\\n \\n\""}