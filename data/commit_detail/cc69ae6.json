{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bascc69ae6\""},"diff":"\"cc69ae6 bug 199819 - seems like I missed a couple of cases with this. Make sure that the autocompleteenabled attribute is set on all child browser widgets when we detect the preference change\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex a1f49af..636d9b5 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -686,7 +686,12 @@\\n             b.setAttribute(\\\"contextmenu\\\", this.getAttribute(\\\"contentcontextmenu\\\"));\\n             b.setAttribute(\\\"tooltip\\\", this.getAttribute(\\\"contenttooltip\\\"));\\n             b.setAttribute(\\\"autocompletepopup\\\", this.getAttribute(\\\"autocompletepopup\\\"));\\n-            b.setAttribute(\\\"autocompleteenabled\\\", this.getAttribute(\\\"autocompleteenabled\\\"));\\n+            \\n+            // To avoid unnecessary string compares on pageload in <browser>, only set the\\n+            // autocomplete attribute if autocomplete is actually enabled, so we can\\n+            // just test with |hasAttribute| in <browser>'s load handler. \\n+            if (this.getAttribute(\\\"autocompleteenabled\\\") == \\\"true\\\")\\n+              b.setAttribute(\\\"autocompleteenabled\\\", \\\"true\\\");\\n             \\n             this.mPanelContainer.appendChild(b);\\n \\n@@ -1104,16 +1109,24 @@\\n       <method name=\\\"attachFormFill\\\">\\n         <body><![CDATA[\\n           var browsers = this.mPanelContainer.childNodes;\\n-          for (var i = 0; i < browsers.length; ++i)\\n-            browsers[i].attachFormFill();\\n+          for (var i = 0; i < browsers.length; ++i) {\\n+            var cb = browsers[i];\\n+            // We can do stuff like this here because we aren't called on every\\n+            // page load, like <browser>'s |attachFormFill| method is. \\n+            cb.setAttribute(\\\"autocompleteenabled\\\", \\\"true\\\");\\n+            cb.attachFormFill();\\n+          }\\n         ]]></body>\\n       </method>\\n \\n       <method name=\\\"detachFormFill\\\">\\n         <body><![CDATA[\\n           var browsers = this.mPanelContainer.childNodes;\\n-          for (var i = 0; i < browsers.length; ++i)\\n-            browsers[i].detachFormFill();\\n+          for (var i = 0; i < browsers.length; ++i) {\\n+            var cb = browsers[i];\\n+            cb.removeAttribute(\\\"autocompleteenabled\\\");\\n+            cb.detachFormFill();\\n+          }\\n         ]]></body>\\n       </method>\\n \\n\""}