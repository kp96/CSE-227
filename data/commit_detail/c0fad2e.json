{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basc0fad2e\""},"diff":"\"c0fad2e Followup to fix the test for the rightmost column b=306990 r=Enn sr=roc a=dbaron\\ndiff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp\\nindex 0036cc7..87094b7 100644\\n--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp\\n+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp\\n@@ -3797,7 +3797,7 @@ NS_IMETHODIMP nsTreeBodyFrame::EnsureCellIsVisible(PRInt32 aRow, nsITreeColumn*\\n   rv = col->GetWidthInTwips(this, &columnWidth);\\n   if(NS_FAILED(rv)) return rv;\\n \\n-  if (!col->GetNext())\\n+  if (col->IsLastVisible(this))\\n     columnWidth -= mAdjustWidth; // this is one case we don't want to adjust\\n \\n   // If the start of the column is before the\\ndiff --git a/layout/xul/base/src/tree/src/nsTreeColumns.cpp b/layout/xul/base/src/tree/src/nsTreeColumns.cpp\\nindex fd9a9e79..de5ad22 100644\\n--- a/layout/xul/base/src/tree/src/nsTreeColumns.cpp\\n+++ b/layout/xul/base/src/tree/src/nsTreeColumns.cpp\\n@@ -112,6 +112,28 @@ nsTreeColumn::GetFrame()\\n   return shell->GetPrimaryFrameFor(mContent);\\n }\\n \\n+PRBool\\n+nsTreeColumn::IsLastVisible(nsTreeBodyFrame* aBodyFrame)\\n+{\\n+  NS_ASSERTION(GetFrame(aBodyFrame), \\\"should have checked for this already\\\");\\n+\\n+  // cyclers are fixed width, don't adjust them\\n+  if (IsCycler())\\n+    return PR_FALSE;\\n+\\n+  // we're certainly not the last visible if we're not visible\\n+  if (GetFrame(aBodyFrame)->GetRect().width == 0)\\n+    return PR_FALSE;\\n+\\n+  // try to find a visible successor\\n+  for (nsTreeColumn *next = GetNext(); next; next = next->GetNext()) {\\n+    nsIFrame* frame = next->GetFrame(aBodyFrame);\\n+    if (frame && frame->GetRect().width > 0)\\n+      return PR_FALSE;\\n+  }\\n+  return PR_TRUE;\\n+}\\n+\\n nsresult\\n nsTreeColumn::GetRect(nsTreeBodyFrame* aBodyFrame, nscoord aY, nscoord aHeight, nsRect* aResult)\\n {\\n@@ -124,7 +146,7 @@ nsTreeColumn::GetRect(nsTreeBodyFrame* aBodyFrame, nscoord aY, nscoord aHeight,\\n   *aResult = frame->GetRect();\\n   aResult->y = aY;\\n   aResult->height = aHeight;\\n-  if (!GetNext())\\n+  if (IsLastVisible(aBodyFrame))\\n     aResult->width += aBodyFrame->mAdjustWidth;\\n   return NS_OK;\\n }\\n@@ -150,7 +172,7 @@ nsTreeColumn::GetWidthInTwips(nsTreeBodyFrame* aBodyFrame, nscoord* aResult)\\n     return NS_ERROR_FAILURE;\\n   }\\n   *aResult = frame->GetRect().width;\\n-  if (!GetNext())\\n+  if (IsLastVisible(aBodyFrame))\\n     *aResult += aBodyFrame->mAdjustWidth;\\n   return NS_OK;\\n }\\ndiff --git a/layout/xul/base/src/tree/src/nsTreeColumns.h b/layout/xul/base/src/tree/src/nsTreeColumns.h\\nindex c5b7ebe..8d29df8 100644\\n--- a/layout/xul/base/src/tree/src/nsTreeColumns.h\\n+++ b/layout/xul/base/src/tree/src/nsTreeColumns.h\\n@@ -64,6 +64,8 @@ public:\\n protected:\\n   nsIFrame* GetFrame();\\n   nsIFrame* GetFrame(nsTreeBodyFrame* aBodyFrame);\\n+  // Don't call this if GetWidthInTwips or GetRect fails\\n+  PRBool IsLastVisible(nsTreeBodyFrame* aBodyFrame);\\n \\n   /**\\n    * Returns a rect with x and width taken from the frame's rect and specified\\n\""}