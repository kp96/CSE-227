{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas62764c0\""},"diff":"\"62764c0 bug 397231: switch from throwing to calling error handler when encountering problems after an XMLHttpRequest completes so the microsummary service doesn't leak when it encounters those problems; r,a=mconnor\\ndiff --git a/browser/components/microsummaries/src/nsMicrosummaryService.js b/browser/components/microsummaries/src/nsMicrosummaryService.js\\nindex aaa9b4d..a5d3bc6 100644\\n--- a/browser/components/microsummaries/src/nsMicrosummaryService.js\\n+++ b/browser/components/microsummaries/src/nsMicrosummaryService.js\\n@@ -2065,8 +2065,10 @@ MicrosummaryResource.prototype = {\\n     if (request.responseXML) {\\n       this._isXML = true;\\n       // XXX Figure out the parsererror format and log a specific error.\\n-      if (request.responseXML.documentElement.nodeName == \\\"parsererror\\\")\\n-        throw(request.channel.originalURI.spec + \\\" contains invalid XML\\\");\\n+      if (request.responseXML.documentElement.nodeName == \\\"parsererror\\\") {\\n+        this._handleError(event);\\n+        return;\\n+      }\\n       this._content = request.responseXML;\\n       this._contentType = request.channel.contentType;\\n       this._loadCallback(this);\\n@@ -2110,8 +2112,10 @@ MicrosummaryResource.prototype = {\\n     // even prefer other windows, since there's less chance of any browser\\n     // window machinery like throbbers treating our load like one initiated\\n     // by the user.\\n-    if (!window)\\n-      throw(this._uri.spec + \\\" can't parse; no browser window\\\");\\n+    if (!window) {\\n+      this._handleError(event);\\n+      return;\\n+    }\\n     var document = window.document;\\n     var rootElement = document.documentElement;\\n   \\n\""}