{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basfe009d5\""},"diff":"\"fe009d5 Bug 396457 - Store mTempFile as tempPath in moz_downloads table. r=sdwilsh, a=mconnor\\ndiff --git a/toolkit/components/downloads/src/nsDownloadManager.cpp b/toolkit/components/downloads/src/nsDownloadManager.cpp\\nindex fdc9936..48211a4 100644\\n--- a/toolkit/components/downloads/src/nsDownloadManager.cpp\\n+++ b/toolkit/components/downloads/src/nsDownloadManager.cpp\\n@@ -91,7 +91,7 @@ static PRBool gStoppingDownloads = PR_FALSE;\\n \\n static const PRInt64 gUpdateInterval = 400 * PR_USEC_PER_MSEC;\\n \\n-#define DM_SCHEMA_VERSION      4\\n+#define DM_SCHEMA_VERSION      5\\n #define DM_DB_NAME             NS_LITERAL_STRING(\\\"downloads.sqlite\\\")\\n #define DM_DB_CORRUPT_FILENAME NS_LITERAL_STRING(\\\"downloads.sqlite.corrupt\\\")\\n \\n@@ -356,6 +356,20 @@ nsDownloadManager::InitDB(PRBool *aDoImport)\\n     }\\n     // Fallthrough to the next upgrade\\n \\n+  case 4: // This version adds a column to the database (tempPath)\\n+    {\\n+      rv = mDBConn->ExecuteSimpleSQL(NS_LITERAL_CSTRING(\\n+        \\\"ALTER TABLE moz_downloads \\\"\\n+        \\\"ADD COLUMN tempPath TEXT\\\"));\\n+      NS_ENSURE_SUCCESS(rv, rv);\\n+\\n+      // Finally, update the schemaVersion variable and the database schema\\n+      schemaVersion = 5;\\n+      rv = mDBConn->SetSchemaVersion(schemaVersion);\\n+      NS_ENSURE_SUCCESS(rv, rv);\\n+    }\\n+    // Fallthrough to the next upgrade\\n+\\n   // Extra sanity checking for developers\\n #ifndef DEBUG\\n   case DM_SCHEMA_VERSION:\\n@@ -385,8 +399,8 @@ nsDownloadManager::InitDB(PRBool *aDoImport)\\n     {\\n       nsCOMPtr<mozIStorageStatement> stmt;\\n       rv = mDBConn->CreateStatement(NS_LITERAL_CSTRING(\\n-        \\\"SELECT id, name, source, target, startTime, endTime, state, referrer, \\\"\\n-               \\\"entityID \\\"\\n+        \\\"SELECT id, name, source, target, tempPath, startTime, endTime, state, \\\"\\n+               \\\"referrer, entityID \\\"\\n         \\\"FROM moz_downloads\\\"), getter_AddRefs(stmt));\\n       if (NS_SUCCEEDED(rv))\\n         break;\\n@@ -424,6 +438,7 @@ nsDownloadManager::CreateTable()\\n       \\\"name TEXT, \\\"\\n       \\\"source TEXT, \\\"\\n       \\\"target TEXT, \\\"\\n+      \\\"tempPath TEXT, \\\"\\n       \\\"startTime INTEGER, \\\"\\n       \\\"endTime INTEGER, \\\"\\n       \\\"state INTEGER, \\\"\\n@@ -564,7 +579,8 @@ nsDownloadManager::ImportDownloadHistory()\\n     rv = rdfInt->GetValue(&state);\\n     if (NS_FAILED(rv)) continue;\\n \\n-    (void)AddDownloadToDB(name, source, target, startTime, endTime, state);\\n+    (void)AddDownloadToDB(name, source, target, EmptyString(), startTime,\\n+                          endTime, state);\\n   }\\n \\n   return NS_OK;\\n@@ -632,6 +648,7 @@ PRInt64\\n nsDownloadManager::AddDownloadToDB(const nsAString &aName,\\n                                    const nsACString &aSource,\\n                                    const nsACString &aTarget,\\n+                                   const nsAString &aTempPath,\\n                                    PRInt64 aStartTime,\\n                                    PRInt64 aEndTime,\\n                                    PRInt32 aState)\\n@@ -639,8 +656,8 @@ nsDownloadManager::AddDownloadToDB(const nsAString &aName,\\n   nsCOMPtr<mozIStorageStatement> stmt;\\n   nsresult rv = mDBConn->CreateStatement(NS_LITERAL_CSTRING(\\n     \\\"INSERT INTO moz_downloads \\\"\\n-    \\\"(name, source, target, startTime, endTime, state) \\\"\\n-    \\\"VALUES (?1, ?2, ?3, ?4, ?5, ?6)\\\"), getter_AddRefs(stmt));\\n+    \\\"(name, source, target, tempPath, startTime, endTime, state) \\\"\\n+    \\\"VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7)\\\"), getter_AddRefs(stmt));\\n   NS_ENSURE_SUCCESS(rv, 0);\\n \\n   PRInt32 i = 0;\\n@@ -656,6 +673,10 @@ nsDownloadManager::AddDownloadToDB(const nsAString &aName,\\n   rv = stmt->BindUTF8StringParameter(i++, aTarget);\\n   NS_ENSURE_SUCCESS(rv, 0);\\n \\n+  // tempPath\\n+  rv = stmt->BindStringParameter(i++, aTempPath);\\n+  NS_ENSURE_SUCCESS(rv, 0);\\n+\\n   // startTime\\n   rv = stmt->BindInt64Parameter(i++, aStartTime);\\n   NS_ENSURE_SUCCESS(rv, 0);\\n@@ -763,7 +784,8 @@ nsDownloadManager::GetDownloadFromDB(PRUint32 aID, nsDownload **retVal)\\n   // First, let's query the database and see if it even exists\\n   nsCOMPtr<mozIStorageStatement> stmt;\\n   nsresult rv = mDBConn->CreateStatement(NS_LITERAL_CSTRING(\\n-    \\\"SELECT id, state, startTime, source, target, name, referrer, entityID \\\"\\n+    \\\"SELECT id, state, startTime, source, target, tempPath, name, referrer, \\\"\\n+           \\\"entityID \\\"\\n     \\\"FROM moz_downloads \\\"\\n     \\\"WHERE id = ?1\\\"), getter_AddRefs(stmt));\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -798,6 +820,13 @@ nsDownloadManager::GetDownloadFromDB(PRUint32 aID, nsDownload **retVal)\\n   rv = NS_NewURI(getter_AddRefs(dl->mTarget), target);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n+  nsString tempPath;\\n+  stmt->GetString(i++, tempPath);\\n+  if (!tempPath.IsEmpty()) {\\n+    rv = NS_NewLocalFile(tempPath, PR_TRUE, getter_AddRefs(dl->mTempFile));\\n+    NS_ENSURE_SUCCESS(rv, rv);\\n+  }\\n+\\n   stmt->GetString(i++, dl->mDisplayName);\\n \\n   nsCString referrer;\\n@@ -1085,7 +1114,13 @@ nsDownloadManager::AddDownload(DownloadType aDownloadType,\\n   aSource->GetSpec(source);\\n   aTarget->GetSpec(target);\\n \\n-  PRInt64 id = AddDownloadToDB(dl->mDisplayName, source, target, aStartTime, 0,\\n+  // Track the temp file for exthandler downloads\\n+  nsAutoString tempPath;\\n+  if (aTempFile)\\n+    aTempFile->GetPath(tempPath);\\n+\\n+  PRInt64 id = AddDownloadToDB(dl->mDisplayName, source, target, tempPath,\\n+                               aStartTime, 0,\\n                                nsIDownloadManager::DOWNLOAD_NOTSTARTED);\\n   NS_ENSURE_TRUE(id, NS_ERROR_FAILURE);\\n   dl->mID = id;\\ndiff --git a/toolkit/components/downloads/src/nsDownloadManager.h b/toolkit/components/downloads/src/nsDownloadManager.h\\nindex c325730..0dcb57d 100644\\n--- a/toolkit/components/downloads/src/nsDownloadManager.h\\n+++ b/toolkit/components/downloads/src/nsDownloadManager.h\\n@@ -117,6 +117,7 @@ protected:\\n   PRInt64 AddDownloadToDB(const nsAString &aName,\\n                           const nsACString &aSource,\\n                           const nsACString &aTarget,\\n+                          const nsAString &aTempPath,\\n                           PRInt64 aStartTime,\\n                           PRInt64 aEndTime,\\n                           PRInt32 aState);\\ndiff --git a/toolkit/components/downloads/test/schema_migration/test_migration_to_5.js b/toolkit/components/downloads/test/schema_migration/test_migration_to_5.js\\nnew file mode 100644\\nindex 0000000..57dd9fc\\n--- /dev/null\\n+++ b/toolkit/components/downloads/test/schema_migration/test_migration_to_5.js\\n@@ -0,0 +1,77 @@\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is Download Manager Test Code.\\n+ *\\n+ * The Initial Developer of the Original Code is\\n+ * Mozilla Corporation.\\n+ * Portions created by the Initial Developer are Copyright (C) 2007\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *   Shawn Wilsher <me@shawnwilsher.com> (Original Author)\\n+ *   Srirang G Doddihal <brahmana@doddihal.com>\\n+ *   Edward Lee <edward.lee@engineering.uiuc.edu>\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n+ * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by declaring the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not declare\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL.\\n+ *\\n+ * ***** END LICENSE BLOCK ***** */\\n+\\n+// This file tests migration from v4 to v5\\n+\\n+function run_test()\\n+{\\n+  // First import the downloads.sqlite file\\n+  importDatabaseFile(\\\"v4.sqlite\\\");\\n+\\n+  // ok, now it is OK to init the download manager - this will perform the\\n+  // migration!\\n+  var dm = Cc[\\\"@mozilla.org/download-manager;1\\\"].\\n+           getService(Ci.nsIDownloadManager);\\n+  var dbConn = dm.DBConnection;\\n+\\n+  // check schema version\\n+  do_check_true(dbConn.schemaVersion >= 5);\\n+\\n+  // Check that the columns exist (no throw) and entries are correct\\n+  var stmt = dbConn.createStatement(\\n+    \\\"SELECT name, source, target, startTime, endTime, state, referrer, \\\" +\\n+           \\\"entityID, tempPath \\\" +\\n+    \\\"FROM moz_downloads \\\" +\\n+    \\\"WHERE id = 27\\\");\\n+  stmt.executeStep();\\n+  do_check_eq(\\\"Firefox 2.0.0.6.dmg\\\", stmt.getString(0));\\n+  do_check_eq(\\\"http://ftp-mozilla.netscape.com/pub/mozilla.org/firefox/releases/2.0.0.6/mac/en-US/Firefox%202.0.0.6.dmg\\\",\\n+              stmt.getUTF8String(1));\\n+  do_check_eq(\\\"file:///Users/sdwilsh/Desktop/Firefox%202.0.0.6.dmg\\\",\\n+              stmt.getUTF8String(2));\\n+  do_check_eq(1187390974170783, stmt.getInt64(3));\\n+  do_check_eq(1187391001257446, stmt.getInt64(4));\\n+  do_check_eq(1, stmt.getInt32(5));\\n+  do_check_eq(\\\"http://www.mozilla.com/en-US/products/download.html?product=firefox-2.0.0.6&os=osx&lang=en-US\\\",stmt.getUTF8String(6));\\n+  do_check_true(stmt.getIsNull(7));\\n+  do_check_true(stmt.getIsNull(8));\\n+  stmt.reset();\\n+\\n+  cleanup();\\n+}\\ndiff --git a/toolkit/components/downloads/test/schema_migration/v4.sqlite b/toolkit/components/downloads/test/schema_migration/v4.sqlite\\nnew file mode 100644\\nindex 0000000..ae5798a\\nBinary files /dev/null and b/toolkit/components/downloads/test/schema_migration/v4.sqlite differ\\n\""}