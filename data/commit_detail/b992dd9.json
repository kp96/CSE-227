{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basb992dd9\""},"diff":"\"b992dd9 Bug 384752 - onItem* notifications are dispatched for closed containers. r=dietrich, a=mconnor.\\ndiff --git a/toolkit/components/places/src/nsNavHistoryResult.cpp b/toolkit/components/places/src/nsNavHistoryResult.cpp\\nindex 2b7cf7c..855cec4e 100644\\n--- a/toolkit/components/places/src/nsNavHistoryResult.cpp\\n+++ b/toolkit/components/places/src/nsNavHistoryResult.cpp\\n@@ -516,7 +516,7 @@ nsNavHistoryContainerResultNode::ReverseUpdateStats(PRInt32 aAccessCountChange)\\n     if (! resorted) {\\n       // repaint visible rows\\n       nsNavHistoryResult* result = GetResult();\\n-      if (result && result->GetView()) {\\n+      if (result && result->GetView() && mParent->AreChildrenVisible()) {\\n         result->GetView()->ItemChanged(static_cast<nsINavHistoryContainerResultNode*>(mParent));\\n       }\\n     }\\n@@ -1173,7 +1173,7 @@ nsNavHistoryContainerResultNode::InsertChildAt(nsNavHistoryResultNode* aNode,\\n     mAccessCount += aNode->mAccessCount;\\n     if (mTime < aNode->mTime)\\n       mTime = aNode->mTime;\\n-    if (result->GetView())\\n+    if (result->GetView() && (!mParent || mParent->AreChildrenVisible()))\\n       result->GetView()->ItemChanged(\\n           static_cast<nsINavHistoryContainerResultNode*>(this));\\n     ReverseUpdateStats(aNode->mAccessCount);\\n@@ -1182,7 +1182,7 @@ nsNavHistoryContainerResultNode::InsertChildAt(nsNavHistoryResultNode* aNode,\\n   // Update tree if we are visible. Note that we could be here and not expanded,\\n   // like when there is a bookmark folder being updated because its parent is\\n   // visible.\\n-  if (mExpanded && result->GetView())\\n+  if (result->GetView() && AreChildrenVisible())\\n     result->GetView()->ItemInserted(this, aNode, aIndex);\\n   return NS_OK;\\n }\\n@@ -1331,7 +1331,7 @@ nsNavHistoryContainerResultNode::ReplaceChildURIAt(PRUint32 aIndex,\\n   // update view\\n   nsNavHistoryResult* result = GetResult();\\n   NS_ENSURE_TRUE(result, NS_ERROR_FAILURE);\\n-  if (result->GetView())\\n+  if (result->GetView() && AreChildrenVisible())\\n     result->GetView()->ItemReplaced(this, oldItem, aNode, aIndex);\\n \\n   mChildren[aIndex]->OnRemoving();\\n@@ -1372,7 +1372,7 @@ nsNavHistoryContainerResultNode::RemoveChildAt(PRInt32 aIndex,\\n \\n   // remove from our list and notify the tree\\n   mChildren.RemoveObjectAt(aIndex);\\n-  if (result->GetView())\\n+  if (result->GetView() && AreChildrenVisible())\\n     result->GetView()->ItemRemoved(this, oldNode, aIndex);\\n \\n   if (! aIsTemporary) {\\n@@ -1481,6 +1481,8 @@ nsNavHistoryContainerResultNode::UpdateURIs(PRBool aRecursive, PRBool aOnlyOne,\\n       NS_NOTREACHED(\\\"All URI nodes being updated must have parents\\\");\\n       continue;\\n     }\\n+    PRBool childrenVisible = result->GetView() != nsnull && parent->AreChildrenVisible();\\n+\\n     PRUint32 oldAccessCount = node->mAccessCount;\\n     PRTime oldTime = node->mTime;\\n     aCallback(node, aClosure);\\n@@ -1490,7 +1492,7 @@ nsNavHistoryContainerResultNode::UpdateURIs(PRBool aRecursive, PRBool aOnlyOne,\\n       parent->mAccessCount += node->mAccessCount - oldAccessCount;\\n       if (node->mTime > parent->mTime)\\n         parent->mTime = node->mTime;\\n-      if (result->GetView())\\n+      if (childrenVisible)\\n         result->GetView()->ItemChanged(\\n             static_cast<nsINavHistoryContainerResultNode*>(parent));\\n       parent->ReverseUpdateStats(node->mAccessCount - oldAccessCount);\\n@@ -1505,10 +1507,10 @@ nsNavHistoryContainerResultNode::UpdateURIs(PRBool aRecursive, PRBool aOnlyOne,\\n         parent->InsertChildAt(node, parent->FindInsertionPoint(node, comparator,\\n                                                                sortingAnnotation.get()),\\n                               PR_TRUE);\\n-      } else if (result->GetView()) {\\n+      } else if (childrenVisible) {\\n         result->GetView()->ItemChanged(node);\\n       }\\n-    } else if (result->GetView()) {\\n+    } else if (childrenVisible) {\\n       result->GetView()->ItemChanged(node);\\n     }\\n   }\\n@@ -3202,7 +3204,7 @@ nsNavHistoryResultNode::OnItemChanged(PRInt64 aItemId,\\n   nsNavHistoryResult* result = GetResult();\\n   NS_ENSURE_TRUE(result, NS_ERROR_FAILURE);\\n \\n-  if (result->GetView()) {\\n+  if (result->GetView() && (!mParent || mParent->AreChildrenVisible())) {\\n     result->GetView()->ItemChanged(this);\\n   }\\n \\n@@ -3288,7 +3290,7 @@ nsNavHistoryFolderResultNode::OnItemVisited(PRInt64 aItemId,\\n                     FindInsertionPoint(node, comparator, sortingAnnotation.get()),\\n                     PR_TRUE);\\n     }\\n-  } else if (result->GetView()) {\\n+  } else if (result->GetView() && AreChildrenVisible()) {\\n     // no sorting changed, just redraw the row if visible\\n     result->GetView()->ItemChanged(node);\\n   }\\n\""}