{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basd46c63c\""},"diff":"\"d46c63c Bug 285438 Drag and drop gestures can be hijacked to load priviliged xul - xpfe/toolkit trunk patch v2.0 p=jst/me r=neil.parkwaycc.co.uk sr=bzbarsky a=benjamin\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex d44dfda..545f683 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -1849,7 +1849,7 @@\\n       <method name=\\\"dragDropSecurityCheck\\\">\\n         <parameter name=\\\"aEvent\\\"/>\\n         <parameter name=\\\"aDragSession\\\"/>\\n-        <parameter name=\\\"aUrl\\\"/>\\n+        <parameter name=\\\"aUri\\\"/>\\n         <body>\\n           <![CDATA[\\n             // Do a security check for drag n' drop. Make sure the\\n@@ -1857,22 +1857,44 @@\\n             var sourceDoc = aDragSession.sourceDocument;\\n \\n             if (sourceDoc) {\\n-              var sourceURI = sourceDoc.documentURI;\\n-\\n-              const nsIScriptSecurityManager =\\n-                Components.interfaces.nsIScriptSecurityManager;\\n-              var secMan =\\n-                Components.classes[\\\"@mozilla.org/scriptsecuritymanager;1\\\"]\\n-                .getService(nsIScriptSecurityManager);\\n+              // Strip leading and trailing whitespace, then try to\\n+              // create a URI from the dropped string. If that\\n+              // succeeds, we're dropping a URI and we need to do a\\n+              // security check to make sure the source document can\\n+              // load the dropped URI. We don't so much care about\\n+              // creating the real URI here (i.e. encoding differences\\n+              // etc don't matter), we just want to know if aUri\\n+              // really is a URI.\\n+\\n+              var uriStr = aUri.replace(/^\\\\s*|\\\\s*$/g, '');\\n+              var uri = null;\\n \\n               try {\\n-                secMan.checkLoadURIStr(sourceURI, aUrl,\\n-                                       nsIScriptSecurityManager.STANDARD);\\n+                uri = Components.classes[\\\"@mozilla.org/network/io-service;1\\\"]\\n+                  .getService(Components.interfaces.nsIIOService)\\n+                  .newURI(uriStr, null, null);\\n               } catch (e) {\\n-                // Stop event propagation right here.\\n-                aEvent.stopPropagation();\\n+              }\\n+\\n+              if (uri) {\\n+                // aUri is a URI, do the security check.\\n+                var sourceURI = sourceDoc.documentURI;\\n+\\n+                const nsIScriptSecurityManager =\\n+                  Components.interfaces.nsIScriptSecurityManager;\\n+                var secMan =\\n+                  Components.classes[\\\"@mozilla.org/scriptsecuritymanager;1\\\"]\\n+                  .getService(nsIScriptSecurityManager);\\n \\n-                throw \\\"Drop of \\\" + aUrl + \\\" denied.\\\";\\n+                try {\\n+                  secMan.checkLoadURIStr(sourceURI, uriStr,\\n+                                         nsIScriptSecurityManager.STANDARD);\\n+                } catch (e) {\\n+                  // Stop event propagation right here.\\n+                  aEvent.stopPropagation();\\n+\\n+                  throw \\\"Drop of \\\" + aUri + \\\" denied.\\\";\\n+                }\\n               }\\n             }\\n           ]]>\\n\""}