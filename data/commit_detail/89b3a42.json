{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas89b3a42\""},"diff":"\"89b3a42 Bug 395077. Allow QueryService from any accessible to IAccessibleApplication. r=surkov, a=dsicore\\ndiff --git a/accessible/src/msaa/nsAccessNodeWrap.cpp b/accessible/src/msaa/nsAccessNodeWrap.cpp\\nindex 0e96cc2..587eb21 100644\\n--- a/accessible/src/msaa/nsAccessNodeWrap.cpp\\n+++ b/accessible/src/msaa/nsAccessNodeWrap.cpp\\n@@ -55,6 +55,8 @@\\n #include \\\"nsPIDOMWindow.h\\\"\\n #include \\\"nsRootAccessible.h\\\"\\n #include \\\"nsIServiceManager.h\\\"\\n+#include \\\"AccessibleApplication.h\\\"\\n+#include \\\"nsApplicationAccessibleWrap.h\\\"\\n \\n /// the accessible library and cached methods\\n HINSTANCE nsAccessNodeWrap::gmAccLib = nsnull;\\n@@ -126,6 +128,34 @@ STDMETHODIMP nsAccessNodeWrap::QueryInterface(REFIID iid, void** ppv)\\n   return S_OK;\\n }\\n \\n+STDMETHODIMP\\n+nsAccessNodeWrap::QueryService(REFGUID guidService, REFIID iid, void** ppv)\\n+{\\n+  // Can get to IAccessibleApplication from any node via QS\\n+  if (iid == IID_IAccessibleApplication) {\\n+    nsRefPtr<nsApplicationAccessibleWrap> app =\\n+      GetApplicationAccessible();\\n+    nsresult rv = app->QueryNativeInterface(iid, ppv);\\n+    return NS_SUCCEEDED(rv) ? S_OK : E_NOINTERFACE;\\n+  }\\n+\\n+  /**\\n+   * To get an ISimpleDOMNode, ISimpleDOMDocument, ISimpleDOMText\\n+   * or any IAccessible2 interface on should use IServiceProvider like this:\\n+   * -----------------------------------------------------------------------\\n+   * ISimpleDOMDocument *pAccDoc = NULL;\\n+   * IServiceProvider *pServProv = NULL;\\n+   * pAcc->QueryInterface(IID_IServiceProvider, (void**)&pServProv);\\n+   * if (pServProv) {\\n+   *   const GUID unused;\\n+   *   pServProv->QueryService(unused, IID_ISimpleDOMDocument, (void**)&pAccDoc);\\n+   *   pServProv->Release();\\n+   * }\\n+   */\\n+\\n+  return QueryInterface(iid, ppv);\\n+}\\n+\\n //-----------------------------------------------------\\n // ISimpleDOMNode methods\\n //-----------------------------------------------------\\ndiff --git a/accessible/src/msaa/nsAccessNodeWrap.h b/accessible/src/msaa/nsAccessNodeWrap.h\\nindex 6d2e897..2253758 100644\\n--- a/accessible/src/msaa/nsAccessNodeWrap.h\\n+++ b/accessible/src/msaa/nsAccessNodeWrap.h\\n@@ -61,12 +61,16 @@ typedef LRESULT (STDAPICALLTYPE *LPFNGETGUITHREADINFO)(DWORD idThread, GUITHREAD\\n \\n class nsAccessNodeWrap :  public nsAccessNode,\\n                           public nsIWinAccessNode,\\n-                          public ISimpleDOMNode\\n+                          public ISimpleDOMNode,\\n+                          public IServiceProvider\\n {\\n   public:\\n     NS_DECL_ISUPPORTS_INHERITED\\n     NS_DECL_NSIWINACCESSNODE\\n \\n+  public: // IServiceProvider\\n+    STDMETHODIMP QueryService(REFGUID guidService, REFIID riid, void** ppv);\\n+\\n   public: // construction, destruction\\n     nsAccessNodeWrap(nsIDOMNode *, nsIWeakReference* aShell);\\n     virtual ~nsAccessNodeWrap();\\ndiff --git a/accessible/src/msaa/nsAccessibleWrap.cpp b/accessible/src/msaa/nsAccessibleWrap.cpp\\nindex fc42392..0b30f42 100644\\n--- a/accessible/src/msaa/nsAccessibleWrap.cpp\\n+++ b/accessible/src/msaa/nsAccessibleWrap.cpp\\n@@ -1006,27 +1006,6 @@ STDMETHODIMP nsAccessibleWrap::put_accValue(\\n #include \\\"mshtml.h\\\"\\n \\n STDMETHODIMP\\n-nsAccessibleWrap::QueryService(REFGUID guidService, REFIID iid, void** ppv)\\n-{\\n-  /**\\n-   * To get an ISimpleDOMNode, ISimpleDOMDocument or ISimpleDOMText\\n-   * from an IAccessible you have to use IServiceProvider like this:\\n-   * --------------------------------------------------------------\\n-   * ISimpleDOMDocument *pAccDoc = NULL;\\n-   * IServiceProvider *pServProv = NULL;\\n-   * pAcc->QueryInterface(IID_IServiceProvider, (void**)&pServProv);\\n-   * if (pServProv) {\\n-   *   const GUID unused;\\n-   *   pServProv->QueryService(unused, IID_ISimpleDOMDocument, (void**)&pAccDoc);\\n-   *   pServProv->Release();\\n-   * }\\n-   */\\n-\\n-  return QueryInterface(iid, ppv);\\n-}\\n-\\n-\\n-STDMETHODIMP\\n nsAccessibleWrap::Next(ULONG aNumElementsRequested, VARIANT FAR* pvar, ULONG FAR* aNumElementsFetched)\\n {\\n   // If there are two clients using this at the same time, and they are\\ndiff --git a/accessible/src/msaa/nsAccessibleWrap.h b/accessible/src/msaa/nsAccessibleWrap.h\\nindex 6aca269..e1ad8ad 100644\\n--- a/accessible/src/msaa/nsAccessibleWrap.h\\n+++ b/accessible/src/msaa/nsAccessibleWrap.h\\n@@ -94,8 +94,7 @@ class nsAccessibleWrap : public nsAccessible,\\n                          public CAccessibleHyperlink,\\n                          public CAccessibleValue,\\n                          public IAccessible2,\\n-                         public IEnumVARIANT,\\n-                         public IServiceProvider\\n+                         public IEnumVARIANT\\n {\\n   public: // construction, destruction\\n     nsAccessibleWrap(nsIDOMNode*, nsIWeakReference *aShell);\\n@@ -107,9 +106,6 @@ class nsAccessibleWrap : public nsAccessible,\\n   public: // IUnknown methods - see iunknown.h for documentation\\n     STDMETHODIMP QueryInterface(REFIID, void**);\\n \\n-  public: // IServiceProvider\\n-    STDMETHODIMP QueryService(REFGUID guidService, REFIID riid, void** ppv);\\n-\\n   // Return the registered OLE class ID of this object's CfDataObj.\\n     CLSID GetClassID() const;\\n \\n\""}