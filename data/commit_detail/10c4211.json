{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas10c4211\""},"diff":"\"10c4211 Bug 395526 - Change assertions to real errors in mozStorageStatement.cpp.  r=sspitzer, a=bzbarsky\\ndiff --git a/storage/src/mozStorageStatement.cpp b/storage/src/mozStorageStatement.cpp\\nindex 4ab32e8..6c5b8ff 100644\\n--- a/storage/src/mozStorageStatement.cpp\\n+++ b/storage/src/mozStorageStatement.cpp\\n@@ -226,9 +226,11 @@ mozStorageStatement::Finalize()\\n NS_IMETHODIMP\\n mozStorageStatement::GetParameterCount(PRUint32 *aParameterCount)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n     NS_ENSURE_ARG_POINTER(aParameterCount);\\n \\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     *aParameterCount = mParamCount;\\n     return NS_OK;\\n }\\n@@ -237,7 +239,9 @@ mozStorageStatement::GetParameterCount(PRUint32 *aParameterCount)\\n NS_IMETHODIMP\\n mozStorageStatement::GetParameterName(PRUint32 aParamIndex, nsACString & _retval)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     // We have to check this index because sqlite3_bind_parameter_name returns\\n     // NULL if an error occurs, or if a column is unnamed.  Since we handle\\n     // unnamed columns, we won't be able to tell if it is an error not without\\n@@ -263,7 +267,8 @@ NS_IMETHODIMP\\n mozStorageStatement::GetParameterIndex(const nsACString &aName,\\n                                        PRUint32 *_retval)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     int ind = sqlite3_bind_parameter_index(mDBStatement,\\n                                            nsPromiseFlatCString(aName).get());\\n@@ -279,9 +284,11 @@ mozStorageStatement::GetParameterIndex(const nsACString &aName,\\n NS_IMETHODIMP\\n mozStorageStatement::GetColumnCount(PRUint32 *aColumnCount)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n     NS_ENSURE_ARG_POINTER(aColumnCount);\\n \\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     *aColumnCount = mResultColumnCount;\\n     return NS_OK;\\n }\\n@@ -290,7 +297,9 @@ mozStorageStatement::GetColumnCount(PRUint32 *aColumnCount)\\n NS_IMETHODIMP\\n mozStorageStatement::GetColumnName(PRUint32 aColumnIndex, nsACString & _retval)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     // We have to check this index because sqlite3_column_name returns\\n     // NULL if an error occurs, or if a column is unnamed.\\n     if (aColumnIndex < 0 || aColumnIndex >= mResultColumnCount)\\n@@ -306,7 +315,8 @@ mozStorageStatement::GetColumnName(PRUint32 aColumnIndex, nsACString & _retval)\\n NS_IMETHODIMP\\n mozStorageStatement::GetColumnIndex(const nsACString &aName, PRUint32 *_retval)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     // Surprisingly enough, SQLite doesn't provide an API for this.  We have to\\n     // determine it ourselves sadly.\\n@@ -324,7 +334,8 @@ mozStorageStatement::GetColumnIndex(const nsACString &aName, PRUint32 *_retval)\\n NS_IMETHODIMP\\n mozStorageStatement::Reset()\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     PR_LOG(gStorageLog, PR_LOG_DEBUG, (\\\"Resetting statement: '%s'\\\", nsPromiseFlatCString(mStatementString).get()));\\n \\n@@ -340,7 +351,8 @@ mozStorageStatement::Reset()\\n NS_IMETHODIMP\\n mozStorageStatement::BindUTF8StringParameter(PRUint32 aParamIndex, const nsACString & aValue)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     int srv = sqlite3_bind_text (mDBStatement, aParamIndex + 1,\\n                                  nsPromiseFlatCString(aValue).get(),\\n@@ -353,7 +365,8 @@ mozStorageStatement::BindUTF8StringParameter(PRUint32 aParamIndex, const nsACStr\\n NS_IMETHODIMP\\n mozStorageStatement::BindStringParameter(PRUint32 aParamIndex, const nsAString & aValue)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     int srv = sqlite3_bind_text16 (mDBStatement, aParamIndex + 1,\\n                                    nsPromiseFlatString(aValue).get(),\\n@@ -366,7 +379,8 @@ mozStorageStatement::BindStringParameter(PRUint32 aParamIndex, const nsAString &\\n NS_IMETHODIMP\\n mozStorageStatement::BindDoubleParameter(PRUint32 aParamIndex, double aValue)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     int srv = sqlite3_bind_double (mDBStatement, aParamIndex + 1, aValue);\\n \\n@@ -377,7 +391,8 @@ mozStorageStatement::BindDoubleParameter(PRUint32 aParamIndex, double aValue)\\n NS_IMETHODIMP\\n mozStorageStatement::BindInt32Parameter(PRUint32 aParamIndex, PRInt32 aValue)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     int srv = sqlite3_bind_int (mDBStatement, aParamIndex + 1, aValue);\\n \\n@@ -388,7 +403,8 @@ mozStorageStatement::BindInt32Parameter(PRUint32 aParamIndex, PRInt32 aValue)\\n NS_IMETHODIMP\\n mozStorageStatement::BindInt64Parameter(PRUint32 aParamIndex, PRInt64 aValue)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     int srv = sqlite3_bind_int64 (mDBStatement, aParamIndex + 1, aValue);\\n \\n@@ -399,7 +415,8 @@ mozStorageStatement::BindInt64Parameter(PRUint32 aParamIndex, PRInt64 aValue)\\n NS_IMETHODIMP\\n mozStorageStatement::BindNullParameter(PRUint32 aParamIndex)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     int srv = sqlite3_bind_null (mDBStatement, aParamIndex + 1);\\n \\n@@ -410,7 +427,8 @@ mozStorageStatement::BindNullParameter(PRUint32 aParamIndex)\\n NS_IMETHODIMP\\n mozStorageStatement::BindBlobParameter(PRUint32 aParamIndex, const PRUint8 *aValue, PRUint32 aValueSize)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     int srv = sqlite3_bind_blob (mDBStatement, aParamIndex + 1, aValue,\\n                                  aValueSize, SQLITE_TRANSIENT);\\n@@ -422,7 +440,8 @@ mozStorageStatement::BindBlobParameter(PRUint32 aParamIndex, const PRUint8 *aVal\\n NS_IMETHODIMP\\n mozStorageStatement::Execute()\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n \\n     PRBool ret;\\n     nsresult rv = ExecuteStep(&ret);\\n@@ -435,7 +454,9 @@ mozStorageStatement::Execute()\\n NS_IMETHODIMP\\n mozStorageStatement::ExecuteStep(PRBool *_retval)\\n {\\n-    NS_ASSERTION (mDBConnection && mDBStatement, \\\"statement not initialized\\\");\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     nsresult rv;\\n \\n     if (mExecuting == PR_FALSE) {\\n@@ -545,6 +566,9 @@ mozStorageStatement::GetNumEntries(PRUint32 *aLength)\\n NS_IMETHODIMP\\n mozStorageStatement::GetTypeOfIndex(PRUint32 aIndex, PRInt32 *_retval)\\n {\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     if (aIndex < 0 || aIndex >= mResultColumnCount)\\n         return NS_ERROR_ILLEGAL_VALUE;\\n \\n@@ -580,6 +604,9 @@ mozStorageStatement::GetTypeOfIndex(PRUint32 aIndex, PRInt32 *_retval)\\n NS_IMETHODIMP\\n mozStorageStatement::GetInt32(PRUint32 aIndex, PRInt32 *_retval)\\n {\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     if (aIndex < 0 || aIndex >= mResultColumnCount)\\n         return NS_ERROR_ILLEGAL_VALUE;\\n     \\n@@ -595,6 +622,9 @@ mozStorageStatement::GetInt32(PRUint32 aIndex, PRInt32 *_retval)\\n NS_IMETHODIMP\\n mozStorageStatement::GetInt64(PRUint32 aIndex, PRInt64 *_retval)\\n {\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     if (aIndex < 0 || aIndex >= mResultColumnCount)\\n         return NS_ERROR_ILLEGAL_VALUE;\\n     \\n@@ -610,6 +640,9 @@ mozStorageStatement::GetInt64(PRUint32 aIndex, PRInt64 *_retval)\\n NS_IMETHODIMP\\n mozStorageStatement::GetDouble(PRUint32 aIndex, double *_retval)\\n {\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     if (aIndex < 0 || aIndex >= mResultColumnCount)\\n         return NS_ERROR_ILLEGAL_VALUE;\\n     \\n@@ -625,6 +658,9 @@ mozStorageStatement::GetDouble(PRUint32 aIndex, double *_retval)\\n NS_IMETHODIMP\\n mozStorageStatement::GetUTF8String(PRUint32 aIndex, nsACString & _retval)\\n {\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     // Get type of Index will check aIndex for us, so we don't have to.\\n     PRInt32 t;\\n     nsresult rv = GetTypeOfIndex (aIndex, &t);\\n@@ -645,6 +681,9 @@ mozStorageStatement::GetUTF8String(PRUint32 aIndex, nsACString & _retval)\\n NS_IMETHODIMP\\n mozStorageStatement::GetString(PRUint32 aIndex, nsAString & _retval)\\n {\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     // Get type of Index will check aIndex for us, so we don't have to.\\n     PRInt32 t;\\n     nsresult rv = GetTypeOfIndex (aIndex, &t);\\n@@ -666,6 +705,9 @@ mozStorageStatement::GetString(PRUint32 aIndex, nsAString & _retval)\\n NS_IMETHODIMP\\n mozStorageStatement::GetBlob(PRUint32 aIndex, PRUint32 *aDataSize, PRUint8 **aData)\\n {\\n+    if (!mDBConnection || !mDBStatement)\\n+        return NS_ERROR_NOT_INITIALIZED;\\n+\\n     if (aIndex < 0 || aIndex >= mResultColumnCount)\\n         return NS_ERROR_ILLEGAL_VALUE;\\n     \\n\""}