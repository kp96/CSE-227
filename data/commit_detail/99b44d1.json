{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas99b44d1\""},"diff":"\"99b44d1 Bug 370742, tabbox cleanup, changes listed in bug, r=mano\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 853f3d1..40adfa5 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -1455,7 +1455,7 @@\\n             var oldTab = aTab;\\n \\n             // clean up the before/afterselected attributes before removing the tab\\n-            oldTab.selected = false;\\n+            oldTab._selected = false;\\n \\n             // Remove this tab as the owner of any other tabs, since it's going away.\\n             for (i = 0; i < this.mTabContainer.childNodes.length; ++i) {\\n@@ -1531,7 +1531,7 @@\\n               this.mTabContainer.childNodes[i]._tPos = i;\\n             }\\n             this.mTabBox.selectedPanel = this.getBrowserForTab(this.mCurrentTab).parentNode;\\n-            this.mCurrentTab.selected = true;\\n+            this.mCurrentTab._selected = true;\\n \\n             this.updateCurrentBrowser();\\n \\n@@ -1967,7 +1967,7 @@\\n           var oldPosition = aTab._tPos;\\n \\n           aIndex = aIndex < aTab._tPos ? aIndex: aIndex+1;\\n-          this.mCurrentTab.selected = false;\\n+          this.mCurrentTab._selected = false;\\n           // use .item() instead of [] because dragging to the end of the strip goes out of\\n           // bounds: .item() returns null (so it acts like appendChild), but [] throws\\n           this.mTabContainer.insertBefore(aTab, this.mTabContainer.childNodes.item(aIndex));\\n@@ -1977,9 +1977,9 @@\\n           var i;\\n           for (i = 0; i < this.mTabContainer.childNodes.length; i++) {\\n             this.mTabContainer.childNodes[i]._tPos = i;\\n-            this.mTabContainer.childNodes[i].selected = false;\\n+            this.mTabContainer.childNodes[i]._selected = false;\\n           }\\n-          this.mCurrentTab.selected = true;\\n+          this.mCurrentTab._selected = true;\\n           this.mTabContainer.mTabstrip.scrollBoxObject.ensureElementIsVisible(this.mCurrentTab);\\n \\n           var evt = document.createEvent(\\\"UIEvents\\\");\\n\""}