{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas9b3a9e0\""},"diff":"\"9b3a9e0 XTF doesn't properly handle readonly and readwrite. Bug 391905, r=olli sr=peterv a=jonas\\ndiff --git a/content/xtf/src/nsXTFElementWrapper.cpp b/content/xtf/src/nsXTFElementWrapper.cpp\\nindex 9fdeb95..2d0eb36 100644\\n--- a/content/xtf/src/nsXTFElementWrapper.cpp\\n+++ b/content/xtf/src/nsXTFElementWrapper.cpp\\n@@ -527,7 +527,14 @@ nsXTFElementWrapper::GetExistingAttrNameFromQName(const nsAString& aStr) const\\n PRInt32\\n nsXTFElementWrapper::IntrinsicState() const\\n {\\n-  return nsXTFElementWrapperBase::IntrinsicState() | mIntrinsicState;\\n+  PRInt32 retState = nsXTFElementWrapperBase::IntrinsicState();\\n+  if (mIntrinsicState & NS_EVENT_STATE_MOZ_READONLY) {\\n+    retState &= ~NS_EVENT_STATE_MOZ_READWRITE;\\n+  } else if (mIntrinsicState & NS_EVENT_STATE_MOZ_READWRITE) {\\n+    retState &= ~NS_EVENT_STATE_MOZ_READONLY;\\n+  }\\n+\\n+  return  retState | mIntrinsicState;\\n }\\n \\n void\\n@@ -879,6 +886,10 @@ nsXTFElementWrapper::SetIntrinsicState(PRInt32 aNewState)\\n   if (!doc || !bits)\\n     return NS_OK;\\n \\n+  NS_WARN_IF_FALSE(!((aNewState & NS_EVENT_STATE_MOZ_READONLY) &&\\n+                   (aNewState & NS_EVENT_STATE_MOZ_READWRITE)),\\n+                   \\\"Both READONLY and READWRITE are being set.  Yikes!!!\\\");\\n+\\n   mIntrinsicState = aNewState;\\n   mozAutoDocUpdate upd(doc, UPDATE_CONTENT_STATE, PR_TRUE);\\n   doc->ContentStatesChanged(this, nsnull, bits);\\n\""}