{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basf7acaf5\""},"diff":"\"f7acaf5 fix for bug #393223:  annotations expired too early r=dietrich\\ndiff --git a/toolkit/components/places/src/nsNavHistoryExpire.cpp b/toolkit/components/places/src/nsNavHistoryExpire.cpp\\nindex 1eee5d9..594d4d3 100644\\n--- a/toolkit/components/places/src/nsNavHistoryExpire.cpp\\n+++ b/toolkit/components/places/src/nsNavHistoryExpire.cpp\\n@@ -86,9 +86,9 @@ struct nsNavHistoryExpireRecord {\\n #define MAX_SEQUENTIAL_RUNS 1\\n \\n // Expiration policy amounts (in microseconds)\\n-const PRTime EXPIRATION_POLICY_DAYS = (7 * 86400 * PR_MSEC_PER_SEC);\\n-const PRTime EXPIRATION_POLICY_WEEKS = (30 * 86400 * PR_MSEC_PER_SEC);\\n-const PRTime EXPIRATION_POLICY_MONTHS = ((PRTime)180 * 86400 * PR_MSEC_PER_SEC);\\n+const PRTime EXPIRATION_POLICY_DAYS = ((PRTime)7 * 86400 * PR_USEC_PER_SEC);\\r\\n+const PRTime EXPIRATION_POLICY_WEEKS = ((PRTime)30 * 86400 * PR_USEC_PER_SEC);\\n+const PRTime EXPIRATION_POLICY_MONTHS = ((PRTime)180 * 86400 * PR_USEC_PER_SEC);\\n \\n // nsNavHistoryExpire::nsNavHistoryExpire\\n //\\ndiff --git a/toolkit/components/places/tests/unit/test_expiration.js b/toolkit/components/places/tests/unit/test_expiration.js\\nindex 6416285..5f3523c 100644\\n--- a/toolkit/components/places/tests/unit/test_expiration.js\\n+++ b/toolkit/components/places/tests/unit/test_expiration.js\\n@@ -199,8 +199,8 @@ function run_test() {\\n   annosvc.setPageAnnotation(testURI, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_DAYS);\\n   annosvc.setItemAnnotation(bookmark, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_DAYS);\\n \\n-  // set dateAdded to 7 days ago\\n-  var expirationDate = (Date.now() - (7 * 86400 * 1000)) * 1000;\\n+  // set dateAdded to 8 days ago\\n+  var expirationDate = (Date.now() - (8 * 86400 * 1000)) * 1000;\\n   dbConnection.executeSimpleSQL(\\\"UPDATE moz_annos SET dateAdded = \\\" + expirationDate);\\n   dbConnection.executeSimpleSQL(\\\"UPDATE moz_items_annos SET dateAdded = \\\" + expirationDate);\\n \\n@@ -236,11 +236,40 @@ function run_test() {\\n     do_throw(\\\"bookmark still had days anno\\\");\\n   } catch(ex) {}\\n \\n-  // test anno expiration (weeks)\\n+  // test anno expiration (days) removes annos annos 6 days old\\n+  histsvc.addVisit(testURI, Date.now(), 0, histsvc.TRANSITION_TYPED, false, 0);\\n+  annosvc.setPageAnnotation(testURI, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_DAYS);\\n+  annosvc.setItemAnnotation(bookmark, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_DAYS);\\n+  // these annotations should remain as they are only 6 days old\\n+  var expirationDate = (Date.now() - (6 * 86400 * 1000)) * 1000;\\n+  dbConnection.executeSimpleSQL(\\\"UPDATE moz_annos SET dateAdded = \\\" + expirationDate);\\n+  dbConnection.executeSimpleSQL(\\\"UPDATE moz_items_annos SET dateAdded = \\\" + expirationDate);\\n+\\n+  // add a uri and then remove it, to trigger expiration\\n+  histsvc.addVisit(triggerURI, Date.now(), 0, histsvc.TRANSITION_TYPED, false, 0);\\n+  bhist.removePage(triggerURI);\\n+\\n+  // test for unexpired annos\\n+  try {\\n+    do_check_eq(annosvc.getPageAnnotation(testURI, testAnnoName), testAnnoVal);\\n+  } catch(ex) {\\n+    do_throw(\\\"anno < 7 days old was expired!\\\");\\n+  }\\n+  annosvc.removePageAnnotation(testURI, testAnnoName);\\n+  try {\\n+    do_check_eq(annosvc.getItemAnnotation(bookmark, testAnnoName), testAnnoVal);\\n+  } catch(ex) {\\n+    do_throw(\\\"item anno < 7 days old was expired!\\\");\\n+  }\\n+  annosvc.removeItemAnnotation(bookmark, testAnnoName);\\n+\\n+\\n+  // test anno expiration (weeks) removes annos 31 days old\\n   histsvc.addVisit(testURI, Date.now(), 0, histsvc.TRANSITION_TYPED, false, 0);\\n   annosvc.setPageAnnotation(testURI, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_WEEKS);\\n   annosvc.setItemAnnotation(bookmark, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_WEEKS);\\n-  var expirationDate = (Date.now() - (30 * 86400 * 1000)) * 1000;\\n+  // these annotations should not remain as they are 31 days old\\n+  var expirationDate = (Date.now() - (31 * 86400 * 1000)) * 1000;\\n   dbConnection.executeSimpleSQL(\\\"UPDATE moz_annos SET dateAdded = \\\" + expirationDate);\\n   dbConnection.executeSimpleSQL(\\\"UPDATE moz_items_annos SET dateAdded = \\\" + expirationDate);\\n   // these annotations should remain\\n@@ -274,10 +303,37 @@ function run_test() {\\n     do_throw(\\\"bookmark still had weeks anno\\\");\\n   } catch(ex) {}\\n \\n-  // test anno expiration (months)\\n+  // test anno expiration (weeks) does not remove annos 29 days old\\n+  histsvc.addVisit(testURI, Date.now(), 0, histsvc.TRANSITION_TYPED, false, 0);\\n+  annosvc.setPageAnnotation(testURI, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_WEEKS);\\n+  annosvc.setItemAnnotation(bookmark, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_WEEKS);\\n+  // these annotations should remain as they are only 29 days old\\n+  var expirationDate = (Date.now() - (29 * 86400 * 1000)) * 1000;\\n+  dbConnection.executeSimpleSQL(\\\"UPDATE moz_annos SET dateAdded = \\\" + expirationDate);\\n+  dbConnection.executeSimpleSQL(\\\"UPDATE moz_items_annos SET dateAdded = \\\" + expirationDate);\\n+\\n+  // add a uri and then remove it, to trigger expiration\\n+  histsvc.addVisit(triggerURI, Date.now(), 0, histsvc.TRANSITION_TYPED, false, 0);\\n+  bhist.removePage(triggerURI);\\n+\\n+  // test for unexpired annos\\n+  try {\\n+    do_check_eq(annosvc.getPageAnnotation(testURI, testAnnoName), testAnnoVal);\\n+  } catch(ex) {\\n+    do_throw(\\\"anno < 30 days old was expired!\\\");\\n+  }\\n+  annosvc.removePageAnnotation(testURI, testAnnoName);\\n+  try {\\n+    do_check_eq(annosvc.getItemAnnotation(bookmark, testAnnoName), testAnnoVal);\\n+  } catch(ex) {\\n+    do_throw(\\\"item anno < 30 days old was expired!\\\");\\n+  }\\n+  annosvc.removeItemAnnotation(bookmark, testAnnoName);\\n+\\n+  // test anno expiration (months) removes annos 181 days old\\n   annosvc.setPageAnnotation(testURI, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_MONTHS);\\n   annosvc.setItemAnnotation(bookmark, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_MONTHS);\\n-  var expirationDate = (Date.now() - (180 * 86400 * 1000)) * 1000;\\n+  var expirationDate = (Date.now() - (181 * 86400 * 1000)) * 1000;\\n   dbConnection.executeSimpleSQL(\\\"UPDATE moz_annos SET dateAdded = \\\" + expirationDate);\\n   dbConnection.executeSimpleSQL(\\\"UPDATE moz_items_annos SET dateAdded = \\\" + expirationDate);\\n   // these annotations should remain\\n@@ -311,6 +367,33 @@ function run_test() {\\n     do_throw(\\\"bookmark still had months anno\\\");\\n   } catch(ex) {}\\n \\n+  // test anno expiration (months) does not remove annos 179 days old\\n+  histsvc.addVisit(testURI, Date.now(), 0, histsvc.TRANSITION_TYPED, false, 0);\\n+  annosvc.setPageAnnotation(testURI, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_MONTHS);\\n+  annosvc.setItemAnnotation(bookmark, testAnnoName, testAnnoVal, 0, annosvc.EXPIRE_MONTHS);\\n+  // these annotations should remain as they are only 179 days old\\n+  var expirationDate = (Date.now() - (179 * 86400 * 1000)) * 1000;\\n+  dbConnection.executeSimpleSQL(\\\"UPDATE moz_annos SET dateAdded = \\\" + expirationDate);\\n+  dbConnection.executeSimpleSQL(\\\"UPDATE moz_items_annos SET dateAdded = \\\" + expirationDate);\\n+\\n+  // add a uri and then remove it, to trigger expiration\\n+  histsvc.addVisit(triggerURI, Date.now(), 0, histsvc.TRANSITION_TYPED, false, 0);\\n+  bhist.removePage(triggerURI);\\n+\\n+  // test for unexpired annos\\n+  try {\\n+    do_check_eq(annosvc.getPageAnnotation(testURI, testAnnoName), testAnnoVal);\\n+  } catch(ex) {\\n+    do_throw(\\\"anno < 180 days old was expired!\\\");\\n+  }\\n+  annosvc.removePageAnnotation(testURI, testAnnoName);\\n+  try {\\n+    do_check_eq(annosvc.getItemAnnotation(bookmark, testAnnoName), testAnnoVal);\\n+  } catch(ex) {\\n+    do_throw(\\\"item anno < 180 days old was expired!\\\");\\n+  }\\n+  annosvc.removeItemAnnotation(bookmark, testAnnoName);\\n+\\n   // test anno expiration (session)\\n   // XXX requires app restart\\n \\n\""}