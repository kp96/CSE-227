{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basa380671\""},"diff":"\"a380671 Simplify reflow and restyle event processing a tad.  Bug 396099, r+sr+a=roc\\ndiff --git a/layout/base/nsCSSFrameConstructor.cpp b/layout/base/nsCSSFrameConstructor.cpp\\nindex 778ba2d..df995b9 100644\\n--- a/layout/base/nsCSSFrameConstructor.cpp\\n+++ b/layout/base/nsCSSFrameConstructor.cpp\\n@@ -13062,30 +13062,16 @@ nsCSSFrameConstructor::PostRestyleEvent(nsIContent* aContent,\\n   }\\n }\\n \\n-NS_IMETHODIMP nsCSSFrameConstructor::RestyleEvent::Run() {\\n+NS_IMETHODIMP nsCSSFrameConstructor::RestyleEvent::Run()\\n+{\\n   if (!mConstructor)\\n     return NS_OK;  // event was revoked\\n \\n-  nsCOMPtr<nsIViewManager> viewManager =\\n-    mConstructor->mPresShell->GetViewManager();\\n-  NS_ASSERTION(viewManager, \\\"Must have view manager for update\\\");\\n-\\n-  viewManager->BeginUpdateViewBatch();\\n-  // Force flushing of any pending content notifications that might have queued\\n-  // up while our event was pending.  That will ensure that we don't construct\\n-  // frames for content right now that's still waiting to be notified on,\\n-  mConstructor->mPresShell->GetDocument()->\\n-    FlushPendingNotifications(Flush_ContentAndNotify);\\n-\\n   // Make sure that any restyles that happen from now on will go into\\n   // a new event.\\n-  mConstructor->mRestyleEvent.Forget();\\n-\\n-  mConstructor->ProcessPendingRestyles();\\n-  mConstructor->mDocument->BindingManager()->ProcessAttachedQueue();\\n-  viewManager->EndUpdateViewBatch(NS_VMREFRESH_NO_SYNC);\\n-\\n-  return NS_OK;\\n+  mConstructor->mRestyleEvent.Forget();  \\n+  \\n+  return mConstructor->mPresShell->FlushPendingNotifications(Flush_Style);\\n }\\n \\n NS_IMETHODIMP\\ndiff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp\\nindex f27d06a..a54235c 100644\\n--- a/layout/base/nsPresShell.cpp\\n+++ b/layout/base/nsPresShell.cpp\\n@@ -6193,16 +6193,8 @@ PresShell::ProcessReflowCommands(PRBool aInterruptible)\\n         ? PR_IntervalNow() + PR_MicrosecondsToInterval(gMaxRCProcessingTime)\\n         : (PRIntervalTime)0;\\n \\n-    // force flushing of any pending notifications\\n-    mDocument->BeginUpdate(UPDATE_ALL);\\n-    mDocument->EndUpdate(UPDATE_ALL);\\n-\\n-    // That might have executed JS (via XBL binding constructors).  So we may\\n-    // no longer have reflow commands.  In fact, we may have had Destroy()\\n-    // called.\\n-\\n-    // Scope for the reflow entry point, in addition to the |if| condition.\\n-    if (!mIsDestroying && mDirtyRoots.Count() != 0) {\\n+    // Scope for the reflow entry point\\n+    {\\n       AUTO_LAYOUT_PHASE_ENTRY_POINT(GetPresContext(), Reflow);\\n       mIsReflowing = PR_TRUE;\\n \\n\""}