{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basa237c81\""},"diff":"\"a237c81 Bug 386807. Remove duplicate elements from the linebreak array textrun construction parameter. r=smontagu,a-M8=damon\\ndiff --git a/layout/generic/nsTextFrameThebes.cpp b/layout/generic/nsTextFrameThebes.cpp\\nindex 07c9b61..5d3e9a8 100644\\n--- a/layout/generic/nsTextFrameThebes.cpp\\n+++ b/layout/generic/nsTextFrameThebes.cpp\\n@@ -1502,6 +1502,14 @@ GetFontMetrics(gfxFontGroup* aFontGroup)\\n   return font->GetMetrics();\\n }\\n \\n+static void\\n+AppendLineBreakOffset(nsTArray<PRUint32>* aArray, PRUint32 aOffset)\\n+{\\n+  if (aArray->Length() > 0 && (*aArray)[aArray->Length() - 1] == aOffset)\\n+    return;\\n+  aArray->AppendElement(aOffset);\\n+}\\n+\\n void\\n BuildTextRunsScanner::BuildTextRunForFrames(void* aTextBuffer)\\n {\\n@@ -1519,11 +1527,7 @@ BuildTextRunsScanner::BuildTextRunForFrames(void* aTextBuffer)\\n     textFlags |= nsTextFrameUtils::TEXT_INCOMING_WHITESPACE;\\n   }\\n \\n-  nsAutoTArray<PRUint32,50> textBreakPoints;\\n-  // We might have a final break offset for the end of the textrun\\n-  if (!textBreakPoints.AppendElements(mLineBreakBeforeFrames.Length() + 1))\\n-    return;\\n-\\n+  nsAutoTArray<PRInt32,50> textBreakPoints;\\n   TextRunUserData dummyData;\\n   TextRunMappedFlow dummyMappedFlow;\\n \\n@@ -1596,8 +1600,8 @@ BuildTextRunsScanner::BuildTextRunForFrames(void* aTextBuffer)\\n       ++finalMappedFlowCount;\\n \\n       while (nextBreakBeforeFrame && nextBreakBeforeFrame->GetContent() == content) {\\n-        textBreakPoints[nextBreakIndex - 1] =\\n-          nextBreakBeforeFrame->GetContentOffset() + newFlow->mDOMOffsetToBeforeTransformOffset;\\n+        textBreakPoints.AppendElement(\\n+            nextBreakBeforeFrame->GetContentOffset() + newFlow->mDOMOffsetToBeforeTransformOffset);\\n         nextBreakBeforeFrame = GetNextBreakBeforeFrame(&nextBreakIndex);\\n       }\\n     }\\n@@ -1742,19 +1746,19 @@ BuildTextRunsScanner::BuildTextRunForFrames(void* aTextBuffer)\\n   NS_ASSERTION(nextBreakIndex == mLineBreakBeforeFrames.Length(),\\n                \\\"Didn't find all the frames to break-before...\\\");\\n   gfxSkipCharsIterator iter(skipChars);\\n-  for (i = 0; i < nextBreakIndex; ++i) {\\n-    PRUint32* breakPoint = &textBreakPoints[i];\\n-    *breakPoint = iter.ConvertOriginalToSkipped(*breakPoint);\\n+  nsAutoTArray<PRUint32,50> textBreakPointsAfterTransform;\\n+  for (i = 0; i < textBreakPoints.Length(); ++i) {\\n+    AppendLineBreakOffset(&textBreakPointsAfterTransform, \\n+            iter.ConvertOriginalToSkipped(textBreakPoints[i]));\\n   }\\n   if (mStartOfLine) {\\n-    textBreakPoints[nextBreakIndex] = transformedLength;\\n-    ++nextBreakIndex;\\n+    AppendLineBreakOffset(&textBreakPointsAfterTransform, transformedLength);\\n   }\\n \\n   gfxTextRun* textRun;\\n   gfxTextRunFactory::Parameters params =\\n       { mContext, finalUserData, &skipChars,\\n-        textBreakPoints.Elements(), nextBreakIndex,\\n+        textBreakPointsAfterTransform.Elements(), textBreakPointsAfterTransform.Length(),\\n         firstFrame->PresContext()->AppUnitsPerDevPixel() };\\n \\n   if (mDoubleByteText) {\\n\""}