{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas31f525c\""},"diff":"\"31f525c Bug 391562. Pass aExtraState as nsnull to GetFinalState() if not needed. r=surkov, a=dsicore\\ndiff --git a/accessible/src/atk/nsAccessibleWrap.cpp b/accessible/src/atk/nsAccessibleWrap.cpp\\nindex 9a1a334..de2573a 100644\\n--- a/accessible/src/atk/nsAccessibleWrap.cpp\\n+++ b/accessible/src/atk/nsAccessibleWrap.cpp\\n@@ -792,7 +792,7 @@ GetAttributeSet(nsIAccessible* aAccessible)\\n     if (attributes) {\\n         // Deal with attributes that we only need to expose in ATK\\n         PRUint32 state, extraState;\\n-        aAccessible->GetFinalState(&state, &extraState);\\n+        aAccessible->GetFinalState(&state, nsnull);\\n         if (state & nsIAccessibleStates::STATE_HASPOPUP) {\\n           // There is no ATK state for haspopup, must use object attribute to expose the same info\\n           nsAutoString oldValueUnused;\\ndiff --git a/accessible/src/base/nsAccessibleEventData.cpp b/accessible/src/base/nsAccessibleEventData.cpp\\nindex f33e8e7..8ce65fb 100755\\n--- a/accessible/src/base/nsAccessibleEventData.cpp\\n+++ b/accessible/src/base/nsAccessibleEventData.cpp\\n@@ -359,7 +359,7 @@ nsAccStateChangeEvent::\\n   nsCOMPtr<nsIAccessible> accessible(GetAccessibleByNode());\\n   if (accessible) {\\n     PRUint32 state = 0, extraState = 0;\\n-    accessible->GetFinalState(&state, &extraState);\\n+    accessible->GetFinalState(&state, mIsExtraState ? &extraState : nsnull);\\n     mIsEnabled = ((mIsExtraState ? extraState : state) & mState) != 0;\\n   } else {\\n     mIsEnabled = PR_FALSE;\\ndiff --git a/accessible/src/msaa/CAccessibleComponent.cpp b/accessible/src/msaa/CAccessibleComponent.cpp\\nindex 3b7b932..f8c7ee7 100755\\n--- a/accessible/src/msaa/CAccessibleComponent.cpp\\n+++ b/accessible/src/msaa/CAccessibleComponent.cpp\\n@@ -88,8 +88,8 @@ CAccessibleComponent::get_locationInParent(long *aX, long *aY)\\n     return E_FAIL;\\n \\n   // If the object is not on any screen the returned position is (0,0).\\n-  PRUint32 states = 0, extraStates = 0;\\n-  nsresult rv = acc->GetFinalState(&states, &extraStates);\\n+  PRUint32 states = 0;\\n+  nsresult rv = acc->GetFinalState(&states, nsnull);\\n   if (NS_FAILED(rv))\\n     return E_FAIL;\\n \\ndiff --git a/accessible/src/msaa/nsAccessibleWrap.cpp b/accessible/src/msaa/nsAccessibleWrap.cpp\\nindex 1debd3f..fc42392 100644\\n--- a/accessible/src/msaa/nsAccessibleWrap.cpp\\n+++ b/accessible/src/msaa/nsAccessibleWrap.cpp\\n@@ -498,8 +498,8 @@ STDMETHODIMP nsAccessibleWrap::get_accState(\\n   if (!xpAccessible)\\n     return E_FAIL;\\n \\n-  PRUint32 state = 0, extraState;\\n-  if (NS_FAILED(xpAccessible->GetFinalState(&state, &extraState)))\\n+  PRUint32 state = 0;\\n+  if (NS_FAILED(xpAccessible->GetFinalState(&state, nsnull)))\\n     return E_FAIL;\\n \\n   pvarState->lVal = state;\\n\""}