{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basaf73388\""},"diff":"\"af73388 Bug 394406 with gfx.color_management turned ON inconsistent behaviour for selection colours. r+sr+a=roc\\ndiff --git a/widget/src/xpwidgets/nsXPLookAndFeel.cpp b/widget/src/xpwidgets/nsXPLookAndFeel.cpp\\nindex 4b2f07d..351b3ce 100644\\n--- a/widget/src/xpwidgets/nsXPLookAndFeel.cpp\\n+++ b/widget/src/xpwidgets/nsXPLookAndFeel.cpp\\n@@ -431,6 +431,29 @@ nsXPLookAndFeel::~nsXPLookAndFeel()\\n {\\n }\\n \\n+PRBool\\n+nsXPLookAndFeel::IsSpecialColor(const nsColorID aID, nscolor &aColor)\\n+{\\n+  switch (aID) {\\n+    case eColor_TextSelectForeground:\\n+      return (aColor == NS_DONT_CHANGE_COLOR);\\n+    case eColor_IMESelectedRawTextBackground:\\n+    case eColor_IMESelectedConvertedTextBackground:\\n+    case eColor_IMERawInputBackground:\\n+    case eColor_IMEConvertedTextBackground:\\n+    case eColor_IMESelectedRawTextForeground:\\n+    case eColor_IMESelectedConvertedTextForeground:\\n+    case eColor_IMERawInputForeground:\\n+    case eColor_IMEConvertedTextForeground:\\n+    case eColor_IMERawInputUnderline:\\n+    case eColor_IMEConvertedTextUnderline:\\n+    case eColor_IMESelectedRawTextUnderline:\\n+    case eColor_IMESelectedConvertedTextUnderline:\\n+      return NS_IS_IME_SPECIAL_COLOR(aColor);\\n+  }\\n+  return PR_FALSE;\\n+}\\n+\\n //\\n // All these routines will return NS_OK if they have a value,\\n // in which case the nsLookAndFeel should use that value;\\n@@ -545,7 +568,7 @@ nsXPLookAndFeel::GetColor(const nsColorID aID, nscolor &aColor)\\n   }\\n \\n   if (NS_SUCCEEDED(NativeGetColor(aID, aColor))) {\\n-    if (gfxPlatform::IsCMSEnabled()) {\\n+    if (gfxPlatform::IsCMSEnabled() && !IsSpecialColor(aID, aColor)) {\\n       cmsHTRANSFORM transform = gfxPlatform::GetCMSInverseRGBTransform();\\n       if (transform) {\\n         PRUint8 color[3];\\ndiff --git a/widget/src/xpwidgets/nsXPLookAndFeel.h b/widget/src/xpwidgets/nsXPLookAndFeel.h\\nindex d8c93f1..1f5c4b8 100644\\n--- a/widget/src/xpwidgets/nsXPLookAndFeel.h\\n+++ b/widget/src/xpwidgets/nsXPLookAndFeel.h\\n@@ -118,6 +118,7 @@ protected:\\n   void InitFromPref(nsLookAndFeelFloatPref* aPref, nsIPrefBranch* aPrefBranch);\\n   void InitColorFromPref(PRInt32 aIndex, nsIPrefBranch* aPrefBranch);\\n   virtual nsresult NativeGetColor(const nsColorID aID, nscolor& aColor) = 0;\\n+  PRBool IsSpecialColor(const nsColorID aID, nscolor &aColor);\\n \\n   static PRBool sInitialized;\\n   static nsLookAndFeelIntPref sIntPrefs[];\\n\""}