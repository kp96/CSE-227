{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas33ceaee\""},"diff":"\"33ceaee removing some tabs that snuck in + fixing leak by unlocking the FT_Face after we lock it.  hopefully fixing leaks caused by previous patch\\ndiff --git a/gfx/thebes/src/gfxPangoFonts.cpp b/gfx/thebes/src/gfxPangoFonts.cpp\\nindex cf7b7e4..79c5586 100644\\n--- a/gfx/thebes/src/gfxPangoFonts.cpp\\n+++ b/gfx/thebes/src/gfxPangoFonts.cpp\\n@@ -214,7 +214,7 @@ gfxPangoFont::Shutdown()\\n \\n     PangoFontMap *fontmap = pango_cairo_font_map_get_default ();\\n     if (PANGO_IS_FC_FONT_MAP (fontmap))\\n-\\tpango_fc_font_map_shutdown (PANGO_FC_FONT_MAP (fontmap));\\n+        pango_fc_font_map_shutdown (PANGO_FC_FONT_MAP (fontmap));\\n \\n }\\n \\n@@ -451,11 +451,10 @@ gfxPangoFont::GetMetrics()\\n \\n     FT_Face face = NULL;\\n     if (PANGO_IS_FC_FONT (font))\\n-      face = pango_fc_font_lock_face (PANGO_FC_FONT (font));\\n+        face = pango_fc_font_lock_face (PANGO_FC_FONT (font));\\n \\n     if (face) {\\n-\\n-\\tfloat val;\\n+        float val;\\n \\n         TT_OS2 *os2 = (TT_OS2 *) FT_Get_Sfnt_Table(face, ft_sfnt_os2);\\n     \\n@@ -478,10 +477,11 @@ gfxPangoFont::GetMetrics()\\n             mMetrics.subscriptOffset = mMetrics.xHeight;\\n         }\\n \\n+        pango_fc_font_unlock_face(PANGO_FC_FONT(face));\\n     } else {\\n \\n-\\tmMetrics.superscriptOffset = mMetrics.xHeight;\\n-\\tmMetrics.subscriptOffset = mMetrics.xHeight;\\n+        mMetrics.superscriptOffset = mMetrics.xHeight;\\n+        mMetrics.subscriptOffset = mMetrics.xHeight;\\n     }\\n \\n \\n@@ -694,8 +694,8 @@ SetupClusterBoundaries(gfxTextRun* aTextRun, const gchar *aUTF8, PRUint32 aUTF8L\\n     if (aTextRun->GetFlags() & gfxTextRunFactory::TEXT_IS_8BIT) {\\n         // 8-bit text doesn't have clusters.\\n         // XXX is this true in all languages???\\n-\\t// behdad: don't think so.  Czech for example IIRC has a\\n-\\t// 'ch' grapheme.\\n+        // behdad: don't think so.  Czech for example IIRC has a\\n+        // 'ch' grapheme.\\n         return;\\n     }\\n \\n@@ -924,8 +924,8 @@ gfxPangoFontGroup::SetGlyphs(gfxTextRun *aTextRun, gfxPangoFont *aFont,\\n         } else {\\n             gunichar ch = g_utf8_get_char(clusterUTF8);\\n             do { // Does pango ever provide more than one glyph in the cluster\\n-                 // if there is a missing glyph?\\n-\\t\\t // behdad: yes\\n+                // if there is a missing glyph?\\n+                // behdad: yes\\n                 if (IS_MISSING_GLYPH(glyphs[glyphIndex].glyph)) {\\n                     if (pango_is_zero_width(ch)) {\\n                         // the zero width characters returns empty glyph ID at shaping,\\n\""}