{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas63b56fc\""},"diff":"\"63b56fc add unit test for bug 372050 and the unescape parts of bug 350932; also, clarify comments for the ESCAPE_URL_ONLY_NONASCII flag. r+sr+a=bz\\ndiff --git a/netwerk/base/public/nsINetUtil.idl b/netwerk/base/public/nsINetUtil.idl\\nindex 8e41c69..26cda86 100644\\n--- a/netwerk/base/public/nsINetUtil.idl\\n+++ b/netwerk/base/public/nsINetUtil.idl\\n@@ -161,7 +161,7 @@ interface nsINetUtil : nsISupports\\n \\n   /** \\n    * Skip graphic octets (0x20-0x7E) when escaping\\n-   * Skips all ascii octets when unescaping \\n+   * Skips all ASCII octets (0x00-0x7F) when unescaping \\n    */\\n   const unsigned long ESCAPE_URL_ONLY_NONASCII = 1 << 12;\\n \\ndiff --git a/netwerk/test/unit/test_unescapestring.js b/netwerk/test/unit/test_unescapestring.js\\nnew file mode 100644\\nindex 0000000..7fb638e\\n--- /dev/null\\n+++ b/netwerk/test/unit/test_unescapestring.js\\n@@ -0,0 +1,29 @@\\n+const ONLY_NONASCII = Components.interfaces.nsINetUtil.ESCAPE_URL_ONLY_NONASCII;\\n+const SKIP_CONTROL = Components.interfaces.nsINetUtil.ESCAPE_URL_SKIP_CONTROL;\\n+\\n+\\n+var tests = [\\n+  [\\\"foo\\\", \\\"foo\\\", 0],\\n+  [\\\"foo%20bar\\\", \\\"foo bar\\\", 0],\\n+  [\\\"foo%2zbar\\\", \\\"foo%2zbar\\\", 0],\\n+  [\\\"foo%\\\", \\\"foo%\\\", 0],\\n+  [\\\"%zzfoo\\\", \\\"%zzfoo\\\", 0],\\n+  [\\\"foo%z\\\", \\\"foo%z\\\", 0],\\n+  [\\\"foo%00bar\\\", \\\"foo\\\\x00bar\\\", 0],\\n+  [\\\"foo%ffbar\\\", \\\"foo\\\\xffbar\\\", 0],\\n+  [\\\"%00%1b%20%61%7f%80%ff\\\", \\\"%00%1b%20%61%7f\\\\x80\\\\xff\\\", ONLY_NONASCII],\\n+  [\\\"%00%1b%20%61%7f%80%ff\\\", \\\"%00%1b a%7f\\\\x80\\\\xff\\\", SKIP_CONTROL],\\n+  [\\\"%00%1b%20%61%7f%80%ff\\\", \\\"%00%1b%20%61%7f\\\\x80\\\\xff\\\", ONLY_NONASCII|SKIP_CONTROL]\\n+];\\n+\\n+function run_test() {\\n+  var util = Components.classes[\\\"@mozilla.org/network/util;1\\\"]\\n+                       .getService(Components.interfaces.nsINetUtil);\\n+\\n+  for (var i = 0; i < tests.length; ++i) {\\n+    dump(\\\"Test \\\" + i + \\\" (\\\" + tests[i][0] + \\\", \\\" + tests[i][2] + \\\")\\\\n\\\");\\n+    do_check_eq(util.unescapeString(tests[i][0], tests[i][2]),\\n+                                    tests[i][1]);\\n+  }\\n+  dump(tests.length + \\\" tests passed\\\\n\\\");\\n+}\\ndiff --git a/xpcom/io/nsEscape.h b/xpcom/io/nsEscape.h\\nindex dece84e..c57739d 100644\\n--- a/xpcom/io/nsEscape.h\\n+++ b/xpcom/io/nsEscape.h\\n@@ -122,7 +122,7 @@ enum EscapeMask {\\n   esc_OnlyASCII      = PR_BIT(11), /* causes non-ascii octets to be skipped */\\n   esc_OnlyNonASCII   = PR_BIT(12), /* causes _graphic_ ascii octets (0x20-0x7E) \\n                                     * to be skipped when escaping. causes all\\n-                                    * ascii octets to be skipped when unescaping */\\n+                                    * ascii octets (<= 0x7F) to be skipped when unescaping */\\n   esc_AlwaysCopy     = PR_BIT(13), /* copy input to result buf even if escaping is unnecessary */\\n   esc_Colon          = PR_BIT(14), /* forces escape of colon */\\n   esc_SkipControl    = PR_BIT(15)  /* skips C0 and DEL from unescaping */\\n\""}