{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas136055c\""},"diff":"\"136055c Fixing bug 394086. Pave the way for java applets that are scriptable using NPRuntime. r+sr=cbiesinger@gmx.at\\ndiff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp\\nindex f636fa1..7c30779 100644\\n--- a/dom/src/base/nsDOMClassInfo.cpp\\n+++ b/dom/src/base/nsDOMClassInfo.cpp\\n@@ -651,7 +651,7 @@ static nsDOMClassInfoData sClassInfoData[] = {\\n   // HTML element classes\\n   NS_DEFINE_CLASSINFO_DATA(HTMLAnchorElement, nsHTMLElementSH,\\n                            ELEMENT_SCRIPTABLE_FLAGS)\\n-  NS_DEFINE_CLASSINFO_DATA(HTMLAppletElement, nsHTMLAppletElementSH,\\n+  NS_DEFINE_CLASSINFO_DATA(HTMLAppletElement, nsHTMLPluginObjElementSH,\\n                            EXTERNAL_OBJ_SCRIPTABLE_FLAGS)\\n   NS_DEFINE_CLASSINFO_DATA(HTMLAreaElement, nsHTMLElementSH,\\n                            ELEMENT_SCRIPTABLE_FLAGS)\\n@@ -5905,8 +5905,8 @@ nsWindowSH::NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,\\n     JSAutoRequest ar(cx);\\n \\n     JSBool ok = ::JS_DefineUCProperty(cx, obj, ::JS_GetStringChars(str),\\n-                                 ::JS_GetStringLength(str), v, nsnull,\\n-                                 nsnull, JSPROP_ENUMERATE);\\n+                                      ::JS_GetStringLength(str), v, nsnull,\\n+                                      nsnull, JSPROP_ENUMERATE);\\n \\n     sDoSecurityCheckInAddProperty = doSecurityCheckInAddProperty;\\n \\n@@ -5930,9 +5930,9 @@ nsWindowSH::NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,\\n       JSAutoRequest ar(cx);\\n \\n       if (!::JS_DefineUCProperty(cx, obj, ::JS_GetStringChars(str),\\n-                                ::JS_GetStringLength(str),\\n-                                JSVAL_VOID, nsnull, nsnull,\\n-                                JSPROP_ENUMERATE)) {\\n+                                 ::JS_GetStringLength(str),\\n+                                 JSVAL_VOID, nsnull, nsnull,\\n+                                 JSPROP_ENUMERATE)) {\\n         return NS_ERROR_FAILURE;\\n       }\\n       *objp = obj;\\n@@ -8495,9 +8495,10 @@ nsHTMLSelectElementSH::SetProperty(nsIXPConnectWrappedNative *wrapper,\\n // successful, will be defined on the embed element as a nsIFoo\\n // property.\\n \\n+// static\\n nsresult\\n-nsHTMLExternalObjSH::GetPluginInstance(nsIXPConnectWrappedNative *wrapper,\\n-                                       nsIPluginInstance **_result)\\n+nsHTMLPluginObjElementSH::GetPluginInstance(nsIXPConnectWrappedNative *wrapper,\\n+                                            nsIPluginInstance **_result)\\n {\\n   *_result = nsnull;\\n \\n@@ -8540,8 +8541,8 @@ IsObjInProtoChain(JSContext *cx, JSObject *obj, JSObject *proto)\\n // chain.\\n \\n NS_IMETHODIMP\\n-nsHTMLExternalObjSH::PostCreate(nsIXPConnectWrappedNative *wrapper,\\n-                                JSContext *cx, JSObject *obj)\\n+nsHTMLPluginObjElementSH::PostCreate(nsIXPConnectWrappedNative *wrapper,\\n+                                     JSContext *cx, JSObject *obj)\\n {\\n   nsresult rv = nsElementSH::PostCreate(wrapper, cx, obj);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -8663,9 +8664,9 @@ nsHTMLExternalObjSH::PostCreate(nsIXPConnectWrappedNative *wrapper,\\n \\n \\n NS_IMETHODIMP\\n-nsHTMLExternalObjSH::GetProperty(nsIXPConnectWrappedNative *wrapper,\\n-                                 JSContext *cx, JSObject *obj, jsval id,\\n-                                 jsval *vp, PRBool *_retval)\\n+nsHTMLPluginObjElementSH::GetProperty(nsIXPConnectWrappedNative *wrapper,\\n+                                      JSContext *cx, JSObject *obj, jsval id,\\n+                                      jsval *vp, PRBool *_retval)\\n {\\n   JSAutoRequest ar(cx);\\n \\n@@ -8710,9 +8711,9 @@ nsHTMLExternalObjSH::GetProperty(nsIXPConnectWrappedNative *wrapper,\\n }\\n \\n NS_IMETHODIMP\\n-nsHTMLExternalObjSH::SetProperty(nsIXPConnectWrappedNative *wrapper,\\n-                                 JSContext *cx, JSObject *obj, jsval id,\\n-                                 jsval *vp, PRBool *_retval)\\n+nsHTMLPluginObjElementSH::SetProperty(nsIXPConnectWrappedNative *wrapper,\\n+                                      JSContext *cx, JSObject *obj, jsval id,\\n+                                      jsval *vp, PRBool *_retval)\\n {\\n   JSAutoRequest ar(cx);\\n \\n@@ -8753,13 +8754,13 @@ nsHTMLExternalObjSH::SetProperty(nsIXPConnectWrappedNative *wrapper,\\n     return *_retval ? NS_SUCCESS_I_DID_SOMETHING : NS_ERROR_FAILURE;\\n   }\\n \\n-  return nsElementSH::SetProperty(wrapper, cx, obj, id, vp, _retval);\\n+  return nsHTMLElementSH::SetProperty(wrapper, cx, obj, id, vp, _retval);\\n }\\n \\n NS_IMETHODIMP\\n-nsHTMLExternalObjSH::Call(nsIXPConnectWrappedNative *wrapper, JSContext *cx,\\n-                          JSObject *obj, PRUint32 argc, jsval *argv, jsval *vp,\\n-                          PRBool *_retval)\\n+nsHTMLPluginObjElementSH::Call(nsIXPConnectWrappedNative *wrapper,\\n+                               JSContext *cx, JSObject *obj, PRUint32 argc,\\n+                               jsval *argv, jsval *vp, PRBool *_retval)\\n {\\n   nsCOMPtr<nsIPluginInstance> pi;\\n   nsresult rv = GetPluginInstance(wrapper, getter_AddRefs(pi));\\n@@ -8794,11 +8795,12 @@ nsHTMLExternalObjSH::Call(nsIXPConnectWrappedNative *wrapper, JSContext *cx,\\n \\n // HTMLAppletElement helper\\n \\n+// static\\n nsresult\\n-nsHTMLAppletElementSH::GetPluginJSObject(JSContext *cx, JSObject *obj,\\n-                                         nsIPluginInstance *plugin_inst,\\n-                                         JSObject **plugin_obj,\\n-                                         JSObject **plugin_proto)\\n+nsHTMLPluginObjElementSH::GetJavaPluginJSObject(JSContext *cx, JSObject *obj,\\n+                                                nsIPluginInstance *plugin_inst,\\n+                                                JSObject **plugin_obj,\\n+                                                JSObject **plugin_proto)\\n {\\n #ifdef OJI\\n   *plugin_obj = nsnull;\\n@@ -8812,9 +8814,8 @@ nsHTMLAppletElementSH::GetPluginJSObject(JSContext *cx, JSObject *obj,\\n #ifdef OJI\\n   }\\n \\n-  nsCOMPtr<nsIJVMPluginInstance> javaPluginInstance;\\n-\\n-  javaPluginInstance = do_QueryInterface(plugin_inst);\\n+  nsCOMPtr<nsIJVMPluginInstance> javaPluginInstance =\\n+    do_QueryInterface(plugin_inst);\\n \\n   if (!javaPluginInstance) {\\n     return NS_OK;\\n@@ -8891,14 +8892,13 @@ nsHTMLPluginObjElementSH::GetPluginJSObject(JSContext *cx, JSObject *obj,\\n \\n   if (!scriptable_peer) {\\n     if (!ci) {\\n-      // This plugin doesn't support nsIScriptablePlugin, nor does it\\n-      // have classinfo, this plugin is not scriptable using those\\n-      // methods. It might however be a Java plugin running in an EMBED or\\n-      // OBJECT so let's try that.\\n+      // This plugin doesn't support NPRuntime or nsIScriptablePlugin,\\n+      // nor does it have classinfo, this plugin is not scriptable\\n+      // using those methods. It might however be a Java plugin so\\n+      // let's try that.\\n \\n-      return nsHTMLAppletElementSH::GetPluginJSObject(cx, obj, plugin_inst,\\n-                                                      plugin_obj,\\n-                                                      plugin_proto);\\n+      return GetJavaPluginJSObject(cx, obj, plugin_inst, plugin_obj,\\n+                                   plugin_proto);\\n     }\\n \\n     // The plugin instance has classinfo, use it as the scriptable\\n@@ -8968,9 +8968,32 @@ nsHTMLPluginObjElementSH::NewResolve(nsIXPConnectWrappedNative *wrapper,\\n                                      PRUint32 flags, JSObject **objp,\\n                                      PRBool *_retval)\\n {\\n-  if (JSVAL_IS_STRING(id)) {\\n-    // This code resolves embed.nsIFoo to the nsIFoo wrapper of the\\n-    // plugin/applet instance\\n+  if (!JSVAL_IS_STRING(id)) {\\n+    return NS_OK;\\n+  }\\n+\\n+  // This code resolves embed.nsIFoo to the nsIFoo wrapper of the\\n+  // plugin/applet instance. We only want to do that for plugin\\n+  // instances that are not scriptable using NPRuntime or are Java\\n+  // plugin instances.\\n+\\n+  nsCOMPtr<nsIPluginInstance> pi;\\n+  nsresult rv = GetPluginInstance(wrapper, getter_AddRefs(pi));\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+\\n+  nsCOMPtr<nsIPluginInstanceInternal> plugin_internal =\\n+    do_QueryInterface(pi);\\n+\\n+  nsCOMPtr<nsIJVMPluginInstance> java_plugin_instance =\\n+    do_QueryInterface(pi);\\n+\\n+  JSObject *proto = ::JS_GetPrototype(cx, obj);\\n+\\n+  if (pi && (!plugin_internal ||\\n+             (!proto || strcmp(JS_GET_CLASS(cx, proto)->name,\\n+                               NPRUNTIME_JSCLASS_NAME) != 0)) &&\\n+      !java_plugin_instance) {\\n+    // This is not an NPRuntime plugin or Java plugin, continue on...\\n \\n     JSString *str = JSVAL_TO_STRING(id);\\n     char* cstring = ::JS_GetStringBytes(str);\\n@@ -8984,48 +9007,42 @@ nsHTMLPluginObjElementSH::NewResolve(nsIXPConnectWrappedNative *wrapper,\\n     nsresult rv = iim->GetIIDForName(cstring, &iid);\\n \\n     if (NS_SUCCEEDED(rv) && iid) {\\n-      nsCOMPtr<nsIPluginInstance> pi;\\n+      // Notify the PluginManager that this one is scriptable -- it\\n+      // will need some special treatment later\\n \\n-      GetPluginInstance(wrapper, getter_AddRefs(pi));\\n+      nsCOMPtr<nsIPluginHost> pluginManager =\\n+        do_GetService(kCPluginManagerCID);\\n \\n-      if (pi) {\\n-        // notify the PluginManager that this one is scriptable --\\n-        // it will need some special treatment later\\n+      nsCOMPtr<nsPIPluginHost> pluginHost(do_QueryInterface(pluginManager));\\n \\n-        nsCOMPtr<nsIPluginHost> pluginManager =\\n-          do_GetService(kCPluginManagerCID);\\n+      if (pluginHost) {\\n+        pluginHost->SetIsScriptableInstance(pi, PR_TRUE);\\n+      }\\n \\n-        nsCOMPtr<nsPIPluginHost> pluginHost(do_QueryInterface(pluginManager));\\n+      nsCOMPtr<nsIXPConnectJSObjectHolder> holder;\\n+      rv = sXPConnect->WrapNative(cx, obj, pi, *iid, getter_AddRefs(holder));\\n \\n-        if(pluginHost) {\\n-          pluginHost->SetIsScriptableInstance(pi, PR_TRUE);\\n-        }\\n+      if (NS_SUCCEEDED(rv)) {\\n+        JSObject* ifaceObj;\\n \\n-        nsCOMPtr<nsIXPConnectJSObjectHolder> holder;\\n-        rv = sXPConnect->WrapNative(cx, obj, pi, *iid, getter_AddRefs(holder));\\n+        rv = holder->GetJSObject(&ifaceObj);\\n \\n         if (NS_SUCCEEDED(rv)) {\\n-          JSObject* ifaceObj;\\n-\\n-          rv = holder->GetJSObject(&ifaceObj);\\n+          nsMemory::Free(iid);\\n \\n-          if (NS_SUCCEEDED(rv)) {\\n-            nsMemory::Free(iid);\\n+          *_retval = ::JS_DefineUCProperty(cx, obj, ::JS_GetStringChars(str),\\n+                                           ::JS_GetStringLength(str),\\n+                                           OBJECT_TO_JSVAL(ifaceObj), nsnull,\\n+                                           nsnull, JSPROP_ENUMERATE);\\n \\n-            *_retval = ::JS_DefineUCProperty(cx, obj, ::JS_GetStringChars(str),\\n-                                             ::JS_GetStringLength(str),\\n-                                             OBJECT_TO_JSVAL(ifaceObj), nsnull,\\n-                                             nsnull, JSPROP_ENUMERATE);\\n-\\n-            *objp = obj;\\n+          *objp = obj;\\n \\n-            return *_retval ? NS_OK : NS_ERROR_FAILURE;\\n-          }\\n+          return *_retval ? NS_OK : NS_ERROR_FAILURE;\\n         }\\n       }\\n-\\n-      nsMemory::Free(iid);\\n     }\\n+\\n+    nsMemory::Free(iid);\\n   }\\n \\n   return nsHTMLElementSH::NewResolve(wrapper, cx, obj, id, flags, objp,\\ndiff --git a/dom/src/base/nsDOMClassInfo.h b/dom/src/base/nsDOMClassInfo.h\\nindex 708c499..da0f838 100644\\n--- a/dom/src/base/nsDOMClassInfo.h\\n+++ b/dom/src/base/nsDOMClassInfo.h\\n@@ -952,29 +952,37 @@ public:\\n };\\n \\n \\n-// Base helper for external HTML object (such as a plugin or an\\n-// applet)\\n+// HTMLEmbed/Object/AppletElement helper\\n \\n-class nsHTMLExternalObjSH : public nsHTMLElementSH\\n+class nsHTMLPluginObjElementSH : public nsHTMLElementSH\\n {\\n protected:\\n-  nsHTMLExternalObjSH(nsDOMClassInfoData* aData) : nsHTMLElementSH(aData)\\n+  nsHTMLPluginObjElementSH(nsDOMClassInfoData* aData)\\n+    : nsHTMLElementSH(aData)\\n   {\\n   }\\n \\n-  virtual ~nsHTMLExternalObjSH()\\n+  virtual ~nsHTMLPluginObjElementSH()\\n   {\\n   }\\n \\n   nsresult GetPluginInstance(nsIXPConnectWrappedNative *aWrapper,\\n                              nsIPluginInstance **aResult);\\n \\n-  virtual nsresult GetPluginJSObject(JSContext *cx, JSObject *obj,\\n-                                     nsIPluginInstance *plugin_inst,\\n-                                     JSObject **plugin_obj,\\n-                                     JSObject **plugin_proto) = 0;\\n+  static nsresult GetPluginJSObject(JSContext *cx, JSObject *obj,\\n+                                    nsIPluginInstance *plugin_inst,\\n+                                    JSObject **plugin_obj,\\n+                                    JSObject **plugin_proto);\\n+\\n+  static nsresult GetJavaPluginJSObject(JSContext *cx, JSObject *obj,\\n+                                        nsIPluginInstance *plugin_inst,\\n+                                        JSObject **plugin_obj,\\n+                                        JSObject **plugin_proto);\\n \\n public:\\n+  NS_IMETHOD NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,\\n+                        JSObject *obj, jsval id, PRUint32 flags,\\n+                        JSObject **objp, PRBool *_retval);\\n   NS_IMETHOD PostCreate(nsIXPConnectWrappedNative *wrapper, JSContext *cx,\\n                         JSObject *obj);\\n   NS_IMETHOD GetProperty(nsIXPConnectWrappedNative *wrapper, JSContext *cx,\\n@@ -984,58 +992,6 @@ public:\\n   NS_IMETHOD Call(nsIXPConnectWrappedNative *wrapper, JSContext *cx,\\n                   JSObject *obj, PRUint32 argc, jsval *argv, jsval *vp,\\n                   PRBool *_retval);\\n-};\\n-\\n-\\n-// HTMLAppletElement helper\\n-\\n-class nsHTMLAppletElementSH : public nsHTMLExternalObjSH\\n-{\\n-protected:\\n-  nsHTMLAppletElementSH(nsDOMClassInfoData* aData) : nsHTMLExternalObjSH(aData)\\n-  {\\n-  }\\n-\\n-  virtual ~nsHTMLAppletElementSH()\\n-  {\\n-  }\\n-\\n-  virtual nsresult GetPluginJSObject(JSContext *cx, JSObject *obj,\\n-                                     nsIPluginInstance *plugin_inst,\\n-                                     JSObject **plugin_obj,\\n-                                     JSObject **plugin_proto);\\n-\\n-public:\\n-  static nsIClassInfo *doCreate(nsDOMClassInfoData* aData)\\n-  {\\n-    return new nsHTMLAppletElementSH(aData);\\n-  }\\n-};\\n-\\n-\\n-// HTMLEmbed/ObjectElement helper\\n-\\n-class nsHTMLPluginObjElementSH : public nsHTMLAppletElementSH\\n-{\\n-protected:\\n-  nsHTMLPluginObjElementSH(nsDOMClassInfoData* aData)\\n-    : nsHTMLAppletElementSH(aData)\\n-  {\\n-  }\\n-\\n-  virtual ~nsHTMLPluginObjElementSH()\\n-  {\\n-  }\\n-\\n-  virtual nsresult GetPluginJSObject(JSContext *cx, JSObject *obj,\\n-                                     nsIPluginInstance *plugin_inst,\\n-                                     JSObject **plugin_obj,\\n-                                     JSObject **plugin_proto);\\n-\\n-public:\\n-  NS_IMETHOD NewResolve(nsIXPConnectWrappedNative *wrapper, JSContext *cx,\\n-                        JSObject *obj, jsval id, PRUint32 flags,\\n-                        JSObject **objp, PRBool *_retval);\\n \\n   static nsIClassInfo *doCreate(nsDOMClassInfoData* aData)\\n   {\\ndiff --git a/modules/plugin/base/public/nsIPluginInstanceInternal.h b/modules/plugin/base/public/nsIPluginInstanceInternal.h\\nindex 955729f8..d55c8c3 100644\\n--- a/modules/plugin/base/public/nsIPluginInstanceInternal.h\\n+++ b/modules/plugin/base/public/nsIPluginInstanceInternal.h\\n@@ -42,6 +42,8 @@\\n struct JSObject;\\n struct JSContext;\\n \\n+#define NPRUNTIME_JSCLASS_NAME \\\"NPObject JS wrapper class\\\"\\n+\\n #define NS_IPLUGININSTANCEINTERNAL_IID \\\\\\n   { 0x301f13ed, 0x50f2, 0x4ed2, \\\\\\n     { 0x83, 0x0d, 0x78, 0x36, 0x1d, 0x01, 0x76, 0xaf }}\\ndiff --git a/modules/plugin/base/src/nsJSNPRuntime.cpp b/modules/plugin/base/src/nsJSNPRuntime.cpp\\nindex f9e665b..1bb3f5c 100644\\n--- a/modules/plugin/base/src/nsJSNPRuntime.cpp\\n+++ b/modules/plugin/base/src/nsJSNPRuntime.cpp\\n@@ -127,7 +127,7 @@ CreateNPObjectMember(NPP npp, JSContext *cx, JSObject *obj,\\n \\n static JSClass sNPObjectJSWrapperClass =\\n   {\\n-    \\\"NPObject JS wrapper class\\\",\\n+    NPRUNTIME_JSCLASS_NAME,\\n     JSCLASS_HAS_PRIVATE | JSCLASS_NEW_RESOLVE | JSCLASS_NEW_ENUMERATE,\\n     NPObjWrapper_AddProperty, NPObjWrapper_DelProperty,\\n     NPObjWrapper_GetProperty, NPObjWrapper_SetProperty,\\n\""}