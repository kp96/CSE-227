{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basa4ad0dd\""},"diff":"\"a4ad0dd Bug 355554 - File downloads should honor Vista's parent control setting.  Patch by Jim Mathies <jmathies@mozilla.com>.  r=gavin.sharp, r=sdwilsh, a=blocking-firefox3\\ndiff --git a/toolkit/components/downloads/public/nsIDownloadManager.idl b/toolkit/components/downloads/public/nsIDownloadManager.idl\\nindex 0342b21..baaaa02 100644\\n--- a/toolkit/components/downloads/public/nsIDownloadManager.idl\\n+++ b/toolkit/components/downloads/public/nsIDownloadManager.idl\\n@@ -51,7 +51,7 @@ interface nsIDownloadProgressListener;\\n interface nsISimpleEnumerator;\\n interface mozIStorageConnection;\\n \\n-[scriptable, uuid(b0ba9b75-2aad-4293-8680-3fc66b13e546)]\\n+[scriptable, uuid(a44925cb-186a-4e57-846e-8f9504b9f675)]\\n interface nsIDownloadManager : nsISupports {\\n   // Download States\\n   const short DOWNLOAD_NOTSTARTED       = -1;\\n@@ -61,6 +61,7 @@ interface nsIDownloadManager : nsISupports {\\n   const short DOWNLOAD_FAILED           = 2;\\n   const short DOWNLOAD_CANCELED         = 3;\\n   const short DOWNLOAD_PAUSED           = 4;\\n+  const short DOWNLOAD_BLOCKED          = 6;\\n \\n   const short DOWNLOAD_TYPE_DOWNLOAD    = 0;\\n \\ndiff --git a/toolkit/components/downloads/src/nsDownloadManager.cpp b/toolkit/components/downloads/src/nsDownloadManager.cpp\\nindex 2b5a36e..869b4d6 100644\\n--- a/toolkit/components/downloads/src/nsDownloadManager.cpp\\n+++ b/toolkit/components/downloads/src/nsDownloadManager.cpp\\n@@ -851,6 +851,7 @@ nsDownloadManager::RetryDownload(PRUint32 aID)\\n \\n   // if our download is not canceled or failed, we should fail\\n   if (dl->mDownloadState != nsIDownloadManager::DOWNLOAD_FAILED &&\\n+      dl->mDownloadState != nsIDownloadManager::DOWNLOAD_BLOCKED &&\\n       dl->mDownloadState != nsIDownloadManager::DOWNLOAD_CANCELED)\\n     return NS_ERROR_FAILURE;\\n \\n@@ -918,16 +919,18 @@ nsDownloadManager::CleanUp()\\n {\\n   DownloadState states[] = { nsIDownloadManager::DOWNLOAD_FINISHED,\\n                              nsIDownloadManager::DOWNLOAD_FAILED,\\n-                             nsIDownloadManager::DOWNLOAD_CANCELED };\\n+                             nsIDownloadManager::DOWNLOAD_CANCELED,\\n+                             nsIDownloadManager::DOWNLOAD_BLOCKED };\\n \\n   nsCOMPtr<mozIStorageStatement> stmt;\\n   nsresult rv = mDBConn->CreateStatement(NS_LITERAL_CSTRING(\\n     \\\"DELETE FROM moz_downloads \\\"\\n     \\\"WHERE state = ?1 \\\"\\n     \\\"OR state = ?2 \\\"\\n-    \\\"OR state = ?3\\\"), getter_AddRefs(stmt));\\n+    \\\"OR state = ?3 \\\"\\n+    \\\"OR state = ?4\\\"), getter_AddRefs(stmt));\\n   NS_ENSURE_SUCCESS(rv, rv);\\n-  for (PRUint32 i = 0; i < 3; ++i) {\\n+  for (PRUint32 i = 0; i < 4; ++i) {\\n     rv = stmt->BindInt32Parameter(i, states[i]);\\n     NS_ENSURE_SUCCESS(rv, rv);\\n   }\\n@@ -942,7 +945,8 @@ nsDownloadManager::GetCanCleanUp(PRBool *aResult)\\n \\n   DownloadState states[] = { nsIDownloadManager::DOWNLOAD_FINISHED,\\n                              nsIDownloadManager::DOWNLOAD_FAILED,\\n-                             nsIDownloadManager::DOWNLOAD_CANCELED };\\n+                             nsIDownloadManager::DOWNLOAD_CANCELED,\\n+                             nsIDownloadManager::DOWNLOAD_BLOCKED };\\n \\n   nsCOMPtr<mozIStorageStatement> stmt;\\n   nsresult rv = mDBConn->CreateStatement(NS_LITERAL_CSTRING(\\n@@ -950,9 +954,10 @@ nsDownloadManager::GetCanCleanUp(PRBool *aResult)\\n     \\\"FROM moz_downloads \\\"\\n     \\\"WHERE state = ?1 \\\"\\n     \\\"OR state = ?2 \\\"\\n-    \\\"OR state = ?3\\\"), getter_AddRefs(stmt));\\n+    \\\"OR state = ?3 \\\"\\n+    \\\"OR state = ?4\\\"), getter_AddRefs(stmt));\\n   NS_ENSURE_SUCCESS(rv, rv);\\n-  for (PRUint32 i = 0; i < 3; ++i) {\\n+  for (PRUint32 i = 0; i < 4; ++i) {\\n     rv = stmt->BindInt32Parameter(i, states[i]);\\n     NS_ENSURE_SUCCESS(rv, rv);\\n   }\\n@@ -1527,7 +1532,31 @@ nsDownload::OnStateChange(nsIWebProgress* aWebProgress,\\n   // that will close and call CancelDownload if it was the last open window.\\n   nsCOMPtr<nsIPrefBranch> pref = do_GetService(NS_PREFSERVICE_CONTRACTID);\\n \\n-  if (aStateFlags & STATE_STOP) {\\n+  if (aStateFlags & STATE_START) {\\n+    nsresult rv;\\n+    nsCOMPtr<nsIHttpChannel> channel = do_QueryInterface(aRequest, &rv);\\n+    if (NS_SUCCEEDED(rv)) {\\n+      PRUint32 status;\\n+      rv = channel->GetResponseStatus(&status);\\n+      // HTTP 450 - Blocked by parental control proxies\\n+      if (NS_SUCCEEDED(rv) && status == 450) {\\n+\\n+        // Cancel using the provided object\\n+        if (mCancelable)\\n+          (void)mCancelable->Cancel(NS_BINDING_ABORTED);\\n+\\n+        // Fail the download - DOWNLOAD_BLOCKED\\n+        mDownloadManager->FinishDownload(this, \\n+                                         nsIDownloadManager::DOWNLOAD_BLOCKED,\\n+                                         \\\"dl-blocked\\\");\\n+\\n+        mDownloadManager->NotifyListenersOnStateChange(aWebProgress, aRequest,\\n+                                                       aStateFlags, aStatus, this);\\n+\\n+        return UpdateDB();\\n+      }\\n+    }\\n+  } else if (aStateFlags & STATE_STOP) {\\n     if (nsDownloadManager::IsInFinalStage(mDownloadState)) {\\n       // Set file size at the end of a tranfer (for unknown transfer amounts)\\n       if (mMaxBytes == LL_MAXUINT)\\n@@ -1580,40 +1609,39 @@ nsDownload::OnStateChange(nsIWebProgress* aWebProgress,\\n           }\\n         }\\n       }\\n-    }\\n-\\n #ifdef XP_WIN\\n-    PRBool addToRecentDocs = PR_TRUE;\\n-    if (pref)\\n-      pref->GetBoolPref(PREF_BDM_ADDTORECENTDOCS, &addToRecentDocs);\\n+      PRBool addToRecentDocs = PR_TRUE;\\n+      if (pref)\\n+        pref->GetBoolPref(PREF_BDM_ADDTORECENTDOCS, &addToRecentDocs);\\n \\n-    if (addToRecentDocs) {\\n-      LPSHELLFOLDER lpShellFolder = NULL;\\n+      if (addToRecentDocs) {\\n+        LPSHELLFOLDER lpShellFolder = NULL;\\n \\n-      if (SUCCEEDED(::SHGetDesktopFolder(&lpShellFolder))) {\\n-        nsresult rv;\\n-        nsCOMPtr<nsIFileURL> fileURL = do_QueryInterface(mTarget, &rv);\\n-        NS_ENSURE_SUCCESS(rv, rv);\\n+        if (SUCCEEDED(::SHGetDesktopFolder(&lpShellFolder))) {\\n+          nsresult rv;\\n+          nsCOMPtr<nsIFileURL> fileURL = do_QueryInterface(mTarget, &rv);\\n+          NS_ENSURE_SUCCESS(rv, rv);\\n \\n-        nsCOMPtr<nsIFile> file;\\n-        rv = fileURL->GetFile(getter_AddRefs(file));\\n-        NS_ENSURE_SUCCESS(rv, rv);\\n+          nsCOMPtr<nsIFile> file;\\n+          rv = fileURL->GetFile(getter_AddRefs(file));\\n+          NS_ENSURE_SUCCESS(rv, rv);\\n         \\n-        nsAutoString path;\\n-        rv = file->GetPath(path);\\n-        NS_ENSURE_SUCCESS(rv, rv);\\n-\\n-        PRUnichar *filePath = ToNewUnicode(path);\\n-        LPITEMIDLIST lpItemIDList = NULL;\\n-        if (SUCCEEDED(lpShellFolder->ParseDisplayName(NULL, NULL, filePath, NULL, &lpItemIDList, NULL))) {\\n-          ::SHAddToRecentDocs(SHARD_PIDL, lpItemIDList);\\n-          ::CoTaskMemFree(lpItemIDList);\\n+          nsAutoString path;\\n+          rv = file->GetPath(path);\\n+          NS_ENSURE_SUCCESS(rv, rv);\\n+\\n+          PRUnichar *filePath = ToNewUnicode(path);\\n+          LPITEMIDLIST lpItemIDList = NULL;\\n+          if (SUCCEEDED(lpShellFolder->ParseDisplayName(NULL, NULL, filePath, NULL, &lpItemIDList, NULL))) {\\n+            ::SHAddToRecentDocs(SHARD_PIDL, lpItemIDList);\\n+            ::CoTaskMemFree(lpItemIDList);\\n+          }\\n+          nsMemory::Free(filePath);\\n+          lpShellFolder->Release();\\n         }\\n-        nsMemory::Free(filePath);\\n-        lpShellFolder->Release();\\n       }\\n-    }\\n #endif\\n+    }\\n \\n     // Now remove the download if the user's retention policy is \\\"Remove when Done\\\"\\n     if (mDownloadManager->GetRetentionBehavior() == 0)\\ndiff --git a/toolkit/locales/en-US/chrome/mozapps/downloads/downloads.dtd b/toolkit/locales/en-US/chrome/mozapps/downloads/downloads.dtd\\nindex 77cd32f..5f1c2f0 100644\\n--- a/toolkit/locales/en-US/chrome/mozapps/downloads/downloads.dtd\\n+++ b/toolkit/locales/en-US/chrome/mozapps/downloads/downloads.dtd\\n@@ -7,6 +7,9 @@\\n <!ENTITY starting.label                   \\\"Starting...\\\">\\n <!ENTITY failed.label                     \\\"Failed\\\">\\n \\n+<!-- 'Parental Controls' label should be capitalized -->\\n+<!ENTITY blocked.label                    \\\"Blocked by Parental Controls\\\">\\n+\\n <!ENTITY downloads.title                  \\\"Downloads\\\">\\n \\n <!ENTITY cmd.pause.label                  \\\"Pause\\\">\\ndiff --git a/toolkit/mozapps/downloads/content/DownloadProgressListener.js b/toolkit/mozapps/downloads/content/DownloadProgressListener.js\\nindex 261cf11..3b315e1 100644\\n--- a/toolkit/mozapps/downloads/content/DownloadProgressListener.js\\n+++ b/toolkit/mozapps/downloads/content/DownloadProgressListener.js\\n@@ -91,6 +91,7 @@ DownloadProgressListener.prototype =\\n         break;\\n       case Ci.nsIDownloadManager.DOWNLOAD_FAILED:\\n       case Ci.nsIDownloadManager.DOWNLOAD_CANCELED:\\n+      case Ci.nsIDownloadManager.DOWNLOAD_BLOCKED:\\n         downloadCompleted(aDownload);\\n         break;\\n       case Ci.nsIDownloadManager.DOWNLOAD_FINISHED:\\ndiff --git a/toolkit/mozapps/downloads/content/download.xml b/toolkit/mozapps/downloads/content/download.xml\\nindex c6cba7d5..b34ae20 100644\\n--- a/toolkit/mozapps/downloads/content/download.xml\\n+++ b/toolkit/mozapps/downloads/content/download.xml\\n@@ -98,6 +98,7 @@\\n           const dl = Components.interfaces.nsIDownloadManager;\\n           return state == dl.DOWNLOAD_FINISHED || \\n                  state == dl.DOWNLOAD_CANCELED || \\n+                 state == dl.DOWNLOAD_BLOCKED || \\n                  state == dl.DOWNLOAD_FAILED;\\n         ]]>\\n         </getter>\\n@@ -107,7 +108,9 @@\\n         <![CDATA[\\n           var state = parseInt(this.getAttribute(\\\"state\\\"));\\n           var dl = Components.interfaces.nsIDownloadManager;\\n-          return state == dl.DOWNLOAD_CANCELED || state == dl.DOWNLOAD_FAILED;\\n+          return state == dl.DOWNLOAD_CANCELED || \\n+                 state == dl.DOWNLOAD_BLOCKED || \\n+                 state == dl.DOWNLOAD_FAILED;\\n         ]]>\\n         </getter>\\n       </property>\\n@@ -284,5 +287,31 @@\\n       </xul:hbox>\\n     </content>  \\n   </binding>\\n-  \\n+\\n+  <binding id=\\\"download-blocked\\\" extends=\\\"chrome://mozapps/content/downloads/download.xml#download-base\\\">\\n+    <content>\\n+      <xul:hbox flex=\\\"1\\\">\\n+#ifdef SHOW_ICONS\\n+        <xul:vbox pack=\\\"start\\\">\\n+          <xul:image class=\\\"downloadTypeIcon blockedIcon\\\"/>\\n+        </xul:vbox>\\n+#endif\\n+        <xul:vbox pack=\\\"start\\\" flex=\\\"1\\\">\\n+          <xul:label xbl:inherits=\\\"value=target,tooltiptext=target\\\"\\n+                     crop=\\\"center\\\" class=\\\"name\\\"/>\\n+          <xul:spacer flex=\\\"1\\\"/>\\n+          <xul:label value=\\\"&blocked.label;\\\" class=\\\"status\\\"/>\\n+        </xul:vbox>\\n+        <xul:vbox pack=\\\"center\\\">\\n+          <xul:hbox>\\n+            <xul:button class=\\\"retry mini-button\\\" tooltiptext=\\\"&cmd.retry.label;\\\"\\n+                        command=\\\"cmd_retry\\\" ondblclick=\\\"event.stopPropagation();\\\"/>\\n+            <xul:button class=\\\"info mini-button\\\" tooltiptext=\\\"&cmd.info.label;\\\"\\n+                        command=\\\"cmd_showInfo\\\" ondblclick=\\\"event.stopPropagation();\\\"\\n+                        anonid=\\\"info\\\"/>\\n+          </xul:hbox>\\n+        </xul:vbox>\\n+      </xul:hbox>\\n+    </content>\\n+  </binding>\\n </bindings>\\ndiff --git a/toolkit/mozapps/downloads/content/downloads.css b/toolkit/mozapps/downloads/content/downloads.css\\nindex 9006b48..c2c5d3b 100644\\n--- a/toolkit/mozapps/downloads/content/downloads.css\\n+++ b/toolkit/mozapps/downloads/content/downloads.css\\n@@ -23,6 +23,10 @@ richlistitem[type=\\\"download\\\"][state=\\\"4\\\"] {\\n   -moz-binding: url('chrome://mozapps/content/downloads/download.xml#download-paused');\\n }\\n \\n+richlistitem[type=\\\"download\\\"][state=\\\"6\\\"] {\\n+  -moz-binding: url('chrome://mozapps/content/downloads/download.xml#download-blocked');\\n+}\\n+\\n /* Only focus buttons in the selected item*/\\n richlistitem[type=\\\"download\\\"]:not([selected=\\\"true\\\"]) button {\\n   -moz-user-focus: none;\\ndiff --git a/toolkit/mozapps/downloads/content/downloads.js b/toolkit/mozapps/downloads/content/downloads.js\\nindex 8bbac5c..0ee7a8c 100644\\n--- a/toolkit/mozapps/downloads/content/downloads.js\\n+++ b/toolkit/mozapps/downloads/content/downloads.js\\n@@ -88,7 +88,7 @@ function createDownloadItem(aID, aFile, aTarget, aURI, aState,\\n   dl.setAttribute(\\\"type\\\", \\\"download\\\");\\n   dl.setAttribute(\\\"id\\\", \\\"dl\\\" + aID);\\n   dl.setAttribute(\\\"dlid\\\", aID);\\n-  dl.setAttribute(\\\"image\\\", \\\"moz-icon://\\\" + aFile + \\\"?size=32\\\");\\n+  dl.setAttribute(\\\"image\\\", \\\"moz-icon://\\\" + aFile + \\\"?size=32\\\");\\r\\n   dl.setAttribute(\\\"file\\\", aFile);\\n   dl.setAttribute(\\\"target\\\", aTarget);\\n   dl.setAttribute(\\\"uri\\\", aURI);\\n@@ -262,6 +262,7 @@ function onDownloadDblClick(aEvent)\\n         gDownloadViewController.doCommand(\\\"cmd_resume\\\");\\n         break;\\n       case Ci.nsIDownloadManager.DOWNLOAD_CANCELED:\\n+      case Ci.nsIDownloadManager.DOWNLOAD_BLOCKED:\\n       case Ci.nsIDownloadManager.DOWNLOAD_FAILED:\\n         gDownloadViewController.doCommand(\\\"cmd_retry\\\");\\n         break;\\n@@ -441,13 +442,21 @@ function Shutdown()\\n \\n ///////////////////////////////////////////////////////////////////////////////\\n // View Context Menus\\n-var gContextMenus = [ \\n+var gContextMenus = [\\n+  // DOWNLOAD_DOWNLOADING\\n   [\\\"menuitem_pause\\\", \\\"menuitem_cancel\\\"],\\n+  // DOWNLOAD_FINISHED\\n   [\\\"menuitem_open\\\", \\\"menuitem_show\\\", \\\"menuitem_remove\\\"],\\n+  // DOWNLOAD_FAILED\\n   [\\\"menuitem_retry\\\", \\\"menuitem_remove\\\"],\\n+  // DOWNLOAD_CANCELED\\n   [\\\"menuitem_retry\\\", \\\"menuitem_remove\\\"],\\n+  // DOWNLOAD_PAUSED\\n   [\\\"menuitem_resume\\\", \\\"menuitem_cancel\\\"],\\n-  [\\\"menuitem_cancel\\\"]\\n+  // DOWNLOAD_QUEUED\\n+  [\\\"menuitem_cancel\\\"],\\n+  // DOWNLOAD_BLOCKED\\n+  [\\\"menuitem_retry\\\", \\\"menuitem_remove\\\"]\\n ];\\n \\n function buildContextMenu(aEvent)\\n@@ -740,7 +749,8 @@ function buildDownloadListWithTime(aTime)\\n                          \\\"WHERE startTime >= ?1 \\\" +\\n                          \\\"AND (state = ?2 \\\" +\\n                          \\\"OR state = ?3 \\\" +\\n-                         \\\"OR state = ?4) \\\" +\\n+                         \\\"OR state = ?4 \\\" +\\n+                         \\\"OR state = ?5) \\\" +\\n                          \\\"ORDER BY endTime ASC\\\");\\n   }\\n \\n@@ -749,6 +759,7 @@ function buildDownloadListWithTime(aTime)\\n     stmt.bindInt32Parameter(1, Ci.nsIDownloadManager.DOWNLOAD_FINISHED);\\n     stmt.bindInt32Parameter(2, Ci.nsIDownloadManager.DOWNLOAD_FAILED);\\n     stmt.bindInt32Parameter(3, Ci.nsIDownloadManager.DOWNLOAD_CANCELED);\\n+    stmt.bindInt32Parameter(4, Ci.nsIDownloadManager.DOWNLOAD_BLOCKED);\\n     buildDownloadList(stmt, gDownloadsOtherTitle);\\n   } finally {\\n     stmt.reset();\\ndiff --git a/toolkit/themes/pinstripe/global/icons/Error.png b/toolkit/themes/pinstripe/global/icons/Error.png\\nnew file mode 100644\\nindex 0000000..3cf6c1f\\nBinary files /dev/null and b/toolkit/themes/pinstripe/global/icons/Error.png differ\\ndiff --git a/toolkit/themes/pinstripe/global/jar.mn b/toolkit/themes/pinstripe/global/jar.mn\\nindex 5dbe214..0fab93a 100644\\n--- a/toolkit/themes/pinstripe/global/jar.mn\\n+++ b/toolkit/themes/pinstripe/global/jar.mn\\n@@ -147,6 +147,7 @@ classic.jar:\\n +  skin/classic/global/icons/small-globe-sunken.png                   (icons/small-globe-sunken.png)\\n +  skin/classic/global/icons/white-gray-gradient.gif                  (icons/white-gray-gradient.gif)\\n +  skin/classic/global/icons/warning-large.png                        (icons/warning-large.png)\\n++  skin/classic/global/icons/Error.png                                (icons/Error.png)\\n +  skin/classic/global/icons/thumb.png                                (icons/thumb.png)\\n +  skin/classic/global/menu/menu-arrow-dis.gif                        (menu/menu-arrow-dis.gif)\\n +  skin/classic/global/menu/menu-arrow-hov.gif                        (menu/menu-arrow-hov.gif)\\ndiff --git a/toolkit/themes/pinstripe/mozapps/downloads/downloads.css b/toolkit/themes/pinstripe/mozapps/downloads/downloads.css\\nindex 986fa7c..28777b6 100644\\n--- a/toolkit/themes/pinstripe/mozapps/downloads/downloads.css\\n+++ b/toolkit/themes/pinstripe/mozapps/downloads/downloads.css\\n@@ -77,6 +77,10 @@ richlistitem[type=\\\"download\\\"] button,\\n   -moz-image-region: rect(32px, 16px, 48px, 0px);\\n }\\n \\n+.blockedIcon {\\n+  list-style-image: url(chrome://global/skin/icons/Error.png);\\n+}\\n+\\n /* prevent flickering when changing states */\\n .downloadTypeIcon {\\n   min-height: 32px;\\ndiff --git a/toolkit/themes/winstripe/mozapps/downloads/downloads.css b/toolkit/themes/winstripe/mozapps/downloads/downloads.css\\nindex 8295924..60dd035 100644\\n--- a/toolkit/themes/winstripe/mozapps/downloads/downloads.css\\n+++ b/toolkit/themes/winstripe/mozapps/downloads/downloads.css\\n@@ -74,6 +74,10 @@ richlistitem[type=\\\"download\\\"] .name {\\n   -moz-image-region: rect(32px, 16px, 48px, 0px);\\n }\\n \\n+.blockedIcon {\\n+  list-style-image: url(chrome://global/skin/icons/Error.png);\\n+}\\n+\\n /* prevent flickering when changing states */\\n .downloadTypeIcon {\\n   min-height: 32px;\\n\""}