{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas869b128\""},"diff":"\"869b128 bug 390539: honor the --test-path option for browser chrome tests as well; r=gavin\\ndiff --git a/testing/mochitest/browser-harness.xul b/testing/mochitest/browser-harness.xul\\nindex c7673a1..2e38230 100644\\n--- a/testing/mochitest/browser-harness.xul\\n+++ b/testing/mochitest/browser-harness.xul\\n@@ -49,6 +49,13 @@\\n     function TestStart() {\\n       gConfig = readConfig();\\n \\n+      // If MochiTest was started with the --test-path flag specifying a subset\\n+      // of tests to run, put that path in the label of the \\\"Run Tests\\\" button\\n+      // so the tester knows which tests will run when they press that button.\\n+      if (gConfig.testPath)\\n+        document.getElementById(\\\"runTestsButton\\\").label =\\n+          \\\"Run \\\" + gConfig.testPath + \\\" Tests\\\";\\n+\\n       if (gConfig.autoRun)\\n         setTimeout(runAllTests, 0);\\n     }\\n@@ -129,8 +136,16 @@\\n     function listTests() {\\n       const Cc = Components.classes; const Ci = Components.interfaces;\\n \\n+      var ioSvc = Cc[\\\"@mozilla.org/network/io-service;1\\\"].\\n+                  getService(Ci.nsIIOService);\\n+\\n       var testsDir = getChromeDir();\\n       testsDir.appendRelativePath(\\\"browser\\\");\\n+      if (gConfig.testPath) {\\n+        var testsDirURI = ioSvc.newFileURI(testsDir);\\n+        testsDir = ioSvc.newURI(gConfig.testPath, null, testsDirURI)\\n+                        .QueryInterface(Ci.nsIFileURL).file;\\n+      }\\n \\n       /** load server.js in so we can share template functions **/\\n       var scriptLoader = Cc[\\\"@mozilla.org/moz/jssubscript-loader;1\\\"].\\n@@ -138,8 +153,11 @@\\n       var srvScope = {};\\n       scriptLoader.loadSubScript(\\\"chrome://mochikit/content/server.js\\\", srvScope);\\n \\n-      var [links, count] = srvScope.list(\\\"chrome://mochikit/content/browser/\\\",\\n-                                         testsDir, true);\\n+      var requestPath = \\\"chrome://mochikit/content/browser\\\";\\n+      if (gConfig.testPath)\\n+        requestPath += \\\"/\\\" + gConfig.testPath;\\n+\\n+      var [links, count] = srvScope.list(requestPath, testsDir, true);\\n       var fileNames = [];\\n       srvScope.arrayOfTestFiles(links, fileNames, /browser_.+\\\\.js$/);\\n \\n@@ -210,7 +228,7 @@\\n       setStatus(\\\"Done.\\\");\\n     }\\n   ]]></script>\\n-  <button onclick=\\\"runAllTests();\\\" label=\\\"Run All Tests\\\"/>\\n+  <button id=\\\"runTestsButton\\\" onclick=\\\"runAllTests();\\\" label=\\\"Run All Tests\\\"/>\\n   <label id=\\\"status\\\"/>\\n   <textbox flex=\\\"1\\\" multiline=\\\"true\\\" id=\\\"results\\\"/>\\n </window>\\ndiff --git a/testing/mochitest/runtests.pl.in b/testing/mochitest/runtests.pl.in\\nindex 3f86bc1..2862212 100644\\n--- a/testing/mochitest/runtests.pl.in\\n+++ b/testing/mochitest/runtests.pl.in\\n@@ -202,14 +202,15 @@ sub main {\\n   if ($do_chrome) {\\n    $url = CHROMETESTS_URL . ($test_path ? $test_path : \\\"\\\") . \\\"?\\\";\\n   } elsif ($do_browser_chrome) {\\n-   # Tests will run from an overlay, no need to load any URL\\n+   # Tests will run from an overlay, no need to load any URL.  We'll include\\n+   # the test path in the config file so the browser chrome harness can use it.\\n    $url = \\\"about:blank\\\";\\n   } else {\\n    $url = TESTS_URL . ($test_path ? $test_path : \\\"\\\") . \\\"?\\\";\\n   }\\n \\n   if ($do_browser_chrome) {\\n-    generate_test_config($autorun, $close_when_done, $log_path);\\n+    generate_test_config($autorun, $close_when_done, $log_path, $test_path);\\n   } else {\\n     if ($autorun) {\\n       $url .= \\\"&autorun=1\\\";\\n@@ -367,17 +368,20 @@ sub startServer {\\n  ##############\\n \\n sub generate_test_config {\\n-  my ($autorun, $close_when_done, $log_path) = @_;\\n+  my ($autorun, $close_when_done, $log_path, $test_path) = @_;\\n   $autorun = $autorun || 0;\\n   $close_when_done = $close_when_done || 0;\\n   $log_path = $log_path || \\\"\\\";\\n-  $log_path =~ s/\\\\\\\\/\\\\\\\\\\\\\\\\/;\\n+  $log_path =~ s/\\\\\\\\/\\\\\\\\\\\\\\\\/g;\\n+  $test_path = $test_path || \\\"\\\";\\n+  $test_path =~ s/\\\\\\\\/\\\\\\\\\\\\\\\\/g;\\n \\n   my $config_content = <<CONFIGEND;\\n ({\\n   autoRun: $autorun,\\n   closeWhenDone: $close_when_done,\\n-  logPath: \\\"$log_path\\\"\\n+  logPath: \\\"$log_path\\\",\\n+  testPath: \\\"$test_path\\\"\\n })\\n CONFIGEND\\n \\n\""}