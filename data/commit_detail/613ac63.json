{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas613ac63\""},"diff":"\"613ac63 Remove expensive DOMAttrModified listeners b=395496 r=Enn sr+a=bz\\ndiff --git a/toolkit/content/widgets/menulist.xml b/toolkit/content/widgets/menulist.xml\\nindex eb1bd99..28e330d 100644\\n--- a/toolkit/content/widgets/menulist.xml\\n+++ b/toolkit/content/widgets/menulist.xml\\n@@ -47,7 +47,7 @@\\n       </handler>\\n     </handlers>\\n \\n-    <implementation implements=\\\"nsIDOMXULMenuListElement, nsIAccessibleProvider, nsIDOMEventListener\\\">\\n+    <implementation implements=\\\"nsIDOMXULMenuListElement, nsIAccessibleProvider\\\">\\n       <constructor>\\n         this.setInitialSelection()\\n       </constructor>\\n@@ -189,7 +189,10 @@\\n \\n             if (oldval) {\\n               oldval.removeAttribute('selected');\\n-              oldval.removeEventListener(\\\"DOMAttrModified\\\", this, false);\\n+              document.removeBroadcastListenerFor(oldval, this, \\\"value\\\");\\n+              document.removeBroadcastListenerFor(oldval, this, \\\"label\\\");\\n+              document.removeBroadcastListenerFor(oldval, this, \\\"image\\\");\\n+              document.removeBroadcastListenerFor(oldval, this, \\\"description\\\");\\n             }\\n \\n             this.mSelectedInternal = val;\\n@@ -199,7 +202,10 @@\\n               this.setAttribute('image', val.getAttribute('image'));\\n               this.setAttribute('label', val.getAttribute('label'));\\n               this.setAttribute('description', val.getAttribute('description'));\\n-              val.addEventListener(\\\"DOMAttrModified\\\", this, false);\\n+              document.addBroadcastListenerFor(val, this, \\\"value\\\");\\n+              document.addBroadcastListenerFor(val, this, \\\"label\\\");\\n+              document.addBroadcastListenerFor(val, this, \\\"image\\\");\\n+              document.addBroadcastListenerFor(val, this, \\\"description\\\");\\n             }\\n             else {\\n               this.removeAttribute('value');\\n@@ -253,25 +259,6 @@\\n         </body>\\n       </method>\\n \\n-      <method name=\\\"handleEvent\\\">\\n-        <parameter name=\\\"event\\\"/>\\n-        <body>\\n-        <![CDATA[\\n-          if (event.type == \\\"DOMAttrModified\\\" &&\\n-              event.target == this.mSelectedInternal) {\\n-            var attrName = event.attrName;\\n-            switch (attrName) {\\n-              case \\\"value\\\":\\n-              case \\\"label\\\":\\n-              case \\\"image\\\":\\n-              case \\\"description\\\":\\n-                this.setAttribute(attrName, event.newValue);\\n-            }\\n-          }\\n-        ]]>\\n-        </body>\\n-      </method>\\n-\\n       <method name=\\\"appendItem\\\">\\n         <parameter name=\\\"label\\\"/>\\n         <parameter name=\\\"value\\\"/>\\n@@ -357,8 +344,13 @@\\n \\n       <destructor>\\n         <![CDATA[\\n-           if (this.mSelectedInternal)\\n-             this.mSelectedInternal.removeEventListener(\\\"DOMAttrModified\\\", this, false);\\n+          if (this.mSelectedInternal) {\\n+            document.removeBroadcastListenerFor(this.mSelectedInternal, this, \\\"value\\\");\\n+            document.removeBroadcastListenerFor(this.mSelectedInternal, this, \\\"label\\\");\\n+            document.removeBroadcastListenerFor(this.mSelectedInternal, this, \\\"image\\\");\\n+            document.removeBroadcastListenerFor(this.mSelectedInternal, this, \\\"description\\\");\\n+           \\n+          }\\n         ]]>\\n       </destructor>\\n     </implementation>\\n\""}