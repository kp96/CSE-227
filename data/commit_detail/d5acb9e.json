{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basd5acb9e\""},"diff":"\"d5acb9e Bug 387970: Tag the changes to the TinderConfig files.\\ndiff --git a/tools/release/Bootstrap/Step/TinderConfig.pm b/tools/release/Bootstrap/Step/TinderConfig.pm\\nindex 578ea0e..57c0c90 100644\\n--- a/tools/release/Bootstrap/Step/TinderConfig.pm\\n+++ b/tools/release/Bootstrap/Step/TinderConfig.pm\\n@@ -6,7 +6,8 @@ package Bootstrap::Step::TinderConfig;\\n \\n use Bootstrap::Step;\\n use Bootstrap::Config;\\n-use Bootstrap::Util qw(CvsCatfile);\\n+use Bootstrap::Util qw(CvsCatfile CvsTag);\\n+\\n use MozBuild::TinderLogParse;\\n use MozBuild::Util qw(MkdirWithPath);\\n \\n@@ -19,6 +20,7 @@ sub Execute {\\n     my $configBumpDir = $config->Get(var => 'configBumpDir');\\n     my $productTag = $config->Get(var => 'productTag');\\n     my $version = $config->Get(var => 'version');\\n+    my $rc = int($config->Get(var => 'rc'));\\n     my $mozillaCvsroot = $config->Get(var => 'mozillaCvsroot');\\n     my $product = $config->Get(var => 'product');\\n     my $logDir = $config->Get(sysvar => 'logDir');\\n@@ -27,38 +29,82 @@ sub Execute {\\n \\n     my $releaseTag = $productTag . '_RELEASE';\\n \\n-    MkdirWithPath(dir => $configBumpDir)\\n-      or die(\\\"Cannot mkdir $configBumpDir: $!\\\");\\n+    my $productConfigBumpDir = catfile($configBumpDir, \\n+                                       \\\"$product-$version-rc$rc\\\");\\n+\\n+    if (-e $productConfigBumpDir) {\\n+        die \\\"ASSERT: Step::TinderConfig::Execute(): $productConfigBumpDir \\\" .\\n+         'already exists?';\\n+    }\\n+\\n+    MkdirWithPath(dir => $productConfigBumpDir)\\n+      or die(\\\"Cannot mkdir $productConfigBumpDir: $!\\\");\\n \\n     foreach my $branch ($branchTag . '_release', $branchTag . '_l10n_release') {\\n         $this->Shell(\\n           cmd => 'cvs',\\n           cmdArgs => ['-d', $mozillaCvsroot, \\n-                      'co', '-d', 'tinderbox-configs',\\n+                      'co', '-d', $branch,\\n                       '-r', $branch,\\n                       CvsCatfile('mozilla', 'tools', 'tinderbox-configs',\\n                                  $product, $osname)],\\n           logFile => catfile($logDir, \\n            'build_config-checkout-' . $branch . '.log'),\\n-          dir => $configBumpDir,\\n+          dir => $productConfigBumpDir,\\n         );\\n-    \\n-        foreach my $configFile ('tinder-config.pl', 'mozconfig') {\\n+  \\n+        my @bumpConfigFiles = qw(tinder-config.pl mozconfig);\\n+\\n+        foreach my $configFile (@bumpConfigFiles) {\\n             $config->Bump( configFile => \\n-             catfile($configBumpDir, 'tinderbox-configs', $configFile));\\n+             catfile($productConfigBumpDir, $branch, $configFile));\\n             $this->Shell(\\n               cmd => 'cvs',\\n               cmdArgs => ['-d', $mozillaCvsroot, \\n                           'ci', '-m', \\n                           '\\\"Automated configuration bump, release for ' \\n-                           . $product  . ' ' . $version . '\\\"', \\n-                          CvsCatfile('tinderbox-configs', $configFile)],\\n+                           . $product  . ' ' . $version . \\\"rc$rc\\\" . '\\\"', \\n+                          $configFile],\\n               logFile => catfile($logDir, \\n                'build_config-checkin-' . $configFile . '-' . \\n                 $branch . '.log'),\\n-              dir => catfile($configBumpDir),\\n+              dir => catfile($productConfigBumpDir, $branch)\\n             );\\n         }\\n+\\n+        my @tagNames = ($productTag . '_RELEASE',\\n+                        $productTag . '_RC' . $rc);\\n+\\n+        foreach my $configTagName (@tagNames) {\\n+            # XXX - Don't like doing this this way (specifically, the logic \\n+            # change depending on the name of the branch in this loop...) \\n+            #\\n+            # Also, the force argument to CvsTag() is interesting; we only\\n+            # want to cvs tag -F a whatever_RELEASE tag if we're not tagging\\n+            # the first RC; so, the logic is (rc > 1 && we're doing a _RELEASE\\n+            # tag; also, we have to surround it in int(); otherwise, if it's\\n+            # false, we get the empty string, which is undef which is bad.\\n+            $configTagName .= '_l10n' if ($branch =~ /l10n/);\\n+\\n+            my $rv = CvsTag(tagName => $configTagName,\\n+                            force => int($rc > 1 && \\n+                                         $configTagName =~ /_RELEASE/),\\n+                            files => \\\\@bumpConfigFiles,\\n+                            cvsDir => catfile($productConfigBumpDir,\\n+                                              $branch),\\n+                            logFile => catfile($logDir, 'build_config-tag-' . \\n+                                               $branch . '.log'),\\n+                            output => 1\\n+                           );\\n+\\n+            if ($rv->{'timedOut'} || ($rv->{'exitValue'} != 0)) {\\n+                $this->Log(msg => \\\"CvsTag() in TinderConfig() failed; \\\" .\\n+                \\\"tag: $configTagName, rv: $rv->{'exitValue'}, \\\" .\\n+                \\\"timeout: $rv->{'timedOut'}, output: $rv->{'output'}\\\");\\n+                die(\\\"Bootstrap::Step::TinderConfig tag failed: \\\"\\n+                 . $rv->{'exitValue'});\\n+            }\\n+        }\\n     }\\n }\\n \\n@@ -70,16 +116,24 @@ sub Verify {\\n     my $logDir = $config->Get(sysvar => 'logDir');\\n \\n     foreach my $branch ($branchTag . '_release', $branchTag . '_l10n_release') {\\n+\\n         $this->CheckLog(\\n             log => catfile($logDir, \\n              'build_config-checkout-' . $branch . '.log'),\\n             notAllowed => 'fail',\\n         );\\n+\\n         $this->CheckLog(\\n             log => catfile($logDir, \\n              'build_config-checkout-' . $branch . '.log'),\\n             notAllowed => 'aborted',\\n         );\\n+\\n+        $this->CheckLog(\\n+            log => catfile($logDir, 'build_config-tag-' . $branch . '.log'),\\n+            checkFor => '^T',\\n+        );\\n+\\n         foreach my $configFile ('mozconfig', 'tinder-config.pl') {\\n             $this->CheckLog(\\n              log => catfile($logDir,\\n\""}