{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas438d741\""},"diff":"\"438d741 remove unnecessary Quickdraw code from child views, prep for optimizing by not making QD calls unless a QD plugin is present. b=396373 r=cbarrett sr=roc a=roc\\ndiff --git a/widget/src/cocoa/nsChildView.h b/widget/src/cocoa/nsChildView.h\\nindex f0680bb..4f9c75a 100644\\n--- a/widget/src/cocoa/nsChildView.h\\n+++ b/widget/src/cocoa/nsChildView.h\\n@@ -327,9 +327,6 @@ protected:\\n   virtual NSView*   CreateCocoaView(NSRect inFrame);\\n   void              TearDownView();\\n \\n-  // return qdPort for a focussed ChildView, and null otherwise\\n-  GrafPtr           GetChildViewQuickDrawPort();\\n-\\n protected:\\n \\n   NSView<mozView>*      mView;      // my parallel cocoa view (ChildView or NativeScrollbarView), [STRONG]\\n@@ -357,7 +354,6 @@ protected:\\n   PRPackedBool          mPluginIsCG; // true if this is a CoreGraphics plugin\\n   \\n   nsPluginPort          mPluginPort;\\n-  RgnHandle             mVisRgn;\\n };\\n \\n \\ndiff --git a/widget/src/cocoa/nsChildView.mm b/widget/src/cocoa/nsChildView.mm\\nindex 03a8dd4..db74907 100644\\n--- a/widget/src/cocoa/nsChildView.mm\\n+++ b/widget/src/cocoa/nsChildView.mm\\n@@ -350,7 +350,6 @@ nsChildView::nsChildView() : nsBaseWidget()\\n , mIsPluginView(PR_FALSE)\\n , mPluginDrawing(PR_FALSE)\\n , mPluginIsCG(PR_FALSE)\\n-, mVisRgn(nsnull)\\n {\\n #ifdef PR_LOGGING\\n   if (!sCocoaLog)\\n@@ -371,11 +370,6 @@ nsChildView::~nsChildView()\\n   }\\n \\n   TearDownView(); // should have already been done from Destroy\\n-  \\n-  if (mVisRgn) {\\n-    ::DisposeRgn(mVisRgn);\\n-    mVisRgn = nsnull;\\n-  }\\n }\\n \\n \\n@@ -582,7 +576,7 @@ void* nsChildView::GetNativeData(PRUint32 aDataType)\\n \\n   switch (aDataType) \\n   {\\n-    case NS_NATIVE_WIDGET:            // the NSView\\n+    case NS_NATIVE_WIDGET:\\n     case NS_NATIVE_DISPLAY:\\n       retVal = (void*)mView;\\n       break;\\n@@ -590,25 +584,12 @@ void* nsChildView::GetNativeData(PRUint32 aDataType)\\n     case NS_NATIVE_WINDOW:\\n       retVal = [mView nativeWindow];\\n       break;\\n-      \\n-    case NS_NATIVE_GRAPHIC:           // quickdraw port\\n-      // XXX qdPort is invalid if we have not locked focus\\n-      retVal = GetChildViewQuickDrawPort();\\n-      break;\\n-      \\n-    case NS_NATIVE_REGION:\\n-    {\\n-      if (!mVisRgn)\\n-        mVisRgn = ::NewRgn();\\n-\\n-      // XXX qdPort is invalid if we have not locked focus\\n-      GrafPtr grafPort = GetChildViewQuickDrawPort();\\n-      if (grafPort && mVisRgn)\\n-        ::GetPortVisibleRegion(grafPort, mVisRgn);\\n-      retVal = (void*)mVisRgn;\\n+\\n+    case NS_NATIVE_GRAPHIC:\\n+      NS_ASSERTION(0, \\\"Requesting NS_NATIVE_GRAPHIC on a Mac OS X child view!\\\");\\n+      retVal = nsnull;\\n       break;\\n-    }\\n-      \\n+\\n     case NS_NATIVE_OFFSETX:\\n       retVal = 0;\\n       break;\\n@@ -1689,15 +1670,6 @@ NS_IMETHODIMP nsChildView::GetToggledKeyState(PRUint32 aKeyCode,\\n }\\n \\n \\n-GrafPtr\\n-nsChildView::GetChildViewQuickDrawPort()\\n-{\\n-  if ([mView isKindOfClass:[ChildView class]])\\n-    return (GrafPtr)[(ChildView*)mView qdPort];\\n-  return NULL;\\n-}\\n-\\n-\\n #pragma mark -\\n \\n \\n@@ -1862,10 +1834,12 @@ NSEvent* globalDragEvent = nil;\\n   \\n   if (sLastViewEntered == self)\\n     sLastViewEntered = nil;\\n-  \\n-  [super dealloc];    // This sets the current port to _savePort (which should be\\n-                      // a valid port, checked with the assertion above.\\n-  SetPort(NULL);      // Bullet-proof against future changes in NSQDView\\n+\\n+  [super dealloc];    \\n+\\n+  // This sets the current port to _savePort.\\n+  // todo: Only do if a Quickdraw plugin is present in the hierarchy!\\n+  ::SetPort(NULL);\\n }\\n \\n \\n@@ -2217,7 +2191,7 @@ NSEvent* globalDragEvent = nil;\\n   // Set the current GrafPort to a \\\"safe\\\" port before calling [NSQuickDrawView lockFocus],\\n   // so that the NSQuickDrawView stashes a pointer to this known-good port internally.\\n   // It will set the port back to this port on destruction.\\n-  SetPort(NULL);\\n+  ::SetPort(NULL);  // todo: only do if a Quickdraw plugin is present in the hierarchy!\\n   [super lockFocus];\\n }\\n \\n\""}