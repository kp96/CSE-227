{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas8f798c6\""},"diff":"\"8f798c6 Expose the image's principal on its imgIRequest.  Bug 389188, r=pavlov, sr=biesi, a=pavlov.\\ndiff --git a/modules/libpr0n/build/Makefile.in b/modules/libpr0n/build/Makefile.in\\nindex 4a851f2..eec0fcf 100644\\n--- a/modules/libpr0n/build/Makefile.in\\n+++ b/modules/libpr0n/build/Makefile.in\\n@@ -58,6 +58,9 @@ REQUIRES\\t= xpcom \\\\\\n \\t\\t  necko \\\\\\n \\t\\t  nkcache \\\\\\n \\t\\t  gfx \\\\\\n+\\t\\t  caps \\\\\\n+\\t\\t  xpconnect \\\\\\n+\\t\\t  js \\\\\\n \\t\\t  $(JPEG_REQUIRES) \\\\\\n \\t\\t  $(PNG_REQUIRES) \\\\\\n \\t\\t  $(ZLIB_REQUIRES) \\\\\\ndiff --git a/modules/libpr0n/public/imgIRequest.idl b/modules/libpr0n/public/imgIRequest.idl\\nindex d9e053f..11b32a0 100644\\n--- a/modules/libpr0n/public/imgIRequest.idl\\n+++ b/modules/libpr0n/public/imgIRequest.idl\\n@@ -43,6 +43,7 @@\\n interface imgIContainer;\\n interface imgIDecoderObserver;\\n interface nsIURI;\\n+interface nsIPrincipal;\\n \\n /**\\n  * imgIRequest interface\\n@@ -51,7 +52,7 @@ interface nsIURI;\\n  * @version 0.1\\n  * @see imagelib2\\n  */\\n-[scriptable, uuid(ccf705f6-1dd1-11b2-82ef-e18eccf7f7ec)]\\n+[scriptable, uuid(a297d3fa-5e0c-4e59-9f30-a01c9d4f3f8b)]\\n interface imgIRequest : nsIRequest\\n {\\n   /**\\n@@ -80,6 +81,11 @@ interface imgIRequest : nsIRequest\\n    */\\n   readonly attribute unsigned long imageStatus;\\n \\n+  /**\\n+   * The URI the image load was started with.  Note that this might not be the\\n+   * actual URI for the image (e.g. if HTTP redirects happened during the\\n+   * load).\\n+   */\\n   readonly attribute nsIURI URI;\\n \\n   readonly attribute imgIDecoderObserver decoderObserver;\\n@@ -93,5 +99,10 @@ interface imgIRequest : nsIRequest\\n    * for this image load.\\n    */\\n   imgIRequest clone(in imgIDecoderObserver aObserver);\\n+\\n+  /**\\n+   * The principal gotten from the channel the image was loaded from.\\n+   */\\n+  readonly attribute nsIPrincipal imagePrincipal;\\n };\\n \\ndiff --git a/modules/libpr0n/src/Makefile.in b/modules/libpr0n/src/Makefile.in\\nindex 5db38f8..2f85dbf 100644\\n--- a/modules/libpr0n/src/Makefile.in\\n+++ b/modules/libpr0n/src/Makefile.in\\n@@ -56,6 +56,9 @@ REQUIRES\\t= xpcom \\\\\\n \\t\\t  gfx \\\\\\n \\t\\t  thebes \\\\\\n \\t\\t  cairo \\\\\\n+\\t\\t  caps \\\\\\n+\\t\\t  xpconnect \\\\\\n+\\t\\t  js \\\\\\n \\t\\t  $(NULL)\\n \\n CPPSRCS\\t\\t= \\\\\\ndiff --git a/modules/libpr0n/src/imgRequest.cpp b/modules/libpr0n/src/imgRequest.cpp\\nindex 3e26715..1b2f406 100644\\n--- a/modules/libpr0n/src/imgRequest.cpp\\n+++ b/modules/libpr0n/src/imgRequest.cpp\\n@@ -61,6 +61,7 @@\\n #include \\\"nsIProxyObjectManager.h\\\"\\n #include \\\"nsIServiceManager.h\\\"\\n #include \\\"nsISupportsPrimitives.h\\\"\\n+#include \\\"nsIScriptSecurityManager.h\\\"\\n \\n #include \\\"nsString.h\\\"\\n #include \\\"nsXPIDLString.h\\\"\\n@@ -307,6 +308,17 @@ nsresult imgRequest::GetURI(nsIURI **aURI)\\n   return NS_ERROR_FAILURE;\\n }\\n \\n+nsresult imgRequest::GetPrincipal(nsIPrincipal **aPrincipal)\\n+{\\n+  LOG_FUNC(gImgLog, \\\"imgRequest::GetPrincipal\\\");\\n+\\n+  if (mPrincipal) {\\n+    NS_ADDREF(*aPrincipal = mPrincipal);\\n+  }\\n+\\n+  return NS_ERROR_FAILURE;\\n+}\\n+\\n void imgRequest::RemoveFromCache()\\n {\\n   LOG_SCOPE(gImgLog, \\\"imgRequest::RemoveFromCache\\\");\\n@@ -599,7 +611,19 @@ NS_IMETHODIMP imgRequest::OnStartRequest(nsIRequest *aRequest, nsISupports *ctxt\\n     proxy->OnStartRequest(aRequest, ctxt);\\n   }\\n \\n+  /* Get our principal */\\n   nsCOMPtr<nsIChannel> chan(do_QueryInterface(aRequest));\\n+  if (chan) {\\n+    nsCOMPtr<nsIScriptSecurityManager> secMan =\\n+      do_GetService(\\\"@mozilla.org/scriptsecuritymanager;1\\\");\\n+    if (secMan) {\\n+      nsresult rv = secMan->GetChannelPrincipal(chan,\\n+                                                getter_AddRefs(mPrincipal));\\n+      if (NS_FAILED(rv)) {\\n+        return rv;\\n+      }\\n+    }\\n+  }\\n \\n   /* get the expires info */\\n   if (mCacheEntry) {\\ndiff --git a/modules/libpr0n/src/imgRequest.h b/modules/libpr0n/src/imgRequest.h\\nindex 3de9607..67fbf83 100644\\n--- a/modules/libpr0n/src/imgRequest.h\\n+++ b/modules/libpr0n/src/imgRequest.h\\n@@ -52,6 +52,7 @@\\n #include \\\"nsIProperties.h\\\"\\n #include \\\"nsIStreamListener.h\\\"\\n #include \\\"nsIURI.h\\\"\\n+#include \\\"nsIPrincipal.h\\\"\\n \\n #include \\\"nsCategoryCache.h\\\"\\n #include \\\"nsCOMPtr.h\\\"\\n@@ -121,6 +122,7 @@ private:\\n   inline nsresult GetResultFromImageStatus(PRUint32 aStatus) const;\\n   void Cancel(nsresult aStatus);\\n   nsresult GetURI(nsIURI **aURI);\\n+  nsresult GetPrincipal(nsIPrincipal **aPrincipal);\\n   void RemoveFromCache();\\n   inline const char *GetMimeType() const {\\n     return mContentType.get();\\n@@ -151,6 +153,7 @@ public:\\n private:\\n   nsCOMPtr<nsIRequest> mRequest;\\n   nsCOMPtr<nsIURI> mURI;\\n+  nsCOMPtr<nsIPrincipal> mPrincipal;\\n   nsCOMPtr<imgIContainer> mImage;\\n   nsCOMPtr<imgIDecoder> mDecoder;\\n   nsCOMPtr<nsIProperties> mProperties;\\ndiff --git a/modules/libpr0n/src/imgRequestProxy.cpp b/modules/libpr0n/src/imgRequestProxy.cpp\\nindex f960a28..23e93ac 100644\\n--- a/modules/libpr0n/src/imgRequestProxy.cpp\\n+++ b/modules/libpr0n/src/imgRequestProxy.cpp\\n@@ -342,6 +342,15 @@ NS_IMETHODIMP imgRequestProxy::Clone(imgIDecoderObserver* aObserver,\\n   return NS_OK;\\n }\\n \\n+/* readonly attribute nsIPrincipal imagePrincipal; */\\n+NS_IMETHODIMP imgRequestProxy::GetImagePrincipal(nsIPrincipal **aPrincipal)\\n+{\\n+  if (!mOwner)\\n+    return NS_ERROR_FAILURE;\\n+\\n+  return mOwner->GetPrincipal(aPrincipal);\\n+}\\n+\\n /** nsISupportsPriority methods **/\\n \\n NS_IMETHODIMP imgRequestProxy::GetPriority(PRInt32 *priority)\\n\""}