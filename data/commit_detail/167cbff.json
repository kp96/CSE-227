{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas167cbff\""},"diff":"\"167cbff Bug 394139: Replace a bunch of NS_DEFINE_CIDs with CONTRACTIDs. r=/sr=/a=bsmedberg\\ndiff --git a/content/xul/document/src/nsXULDocument.cpp b/content/xul/document/src/nsXULDocument.cpp\\nindex e41b989..81830b9 100644\\n--- a/content/xul/document/src/nsXULDocument.cpp\\n+++ b/content/xul/document/src/nsXULDocument.cpp\\n@@ -134,10 +134,7 @@\\n // CIDs\\n //\\n \\n-static NS_DEFINE_CID(kLocalStoreCID,             NS_LOCALSTORE_CID);\\n static NS_DEFINE_CID(kParserCID,                 NS_PARSER_CID);\\n-static NS_DEFINE_CID(kRDFServiceCID,             NS_RDFSERVICE_CID);\\n-static NS_DEFINE_CID(kXULPrototypeCacheCID,      NS_XULPROTOTYPECACHE_CID);\\n \\n static PRBool IsChromeURI(nsIURI* aURI)\\n {\\n@@ -1850,12 +1847,12 @@ nsXULDocument::Init()\\n     // this _could_ fail; e.g., if we've tried to grab the local store\\n     // before profiles have initialized. If so, no big deal; nothing\\n     // will persist.\\n-    mLocalStore = do_GetService(kLocalStoreCID);\\n+    mLocalStore = do_GetService(NS_LOCALSTORE_CONTRACTID);\\n \\n     if (gRefCnt++ == 0) {\\n         // Keep the RDF service cached in a member variable to make using\\n         // it a bit less painful\\n-        rv = CallGetService(kRDFServiceCID, &gRDFService);\\n+        rv = CallGetService(\\\"@mozilla.org/rdf/rdf-service;1\\\", &gRDFService);\\n         NS_ASSERTION(NS_SUCCEEDED(rv), \\\"unable to get RDF Service\\\");\\n         if (NS_FAILED(rv)) return rv;\\n \\ndiff --git a/embedding/browser/gtk/src/EmbedCertificates.cpp b/embedding/browser/gtk/src/EmbedCertificates.cpp\\nindex 355ff58..62a3329 100644\\n--- a/embedding/browser/gtk/src/EmbedCertificates.cpp\\n+++ b/embedding/browser/gtk/src/EmbedCertificates.cpp\\n@@ -75,8 +75,6 @@\\n \\n #define PIPSTRING_BUNDLE_URL \\\"chrome://pippki/locale/pippki.properties\\\"\\n \\n-static NS_DEFINE_CID(kCStringBundleServiceCID,  NS_STRINGBUNDLESERVICE_CID);\\n-\\n EmbedCertificates::EmbedCertificates(void)\\n {\\n }\\n@@ -105,7 +103,8 @@ nsresult\\n EmbedCertificates::Init(void)\\n {\\n   nsresult rv;\\n-  nsCOMPtr<nsIStringBundleService> service = do_GetService(kCStringBundleServiceCID, &rv);\\n+  nsCOMPtr<nsIStringBundleService> service =\\n+           do_GetService(NS_STRINGBUNDLE_CONTRACTID, &rv);\\n   if (NS_FAILED(rv)) return NS_OK;\\n   rv = service->CreateBundle(PIPSTRING_BUNDLE_URL,\\n                              getter_AddRefs(mPIPStringBundle));\\ndiff --git a/embedding/minimo/chromelite/nsSimpleChromeHandler.cpp b/embedding/minimo/chromelite/nsSimpleChromeHandler.cpp\\nindex f5a1947..3c2b858 100644\\n--- a/embedding/minimo/chromelite/nsSimpleChromeHandler.cpp\\n+++ b/embedding/minimo/chromelite/nsSimpleChromeHandler.cpp\\n@@ -88,8 +88,7 @@ nsSimpleChromeURL::Init(PRUint32 urlType,\\n \\n {\\n   nsresult rv;\\n-  static NS_DEFINE_CID(kStandardURLCID, NS_STANDARDURL_CID);    \\n-  mStandardURL = do_CreateInstance(kStandardURLCID, &rv);\\n+  mStandardURL = do_CreateInstance(NS_STANDARDURL_CONTRACTID, &rv);\\n   NS_ASSERTION(mStandardURL, \\\"Could not create a Standard URL\\\");\\n   \\n   if (NS_FAILED(rv)) return rv;\\n@@ -171,8 +170,6 @@ nsSimpleChromeHandler::GetProtocolFlags(PRUint32 *result)\\n     return NS_OK;\\n }\\n \\n-static NS_DEFINE_CID(kStandardURLCID, NS_STANDARDURL_CID);\\n-\\n NS_IMETHODIMP\\n nsSimpleChromeHandler::NewURI(const nsACString &aSpec,\\n                              const char *aCharset,\\ndiff --git a/intl/uconv/src/nsCharsetConverterManager.cpp b/intl/uconv/src/nsCharsetConverterManager.cpp\\nindex 6550bf0..5fd364e 100644\\n--- a/intl/uconv/src/nsCharsetConverterManager.cpp\\n+++ b/intl/uconv/src/nsCharsetConverterManager.cpp\\n@@ -56,16 +56,13 @@\\n #include \\\"nsXPCOM.h\\\"\\n #include \\\"nsISupportsPrimitives.h\\\"\\n \\n-// just for CIDs\\n+// just for CONTRACTIDs\\n #include \\\"nsCharsetConverterManager.h\\\"\\n \\n #ifdef MOZ_USE_NATIVE_UCONV\\n #include \\\"nsNativeUConvService.h\\\"\\n #endif\\n \\n-static NS_DEFINE_CID(kStringBundleServiceCID, NS_STRINGBUNDLESERVICE_CID);\\n-static NS_DEFINE_CID(kCharsetAliasCID, NS_CHARSETALIAS_CID);\\n-\\n // Pattern of cached, commonly used, single byte decoder\\n #define NS_1BYTE_CODER_PATTERN \\\"ISO-8859\\\"\\n #define NS_1BYTE_CODER_PATTERN_LEN 8\\n@@ -121,7 +118,7 @@ nsresult nsCharsetConverterManager::LoadExtensibleBundle(\\n   nsresult rv = NS_OK;\\n \\n   nsCOMPtr<nsIStringBundleService> sbServ = \\n-           do_GetService(kStringBundleServiceCID, &rv);\\n+           do_GetService(NS_STRINGBUNDLE_CONTRACTID, &rv);\\n   if (NS_FAILED(rv))\\n     return rv;\\n \\n@@ -372,7 +369,7 @@ nsCharsetConverterManager::GetCharsetAlias(const char * aCharset,\\n   // We try to obtain the preferred name for this charset from the charset \\n   // aliases. If we don't get it from there, we just use the original string\\n   nsDependentCString charset(aCharset);\\n-  nsCOMPtr<nsICharsetAlias> csAlias( do_GetService(kCharsetAliasCID) );\\n+  nsCOMPtr<nsICharsetAlias> csAlias(do_GetService(NS_CHARSETALIAS_CONTRACTID));\\n   NS_ASSERTION(csAlias, \\\"failed to get the CharsetAlias service\\\");\\n   if (csAlias) {\\n     nsAutoString pref;\\ndiff --git a/intl/uconv/tests/convperf.cpp b/intl/uconv/tests/convperf.cpp\\nindex d7de19a..3737e23 100644\\n--- a/intl/uconv/tests/convperf.cpp\\n+++ b/intl/uconv/tests/convperf.cpp\\n@@ -43,8 +43,6 @@\\n #include \\\"nsICharsetConverterManager.h\\\"\\n #include \\\"nsIUnicodeEncoder.h\\\"\\n #include \\\"nsIUnicodeDecoder.h\\\"\\n-static NS_DEFINE_CID(kCharsetConverterManagerCID, NS_ICHARSETCONVERTERMANAGER_CID);\\n-static NS_DEFINE_IID(kICharsetConverterManagerIID, NS_ICHARSETCONVERTERMANAGER_IID);\\n \\n #include <stdio.h>\\n #include <string.h>\\n@@ -114,7 +112,7 @@ int main(int argc, const char** argv)\\n {\\n    nsresult res;\\n    nsCOMPtr<nsICharsetConverterManager> ccMain =\\n-      do_GetService(kCharsetConverterManagerCID, &res);\\n+      do_GetService(NS_CHARSETCONVERTERMANAGER_CONTRACTID, &res);\\n    if(NS_FAILED(res))\\n    {\\n \\t fprintf(stderr, \\\"Cannot get Character Converter Manager %x\\\\n\\\", res);\\ndiff --git a/intl/uconv/tests/plattest.cpp b/intl/uconv/tests/plattest.cpp\\nindex d549485..866ae81 100644\\n--- a/intl/uconv/tests/plattest.cpp\\n+++ b/intl/uconv/tests/plattest.cpp\\n@@ -42,10 +42,6 @@\\n #include \\\"nsIComponentManager.h\\\"\\n #include <stdio.h>\\n \\n-NS_DEFINE_IID(kLocaleServiceIID,NS_ILOCALESERVICE_IID);\\n-NS_DEFINE_CID(kLocaleServiceCID,NS_LOCALESERVICE_CID);\\n-NS_DEFINE_IID(kPlatformCharsetIID,NS_IPLATFORMCHARSET_IID);\\n-\\n int\\n main(int argc, const char** argv)\\n {\\n@@ -55,7 +51,7 @@ main(int argc, const char** argv)\\n     if (!platform_charset) return -1;\\n \\n     nsCOMPtr<nsILocaleService>      locale_service = \\n-        do_CreateInstance(kLocaleServiceCID);\\n+        do_CreateInstance(NS_LOCALESERVICE_CONTRACTID);\\n     if (!locale_service) return -1;\\n \\n     nsCOMPtr<nsILocale>             locale;\\ndiff --git a/modules/oji/src/jvmmgr.cpp b/modules/oji/src/jvmmgr.cpp\\nindex 930e41e..f993478 100644\\n--- a/modules/oji/src/jvmmgr.cpp\\n+++ b/modules/oji/src/jvmmgr.cpp\\n@@ -44,7 +44,7 @@\\n #include \\\"nsCSecurityContext.h\\\"\\n #include \\\"nsIJSContextStack.h\\\"\\n \\n-static NS_DEFINE_CID(kJVMManagerCID, NS_JVMMANAGER_CID);\\n+#define NS_JVMMANAGER_CONTRACTID \\\"@mozilla.org/oji/jvm-mgr;1\\\"\\n static NS_DEFINE_IID(kIJVMConsoleIID, NS_IJVMCONSOLE_IID);\\n static NS_DEFINE_IID(kIJVMPrefsWindowIID, NS_IJVMPREFSWINDOW_IID);\\n static NS_DEFINE_IID(kISymantecDebuggerIID, NS_ISYMANTECDEBUGGER_IID);\\n@@ -66,7 +66,7 @@ GetRunningJVM(void)\\n {\\n     nsIJVMPlugin* jvm = NULL;\\n     nsresult rv;\\n-    nsCOMPtr<nsIJVMManager> managerService = do_GetService(kJVMManagerCID, &rv);\\n+    nsCOMPtr<nsIJVMManager> managerService = do_GetService(NS_JVMMANAGER_CONTRACTID, &rv);\\n     if (NS_FAILED(rv)) return jvm;\\n     nsJVMManager* jvmMgr = (nsJVMManager *)managerService.get();  \\n     if (jvmMgr) {\\n@@ -92,7 +92,7 @@ JVM_ShutdownJVM(void)\\n {\\n     nsJVMStatus status = nsJVMStatus_Failed;\\n     nsresult rv;\\n-    nsCOMPtr<nsIJVMManager> managerService = do_GetService(kJVMManagerCID, &rv);\\n+    nsCOMPtr<nsIJVMManager> managerService = do_GetService(NS_JVMMANAGER_CONTRACTID, &rv);\\n     if (NS_FAILED(rv)) return status;\\n     nsJVMManager* mgr = (nsJVMManager *)managerService.get();  \\n     if (mgr) {\\n@@ -107,7 +107,7 @@ JVM_GetJVMStatus(void)\\n {\\n     nsresult rv;\\n     nsJVMStatus status = nsJVMStatus_Disabled;\\n-    nsCOMPtr<nsIJVMManager> managerService = do_GetService(kJVMManagerCID, &rv);\\n+    nsCOMPtr<nsIJVMManager> managerService = do_GetService(NS_JVMMANAGER_CONTRACTID, &rv);\\n     if (NS_FAILED(rv)) return status;\\n     nsJVMManager* mgr = (nsJVMManager *)managerService.get();  \\n     if (mgr) {\\n@@ -120,7 +120,7 @@ PR_IMPLEMENT(PRBool)\\n JVM_AddToClassPath(const char* dirPath)\\n {\\n     nsresult err = NS_ERROR_FAILURE;\\n-    nsCOMPtr<nsIJVMManager> managerService = do_GetService(kJVMManagerCID, &err);\\n+    nsCOMPtr<nsIJVMManager> managerService = do_GetService(NS_JVMMANAGER_CONTRACTID, &err);\\n     if (NS_FAILED(err)) return PR_FALSE;\\n     nsJVMManager* mgr = (nsJVMManager *)managerService.get();\\n     if (mgr) {\\n@@ -322,7 +322,7 @@ JVM_MaybeStartupLiveConnect()\\n {\\n     PRBool result = PR_FALSE;\\n     nsresult rv;\\n-    nsCOMPtr<nsIJVMManager> managerService = do_GetService(kJVMManagerCID, &rv);\\n+    nsCOMPtr<nsIJVMManager> managerService = do_GetService(NS_JVMMANAGER_CONTRACTID, &rv);\\n     if (NS_FAILED(rv)) return result;\\n     nsJVMManager* mgr = (nsJVMManager *)managerService.get();  \\n     if (mgr) {\\n@@ -337,7 +337,7 @@ JVM_MaybeShutdownLiveConnect(void)\\n {\\n     PRBool result = PR_FALSE;\\n     nsresult rv;\\n-    nsCOMPtr<nsIJVMManager> managerService = do_GetService(kJVMManagerCID, &rv);\\n+    nsCOMPtr<nsIJVMManager> managerService = do_GetService(NS_JVMMANAGER_CONTRACTID, &rv);\\n     if (NS_FAILED(rv)) return result;\\n     nsJVMManager* mgr = (nsJVMManager *)managerService.get(); \\n     if (mgr) {\\n@@ -351,7 +351,7 @@ JVM_IsLiveConnectEnabled(void)\\n {\\n     PRBool result = PR_FALSE;\\n     nsresult rv;\\n-    nsCOMPtr<nsIJVMManager> managerService = do_GetService(kJVMManagerCID, &rv);\\n+    nsCOMPtr<nsIJVMManager> managerService = do_GetService(NS_JVMMANAGER_CONTRACTID, &rv);\\n     if (NS_FAILED(rv)) return result;\\n     nsJVMManager* mgr = (nsJVMManager *)managerService.get();\\n     if (mgr) {\\ndiff --git a/modules/plugin/base/src/nsPluginHostImpl.cpp b/modules/plugin/base/src/nsPluginHostImpl.cpp\\nindex 3127690..f131a2a 100644\\n--- a/modules/plugin/base/src/nsPluginHostImpl.cpp\\n+++ b/modules/plugin/base/src/nsPluginHostImpl.cpp\\n@@ -211,7 +211,6 @@ static NS_DEFINE_IID(kIPluginTagInfo2IID, NS_IPLUGINTAGINFO2_IID);\\n static NS_DEFINE_IID(kISupportsIID, NS_ISUPPORTS_IID);\\n static const char kDirectoryServiceContractID[] = \\\"@mozilla.org/file/directory_service;1\\\";\\n // for the dialog\\n-static NS_DEFINE_IID(kStringBundleServiceCID, NS_STRINGBUNDLESERVICE_CID);\\n static NS_DEFINE_CID(kCPluginManagerCID, NS_PLUGINMANAGER_CID); // needed for NS_TRY_SAFE_CALL\\n \\n ////////////////////////////////////////////////////////////////////////\\n@@ -6482,7 +6481,7 @@ nsPluginHostImpl::HandleBadPlugin(PRLibrary* aLibrary, nsIPluginInstance *aInsta\\n   nsCOMPtr<nsIPrompt> prompt;\\n   GetPrompt(owner, getter_AddRefs(prompt));\\n   if (prompt) {\\n-    nsCOMPtr<nsIStringBundleService> strings(do_GetService(kStringBundleServiceCID, &rv));\\n+    nsCOMPtr<nsIStringBundleService> strings(do_GetService(NS_STRINGBUNDLE_CONTRACTID, &rv));\\n     if (NS_FAILED(rv))\\n       return rv;\\n \\ndiff --git a/netwerk/base/src/nsIOService.cpp b/netwerk/base/src/nsIOService.cpp\\nindex 5b791b3..a82209a 100644\\n--- a/netwerk/base/src/nsIOService.cpp\\n+++ b/netwerk/base/src/nsIOService.cpp\\n@@ -81,12 +81,6 @@\\n \\n #define MAX_RECURSION_COUNT 50\\n \\n-static NS_DEFINE_CID(kStreamTransportServiceCID, NS_STREAMTRANSPORTSERVICE_CID);\\n-static NS_DEFINE_CID(kSocketTransportServiceCID, NS_SOCKETTRANSPORTSERVICE_CID);\\n-static NS_DEFINE_CID(kDNSServiceCID, NS_DNSSERVICE_CID);\\n-static NS_DEFINE_CID(kErrorServiceCID, NS_ERRORSERVICE_CID);\\n-static NS_DEFINE_CID(kProtocolProxyServiceCID, NS_PROTOCOLPROXYSERVICE_CID);\\n-\\n nsIOService* gIOService = nsnull;\\n \\n // A general port blacklist.  Connections to these ports will not be allowed unless \\n@@ -202,20 +196,20 @@ nsIOService::Init()\\n \\n     // TODO(darin): Load the Socket and DNS services lazily.\\n \\n-    mSocketTransportService = do_GetService(kSocketTransportServiceCID, &rv);\\n+    mSocketTransportService = do_GetService(NS_SOCKETTRANSPORTSERVICE_CONTRACTID, &rv);\\n     if (NS_FAILED(rv)) {\\n         NS_WARNING(\\\"failed to get socket transport service\\\");\\n         return rv;\\n     }\\n \\n-    mDNSService = do_GetService(kDNSServiceCID, &rv);\\n+    mDNSService = do_GetService(NS_DNSSERVICE_CONTRACTID, &rv);\\n     if (NS_FAILED(rv)) {\\n         NS_WARNING(\\\"failed to get DNS service\\\");\\n         return rv;\\n     }\\n \\n     // XXX hack until xpidl supports error info directly (bug 13423)\\n-    nsCOMPtr<nsIErrorService> errorService = do_GetService(kErrorServiceCID);\\n+    nsCOMPtr<nsIErrorService> errorService = do_GetService(NS_ERRORSERVICE_CONTRACTID);\\n     if (errorService) {\\n         errorService->RegisterErrorStringBundle(NS_ERROR_MODULE_NETWORK, NECKO_MSGS_URL);\\n     }\\ndiff --git a/netwerk/protocol/ftp/src/nsFtpProtocolHandler.cpp b/netwerk/protocol/ftp/src/nsFtpProtocolHandler.cpp\\nindex a125361..585927e 100644\\n--- a/netwerk/protocol/ftp/src/nsFtpProtocolHandler.cpp\\n+++ b/netwerk/protocol/ftp/src/nsFtpProtocolHandler.cpp\\n@@ -88,9 +88,6 @@ PRLogModuleInfo* gFTPLog = nsnull;\\n #define IDLE_TIMEOUT_PREF     \\\"network.ftp.idleConnectionTimeout\\\"\\n #define IDLE_CONNECTION_LIMIT 8 /* TODO pref me */\\n \\n-static NS_DEFINE_CID(kStandardURLCID, NS_STANDARDURL_CID);\\n-static NS_DEFINE_CID(kCacheServiceCID, NS_CACHESERVICE_CID);\\n-\\n nsFtpProtocolHandler *gFtpHandler = nsnull;\\n \\n //-----------------------------------------------------------------------------\\n@@ -197,7 +194,7 @@ nsFtpProtocolHandler::NewURI(const nsACString &aSpec,\\n         return NS_ERROR_MALFORMED_URI;\\n \\n     nsresult rv;\\n-    nsCOMPtr<nsIStandardURL> url = do_CreateInstance(kStandardURLCID, &rv);\\n+    nsCOMPtr<nsIStandardURL> url = do_CreateInstance(NS_STANDARDURL_CONTRACTID, &rv);\\n     if (NS_FAILED(rv)) return rv;\\n \\n     rv = url->Init(nsIStandardURL::URLTYPE_AUTHORITY, 21, aSpec, aCharset, aBaseURI);\\ndiff --git a/security/manager/boot/src/nsSecurityWarningDialogs.cpp b/security/manager/boot/src/nsSecurityWarningDialogs.cpp\\nindex 254b16c..ffa7f8f 100644\\n--- a/security/manager/boot/src/nsSecurityWarningDialogs.cpp\\n+++ b/security/manager/boot/src/nsSecurityWarningDialogs.cpp\\n@@ -51,8 +51,6 @@\\n \\n NS_IMPL_THREADSAFE_ISUPPORTS1(nsSecurityWarningDialogs, nsISecurityWarningDialogs)\\n \\n-static NS_DEFINE_CID(kCStringBundleServiceCID,  NS_STRINGBUNDLESERVICE_CID);\\n-\\n #define STRING_BUNDLE_URL    \\\"chrome://pipnss/locale/security.properties\\\"\\n \\n #define ENTER_SITE_PREF      \\\"security.warn_entering_secure\\\"\\n@@ -77,7 +75,8 @@ nsSecurityWarningDialogs::Init()\\n   mPrefBranch = do_GetService(NS_PREFSERVICE_CONTRACTID, &rv);\\n   if (NS_FAILED(rv)) return rv;\\n \\n-  nsCOMPtr<nsIStringBundleService> service = do_GetService(kCStringBundleServiceCID, &rv);\\n+  nsCOMPtr<nsIStringBundleService> service =\\n+           do_GetService(NS_STRINGBUNDLE_CONTRACTID, &rv);\\n   if (NS_FAILED(rv)) return rv;\\n   \\n   rv = service->CreateBundle(STRING_BUNDLE_URL,\\ndiff --git a/security/manager/pki/src/nsNSSDialogs.cpp b/security/manager/pki/src/nsNSSDialogs.cpp\\nindex 3179fd0..b5f6710 100644\\n--- a/security/manager/pki/src/nsNSSDialogs.cpp\\n+++ b/security/manager/pki/src/nsNSSDialogs.cpp\\n@@ -68,10 +68,7 @@\\n \\n #define PIPSTRING_BUNDLE_URL \\\"chrome://pippki/locale/pippki.properties\\\"\\n \\n-static NS_DEFINE_CID(kCStringBundleServiceCID,  NS_STRINGBUNDLESERVICE_CID);\\n-\\n /* ==== */\\n-static NS_DEFINE_CID(kPKIParamBlockCID, NS_PKIPARAMBLOCK_CID);\\n \\n nsNSSDialogs::nsNSSDialogs()\\n {\\n@@ -95,7 +92,8 @@ nsNSSDialogs::Init()\\n {\\n   nsresult rv;\\n \\n-  nsCOMPtr<nsIStringBundleService> service = do_GetService(kCStringBundleServiceCID, &rv);\\n+  nsCOMPtr<nsIStringBundleService> service =\\n+           do_GetService(NS_STRINGBUNDLE_CONTRACTID, &rv);\\n   if (NS_FAILED(rv)) return rv;\\n   \\n   rv = service->CreateBundle(PIPSTRING_BUNDLE_URL,\\n@@ -114,7 +112,8 @@ nsNSSDialogs::SetPassword(nsIInterfaceRequestor *ctx,\\n   // Get the parent window for the dialog\\n   nsCOMPtr<nsIDOMWindowInternal> parent = do_GetInterface(ctx);\\n \\n-  nsCOMPtr<nsIDialogParamBlock> block(do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID));\\n+  nsCOMPtr<nsIDialogParamBlock> block =\\n+           do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID);\\n   if (!block) return NS_ERROR_FAILURE;\\n \\n   // void ChangePassword(in wstring tokenName, out int status);\\n@@ -147,7 +146,8 @@ nsNSSDialogs::GetPassword(nsIInterfaceRequestor *ctx,\\n   *_canceled = PR_FALSE;\\n   // Get the parent window for the dialog\\n   nsCOMPtr<nsIDOMWindowInternal> parent = do_GetInterface(ctx);\\n-  nsCOMPtr<nsIDialogParamBlock> block(do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID));\\n+  nsCOMPtr<nsIDialogParamBlock> block = \\n+           do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID);\\n   if (!block) return NS_ERROR_FAILURE;\\n   // Set the token name in the window\\n   rv = block->SetString(1, tokenName);\\n@@ -179,7 +179,8 @@ nsNSSDialogs::ConfirmUnknownIssuer(nsIInterfaceRequestor *socketInfo,\\n   \\n   *_retval = PR_FALSE;\\n \\n-  nsCOMPtr<nsIPKIParamBlock> block = do_CreateInstance(kPKIParamBlockCID);\\n+  nsCOMPtr<nsIPKIParamBlock> block =\\n+           do_CreateInstance(NS_PKIPARAMBLOCK_CONTRACTID);\\n \\n   if (!block)\\n     return NS_ERROR_FAILURE;\\n@@ -236,7 +237,8 @@ nsNSSDialogs::ConfirmMismatchDomain(nsIInterfaceRequestor *socketInfo,\\n \\n   *_retval = PR_FALSE;\\n \\n-  nsCOMPtr<nsIPKIParamBlock> block = do_CreateInstance(kPKIParamBlockCID);\\n+  nsCOMPtr<nsIPKIParamBlock> block =\\n+           do_CreateInstance(NS_PKIPARAMBLOCK_CONTRACTID);\\n \\n   if (!block)\\n     return NS_ERROR_FAILURE;\\n@@ -280,7 +282,8 @@ nsNSSDialogs::ConfirmCertExpired(nsIInterfaceRequestor *socketInfo,\\n \\n   *_retval = PR_FALSE;\\n \\n-  nsCOMPtr<nsIPKIParamBlock> block = do_CreateInstance(kPKIParamBlockCID);\\n+  nsCOMPtr<nsIPKIParamBlock> block =\\n+           do_CreateInstance(NS_PKIPARAMBLOCK_CONTRACTID);\\n \\n   if (!block)\\n     return NS_ERROR_FAILURE; \\n@@ -358,7 +361,8 @@ nsNSSDialogs::NotifyCrlNextupdate(nsIInterfaceRequestor *socketInfo,\\n {\\n   nsresult rv;\\n \\n-  nsCOMPtr<nsIPKIParamBlock> block = do_CreateInstance(kPKIParamBlockCID);\\n+  nsCOMPtr<nsIPKIParamBlock> block =\\n+           do_CreateInstance(NS_PKIPARAMBLOCK_CONTRACTID);\\n   nsCOMPtr<nsIDialogParamBlock> dialogBlock = do_QueryInterface(block);\\n \\n   rv = dialogBlock->SetString(1, NS_ConvertUTF8toUTF16(targetURL).get());\\n@@ -380,7 +384,8 @@ nsNSSDialogs::CrlImportStatusDialog(nsIInterfaceRequestor *ctx, nsICRLInfo *crl)\\n {\\n   nsresult rv;\\n \\n-  nsCOMPtr<nsIPKIParamBlock> block = do_CreateInstance(kPKIParamBlockCID,&rv);\\n+  nsCOMPtr<nsIPKIParamBlock> block =\\n+           do_CreateInstance(NS_PKIPARAMBLOCK_CONTRACTID,&rv);\\n   if (NS_FAILED(rv))\\n     return rv;\\n   \\n@@ -407,7 +412,8 @@ nsNSSDialogs::ConfirmDownloadCACert(nsIInterfaceRequestor *ctx,\\n   // Get the parent window for the dialog\\n   nsCOMPtr<nsIDOMWindowInternal> parent = do_GetInterface(ctx);\\n \\n-  nsCOMPtr<nsIPKIParamBlock> block = do_CreateInstance(kPKIParamBlockCID);\\n+  nsCOMPtr<nsIPKIParamBlock> block =\\n+           do_CreateInstance(NS_PKIPARAMBLOCK_CONTRACTID);\\n   if (!block)\\n     return NS_ERROR_FAILURE;\\n \\n@@ -453,7 +459,8 @@ nsNSSDialogs::NotifyCACertExists(nsIInterfaceRequestor *ctx)\\n   // Get the parent window for the dialog\\n   nsCOMPtr<nsIDOMWindowInternal> parent = do_GetInterface(ctx);\\n \\n-  nsCOMPtr<nsIDialogParamBlock> block(do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID));\\n+  nsCOMPtr<nsIDialogParamBlock> block =\\n+           do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID);\\n   if (!block) return NS_ERROR_FAILURE;\\n \\n   \\n@@ -476,7 +483,8 @@ nsNSSDialogs::ChooseCertificate(nsIInterfaceRequestor *ctx, const PRUnichar *cn,\\n   // Get the parent window for the dialog\\n   nsCOMPtr<nsIDOMWindowInternal> parent = do_GetInterface(ctx);\\n \\n-  nsCOMPtr<nsIDialogParamBlock> block(do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID));\\n+  nsCOMPtr<nsIDialogParamBlock> block =\\n+           do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID);\\n   if (!block) return NS_ERROR_FAILURE;\\n \\n   block->SetNumberStrings(4+count*2);\\n@@ -538,7 +546,8 @@ nsNSSDialogs::PickCertificate(nsIInterfaceRequestor *ctx,\\n   // Get the parent window for the dialog\\n   nsCOMPtr<nsIDOMWindowInternal> parent = do_GetInterface(ctx);\\n \\n-  nsCOMPtr<nsIDialogParamBlock> block(do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID));\\n+  nsCOMPtr<nsIDialogParamBlock> block =\\n+           do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID);\\n   if (!block) return NS_ERROR_FAILURE;\\n \\n   block->SetNumberStrings(1+count*2);\\n@@ -586,7 +595,8 @@ nsNSSDialogs::SetPKCS12FilePassword(nsIInterfaceRequestor *ctx,\\n   *_retval = PR_TRUE;\\n   // Get the parent window for the dialog\\n   nsCOMPtr<nsIDOMWindowInternal> parent = do_GetInterface(ctx);\\n-  nsCOMPtr<nsIDialogParamBlock> block(do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID));\\n+  nsCOMPtr<nsIDialogParamBlock> block =\\n+           do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID);\\n   if (!block) return NS_ERROR_FAILURE;\\n   // open up the window\\n   rv = nsNSSDialogHelper::openDialog(parent,\\n@@ -619,7 +629,8 @@ nsNSSDialogs::GetPKCS12FilePassword(nsIInterfaceRequestor *ctx,\\n   *_retval = PR_TRUE;\\n   // Get the parent window for the dialog\\n   nsCOMPtr<nsIDOMWindowInternal> parent = do_GetInterface(ctx);\\n-  nsCOMPtr<nsIDialogParamBlock> block(do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID));\\n+  nsCOMPtr<nsIDialogParamBlock> block =\\n+           do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID);\\n   if (!block) return NS_ERROR_FAILURE;\\n   // open up the window\\n   rv = nsNSSDialogHelper::openDialog(parent,\\n@@ -650,7 +661,8 @@ nsNSSDialogs::ViewCert(nsIInterfaceRequestor *ctx,\\n {\\n   nsresult rv;\\n \\n-  nsCOMPtr<nsIPKIParamBlock> block = do_CreateInstance(kPKIParamBlockCID);\\n+  nsCOMPtr<nsIPKIParamBlock> block =\\n+           do_CreateInstance(NS_PKIPARAMBLOCK_CONTRACTID);\\n   if (!block)\\n     return NS_ERROR_FAILURE;\\n \\n@@ -691,7 +703,8 @@ nsNSSDialogs::ChooseToken(nsIInterfaceRequestor *aCtx, const PRUnichar **aTokenL\\n   // Get the parent window for the dialog\\n   nsCOMPtr<nsIDOMWindowInternal> parent = do_GetInterface(aCtx);\\n \\n-  nsCOMPtr<nsIDialogParamBlock> block(do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID));\\n+  nsCOMPtr<nsIDialogParamBlock> block =\\n+           do_CreateInstance(NS_DIALOGPARAMBLOCK_CONTRACTID);\\n   if (!block) return NS_ERROR_FAILURE;\\n \\n   block->SetNumberStrings(aCount);\\n@@ -731,7 +744,8 @@ nsNSSDialogs::ConfirmKeyEscrow(nsIX509Cert *escrowAuthority, PRBool *_retval)\\n \\n   nsresult rv;\\n \\n-  nsCOMPtr<nsIPKIParamBlock> block = do_CreateInstance(kPKIParamBlockCID);\\n+  nsCOMPtr<nsIPKIParamBlock> block =\\n+           do_CreateInstance(NS_PKIPARAMBLOCK_CONTRACTID);\\n   if (!block)\\n     return NS_ERROR_FAILURE;\\n \\ndiff --git a/security/manager/ssl/src/nsNSSIOLayer.cpp b/security/manager/ssl/src/nsNSSIOLayer.cpp\\nindex 12cbb40..747942e 100644\\n--- a/security/manager/ssl/src/nsNSSIOLayer.cpp\\n+++ b/security/manager/ssl/src/nsNSSIOLayer.cpp\\n@@ -690,9 +690,8 @@ nsHandleSSLError(nsNSSSocketInfo *socketInfo, PRInt32 err)\\n   socketInfo->GetHostName(getter_Copies(hostName));\\n   NS_ConvertASCIItoUTF16 hostNameU(hostName);\\n \\n-  NS_DEFINE_CID(StringBundleServiceCID,  NS_STRINGBUNDLESERVICE_CID);\\n   nsCOMPtr<nsIStringBundleService> service = \\n-                              do_GetService(StringBundleServiceCID, &rv);\\n+           do_GetService(NS_STRINGBUNDLE_CONTRACTID, &rv);\\n \\n   nsString formattedString;\\n   rv = getErrorMessage(err, hostNameU, nssComponent, formattedString);\\ndiff --git a/uriloader/exthandler/os2/nsMIMEInfoOS2.cpp b/uriloader/exthandler/os2/nsMIMEInfoOS2.cpp\\nindex e5e9521..56ac037 100755\\n--- a/uriloader/exthandler/os2/nsMIMEInfoOS2.cpp\\n+++ b/uriloader/exthandler/os2/nsMIMEInfoOS2.cpp\\n@@ -163,7 +163,7 @@ nsresult nsMIMEInfoOS2::LoadUriInternal(nsIURI * aURL)\\n \\n   /* Convert SimpleURI to StandardURL */\\n   nsresult rv;\\n-  nsCOMPtr<nsIURI> uri = do_CreateInstance(kStandardURLCID, &rv);\\n+  nsCOMPtr<nsIURI> uri = do_CreateInstance(NS_STANDARDURL_CONTRACTID, &rv);\\n   if (NS_FAILED(rv)) {\\n     return NS_ERROR_FAILURE;\\n   }\\ndiff --git a/uriloader/exthandler/os2/nsMIMEInfoOS2.h b/uriloader/exthandler/os2/nsMIMEInfoOS2.h\\nindex c7f500e..a7498f9 100755\\n--- a/uriloader/exthandler/os2/nsMIMEInfoOS2.h\\n+++ b/uriloader/exthandler/os2/nsMIMEInfoOS2.h\\n@@ -42,7 +42,6 @@\\n #include \\\"nsIPref.h\\\" // XX Need to convert Handler code to new pref stuff\\n #include \\\"nsNetCID.h\\\"\\n #include \\\"nsEscape.h\\\"\\n-static NS_DEFINE_CID(kStandardURLCID, NS_STANDARDURL_CID); // XXX need to convert to contract id\\n \\n #define INCL_DOS\\n #define INCL_DOSMISC\\ndiff --git a/widget/src/xpwidgets/nsPrintOptionsImpl.cpp b/widget/src/xpwidgets/nsPrintOptionsImpl.cpp\\nindex cf030fc..a38b9fb 100644\\n--- a/widget/src/xpwidgets/nsPrintOptionsImpl.cpp\\n+++ b/widget/src/xpwidgets/nsPrintOptionsImpl.cpp\\n@@ -61,12 +61,9 @@\\n \\n #include \\\"nsIStringEnumerator.h\\\"\\n #include \\\"nsISupportsPrimitives.h\\\"\\n-#include \\\"nsWidgetsCID.h\\\"\\n #include \\\"stdlib.h\\\"\\n #include \\\"nsAutoPtr.h\\\"\\n \\n-static NS_DEFINE_IID(kCPrinterEnumerator, NS_PRINTER_ENUMERATOR_CID);\\n-\\n NS_IMPL_ISUPPORTS2(nsPrintOptions, nsIPrintOptions, nsIPrintSettingsService)\\n \\n // Pref Constants\\n@@ -113,8 +110,7 @@ static const char kJustLeft[]   = \\\"left\\\";\\n static const char kJustCenter[] = \\\"center\\\";\\n static const char kJustRight[]  = \\\"right\\\";\\n \\n-static NS_DEFINE_IID(kPrinterEnumeratorCID, NS_PRINTER_ENUMERATOR_CID);\\n-\\n+#define NS_PRINTER_ENUMERATOR_CONTRACTID \\\"@mozilla.org/gfx/printerenumerator;1\\\"\\n \\n nsPrintOptions::nsPrintOptions()\\n {\\n@@ -771,7 +767,7 @@ nsPrintOptions::DisplayJobProperties(const PRUnichar *aPrinter,\\n \\n   nsresult rv;\\n   nsCOMPtr<nsIPrinterEnumerator> propDlg =\\n-    do_CreateInstance(kCPrinterEnumerator, &rv);\\n+           do_CreateInstance(NS_PRINTER_ENUMERATOR_CONTRACTID, &rv);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n   NS_ENSURE_ARG_POINTER(aPrintSettings);\\n@@ -835,8 +831,8 @@ NS_IMETHODIMP\\n nsPrintOptions::GetDefaultPrinterName(PRUnichar * *aDefaultPrinterName)\\n {\\n   nsresult rv;\\n-  nsCOMPtr<nsIPrinterEnumerator> prtEnum = do_GetService(kPrinterEnumeratorCID,\\n-                                                         &rv);\\n+  nsCOMPtr<nsIPrinterEnumerator> prtEnum =\\n+           do_GetService(NS_PRINTER_ENUMERATOR_CONTRACTID, &rv);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n   // Look up the printer from the last print job\\n@@ -889,8 +885,8 @@ nsPrintOptions::InitPrintSettingsFromPrinter(const PRUnichar *aPrinterName,\\n     return NS_OK;\\n \\n   nsresult rv;\\n-  nsCOMPtr<nsIPrinterEnumerator> prtEnum = do_GetService(kPrinterEnumeratorCID,\\n-                                                         &rv);\\n+  nsCOMPtr<nsIPrinterEnumerator> prtEnum =\\n+           do_GetService(NS_PRINTER_ENUMERATOR_CONTRACTID, &rv);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n   rv = prtEnum->InitPrintSettingsFromPrinter(aPrinterName, aPrintSettings);\\ndiff --git a/xpfe/appshell/src/nsXULWindow.cpp b/xpfe/appshell/src/nsXULWindow.cpp\\nindex 3836510..b50206d 100644\\n--- a/xpfe/appshell/src/nsXULWindow.cpp\\n+++ b/xpfe/appshell/src/nsXULWindow.cpp\\n@@ -72,7 +72,6 @@\\n #include \\\"nsIInterfaceRequestor.h\\\"\\n #include \\\"nsIInterfaceRequestorUtils.h\\\"\\n #include \\\"nsIIOService.h\\\"\\n-#include \\\"nsNetCID.h\\\"\\n #include \\\"nsIJSContextStack.h\\\"\\n #include \\\"nsIMarkupDocumentViewer.h\\\"\\n #include \\\"nsIObserverService.h\\\"\\n@@ -108,9 +107,6 @@\\n #define HEIGHT_ATTRIBUTE   NS_LITERAL_STRING(\\\"height\\\")\\n #define MODE_ATTRIBUTE     NS_LITERAL_STRING(\\\"sizemode\\\")\\n #define ZLEVEL_ATTRIBUTE   NS_LITERAL_STRING(\\\"zlevel\\\")\\n-// CIDs\\n-static NS_DEFINE_CID(kAppShellCID, NS_APPSHELL_CID);\\n-static NS_DEFINE_CID(kWindowMediatorCID, NS_WINDOWMEDIATOR_CID);\\n \\n //*****************************************************************************\\n //***    nsXULWindow: Object Management\\n@@ -212,7 +208,7 @@ NS_IMETHODIMP nsXULWindow::GetDocShell(nsIDocShell** aDocShell)\\n \\n NS_IMETHODIMP nsXULWindow::GetZLevel(PRUint32 *outLevel)\\n {\\n-  nsCOMPtr<nsIWindowMediator> mediator(do_GetService(kWindowMediatorCID));\\n+  nsCOMPtr<nsIWindowMediator> mediator(do_GetService(NS_WINDOWMEDIATOR_CONTRACTID));\\n   if (mediator)\\n     mediator->GetZLevel(this, outLevel);\\n   else\\n@@ -222,7 +218,7 @@ NS_IMETHODIMP nsXULWindow::GetZLevel(PRUint32 *outLevel)\\n \\n NS_IMETHODIMP nsXULWindow::SetZLevel(PRUint32 aLevel)\\n {\\n-  nsCOMPtr<nsIWindowMediator> mediator(do_GetService(kWindowMediatorCID));\\n+  nsCOMPtr<nsIWindowMediator> mediator(do_GetService(NS_WINDOWMEDIATOR_CONTRACTID));\\n   if (!mediator)\\n     return NS_ERROR_FAILURE;\\n \\n@@ -765,7 +761,7 @@ NS_IMETHODIMP nsXULWindow::SetVisibility(PRBool aVisibility)\\n   shellAsWin->SetVisibility(aVisibility);\\n   mWindow->Show(aVisibility);\\n \\n-  nsCOMPtr<nsIWindowMediator> windowMediator(do_GetService(kWindowMediatorCID));\\n+  nsCOMPtr<nsIWindowMediator> windowMediator(do_GetService(NS_WINDOWMEDIATOR_CONTRACTID));\\n   if (windowMediator)\\n      windowMediator->UpdateWindowTimeStamp(static_cast<nsIXULWindow*>(this));\\n \\n@@ -859,7 +855,7 @@ NS_IMETHODIMP nsXULWindow::SetTitle(const PRUnichar* aTitle)\\n   NS_ENSURE_SUCCESS(mWindow->SetTitle(mTitle), NS_ERROR_FAILURE);\\n \\n   // Tell the window mediator that a title has changed\\n-  nsCOMPtr<nsIWindowMediator> windowMediator(do_GetService(kWindowMediatorCID));\\n+  nsCOMPtr<nsIWindowMediator> windowMediator(do_GetService(NS_WINDOWMEDIATOR_CONTRACTID));\\n   if(!windowMediator)\\n     return NS_OK;\\n \\n@@ -1503,7 +1499,7 @@ NS_IMETHODIMP nsXULWindow::SavePersistentAttributes()\\n     }\\n     if (persistString.Find(\\\"zlevel\\\") >= 0) {\\n       PRUint32 zLevel;\\n-      nsCOMPtr<nsIWindowMediator> mediator(do_GetService(kWindowMediatorCID));\\n+      nsCOMPtr<nsIWindowMediator> mediator(do_GetService(NS_WINDOWMEDIATOR_CONTRACTID));\\n       if (mediator) {\\n         mediator->GetZLevel(this, &zLevel);\\n         PR_snprintf(sizeBuf, sizeof(sizeBuf), \\\"%lu\\\", (unsigned long)zLevel);\\n@@ -1849,7 +1845,7 @@ PRBool nsXULWindow::ConstrainToZLevel(\\n     return PR_FALSE;\\n #endif\\n \\n-  nsCOMPtr<nsIWindowMediator> mediator(do_GetService(kWindowMediatorCID));\\n+  nsCOMPtr<nsIWindowMediator> mediator(do_GetService(NS_WINDOWMEDIATOR_CONTRACTID));\\n   if(!mediator)\\n     return PR_FALSE;\\n \\n@@ -1939,7 +1935,7 @@ void nsXULWindow::PlaceWindowLayersBehind(PRUint32 aLowLevel,\\n \\n   // step through windows in z-order from top to bottommost window\\n \\n-  nsCOMPtr<nsIWindowMediator> mediator(do_GetService(kWindowMediatorCID));\\n+  nsCOMPtr<nsIWindowMediator> mediator(do_GetService(NS_WINDOWMEDIATOR_CONTRACTID));\\n   if(!mediator)\\n     return;\\n \\ndiff --git a/xpinstall/src/nsXPInstallManager.cpp b/xpinstall/src/nsXPInstallManager.cpp\\nindex a70e90b..86744c6 100644\\n--- a/xpinstall/src/nsXPInstallManager.cpp\\n+++ b/xpinstall/src/nsXPInstallManager.cpp\\n@@ -92,8 +92,6 @@\\n \\n #include \\\"nsEmbedCID.h\\\"\\n \\n-static NS_DEFINE_IID(kStringBundleServiceCID, NS_STRINGBUNDLESERVICE_CID);\\n-\\n #define PREF_XPINSTALL_ENABLED                \\\"xpinstall.enabled\\\"\\n #define PREF_XPINSTALL_CONFIRM_DLG            \\\"xpinstall.dialog.confirm\\\"\\n #define PREF_XPINSTALL_STATUS_DLG_SKIN        \\\"xpinstall.dialog.progress.skin\\\"\\n@@ -437,7 +435,7 @@ PRBool nsXPInstallManager::ConfirmChromeInstall(nsIDOMWindowInternal* aParentWin\\n     nsXPIDLString applyNowText;\\n     nsXPIDLString confirmText;\\n     nsCOMPtr<nsIStringBundleService> bundleSvc =\\n-             do_GetService( kStringBundleServiceCID );\\n+             do_GetService(NS_STRINGBUNDLE_CONTRACTID);\\n     if (!bundleSvc)\\n         return PR_FALSE;\\n \\n\""}