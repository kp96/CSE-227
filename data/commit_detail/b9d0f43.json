{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basb9d0f43\""},"diff":"\"b9d0f43 Remove freetype2 code, which was used only by the old gfx code.  b=389697  r+a1.9=vlad\\ndiff --git a/config/autoconf.mk.in b/config/autoconf.mk.in\\nindex 075eeb4..b6d2682 100644\\n--- a/config/autoconf.mk.in\\n+++ b/config/autoconf.mk.in\\n@@ -479,7 +479,6 @@ MOZ_DBUS_GLIB_CFLAGS    = @MOZ_DBUS_GLIB_CFLAGS@\\n MOZ_DBUS_GLIB_LIBS      = @MOZ_DBUS_GLIB_LIBS@\\n MOZ_ENABLE_DBUS         = @MOZ_ENABLE_DBUS@\\n \\n-MOZ_ENABLE_FREETYPE2   = @MOZ_ENABLE_FREETYPE2@\\n FT2_CFLAGS             = @FT2_CFLAGS@\\n FT2_LIBS               = @FT2_LIBS@\\n \\ndiff --git a/configure.in b/configure.in\\nindex 8932e2e..0d410f7 100644\\n--- a/configure.in\\n+++ b/configure.in\\n@@ -4763,26 +4763,6 @@ AC_DEFINE_UNQUOTED(MOZ_DISTRIBUTION_ID,\\\"$MOZ_DISTRIBUTION_ID\\\")\\n AC_SUBST(MOZ_DISTRIBUTION_ID)\\n \\n dnl ========================================================\\n-dnl = FreeType2\\n-dnl = Enable freetype by default if building against X11 \\n-dnl = and freetype is available\\n-dnl ========================================================\\n-MOZ_ARG_DISABLE_BOOL(freetype2,\\n-[  --disable-freetype2     Disable FreeType2 support ],\\n-    MOZ_ENABLE_FREETYPE2=,\\n-    MOZ_ENABLE_FREETYPE2=1)\\n-\\n-if test \\\"$MOZ_ENABLE_FREETYPE2\\\" && test -z \\\"$MOZ_X11\\\" -o -z \\\"$_HAVE_FREETYPE2\\\"; then\\n-    AC_MSG_ERROR([Cannot enable FreeType2 support for non-X11 toolkits or if FreeType2 is not detected.])\\n-fi\\n-\\n-if test \\\"$MOZ_ENABLE_FREETYPE2\\\"; then\\n-    AC_DEFINE(MOZ_ENABLE_FREETYPE2)\\n-    _NON_GLOBAL_ACDEFINES=\\\"$_NON_GLOBAL_ACDEFINES MOZ_ENABLE_FREETYPE2\\\"\\n-fi\\n-AC_SUBST(MOZ_ENABLE_FREETYPE2)\\n-\\n-dnl ========================================================\\n dnl = Xft\\n dnl ========================================================\\n if test \\\"$MOZ_ENABLE_GTK2\\\"; then\\n@@ -4798,10 +4778,6 @@ if test \\\"$MOZ_ENABLE_XFT\\\" && test -z \\\"$MOZ_ENABLE_GTK2\\\"; then\\n     AC_MSG_ERROR([Cannot enable XFT support for non-GTK2 toolkits.])\\n fi\\n \\n-if test \\\"$MOZ_ENABLE_XFT\\\" && test \\\"$MOZ_ENABLE_FREETYPE2\\\"; then\\n-    AC_MSG_ERROR([Cannot enable XFT and FREETYPE2 at the same time.])\\n-fi\\n-\\n if test \\\"$MOZ_ENABLE_XFT\\\"\\n then\\n     AC_DEFINE(MOZ_ENABLE_XFT)\\ndiff --git a/gfx/idl/Makefile.in b/gfx/idl/Makefile.in\\nindex 8504e19..3be4b92 100644\\n--- a/gfx/idl/Makefile.in\\n+++ b/gfx/idl/Makefile.in\\n@@ -55,12 +55,5 @@ XPIDLSRCS\\t= \\\\\\n \\t\\tgfxtypes.idl \\\\\\n \\t\\t$(NULL)\\n \\n-ifdef MOZ_ENABLE_FREETYPE2\\n-XPIDLSRCS\\t+= \\\\\\n-\\t\\tnsIFontCatalogService.idl \\\\\\n-\\t\\tnsIFreeType2.idl \\\\\\n-\\t\\t$(NULL)\\n-endif\\n-\\n include $(topsrcdir)/config/rules.mk\\n \\ndiff --git a/gfx/idl/nsIFontCatalogService.idl b/gfx/idl/nsIFontCatalogService.idl\\ndeleted file mode 100644\\nindex 17bb19b..0000000\\n--- a/gfx/idl/nsIFontCatalogService.idl\\n+++ /dev/null\\n@@ -1,123 +0,0 @@\\n-/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\\n-/* ***** BEGIN LICENSE BLOCK *****\\n- * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n- *\\n- * The contents of this file are subject to the Mozilla Public License Version\\n- * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n- * the License. You may obtain a copy of the License at\\n- * http://www.mozilla.org/MPL/\\n- *\\n- * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n- * for the specific language governing rights and limitations under the\\n- * License.\\n- *\\n- * The Original Code is mozilla.org code.\\n- *\\n- * The Initial Developer of the Original Code is\\n- * Christopher Blizzard <blizzard@mozilla.org>.\\n- * Portions created by the Initial Developer are Copyright (C) 2002\\n- * the Initial Developer. All Rights Reserved.\\n- *\\n- * Contributor(s):\\n- *   Pete Zha <pete.zha@sun.com>\\n- *   Brian Stell <bstell@ix.netcom.com>\\n- *\\n- * Alternatively, the contents of this file may be used under the terms of\\n- * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n- * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n- * in which case the provisions of the GPL or the LGPL are applicable instead\\n- * of those above. If you wish to allow use of your version of this file only\\n- * under the terms of either the GPL or the LGPL, and not to allow others to\\n- * use your version of this file under the terms of the MPL, indicate your\\n- * decision by deleting the provisions above and replace them with the notice\\n- * and other provisions required by the GPL or the LGPL. If you do not delete\\n- * the provisions above, a recipient may use your version of this file under\\n- * the terms of any one of the MPL, the GPL or the LGPL.\\n- *\\n- * ***** END LICENSE BLOCK ***** */\\n-\\n-#include \\\"nsISupports.idl\\\"\\n-#include \\\"nsIArray.idl\\\"\\n-\\n-[noscript, uuid(70406f93-5b53-49a0-b5a7-ebf533bfe59b)]\\n-interface nsIFontCatalogEntry : nsISupports\\n-{\\n-  const short FONT_CATALOG_TRUETYPE = 1;\\n-\\n-  readonly attribute unsigned short fontCatalogType;\\n-};\\n-\\n-[noscript, uuid(11f3efad-316e-4982-b9cf-9c304b0d5237)]\\n-interface nsITrueTypeFontCatalogEntry : nsIFontCatalogEntry\\n-{\\n-  readonly attribute ACString        fileName;\\n-  readonly attribute ACString        familyName;\\n-  readonly attribute ACString        styleName;\\n-  readonly attribute ACString        vendorID;\\n-  readonly attribute short           faceIndex;\\n-  readonly attribute short           numFaces;\\n-  readonly attribute short           numEmbeddedBitmaps;\\n-  readonly attribute long            numGlyphs;\\n-  readonly attribute long            numUsableGlyphs;\\n-  readonly attribute unsigned short  weight;\\n-  readonly attribute unsigned short  width;\\n-  readonly attribute unsigned long   flags;\\n-  readonly attribute long long       faceFlags;\\n-  readonly attribute long long       styleFlags;\\n-  readonly attribute unsigned long   codePageRange1;\\n-  readonly attribute unsigned long   codePageRange2;\\n-  readonly attribute long long       fileModTime;\\n-\\n-  void getCCMap(out unsigned long size,\\n-                [retval, array, size_is(size)] out unsigned short ccMaps);\\n-\\n-  void getEmbeddedBitmapHeights(out unsigned long size,\\n-                [retval, array, size_is(size)] out long heights);\\n-};\\n-\\n-[noscript, uuid(a3057187-c40f-4ffa-9160-2b16482053b1)]\\n-interface nsIFontCatalogService : nsISupports\\n-{\\n-  nsIArray getFontCatalogEntries(in ACString familyName,\\n-                                 in ACString language,\\n-                                 in unsigned short weight,\\n-                                 in unsigned short width,\\n-                                 in unsigned short slant,\\n-                                 in unsigned short spacing);\\n-\\n-  // Definition for weight\\n-  const unsigned short kFCWeightAny      =   0;\\n-  const unsigned short kFCWeightLight    = 300;\\n-  const unsigned short kFCWeightBook     = 400;\\n-  const unsigned short kFCWeightMedium   = 400;\\n-  const unsigned short kFCWeightRegular  = 400;\\n-  const unsigned short kFCWeightDemi     = 600;\\n-  const unsigned short kFCWeightDemibold = 600;\\n-  const unsigned short kFCWeightBold     = 700;\\n-  const unsigned short kFCWeighBlack     = 900;\\n-\\n-  // Definition for width\\n-  const unsigned short kFCWidthAny           = 0;\\n-  const unsigned short kFCWidthNarrow        = 3;\\n-  const unsigned short kFCWidthSemicondensed = 4;\\n-  const unsigned short kFCWidthBlock         = 5;\\n-  const unsigned short kFCWidthMedium        = 5;\\n-  const unsigned short kFCWidthNormal        = 5;\\n-  const unsigned short kFCWidthBold          = 7;\\n-  const unsigned short kFCWidthWide          = 7;\\n-  const unsigned short kFCWidthDoubleWide    = 9;\\n-\\n-  // Definition for slant\\n-  const unsigned short kFCSlantAny            = 0;\\n-  const unsigned short kFCSlantRoman          = 1;\\n-  const unsigned short kFCSlantItalic         = 2;\\n-  const unsigned short kFCSlantOblique        = 3;\\n-  const unsigned short kFCSlantReverseItalic  = 4;\\n-  const unsigned short kFCSlantReverseOblique = 5;\\n-\\n-  // Definition for spacing\\n-  const unsigned short kFCSpacingAny          = 0;\\n-  const unsigned short kFCSpacingMonospace    = 1;\\n-  const unsigned short kFCSpacingProportional = 2;\\n-};\\ndiff --git a/gfx/idl/nsIFreeType2.idl b/gfx/idl/nsIFreeType2.idl\\ndeleted file mode 100644\\nindex e8b075f..0000000\\n--- a/gfx/idl/nsIFreeType2.idl\\n+++ /dev/null\\n@@ -1,141 +0,0 @@\\n-/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */\\n-/* ***** BEGIN LICENSE BLOCK *****\\n- * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n- *\\n- * The contents of this file are subject to the Mozilla Public License Version\\n- * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n- * the License. You may obtain a copy of the License at\\n- * http://www.mozilla.org/MPL/\\n- *\\n- * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n- * for the specific language governing rights and limitations under the\\n- * License.\\n- *\\n- * The Original Code is Golden Hills Computer Services code.\\n- *\\n- * The Initial Developer of the Original Code is Brian Stell.\\n- * Portions created by the Initial Developer are Copyright (C) 2002\\n- * the Initial Developer. All Rights Reserved.\\n- *\\n- * Contributor(s):\\n- *      Brian Stell <bstell@ix.netcom.com>\\n- *\\n- * Alternatively, the contents of this file may be used under the terms of\\n- * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n- * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n- * in which case the provisions of the GPL or the LGPL are applicable instead\\n- * of those above. If you wish to allow use of your version of this file only\\n- * under the terms of either the GPL or the LGPL, and not to allow others to\\n- * use your version of this file under the terms of the MPL, indicate your\\n- * decision by deleting the provisions above and replace them with the notice\\n- * and other provisions required by the GPL or the LGPL. If you do not delete\\n- * the provisions above, a recipient may use your version of this file under\\n- * the terms of any one of the MPL, the GPL or the LGPL.\\n- *\\n- * ***** END LICENSE BLOCK ***** */\\n-\\n-#include \\\"nsISupports.idl\\\"\\n-%{C++\\n-#include <ft2build.h>\\n-#include FT_FREETYPE_H\\n-#include FT_CACHE_H\\n-#include FT_CACHE_IMAGE_H\\n-#include FT_OUTLINE_H\\n-#include FT_TRUETYPE_TABLES_H\\n-#define NS_FREETYPE2_CONTRACTID \\\"@mozilla.org/freetype2;1\\\"\\n-#define NS_FREETYPE2_CID NS_IFREETYPE2_IID\\n-// macros to handle FreeType2 26.6 numbers (26 bit number with 6 bit fraction)\\n-#define FT_REG_TO_16_16(x) ((x)<<16)\\n-#ifndef FT_MulFix\\n-#define FT_MulFix(v, s) (((v)*(s))>>16)\\n-#endif\\n-#define FT_ROUND(x) (((x) + 32) & ~63) // 63 = 2^6 - 1\\n-#define FT_TRUNC(x) ((x) >> 6)\\n-#define FT_DESIGN_UNITS_TO_PIXELS(v, s) FT_TRUNC(FT_ROUND(FT_MulFix((v) , (s))))\\n-\\n-%}\\n-\\n-\\n-[ptr] native constCharPtr(const char);\\n-native FT_Int(FT_Int);\\n-native FT_Long(FT_Long);\\n-native FT_UInt(FT_UInt);\\n-native FT_ULong(FT_ULong);\\n-\\n-native FT_BBox(FT_BBox);\\n-native FT_CharMap(FT_CharMap);\\n-native FT_Error(FT_Error);\\n-native FT_Face(FT_Face);\\n-native FT_Glyph(FT_Glyph);\\n-native FT_GlyphSlot(FT_GlyphSlot);\\n-native FT_Library(FT_Library);\\n-[ptr] native FT_Outline_p(FT_Outline);\\n-[ptr] native const_FT_Outline_Funcs_p(const FT_Outline_Funcs);\\n-native FT_Pointer(FT_Pointer);\\n-native FT_Sfnt_Tag(FT_Sfnt_Tag);\\n-native FT_Size(FT_Size);\\n-\\n-[ptr] native FTC_Image_Desc_p(FTC_Image_Desc);\\n-native FTC_Face_Requester(FTC_Face_Requester);\\n-native FTC_Font(FTC_Font);\\n-native FTC_Image_Cache(FTC_Image_Cache);\\n-native FTC_Manager(FTC_Manager);\\n-\\n-// #ifdef MOZ_SVG\\n-[ptr] native FT_Matrix_p(FT_Matrix);\\n-native FT_Vector(FT_Vector);\\n-[ptr] native FT_Vector_p(FT_Vector);\\n-native FT_Render_Mode(FT_Render_Mode);\\n-native FT_Bool(FT_Bool);\\n-// #endif\\n-\\n-/*\\n- * A XPCOM interface to the run-time loaded functions\\n- */\\n-[uuid(c6e09354-1bb1-4ec2-aaa3-a26d0aafe36d)]\\n-interface nsIFreeType2 : nsISupports\\n-{\\n-\\n-    readonly attribute FT_Library library;\\n-    readonly attribute FTC_Manager FTCacheManager;\\n-    readonly attribute FTC_Image_Cache ImageCache;\\n-\\n-    void    doneFace(in FT_Face face);\\n-    void    doneFreeType(in FT_Library lib);\\n-    void    doneGlyph(in FT_Glyph glyph);\\n-    FT_UInt getCharIndex(in FT_Face face, in FT_ULong charcode);\\n-    void    getGlyph(in FT_GlyphSlot slot, out FT_Glyph glyph);\\n-    voidPtr getSfntTable(in FT_Face face, in FT_Sfnt_Tag tag);\\n-    void    glyphGetCBox(in FT_Glyph glyph, in FT_UInt mode, out FT_BBox box);\\n-    void    initFreeType(out FT_Library lib);\\n-    void    loadGlyph(in FT_Face face, in FT_UInt gindex, in FT_Int flags);\\n-    void    newFace(in FT_Library lib, in constCharPtr filename,\\n-                    in FT_Long face_num, out FT_Face face);\\n-    void    outlineDecompose(in FT_Outline_p outline,\\n-                             in const_FT_Outline_Funcs_p funcs, in voidPtr p);\\n-    void    setCharmap(in FT_Face face, in FT_CharMap charmap);\\n-    void    imageCacheLookup(in FTC_Image_Cache cache, in FTC_Image_Desc_p desc,\\n-                             in FT_UInt gindex, out FT_Glyph glyph);\\n-    void    managerLookupSize(in FTC_Manager manager, in FTC_Font font,\\n-                              out FT_Face face, out FT_Size size);\\n-    void    managerDone(in FTC_Manager manager);\\n-    void    managerNew(in FT_Library lib, in FT_UInt max_faces,\\n-                       in FT_UInt max_sizes, in FT_ULong max_bytes,\\n-                       in FTC_Face_Requester requester, in FT_Pointer req_data,\\n-                       out FTC_Manager manager);\\n-    void    imageCacheNew(in FTC_Manager manager, out FTC_Image_Cache cache);\\n-/* #ifdef MOZ_SVG */\\n-    void glyphTransform(in FT_Glyph glyph, in FT_Matrix_p matrix,\\n-                        in FT_Vector_p delta);\\n-    void getKerning(in FT_Face face, in FT_UInt left_glyph, in FT_UInt right_glyph,\\n-                    in FT_UInt kern_mode, out FT_Vector akerning);\\n-    void glyphCopy(in FT_Glyph source, out FT_Glyph target);\\n-    void glyphToBitmap(inout FT_Glyph the_glyph, in FT_Render_Mode render_mode,\\n-                       in FT_Vector_p origin, in FT_Bool destroy);\\n-/* #endif */\\n-\\n-    FT_ULong getFirstChar(in FT_Face face, out FT_UInt gindex);\\n-    FT_ULong getNextChar(in FT_Face face, in FT_ULong charcode, out FT_UInt gindex);\\n-    void supportsExtFunc(out PRBool res);\\n-};\\ndiff --git a/gfx/src/Makefile.in b/gfx/src/Makefile.in\\nindex cb2ae0f..1c33cda 100644\\n--- a/gfx/src/Makefile.in\\n+++ b/gfx/src/Makefile.in\\n@@ -64,10 +64,6 @@ REQUIRES\\t= xpcom \\\\\\n \\n DIRS        = shared\\n \\n-ifdef MOZ_ENABLE_FREETYPE2\\n-DIRS        += freetype\\n-endif\\n-\\n ifdef MOZ_ENABLE_POSTSCRIPT\\n DIRS        += psshared\\n endif\\ndiff --git a/gfx/src/freetype/Makefile.in b/gfx/src/freetype/Makefile.in\\ndeleted file mode 100644\\nindex 03bf863..0000000\\n--- a/gfx/src/freetype/Makefile.in\\n+++ /dev/null\\n@@ -1,76 +0,0 @@\\n-#\\n-# ***** BEGIN LICENSE BLOCK *****\\n-# Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n-#\\n-# The contents of this file are subject to the Mozilla Public License Version\\n-# 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n-# the License. You may obtain a copy of the License at\\n-# http://www.mozilla.org/MPL/\\n-#\\n-# Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n-# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n-# for the specific language governing rights and limitations under the\\n-# License.\\n-#\\n-# The Original Code is mozilla.org code.\\n-#\\n-# The Initial Developer of the Original Code is\\n-# Netscape Communications Corporation.\\n-# Portions created by the Initial Developer are Copyright (C) 1998\\n-# the Initial Developer. All Rights Reserved.\\n-#\\n-# Contributor(s):\\n-#\\n-# Alternatively, the contents of this file may be used under the terms of\\n-# either of the GNU General Public License Version 2 or later (the \\\"GPL\\\"),\\n-# or the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n-# in which case the provisions of the GPL or the LGPL are applicable instead\\n-# of those above. If you wish to allow use of your version of this file only\\n-# under the terms of either the GPL or the LGPL, and not to allow others to\\n-# use your version of this file under the terms of the MPL, indicate your\\n-# decision by deleting the provisions above and replace them with the notice\\n-# and other provisions required by the GPL or the LGPL. If you do not delete\\n-# the provisions above, a recipient may use your version of this file under\\n-# the terms of any one of the MPL, the GPL or the LGPL.\\n-#\\n-# ***** END LICENSE BLOCK *****\\n-\\n-DEPTH\\t\\t= ../../..\\n-topsrcdir\\t= @top_srcdir@\\n-srcdir\\t\\t= @srcdir@\\n-VPATH\\t\\t= @srcdir@\\n-\\n-include $(DEPTH)/config/autoconf.mk\\n-\\n-MODULE\\t\\t= gfx\\n-LIBRARY_NAME\\t= gfxft2_s\\n-FORCE_STATIC_LIB= 1\\n-EXPORT_LIBRARY\\t= 1\\n-LIBXUL_LIBRARY\\t= 1\\n-\\n-REQUIRES\\t= xpcom \\\\\\n-\\t\\t  string \\\\\\n-\\t\\t  pref \\\\\\n-\\t\\t  uconv \\\\\\n-\\t\\t  unicharutil \\\\\\n-\\t\\t  $(NULL)\\n-\\n-CPPSRCS\\t= \\\\\\n-\\t\\tnsFreeType.cpp \\\\\\n-\\t\\t$(NULL)\\n-\\n-EXTRA_DSO_LDOPTS = \\\\\\n-\\t\\t$(LIBS_DIR) \\\\\\n-\\t\\t-lgkgfx \\\\\\n-\\t\\t$(MOZ_COMPONENT_LIBS) \\\\\\n-\\t\\t$(NULL)\\n-\\n-include $(topsrcdir)/config/rules.mk\\n-\\n-ifdef MOZ_ENABLE_FREETYPE2\\n-LOCAL_INCLUDES\\t= -I../..\\n-INCLUDES        += $(FT2_CFLAGS)\\n-# due to runtime linking with PR_LoadLibrary\\n-# EXTRA_DSO_LDOPTS does not need $(FT2_LIBS)\\n-endif\\n-\\ndiff --git a/gfx/src/freetype/nsFreeType.cpp b/gfx/src/freetype/nsFreeType.cpp\\ndeleted file mode 100644\\nindex 58037e6..0000000\\n--- a/gfx/src/freetype/nsFreeType.cpp\\n+++ /dev/null\\n@@ -1,1171 +0,0 @@\\n-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\\n-/* ex: set tabstop=8 softtabstop=2 shiftwidth=2 expandtab: */\\n-/* ***** BEGIN LICENSE BLOCK *****\\n- * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n- *\\n- * The contents of this file are subject to the Mozilla Public License Version\\n- * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n- * the License. You may obtain a copy of the License at\\n- * http://www.mozilla.org/MPL/\\n- *\\n- * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n- * for the specific language governing rights and limitations under the\\n- * License.\\n- *\\n- * The Original Code is mozilla.org code.\\n- *\\n- * The Initial Developer of the Original Code is\\n- * Netscape Communications Corporation.\\n- * Portions created by the Initial Developer are Copyright (C) 1998\\n- * the Initial Developer. All Rights Reserved.\\n- *\\n- * Contributor(s):\\n- *   Brian Stell <bstell@netscape.com>\\n- *\\n- * Alternatively, the contents of this file may be used under the terms of\\n- * either of the GNU General Public License Version 2 or later (the \\\"GPL\\\"),\\n- * or the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n- * in which case the provisions of the GPL or the LGPL are applicable instead\\n- * of those above. If you wish to allow use of your version of this file only\\n- * under the terms of either the GPL or the LGPL, and not to allow others to\\n- * use your version of this file under the terms of the MPL, indicate your\\n- * decision by deleting the provisions above and replace them with the notice\\n- * and other provisions required by the GPL or the LGPL. If you do not delete\\n- * the provisions above, a recipient may use your version of this file under\\n- * the terms of any one of the MPL, the GPL or the LGPL.\\n- *\\n- * ***** END LICENSE BLOCK ***** */\\n-\\n-#include \\\"math.h\\\"\\n-#include \\\"nsIPref.h\\\"\\n-#include \\\"nsCOMPtr.h\\\"\\n-#include \\\"nsIServiceManager.h\\\"\\n-#include \\\"nsICharRepresentable.h\\\"\\n-#include \\\"nsCompressedCharMap.h\\\"\\n-#include \\\"nsICharsetConverterManager.h\\\"\\n-#include \\\"nsIRenderingContext.h\\\"\\n-#include \\\"nsFreeType.h\\\"\\n-\\n-#include <ft2build.h>\\n-#include FT_FREETYPE_H\\n-#include FT_GLYPH_H\\n-#include FT_TRUETYPE_TABLES_H\\n-#include FT_TRUETYPE_IDS_H\\n-\\n-# define FREETYPE_PRINTF(x) \\\\\\n-            PR_BEGIN_MACRO \\\\\\n-              if (gFreeTypeDebug) { \\\\\\n-                printf x ; \\\\\\n-                printf(\\\", %s %d\\\\n\\\", __FILE__, __LINE__); \\\\\\n-              } \\\\\\n-            PR_END_MACRO\\n-\\n-PRUint32 gFreeTypeDebug = 0;\\n-\\n-//\\n-// these belong in nsFontFreeType\\n-//\\n-PRBool       nsFreeType2::gFreeType2Autohinted = PR_FALSE;\\n-PRBool       nsFreeType2::gFreeType2Unhinted = PR_TRUE;\\n-PRUint8      nsFreeType2::gAATTDarkTextMinValue = 64;\\n-double       nsFreeType2::gAATTDarkTextGain = 0.8;\\n-PRInt32      nsFreeType2::gAntiAliasMinimum = 8;\\n-PRInt32      nsFreeType2::gEmbeddedBitmapMaximumHeight = 1000000;\\n-nsHashtable* nsFreeType2::sFontFamilies = nsnull;\\n-nsHashtable* nsFreeType2::sRange1CharSetNames = nsnull;\\n-nsHashtable* nsFreeType2::sRange2CharSetNames = nsnull;\\n-nsICharsetConverterManager* nsFreeType2::sCharSetManager = nsnull;\\n-PRBool       nsFreeType2::gHasExtFunc = PR_TRUE;\\n-\\n-extern nsulCodePageRangeCharSetName ulCodePageRange1CharSetNames[];\\n-extern nsulCodePageRangeCharSetName ulCodePageRange2CharSetNames[];\\n-extern nsTTFontFamilyEncoderInfo    gFontFamilyEncoderInfo[];\\n-\\n-typedef int Error;\\n-\\n-/*FT_CALLBACK_DEF*/ FT_Error nsFreeTypeFaceRequester(FTC_FaceID, FT_Library, \\n-                                                 FT_Pointer, FT_Face*);\\n-static FT_Error nsFreeType2__DummyFunc();\\n-\\n-static nsHashtable* gFreeTypeFaces = nsnull;\\n-\\n-//\\n-// Define the FreeType2 functions we resolve at run time.\\n-// see the comment near nsFreeType2::DoneFace() for more info\\n-//\\n-#define NS_FT2_OFFSET(f) (long)&((nsFreeType2*)0)->f\\n-FtFuncList nsFreeType2::FtFuncs [] = {\\n-  {\\\"FT_Done_Face\\\",            NS_FT2_OFFSET(nsFT_Done_Face),            PR_TRUE},\\n-  {\\\"FT_Done_FreeType\\\",        NS_FT2_OFFSET(nsFT_Done_FreeType),        PR_TRUE},\\n-  {\\\"FT_Done_Glyph\\\",           NS_FT2_OFFSET(nsFT_Done_Glyph),           PR_TRUE},\\n-  {\\\"FT_Get_Char_Index\\\",       NS_FT2_OFFSET(nsFT_Get_Char_Index),       PR_TRUE},\\n-  {\\\"FT_Get_Glyph\\\",            NS_FT2_OFFSET(nsFT_Get_Glyph),            PR_TRUE},\\n-  {\\\"FT_Get_Sfnt_Table\\\",       NS_FT2_OFFSET(nsFT_Get_Sfnt_Table),       PR_TRUE},\\n-  {\\\"FT_Glyph_Get_CBox\\\",       NS_FT2_OFFSET(nsFT_Glyph_Get_CBox),       PR_TRUE},\\n-  {\\\"FT_Init_FreeType\\\",        NS_FT2_OFFSET(nsFT_Init_FreeType),        PR_TRUE},\\n-  {\\\"FT_Load_Glyph\\\",           NS_FT2_OFFSET(nsFT_Load_Glyph),           PR_TRUE},\\n-  {\\\"FT_New_Face\\\",             NS_FT2_OFFSET(nsFT_New_Face),             PR_TRUE},\\n-  {\\\"FT_Outline_Decompose\\\",    NS_FT2_OFFSET(nsFT_Outline_Decompose),    PR_TRUE},\\n-  {\\\"FT_Set_Charmap\\\",          NS_FT2_OFFSET(nsFT_Set_Charmap),          PR_TRUE},\\n-  {\\\"FTC_Image_Cache_Lookup\\\",  NS_FT2_OFFSET(nsFTC_Image_Cache_Lookup),  PR_TRUE},\\n-  {\\\"FTC_Manager_Lookup_Size\\\", NS_FT2_OFFSET(nsFTC_Manager_Lookup_Size), PR_TRUE},\\n-  {\\\"FTC_Manager_Done\\\",        NS_FT2_OFFSET(nsFTC_Manager_Done),        PR_TRUE},\\n-  {\\\"FTC_Manager_New\\\",         NS_FT2_OFFSET(nsFTC_Manager_New),         PR_TRUE},\\n-  {\\\"FTC_Image_Cache_New\\\",     NS_FT2_OFFSET(nsFTC_Image_Cache_New),     PR_TRUE},\\n-// #ifdef MOZ_SVG\\n-  {\\\"FT_Glyph_Transform\\\",      NS_FT2_OFFSET(nsFT_Glyph_Transform),      PR_TRUE},\\n-  {\\\"FT_Get_Kerning\\\",          NS_FT2_OFFSET(nsFT_Get_Kerning),          PR_TRUE},\\n-  {\\\"FT_Glyph_Copy\\\",           NS_FT2_OFFSET(nsFT_Glyph_Copy),           PR_TRUE},\\n-  {\\\"FT_Glyph_To_Bitmap\\\",      NS_FT2_OFFSET(nsFT_Glyph_To_Bitmap),      PR_TRUE},\\n-// #endif\\n-  {\\\"FT_Get_First_Char\\\",       NS_FT2_OFFSET(nsFT_Get_First_Char),       PR_FALSE},\\n-  {\\\"FT_Get_Next_Char\\\",        NS_FT2_OFFSET(nsFT_Get_Next_Char),        PR_FALSE},\\n-  {nsnull,                    0, 0}\\n-};\\n-\\n-nsTTFontEncoderInfo FEI_Adobe_Symbol_Encoding = {\\n-  \\\"Adobe-Symbol-Encoding\\\", TT_PLATFORM_MICROSOFT, TT_MS_ID_SYMBOL_CS, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_x_ttf_cmr = {\\n-  \\\"x-ttf-cmr\\\", TT_PLATFORM_MICROSOFT, TT_MS_ID_UNICODE_CS, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_x_ttf_cmmi = {\\n-  \\\"x-ttf-cmmi\\\", TT_PLATFORM_MICROSOFT, TT_MS_ID_UNICODE_CS, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_x_ttf_cmsy = {\\n-  \\\"x-ttf-cmsy\\\", TT_PLATFORM_MICROSOFT, TT_MS_ID_UNICODE_CS, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_x_ttf_cmex = {\\n-  \\\"x-ttf-cmex\\\", TT_PLATFORM_MICROSOFT, TT_MS_ID_UNICODE_CS, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_x_mathematica1 = {\\n-  \\\"x-mathematica1\\\", TT_PLATFORM_MACINTOSH, TT_MAC_ID_ROMAN, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_x_mathematica2 = {\\n-  \\\"x-mathematica2\\\", TT_PLATFORM_MACINTOSH, TT_MAC_ID_ROMAN, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_x_mathematica3 = {\\n-  \\\"x-mathematica3\\\", TT_PLATFORM_MACINTOSH, TT_MAC_ID_ROMAN, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_x_mathematica4 = {\\n-  \\\"x-mathematica4\\\", TT_PLATFORM_MACINTOSH, TT_MAC_ID_ROMAN, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_x_mathematica5 = {\\n-  \\\"x-mathematica5\\\", TT_PLATFORM_MACINTOSH, TT_MAC_ID_ROMAN, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_x_mtextra = {\\n-  \\\"x-mtextra\\\", TT_PLATFORM_MICROSOFT, TT_MS_ID_SYMBOL_CS, nsnull\\n-};\\n-nsTTFontEncoderInfo FEI_windows_1252 = {\\n-  \\\"windows-1252\\\", TT_PLATFORM_MICROSOFT, TT_MS_ID_SYMBOL_CS, nsnull\\n-};\\n-\\n-\\n-///////////////////////////////////////////////////////////////////////\\n-//\\n-// class nsFreeType2 data/functions\\n-//\\n-///////////////////////////////////////////////////////////////////////\\n-\\n-NS_IMPL_ISUPPORTS1(nsFreeType2, nsIFreeType2)\\n-\\n-//\\n-// Since the Freetype2 library may not be available on the user's\\n-// system we cannot link directly to it otherwise the whole app would\\n-// fail to run on those systems.  Instead we access the FreeType2\\n-// functions via function pointers.\\n-//\\n-// If we can load the Freetype2 library with PR_LoadLIbrary we to load \\n-// pointers to the Ft2 functions. If not, then the function pointers\\n-// point to a dummy function which always returns an error.\\n-//\\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::DoneFace(FT_Face face)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Done_Face(face);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::DoneFreeType(FT_Library library)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Done_FreeType(library);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::DoneGlyph(FT_Glyph glyph)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  nsFT_Done_Glyph(glyph);\\n-  return NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::GetCharIndex(FT_Face face, FT_ULong charcode, FT_UInt *index)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  *index = nsFT_Get_Char_Index(face, charcode);\\n-  return NS_OK;\\n-} \\n-\\n-NS_IMETHODIMP\\n-nsFreeType2::GetGlyph(FT_GlyphSlot slot, FT_Glyph *glyph)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Get_Glyph(slot, glyph);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::GetSfntTable(FT_Face face, FT_Sfnt_Tag tag, void** table)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  *table = nsFT_Get_Sfnt_Table(face, tag);\\n-  return NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::GlyphGetCBox(FT_Glyph glyph, FT_UInt mode, FT_BBox *bbox)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  nsFT_Glyph_Get_CBox(glyph, mode, bbox);\\n-  return NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::InitFreeType(FT_Library *library)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Init_FreeType(library);\\n-  if (error)\\n-  {\\n-    FREETYPE_PRINTF((\\\"\\\\n\\\\n*********\\\\nFreeType initialization error = %d\\\",\\n-                         error));\\n-    return NS_ERROR_FAILURE;\\n-  }\\n-  else return NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::LoadGlyph(FT_Face face, FT_UInt glyph, FT_Int flags)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Load_Glyph(face, glyph, flags);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::NewFace(FT_Library library, const char *path,\\n-                         FT_Long face_index, FT_Face *face)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_New_Face(library, path, face_index, face);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::OutlineDecompose(FT_Outline *outline,\\n-                              const FT_Outline_Funcs *funcs, void *user)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Outline_Decompose(outline, funcs, user);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::SetCharmap(FT_Face face, FT_CharMap  charmap)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Set_Charmap(face, charmap);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::ImageCacheLookup(FTC_Image_Cache cache, FTC_Image_Desc *desc,\\n-                              FT_UInt glyphID, FT_Glyph *glyph)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFTC_Image_Cache_Lookup(cache, desc, glyphID, glyph);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::ManagerLookupSize(FTC_Manager manager, FTC_Font font,\\n-                               FT_Face *face, FT_Size *size)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFTC_Manager_Lookup_Size(manager, font, face, size);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::ManagerDone(FTC_Manager manager)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  nsFTC_Manager_Done(manager);\\n-  return NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::ManagerNew(FT_Library library, FT_UInt max_faces,\\n-                        FT_UInt max_sizes, FT_ULong max_bytes,\\n-                        FTC_Face_Requester requester, FT_Pointer req_data,\\n-                        FTC_Manager *manager)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFTC_Manager_New(library, max_faces, max_sizes, max_bytes,\\n-                                     requester, req_data, manager);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::ImageCacheNew(FTC_Manager manager, FTC_Image_Cache *cache)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFTC_Image_Cache_New(manager, cache);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-} \\n-\\n-// #ifdef MOZ_SVG\\n-NS_IMETHODIMP\\n-nsFreeType2::GlyphTransform(FT_Glyph glyph, FT_Matrix * matrix, FT_Vector * delta)\\n-{\\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Glyph_Transform(glyph, matrix, delta);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-}\\n-\\n-NS_IMETHODIMP\\n-nsFreeType2::GetKerning(FT_Face face, FT_UInt left_glyph, FT_UInt right_glyph,\\n-                        FT_UInt kern_mode, FT_Vector *akerning)\\n-{\\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Get_Kerning(face, left_glyph, right_glyph,\\n-                                    kern_mode, akerning);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-}\\n-\\n-NS_IMETHODIMP\\n-nsFreeType2::GlyphCopy(FT_Glyph source, FT_Glyph *target)\\n-{\\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Glyph_Copy(source, target);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-}\\n-\\n-NS_IMETHODIMP\\n-nsFreeType2::GlyphToBitmap(FT_Glyph *the_glyph, FT_Render_Mode render_mode,\\n-                           FT_Vector * origin, FT_Bool destroy)\\n-{\\n-  // call the FreeType2 function via the function pointer\\n-  FT_Error error = nsFT_Glyph_To_Bitmap(the_glyph, render_mode, origin, destroy);\\n-  return error ? NS_ERROR_FAILURE : NS_OK;\\n-}\\n-\\n-// #endif\\n-\\n-NS_IMETHODIMP\\n-nsFreeType2::GetFirstChar(FT_Face face, FT_UInt *gindex, FT_ULong *charcode)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  *charcode = nsFT_Get_First_Char(face, gindex);\\n-  return NS_OK;\\n-} \\n-\\n-NS_IMETHODIMP\\n-nsFreeType2::GetNextChar(FT_Face face, FT_ULong charcode, FT_UInt *gindex, FT_ULong *ncharcode)\\n-{ \\n-  // call the FreeType2 function via the function pointer\\n-  *ncharcode = nsFT_Get_Next_Char(face, charcode, gindex);\\n-  return NS_OK;\\n-} \\n-\\n-NS_IMETHODIMP\\n-nsFreeType2::SupportsExtFunc(PRBool *res)\\n-{ \\n-  *res = gHasExtFunc;\\n-  return NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::GetImageCache(FTC_Image_Cache *aCache)\\n-{\\n-  *aCache = mImageCache;\\n-  return NS_OK;\\n-}\\n-\\n-NS_IMETHODIMP\\n-nsFreeType2::GetFTCacheManager(FTC_Manager *aManager)\\n-{ \\n-  *aManager = mFTCacheManager;\\n-  return NS_OK;\\n-} \\n- \\n-NS_IMETHODIMP\\n-nsFreeType2::GetLibrary(FT_Library *aLibrary)\\n-{ \\n-  *aLibrary = mFreeTypeLibrary;\\n-  return NS_OK;\\n-} \\n-\\n-void\\n-nsFreeType2::ClearFunctions()\\n-{\\n-  FtFuncList *p;\\n-  void *ptr = this;\\n-  for (p=FtFuncs; p->FuncName; p++) {\\n-    *((PRFuncPtr*)((char*)ptr+p->FuncOffset)) = \\n-                        (PRFuncPtr)&nsFreeType2__DummyFunc;\\n-  }\\n-}\\n-\\n-void\\n-nsFreeType2::ClearGlobals()\\n-{\\n-  mSharedLib = nsnull;\\n-  mFreeTypeLibrary = nsnull;\\n-  mFTCacheManager  = nsnull;\\n-  mImageCache      = nsnull;\\n-}\\n-\\n-// I would like to make this a static member function but the compilier \\n-// warning about converting a data pointer to a function pointer cannot\\n-// distinguish static member functions from static data members\\n-static FT_Error\\n-nsFreeType2__DummyFunc()\\n-{\\n-  NS_ERROR(\\\"nsFreeType2__DummyFunc should never be called\\\");\\n-  return 1;\\n-}\\n-\\n-nsFreeType2::~nsFreeType2()\\n-{\\n-  FreeGlobals();\\n-}\\n-\\n-void\\n-nsFreeType2::FreeGlobals()\\n-{\\n-  if (mFreeType2SharedLibraryName) {\\n-    free(mFreeType2SharedLibraryName);\\n-    mFreeType2SharedLibraryName = nsnull;\\n-  }\\n-  if (gFreeTypeFaces) {\\n-    gFreeTypeFaces->Reset(nsFreeTypeFace::FreeFace, nsnull);\\n-    delete gFreeTypeFaces;\\n-    gFreeTypeFaces = nsnull;\\n-  }\\n-  // mImageCache released by cache manager\\n-  if (mFTCacheManager) {\\n-    // use \\\"this->\\\" to make sure it is obivious we are calling the member func\\n-    this->ManagerDone(mFTCacheManager);\\n-    mFTCacheManager = nsnull;\\n-  }\\n-  if (mFreeTypeLibrary) {\\n-    // use \\\"this->\\\" to make sure it is obivious we are calling the member func\\n-    this->DoneFreeType(mFreeTypeLibrary);\\n-    mFreeTypeLibrary = nsnull;\\n-  }\\n-  \\n-  if (sRange1CharSetNames)\\n-    delete sRange1CharSetNames;\\n-  if (sRange2CharSetNames)\\n-    delete sRange2CharSetNames;\\n-  if (sFontFamilies)\\n-    delete sFontFamilies;\\n-  \\n-  NS_IF_RELEASE(sCharSetManager);\\n-  \\n-  // release any encoders that were created\\n-  int i;\\n-  for (i=0; gFontFamilyEncoderInfo[i].mFamilyName; i++) {\\n-    nsTTFontFamilyEncoderInfo *ffei = &gFontFamilyEncoderInfo[i];\\n-    nsTTFontEncoderInfo *fei = ffei->mEncodingInfo;\\n-    NS_IF_RELEASE(fei->mConverter);\\n-  }\\n-\\n-  UnloadSharedLib();\\n-  ClearFunctions();\\n-  ClearGlobals();\\n-}\\n-\\n-nsresult\\n-nsFreeType2::Init()\\n-{\\n-  // set all the globals to default values\\n-  ClearGlobals();\\n-\\n-  nsulCodePageRangeCharSetName *crn = nsnull;\\n-  nsTTFontFamilyEncoderInfo *ff = gFontFamilyEncoderInfo;\\n-  nsCOMPtr<nsIPref> mPref = do_GetService(NS_PREF_CONTRACTID);\\n-  \\n-  if (!mPref) {\\n-    FreeGlobals();\\n-    return NS_ERROR_FAILURE;\\n-  }\\n-  nsresult rv;\\n-\\n-  PRBool enable_freetype2 = PR_TRUE;\\n-  rv = mPref->GetBoolPref(\\\"font.FreeType2.enable\\\", &enable_freetype2);\\n-  if (NS_SUCCEEDED(rv)) {\\n-    mEnableFreeType2 = enable_freetype2;\\n-    FREETYPE_PRINTF((\\\"mEnableFreeType2 = %d\\\", mEnableFreeType2));\\n-  }\\n-\\n-  rv = mPref->GetCharPref(\\\"font.freetype2.shared-library\\\",\\n-                          &mFreeType2SharedLibraryName);\\n-  if (NS_FAILED(rv)) {\\n-    enable_freetype2 = PR_FALSE;\\n-    FREETYPE_PRINTF((\\n-                  \\\"mFreeType2SharedLibraryName missing, FreeType2 disabled\\\"));\\n-    mFreeType2SharedLibraryName = nsnull;\\n-  }\\n-\\n-  PRBool freetype2_autohinted = PR_FALSE;\\n-  rv = mPref->GetBoolPref(\\\"font.FreeType2.autohinted\\\", &freetype2_autohinted);\\n-  if (NS_SUCCEEDED(rv)) {\\n-    gFreeType2Autohinted = freetype2_autohinted;\\n-    FREETYPE_PRINTF((\\\"gFreeType2Autohinted = %d\\\", gFreeType2Autohinted));\\n-  }\\n-  \\n-  PRBool freetype2_unhinted = PR_TRUE;\\n-  rv = mPref->GetBoolPref(\\\"font.FreeType2.unhinted\\\", &freetype2_unhinted);\\n-  if (NS_SUCCEEDED(rv)) {\\n-    gFreeType2Unhinted = freetype2_unhinted;\\n-    FREETYPE_PRINTF((\\\"gFreeType2Unhinted = %d\\\", gFreeType2Unhinted));\\n-  }\\n-\\n-  PRInt32 int_val = 0;\\n-  rv = mPref->GetIntPref(\\\"font.scale.tt_bitmap.dark_text.min\\\", &int_val);\\n-  if (NS_SUCCEEDED(rv)) {\\n-    gAATTDarkTextMinValue = int_val;\\n-    FREETYPE_PRINTF((\\\"gAATTDarkTextMinValue = %d\\\", gAATTDarkTextMinValue));\\n-  }\\n-\\n-  nsXPIDLCString str;\\n-  rv = mPref->GetCharPref(\\\"font.scale.tt_bitmap.dark_text.gain\\\",\\n-                           getter_Copies(str));\\n-  if (NS_SUCCEEDED(rv)) {\\n-    gAATTDarkTextGain = atof(str.get());\\n-    FREETYPE_PRINTF((\\\"gAATTDarkTextGain = %g\\\", gAATTDarkTextGain));\\n-  }\\n-\\n-  PRInt32 antialias_minimum = 8;\\n-  rv = mPref->GetIntPref(\\\"font.antialias.min\\\", &antialias_minimum);\\n-  if (NS_SUCCEEDED(rv)) {\\n-    gAntiAliasMinimum = antialias_minimum;\\n-    FREETYPE_PRINTF((\\\"gAntiAliasMinimum = %d\\\", gAntiAliasMinimum));\\n-  }\\n-\\n-  PRInt32 embedded_bitmaps_maximum = 1000000;\\n-  rv = mPref->GetIntPref(\\\"font.embedded_bitmaps.max\\\",&embedded_bitmaps_maximum);\\n-  if (NS_SUCCEEDED(rv)) {\\n-    gEmbeddedBitmapMaximumHeight = embedded_bitmaps_maximum;\\n-    FREETYPE_PRINTF((\\\"gEmbeddedBitmapMaximumHeight = %d\\\",\\n-                             gEmbeddedBitmapMaximumHeight));\\n-  }\\n-  \\n-  if (NS_FAILED(rv)) {\\n-    mEnableFreeType2 = PR_FALSE;\\n-    mFreeType2SharedLibraryName = nsnull;\\n-    gFreeType2Autohinted = PR_FALSE;\\n-    gFreeType2Unhinted = PR_TRUE;\\n-    gAATTDarkTextMinValue = 64;\\n-    gAATTDarkTextGain = 0.8;\\n-    gAntiAliasMinimum = 8;\\n-    gEmbeddedBitmapMaximumHeight = 1000000;\\n-  }\\n-  \\n-  mPref = nsnull;\\n-  \\n-  if (!InitLibrary()) {\\n-    FreeGlobals();\\n-    return NS_ERROR_OUT_OF_MEMORY;\\n-  }\\n-  gFreeTypeFaces = new nsHashtable();\\n-  if (!gFreeTypeFaces) {\\n-    FreeGlobals();\\n-    return NS_ERROR_OUT_OF_MEMORY;\\n-  }\\n-\\n-  sRange1CharSetNames = new nsHashtable();\\n-  if (!sRange1CharSetNames) {\\n-    FreeGlobals();\\n-    return NS_ERROR_OUT_OF_MEMORY;\\n-  }\\n-  crn = ulCodePageRange1CharSetNames;\\n-  while (crn->charsetName) {\\n-    char buf[32];\\n-    sprintf(buf, \\\"0x%08lx\\\", crn->bit);\\n-    nsCStringKey key(buf);\\n-    sRange1CharSetNames->Put(&key, (void*)crn->charsetName);\\n-    crn++;\\n-  }\\n-\\n-  sRange2CharSetNames = new nsHashtable();\\n-  if (!sRange2CharSetNames) {\\n-    FreeGlobals();\\n-    return NS_ERROR_OUT_OF_MEMORY;\\n-  }\\n-  crn = ulCodePageRange2CharSetNames;\\n-  while (crn->charsetName) {\\n-    char buf[32];\\n-    sprintf(buf, \\\"0x%08lx\\\", crn->bit);\\n-    nsCStringKey key(buf);\\n-    sRange2CharSetNames->Put(&key, (void*)crn->charsetName);\\n-    crn++;\\n-  }\\n-\\n-  sFontFamilies = new nsHashtable();\\n-  if (!sFontFamilies) {\\n-    FreeGlobals();\\n-    return NS_ERROR_OUT_OF_MEMORY;\\n-  }\\n-  while (ff->mFamilyName) {\\n-    nsCAutoString name(ff->mFamilyName);\\n-    ToLowerCase(name);\\n-    nsCStringKey key(name);\\n-    sFontFamilies->Put(&key, (void*)ff);\\n-    ff++;\\n-  }\\n-\\n-  return NS_OK;\\n-}\\n-\\n-PRBool\\n-nsFreeType2::InitLibrary()\\n-{\\n-#ifdef MOZ_MATHML\\n-  // do not yet support MathML\\n-  // goto cleanup_and_return;\\n-#endif\\n-\\n-  if (!mEnableFreeType2)\\n-    return PR_FALSE;\\n-\\n-  // since the library may not be available on any given system\\n-  // failing to load is not considered a fatal error\\n-  if (!LoadSharedLib())\\n-    return PR_FALSE;\\n-\\n-  // use \\\"this->\\\" to make sure it is obivious we are calling the member func\\n-  nsresult rv = this->InitFreeType(&mFreeTypeLibrary);\\n-  if (NS_FAILED(rv)) {\\n-    mFreeTypeLibrary = nsnull;\\n-    goto cleanup_and_return;\\n-  }\\n-  // use \\\"this->\\\" to make sure it is obivious we are calling the member func\\n-  rv = this->ManagerNew(mFreeTypeLibrary, 0, 0, 0, nsFreeTypeFaceRequester,\\n-                         this, &mFTCacheManager);\\n-  NS_ASSERTION(NS_SUCCEEDED(rv), \\\"failed to create FreeType Cache manager\\\");\\n-  if (NS_FAILED(rv))\\n-    goto cleanup_and_return;\\n-  // use \\\"this->\\\" to make sure it is obivious we are calling the member func\\n-  rv = this->ImageCacheNew(mFTCacheManager, &mImageCache);\\n-  NS_ASSERTION(NS_SUCCEEDED(rv), \\\"failed to create FreeType image cache\\\");\\n-  if (NS_FAILED(rv))\\n-    goto cleanup_and_return;\\n-  return PR_TRUE;\\n-\\n-cleanup_and_return:\\n-  // clean everything up but note that init was called\\n-  FreeGlobals();\\n-  return(PR_FALSE);\\n-}\\n-\\n-PRBool\\n-nsFreeType2::LoadSharedLib()\\n-{\\n-  NS_ASSERTION(mSharedLib==nsnull, \\\"library already loaded\\\");\\n-\\n-  if (!mFreeType2SharedLibraryName)\\n-    return PR_FALSE;\\n-  mSharedLib = PR_LoadLibrary(mFreeType2SharedLibraryName);\\n-  // since the library may not be available on any given system\\n-  // failing to load is not considered a fatal error\\n-  if (!mSharedLib) {\\n-    NS_WARNING(\\\"freetype library not found\\\");\\n-    return PR_FALSE;\\n-  }\\n-\\n-  // checking FT_Get_First_Char() and FT_Get_Next_Char() for fast lookup methods\\n-  gHasExtFunc = PR_TRUE;\\n-  FtFuncList *p;\\n-  PRFuncPtr func;\\n-  void *ptr = this;\\n-  for (p=FtFuncs; p->FuncName; p++) {\\n-    func = PR_FindFunctionSymbol(mSharedLib, p->FuncName);\\n-    if (!func) {\\n-      if (p->Required == PR_TRUE) {\\n-        NS_WARNING(\\\"nsFreeType2::LoadSharedLib Error\\\");\\n-        ClearFunctions();\\n-        return PR_FALSE;\\n-      } else {\\n-        // should not return, but disable fast lookup methods\\n-        gHasExtFunc = PR_FALSE;\\n-      }\\n-    }\\n-    *((PRFuncPtr*)((char*)ptr+p->FuncOffset)) = func;\\n-  }\\n-\\n-  return PR_TRUE;\\n-\\n-}\\n-\\n-void\\n-nsFreeType2::UnloadSharedLib()\\n-{\\n-  if (mSharedLib)\\n-    PR_UnloadLibrary(mSharedLib);\\n-  mSharedLib = nsnull;\\n-}\\n-\\n-const char *\\n-nsFreeType2::GetRange1CharSetName(unsigned long aBit)\\n-{\\n-  char buf[32];\\n-  sprintf(buf, \\\"0x%08lx\\\", aBit);\\n-  nsCStringKey key(buf);\\n-  const char *charsetName = (const char *)sRange1CharSetNames->Get(&key);\\n-  return charsetName;\\n-}\\n-\\n-const char *\\n-nsFreeType2::GetRange2CharSetName(unsigned long aBit)\\n-{\\n-  char buf[32];\\n-  sprintf(buf, \\\"0x%08lx\\\", aBit);\\n-  nsCStringKey key(buf);\\n-  const char *charsetName = (const char *)sRange2CharSetNames->Get(&key);\\n-  return charsetName;\\n-}\\n-\\n-nsTTFontFamilyEncoderInfo*\\n-nsFreeType2::GetCustomEncoderInfo(const char * aFamilyName)\\n-{\\n-  if (!sFontFamilies)\\n-    return nsnull;\\n-\\n-  nsTTFontFamilyEncoderInfo *ffei;\\n-  nsCAutoString name(aFamilyName);\\n-  ToLowerCase(name);\\n-  nsCStringKey key(name);\\n-  ffei = (nsTTFontFamilyEncoderInfo*)sFontFamilies->Get(&key);\\n-  if (!ffei)\\n-    return nsnull;\\n-\\n-  // init the converter\\n-  if (!ffei->mEncodingInfo->mConverter) {\\n-    nsTTFontEncoderInfo *fei = ffei->mEncodingInfo;\\n-    //\\n-    // build the converter\\n-    //\\n-    nsICharsetConverterManager* charSetManager = GetCharSetManager();\\n-    if (!charSetManager)\\n-      return nsnull;\\n-    nsresult res;\\n-    res = charSetManager->GetUnicodeEncoderRaw(fei->mConverterName, &fei->mConverter);\\n-    if (NS_FAILED(res)) {\\n-      return nsnull;\\n-    }\\n-  }\\n-  return ffei;\\n-}\\n-\\n-nsICharsetConverterManager*\\n-nsFreeType2::GetCharSetManager()\\n-{\\n-  if (!sCharSetManager) {\\n-    //\\n-    // get the sCharSetManager\\n-    //\\n-    CallGetService(NS_CHARSETCONVERTERMANAGER_CONTRACTID, &sCharSetManager);\\n-    NS_ASSERTION(sCharSetManager,\\\"failed to create the charset manager\\\");\\n-  }\\n-  return sCharSetManager;\\n-}\\n-\\n-PRUint16*\\n-nsFreeType2::GetCCMap(nsFontCatalogEntry *aFce)\\n-{\\n-  nsCompressedCharMap ccmapObj;\\n-  if (aFce->mFlags & FCE_FLAGS_SURROGATE) {\\n-    ccmapObj.Extend();\\n-  }\\n-  ccmapObj.SetChars(aFce->mCCMap);\\n-  return ccmapObj.NewCCMap();\\n-}\\n-\\n-///////////////////////////////////////////////////////////////////////\\n-//\\n-// class nsFreeTypeFace data/functions\\n-//\\n-///////////////////////////////////////////////////////////////////////\\n-NS_IMPL_ISUPPORTS1(nsFreeTypeFace, nsITrueTypeFontCatalogEntry)\\n-\\n-nsFreeTypeFace::nsFreeTypeFace()\\n-{\\n-}\\n-\\n-nsresult nsFreeTypeFace::Init(nsFontCatalogEntry *aFce)\\n-{\\n-  NS_ASSERTION(aFce, \\\"init of nsFreeTypeFace needs nsFontCatalogEntry\\\");\\n-  if (aFce)\\n-    mFce = aFce;\\n-  else {\\n-    mFce = new nsFontCatalogEntry;\\n-    NS_ASSERTION(mFce, \\\"memory error while creating nsFontCatalogEntry\\\");\\n-    if (!mFce)\\n-      return NS_ERROR_OUT_OF_MEMORY;\\n-  }\\n-  mCCMap = nsnull;\\n-  return NS_OK;\\n-}\\n-\\n-nsFreeTypeFace::~nsFreeTypeFace()\\n-{\\n-  if (mCCMap)\\n-    FreeCCMap(mCCMap);\\n-}\\n-\\n-NS_IMETHODIMP nsFreeTypeFace::GetFontCatalogType(\\n-                              PRUint16 *aFontCatalogType)\\n-{\\n-  *aFontCatalogType = FONT_CATALOG_TRUETYPE;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute ACString fileName; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetFileName(nsACString & aFileName)\\n-{\\n-  aFileName.Assign(mFce->mFontFileName);\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute ACString familyName; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetFamilyName(nsACString & aFamilyName)\\n-{\\n-  aFamilyName.Assign(mFce->mFamilyName);\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute ACString styleName; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetStyleName(nsACString & aStyleName)\\n-{\\n-  aStyleName.Assign(mFce->mStyleName);\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute ACString vendorID; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetVendorID(nsACString & aVendorID)\\n-{\\n-  aVendorID.Assign(mFce->mVendorID);\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute short faceIndex; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetFaceIndex(PRInt16 *aFaceIndex)\\n-{\\n-  *aFaceIndex = mFce->mFaceIndex;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute short numFaces; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetNumFaces(PRInt16 *aNumFaces)\\n-{\\n-  *aNumFaces = mFce->mNumFaces;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute short numEmbeddedBitmaps; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetNumEmbeddedBitmaps(\\n-                              PRInt16 *aNumEmbeddedBitmaps)\\n-{\\n-  *aNumEmbeddedBitmaps = mFce->mNumEmbeddedBitmaps;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute long numGlyphs; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetNumGlyphs(PRInt32 *aNumGlyphs)\\n-{\\n-  *aNumGlyphs = mFce->mNumGlyphs;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute long numUsableGlyphs; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetNumUsableGlyphs(\\n-                              PRInt32 *aNumUsableGlyphs)\\n-{\\n-  *aNumUsableGlyphs = mFce->mNumUsableGlyphs;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute unsigned short weight; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetWeight(PRUint16 *aWeight)\\n-{\\n-  *aWeight = mFce->mWeight;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute unsigned short width; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetWidth(PRUint16 *aWidth)\\n-{\\n-  *aWidth = mFce->mWidth;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute unsigned long flags; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetFlags(PRUint32 *aFlags)\\n-{\\n-  *aFlags = mFce->mFlags;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute long long faceFlags; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetFaceFlags(PRInt64 *aFaceFlags)\\n-{\\n-  *aFaceFlags = mFce->mFaceFlags;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute long long styleFlags; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetStyleFlags(PRInt64 *aStyleFlags)\\n-{\\n-  *aStyleFlags = mFce->mStyleFlags;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute unsigned long codePageRange1; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetCodePageRange1(\\n-                              PRUint32 *aCodePageRange1)\\n-{\\n-  *aCodePageRange1 = mFce->mCodePageRange1;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute unsigned long codePageRange2; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetCodePageRange2(\\n-                              PRUint32 *aCodePageRange2)\\n-{\\n-  *aCodePageRange2 = mFce->mCodePageRange2;\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute long long time; */\\n-NS_IMETHODIMP nsFreeTypeFace::GetFileModTime(PRInt64 *aTime)\\n-{\\n-  *aTime = mFce->mMTime;\\n-  return NS_OK;\\n-}\\n-\\n-/* void getCCMap (out unsigned long size,\\n- * [array, size_is (size), retval] out unsigned short ccMaps); */\\n-NS_IMETHODIMP nsFreeTypeFace::GetCCMap(\\n-                              PRUint32 *size, PRUint16 **ccMaps)\\n-{\\n-  *ccMaps = nsFreeType2::GetCCMap(mFce);\\n-  *size = CCMAP_SIZE(*ccMaps);\\n-  return NS_OK;\\n-}\\n-\\n-/* void getEmbeddedBitmapHeights (out unsigned long size,\\n- * [array, size_is (size), retval] out short heights); */\\n-NS_IMETHODIMP nsFreeTypeFace::GetEmbeddedBitmapHeights(\\n-                              PRUint32 *size, PRInt32 **heights)\\n-{\\n-  *heights = mFce->mEmbeddedBitmapHeights;\\n-  *size = mFce->mNumEmbeddedBitmaps;\\n-  return NS_OK;\\n-}\\n-\\n-PRBool\\n-nsFreeTypeFace::FreeFace(nsHashKey* aKey, void* aData, void* aClosure)\\n-{\\n-  nsFreeTypeFace *face = (nsFreeTypeFace*) aData;\\n-  NS_RELEASE(face);\\n-\\n-  return PR_TRUE;\\n-}\\n-\\n-PRUint16 *\\n-nsFreeTypeFace::GetCCMap()\\n-{\\n-  if (!mCCMap) {\\n-    mCCMap = nsFreeType2::GetCCMap(mFce);\\n-  }\\n-  return mCCMap;\\n-}\\n-\\n-///////////////////////////////////////////////////////////////////////\\n-//\\n-// miscellaneous routines in alphabetic order\\n-//\\n-///////////////////////////////////////////////////////////////////////\\n-\\n-/*FT_CALLBACK_DEF*/\\n-FT_Error\\n-nsFreeTypeFaceRequester(FTC_FaceID face_id, FT_Library lib,\\n-                  FT_Pointer request_data, FT_Face* aFace)\\n-{\\n-  nsFreeTypeFace *faceID = (nsFreeTypeFace *)face_id;\\n-  FT_Error fterror = 0;\\n-  nsFreeType2 *ft2 = (nsFreeType2 *)request_data;\\n-  nsresult rv;\\n-\\n-  rv = ft2->NewFace(lib, faceID->GetFilename(), faceID->GetFaceIndex(), aFace);\\n-  if (NS_FAILED(rv))\\n-    return fterror;\\n-\\n-  FT_Face face = *aFace;\\n-  FT_UShort platform_id = TT_PLATFORM_MICROSOFT;\\n-  FT_UShort encoding_id = TT_MS_ID_UNICODE_CS;\\n-  nsFontCatalogEntry* fce = faceID->GetFce();\\n-  nsTTFontFamilyEncoderInfo *ffei =\\n-                     nsFreeType2::GetCustomEncoderInfo(fce->mFamilyName);\\n-  if (ffei) {\\n-    platform_id = ffei->mEncodingInfo->mCmapPlatformID;\\n-    encoding_id = ffei->mEncodingInfo->mCmapEncoding;\\n-  }\\n-\\n-  for (int i=0; i < face->num_charmaps; i++) {\\n-    if (face->charmaps[i]->platform_id == platform_id) {\\n-#if defined(TT_MS_ID_UCS_4)\\n-      if (face->charmaps[i]->encoding_id == TT_MS_ID_UCS_4) {\\n-        rv = ft2->SetCharmap(face, face->charmaps[i]);\\n-        if (NS_FAILED(rv)) {\\n-          FREETYPE_PRINTF((\\\"failed to set cmap\\\"));\\n-          ft2->DoneFace(face);\\n-          *aFace = nsnull;\\n-          fterror = 1;\\n-        }\\n-        // UCS_4 is the most preferred cmap since it supports surrogates\\n-        // so stop here to avoid the possibly of getting UNICODE_CS which\\n-        // is the 2nd preferred choice.\\n-        break;\\n-      } else\\n-#endif /* defined(TT_MS_ID_UCS_4) */\\n-      if (face->charmaps[i]->encoding_id == encoding_id) {\\n-        rv = ft2->SetCharmap(face, face->charmaps[i]);\\n-        if (NS_FAILED(rv)) {\\n-          FREETYPE_PRINTF((\\\"failed to set cmap\\\"));\\n-          ft2->DoneFace(face);\\n-          *aFace = nsnull;\\n-          fterror = 1;\\n-        }\\n-      }\\n-    }\\n-  }\\n-\\n-  return fterror;\\n-}\\n-\\n-nsFreeTypeFace *\\n-nsFreeTypeGetFaceID(nsFontCatalogEntry *aFce)\\n-{\\n-  // We need to have separate keys for the different faces in a ttc file.\\n-  // We append a slash and the face index to the file name to give us a \\n-  // unique key for each ttc face.\\n-  nsCAutoString key_str(aFce->mFontFileName);\\n-  key_str.Append('/');\\n-  key_str.AppendInt(aFce->mFaceIndex);\\n-  nsCStringKey key(key_str);\\n-  nsFreeTypeFace *face = (nsFreeTypeFace *)gFreeTypeFaces->Get(&key);\\n-  if (!face) {\\n-    face = new nsFreeTypeFace;\\n-    NS_ASSERTION(face, \\\"memory error while creating nsFreeTypeFace\\\");\\n-    if (!face)\\n-      return nsnull;\\n-    NS_ADDREF(face);\\n-    nsresult rv = face->Init(aFce);\\n-    if (NS_FAILED(rv)) {\\n-      NS_RELEASE(face);\\n-      return nsnull;\\n-    }\\n-    gFreeTypeFaces->Put(&key, face);\\n-  }\\n-  return face;\\n-}\\n-\\n-nsTTFontFamilyEncoderInfo gFontFamilyEncoderInfo[] = {\\n-  { \\\"symbol\\\",         &FEI_Adobe_Symbol_Encoding },\\n-  { \\\"cmr10\\\",          &FEI_x_ttf_cmr,            },\\n-  { \\\"cmmi10\\\",         &FEI_x_ttf_cmmi,           },\\n-  { \\\"cmsy10\\\",         &FEI_x_ttf_cmsy,           },\\n-  { \\\"cmex10\\\",         &FEI_x_ttf_cmex,           },\\n-  { \\\"math1\\\",          &FEI_x_mathematica1,       },\\n-  { \\\"math1-bold\\\",     &FEI_x_mathematica1,       },\\n-  { \\\"math1mono\\\",      &FEI_x_mathematica1,       },\\n-  { \\\"math1mono-bold\\\", &FEI_x_mathematica1,       },\\n-  { \\\"math2\\\",          &FEI_x_mathematica2,       },\\n-  { \\\"math2-bold\\\",     &FEI_x_mathematica2,       },\\n-  { \\\"math2mono\\\",      &FEI_x_mathematica2,       },\\n-  { \\\"math2mono-bold\\\", &FEI_x_mathematica2,       },\\n-  { \\\"ahMn\\\",           &FEI_x_mathematica3,       }, // weird name for Math3\\n-  { \\\"math3\\\",          &FEI_x_mathematica3,       },\\n-  { \\\"math3-bold\\\",     &FEI_x_mathematica3,       },\\n-  { \\\"math3mono\\\",      &FEI_x_mathematica3,       },\\n-  { \\\"math3mono-bold\\\", &FEI_x_mathematica3,       },\\n-  { \\\"math4\\\",          &FEI_x_mathematica4,       },\\n-  { \\\"math4-bold\\\",     &FEI_x_mathematica4,       },\\n-  { \\\"math4mono\\\",      &FEI_x_mathematica4,       },\\n-  { \\\"math4mono-bold\\\", &FEI_x_mathematica4,       },\\n-  { \\\"math5\\\",          &FEI_x_mathematica5,       },\\n-  { \\\"math5-bold\\\",     &FEI_x_mathematica5,       },\\n-  { \\\"math5bold\\\",      &FEI_x_mathematica5,       },\\n-  { \\\"math5mono\\\",      &FEI_x_mathematica5,       },\\n-  { \\\"math5mono-bold\\\", &FEI_x_mathematica5,       },\\n-  { \\\"math5monobold\\\",  &FEI_x_mathematica5,       },\\n-  { \\\"mtextra\\\",        &FEI_x_mtextra,            },\\n-  { \\\"mt extra\\\",       &FEI_x_mtextra,            },\\n-  { \\\"wingdings\\\",      &FEI_windows_1252,         },\\n-  { \\\"webdings\\\",       &FEI_windows_1252,         },\\n-  { nsnull },\\n-};\\n-\\n-nsulCodePageRangeCharSetName ulCodePageRange1CharSetNames[] = {\\n-{ TT_OS2_CPR1_LATIN1,       \\\"iso8859-1\\\"         },\\n-{ TT_OS2_CPR1_LATIN2,       \\\"iso8859-2\\\"         },\\n-{ TT_OS2_CPR1_CYRILLIC,     \\\"iso8859-5\\\"         },\\n-{ TT_OS2_CPR1_GREEK,        \\\"iso8859-7\\\"         },\\n-{ TT_OS2_CPR1_TURKISH,      \\\"iso8859-9\\\"         },\\n-{ TT_OS2_CPR1_HEBREW,       \\\"iso8859-8\\\"         },\\n-{ TT_OS2_CPR1_ARABIC,       \\\"iso8859-6\\\"         },\\n-{ TT_OS2_CPR1_BALTIC,       \\\"iso8859-13\\\"        },\\n-{ TT_OS2_CPR1_VIETNAMESE,   \\\"viscii1.1-1\\\"       },\\n-{ TT_OS2_CPR1_THAI,         \\\"tis620.2533-1\\\"     },\\n-{ TT_OS2_CPR1_JAPANESE,     \\\"jisx0208.1990-0\\\"   },\\n-{ TT_OS2_CPR1_CHINESE_SIMP, \\\"gb2312.1980-1\\\"     },\\n-{ TT_OS2_CPR1_KO_WANSUNG,   \\\"ksc5601.1992-3\\\"    },\\n-{ TT_OS2_CPR1_CHINESE_TRAD, \\\"big5-0\\\"            },\\n-{ TT_OS2_CPR1_KO_JOHAB,     \\\"ksc5601.1992-3\\\"    },\\n-{ TT_OS2_CPR1_MAC_ROMAN,    \\\"iso8859-1\\\"         },\\n-{ TT_OS2_CPR1_OEM,          \\\"fontspecific-0\\\"    },\\n-{ TT_OS2_CPR1_SYMBOL,       \\\"fontspecific-0\\\"    },\\n-{ 0,                         nsnull             },\\n-};\\n-\\n-nsulCodePageRangeCharSetName ulCodePageRange2CharSetNames[] = {\\n-{ TT_OS2_CPR2_GREEK,        \\\"iso8859-7\\\"         },\\n-{ TT_OS2_CPR2_RUSSIAN,      \\\"koi8-r\\\"            },\\n-{ TT_OS2_CPR2_NORDIC,       \\\"iso8859-10\\\"        },\\n-{ TT_OS2_CPR2_ARABIC,       \\\"iso8859-6\\\"         },\\n-{ TT_OS2_CPR2_CA_FRENCH,    \\\"iso8859-1\\\"         },\\n-{ TT_OS2_CPR2_HEBREW,       \\\"iso8859-8\\\"         },\\n-{ TT_OS2_CPR2_ICELANDIC,    \\\"iso8859-1\\\"         },\\n-{ TT_OS2_CPR2_PORTUGESE,    \\\"iso8859-1\\\"         },\\n-{ TT_OS2_CPR2_TURKISH,      \\\"iso8859-9\\\"         },\\n-{ TT_OS2_CPR2_CYRILLIC,     \\\"iso8859-5\\\"         },\\n-{ TT_OS2_CPR2_LATIN2,       \\\"iso8859-2\\\"         },\\n-{ TT_OS2_CPR2_BALTIC,       \\\"iso8859-4\\\"         },\\n-{ TT_OS2_CPR2_GREEK_437G,   \\\"iso8859-7\\\"         },\\n-{ TT_OS2_CPR2_ARABIC_708,   \\\"iso8859-6\\\"         },\\n-{ TT_OS2_CPR2_WE_LATIN1,    \\\"iso8859-1\\\"         },\\n-{ TT_OS2_CPR2_US,           \\\"iso8859-1\\\"         },\\n-{ 0,                         nsnull             },\\n-};\\n-\\ndiff --git a/gfx/src/freetype/nsFreeType.h b/gfx/src/freetype/nsFreeType.h\\ndeleted file mode 100644\\nindex ed1ef9f..0000000\\n--- a/gfx/src/freetype/nsFreeType.h\\n+++ /dev/null\\n@@ -1,323 +0,0 @@\\n-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-\\n- * ex: set tabstop=8 softtabstop=2 shiftwidth=2 expandtab:\\n- *\\n- * ***** BEGIN LICENSE BLOCK *****\\n- * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n- *\\n- * The contents of this file are subject to the Mozilla Public License Version\\n- * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n- * the License. You may obtain a copy of the License at\\n- * http://www.mozilla.org/MPL/\\n- *\\n- * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n- * for the specific language governing rights and limitations under the\\n- * License.\\n- *\\n- * The Original Code is mozilla.org code.\\n- *\\n- * The Initial Developer of the Original Code is\\n- * Netscape Communications Corporation.\\n- * Portions created by the Initial Developer are Copyright (C) 1998\\n- * the Initial Developer. All Rights Reserved.\\n- *\\n- * Contributor(s):\\n- *\\n- * Alternatively, the contents of this file may be used under the terms of\\n- * either of the GNU General Public License Version 2 or later (the \\\"GPL\\\"),\\n- * or the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n- * in which case the provisions of the GPL or the LGPL are applicable instead\\n- * of those above. If you wish to allow use of your version of this file only\\n- * under the terms of either the GPL or the LGPL, and not to allow others to\\n- * use your version of this file under the terms of the MPL, indicate your\\n- * decision by deleting the provisions above and replace them with the notice\\n- * and other provisions required by the GPL or the LGPL. If you do not delete\\n- * the provisions above, a recipient may use your version of this file under\\n- * the terms of any one of the MPL, the GPL or the LGPL.\\n- *\\n- * ***** END LICENSE BLOCK ***** */\\n-\\n-#ifndef nsFreeType_h__\\n-#define nsFreeType_h__\\n-\\n-#include \\\"gfx-config.h\\\"\\n-#if (defined(MOZ_ENABLE_FREETYPE2))\\n-\\n-#include \\\"nspr.h\\\"\\n-#include \\\"nsHashtable.h\\\"\\n-#include \\\"nsICharsetConverterManager.h\\\"\\n-#include \\\"nsIFontCatalogService.h\\\"\\n-#include <ft2build.h>\\n-#include FT_FREETYPE_H\\n-#include FT_CACHE_H\\n-#include FT_CACHE_IMAGE_H\\n-#include FT_TRUETYPE_TABLES_H\\n-#include \\\"nsIFreeType2.h\\\"\\n-\\n-typedef struct FT_FaceRec_*  FT_Face;\\n-\\n-typedef struct {\\n-  const char   *mFontFileName;\\n-  time_t        mMTime;\\n-  PRUint32      mFlags;\\n-  const char   *mFontType;\\n-  int           mFaceIndex;\\n-  int           mNumFaces;\\n-  const char   *mFamilyName;\\n-  const char   *mStyleName;\\n-  FT_UShort     mWeight;\\n-  FT_UShort     mWidth;\\n-  int           mNumGlyphs;\\n-  int           mNumUsableGlyphs;\\n-  FT_Long       mFaceFlags;\\n-  FT_Long       mStyleFlags;\\n-  FT_Long       mCodePageRange1;\\n-  FT_Long       mCodePageRange2;\\n-  char          mVendorID[5];\\n-  const char   *mFoundryName;\\n-  int           mNumEmbeddedBitmaps;\\n-  int          *mEmbeddedBitmapHeights;\\n-  PRUint16     *mCCMap;       // compressed char map\\n-} nsFontCatalogEntry;\\n-\\n-#define FCE_FLAGS_ISVALID    0x01\\n-#define FCE_FLAGS_UNICODE    0x02\\n-#define FCE_FLAGS_SYMBOL     0x04\\n-#define FCE_FLAGS_SURROGATE  0x08\\n-#define FREE_IF(x) if(x) free((void*)x)\\n-\\n-typedef struct {\\n-  const char             *mConverterName;\\n-  PRUint8                 mCmapPlatformID;\\n-  PRUint8                 mCmapEncoding;\\n-  nsIUnicodeEncoder*      mConverter;\\n-} nsTTFontEncoderInfo;\\n-\\n-typedef struct nsTTFontFamilyEncoderInfo {\\n-  const char             *mFamilyName;\\n-  nsTTFontEncoderInfo    *mEncodingInfo;\\n-} nsTTFontFamilyEncoderInfo;\\n-\\n-typedef struct {\\n-  unsigned long bit;\\n-  const char *charsetName;\\n-} nsulCodePageRangeCharSetName;\\n-\\n-//\\n-// the FreeType2 function type declarations\\n-//\\n-typedef FT_Error (*FT_Done_Face_t)(FT_Face);\\n-typedef FT_Error (*FT_Done_FreeType_t)(FT_Library);\\n-typedef FT_Error (*FT_Done_Glyph_t)(FT_Glyph);\\n-typedef FT_Error (*FT_Get_Char_Index_t)(FT_Face, FT_ULong);\\n-typedef FT_Error (*FT_Get_Glyph_t)(FT_GlyphSlot, FT_Glyph*);\\n-typedef void*    (*FT_Get_Sfnt_Table_t)(FT_Face, FT_Sfnt_Tag);\\n-typedef FT_Error (*FT_Glyph_Get_CBox_t)(FT_Glyph, FT_UInt, FT_BBox*);\\n-typedef FT_Error (*FT_Init_FreeType_t)(FT_Library*);\\n-typedef FT_Error (*FT_Load_Glyph_t)(FT_Face, FT_UInt, FT_Int);\\n-typedef FT_Error (*FT_Outline_Decompose_t)\\n-                      (FT_Outline*, const FT_Outline_Funcs*, void*);\\n-typedef FT_Error (*FT_New_Face_t)(FT_Library, const char*, FT_Long, FT_Face*);\\n-typedef FT_Error (*FT_Set_Charmap_t)(FT_Face face, FT_CharMap  charmap);\\n-typedef FT_Error (*FTC_Image_Cache_Lookup_t)\\n-                      (FTC_Image_Cache, FTC_Image_Desc*, FT_UInt, FT_Glyph*);\\n-typedef FT_Error (*FTC_Manager_Lookup_Size_t)\\n-                      (FTC_Manager, FTC_Font, FT_Face*, FT_Size*);\\n-typedef FT_Error (*FTC_Manager_Done_t)(FTC_Manager);\\n-typedef FT_Error (*FTC_Manager_New_t)(FT_Library, FT_UInt, FT_UInt, FT_ULong,\\n-                       FTC_Face_Requester, FT_Pointer, FTC_Manager*);\\n-typedef FT_Error (*FTC_Image_Cache_New_t)(FTC_Manager, FTC_Image_Cache*);\\n-// #ifdef MOZ_SVG\\n-typedef FT_Error (*FT_Glyph_Transform_t)(FT_Glyph, FT_Matrix*, FT_Vector*);\\n-typedef FT_Error (*FT_Get_Kerning_t)\\n-                      (FT_Face, FT_UInt, FT_UInt, FT_UInt, FT_Vector*);\\n-typedef FT_Error (*FT_Glyph_Copy_t)(FT_Glyph, FT_Glyph*);\\n-typedef FT_Error (*FT_Glyph_To_Bitmap_t)\\n-                      (FT_Glyph*, FT_Render_Mode, FT_Vector*, FT_Bool);\\n-// #endif\\n-\\n-typedef FT_ULong (*FT_Get_First_Char_t)(FT_Face, FT_UInt*);\\n-typedef FT_ULong (*FT_Get_Next_Char_t)(FT_Face, FT_ULong, FT_UInt*);\\n-\\n-class nsFreeTypeFace;\\n-\\n-nsFreeTypeFace * nsFreeTypeGetFaceID(nsFontCatalogEntry *aFce);\\n-\\n-typedef struct {\\n-  const char *FuncName;\\n-  long  FuncOffset;\\n-  const PRBool Required;\\n-} FtFuncList;\\n-\\n-// class nsFreeType class definition\\n-class nsFreeType2 : nsIFreeType2 {\\n-  NS_DECL_ISUPPORTS\\n-\\n-public:\\n-  void FreeGlobals();\\n-  nsresult Init();\\n-  virtual ~nsFreeType2();\\n-\\n-  NS_DECL_NSIFREETYPE2\\n-\\n-  // these belong in nsFT2FontCatalog\\n-  static PRUint16*   GetCCMap(nsFontCatalogEntry *aFce);\\n-  static const char* GetRange1CharSetName(unsigned long aBit);\\n-  static const char* GetRange2CharSetName(unsigned long aBit);\\n-  static nsTTFontFamilyEncoderInfo* GetCustomEncoderInfo(const char *);\\n-\\n-protected:\\n-  // run time loaded function pointers\\n-  FT_Done_Face_t            nsFT_Done_Face;\\n-  FT_Done_FreeType_t        nsFT_Done_FreeType;\\n-  FT_Done_Glyph_t           nsFT_Done_Glyph;\\n-  FT_Get_Char_Index_t       nsFT_Get_Char_Index;\\n-  FT_Get_Glyph_t            nsFT_Get_Glyph;\\n-  FT_Get_Sfnt_Table_t       nsFT_Get_Sfnt_Table;\\n-  FT_Glyph_Get_CBox_t       nsFT_Glyph_Get_CBox;\\n-  FT_Init_FreeType_t        nsFT_Init_FreeType;\\n-  FT_Load_Glyph_t           nsFT_Load_Glyph;\\n-  FT_New_Face_t             nsFT_New_Face;\\n-  FT_Outline_Decompose_t    nsFT_Outline_Decompose;\\n-  FT_Set_Charmap_t          nsFT_Set_Charmap;\\n-  FTC_Image_Cache_Lookup_t  nsFTC_Image_Cache_Lookup;\\n-  FTC_Manager_Lookup_Size_t nsFTC_Manager_Lookup_Size;\\n-  FTC_Manager_Done_t        nsFTC_Manager_Done;\\n-  FTC_Manager_New_t         nsFTC_Manager_New;\\n-  FTC_Image_Cache_New_t     nsFTC_Image_Cache_New;\\n-// #ifdef MOZ_SVG\\n-  FT_Glyph_Transform_t      nsFT_Glyph_Transform;\\n-  FT_Get_Kerning_t          nsFT_Get_Kerning;\\n-  FT_Glyph_Copy_t           nsFT_Glyph_Copy;\\n-  FT_Glyph_To_Bitmap_t      nsFT_Glyph_To_Bitmap;\\n-// #endif\\n-  FT_Get_First_Char_t       nsFT_Get_First_Char;\\n-  FT_Get_Next_Char_t        nsFT_Get_Next_Char;\\n-\\n-  // this array needs to be big enough to hold all the function pointers\\n-  // plus one extra for the null at the end\\n-// #ifdef MOZ_SVG\\n-  static FtFuncList FtFuncs[24];\\n-// #else\\n-//  static FtFuncList FtFuncs[20];\\n-// #endif\\n-  \\n-protected:\\n-  PRBool mEnableFreeType2;\\n-  char*  mFreeType2SharedLibraryName;\\n-\\n-public:\\n-  // these belong in the nsFontFreeType code\\n-  static PRBool  gFreeType2Autohinted;\\n-  static PRBool  gFreeType2Unhinted;\\n-  static PRUint8 gAATTDarkTextMinValue;\\n-  static double  gAATTDarkTextGain;\\n-  static PRInt32 gAntiAliasMinimum;\\n-  static PRInt32 gEmbeddedBitmapMaximumHeight;\\n-  static PRBool  gHasExtFunc;\\n-\\n-protected:\\n-  void ClearGlobals();\\n-  void ClearFunctions();\\n-  PRBool InitLibrary();\\n-  PRBool LoadSharedLib();\\n-  void UnloadSharedLib();\\n-\\n-  // this belongs in nsFT2FontCatalog\\n-  static nsICharsetConverterManager* GetCharSetManager();\\n-\\n-  PRLibrary      *mSharedLib;\\n-  FT_Library      mFreeTypeLibrary;\\n-  FTC_Manager     mFTCacheManager;\\n-  FTC_Image_Cache mImageCache;\\n-\\n-  static nsHashtable   *sFontFamilies;\\n-  static nsHashtable   *sRange1CharSetNames;\\n-  static nsHashtable   *sRange2CharSetNames;\\n-  static nsICharsetConverterManager* sCharSetManager;\\n-};\\n-\\n-/* this simple record is used to model a given `installed' face */\\n-class nsFreeTypeFace : public nsITrueTypeFontCatalogEntry {\\n-public:\\n-  NS_DECL_ISUPPORTS\\n-  NS_DECL_NSITRUETYPEFONTCATALOGENTRY\\n-  \\n-  nsFreeTypeFace();\\n-  virtual ~nsFreeTypeFace();\\n-  virtual nsresult Init(nsFontCatalogEntry *aFce);\\n-  /* additional members */\\n-  NS_IMETHODIMP GetFontCatalogType(PRUint16 *aFontCatalogType);\\n-\\n-  static PRBool FreeFace(nsHashKey* aKey, void* aData, void* aClosure);\\n-  const char *GetFilename()\\n-                  { return mFce->mFontFileName; }\\n-  int *GetEmbeddedBitmapHeights()\\n-                  { return mFce->mEmbeddedBitmapHeights; } ;\\n-  int GetFaceIndex()\\n-                  { return mFce->mFaceIndex; }\\n-  int GetNumEmbeddedBitmaps()\\n-                  { return mFce->mNumEmbeddedBitmaps; } ;\\n-  PRUint16 *GetCCMap();\\n-  nsFontCatalogEntry* GetFce() { return mFce; };\\n-\\n-  PRBool mHasExtendFuncs;\\n-\\n-protected:\\n-  nsFontCatalogEntry *mFce;\\n-  PRUint16           *mCCMap;\\n-\\n-};\\n-\\n-#endif /* MOZ_ENABLE_FREETYPE2 */\\n-\\n-/*\\n- * Defines for the TrueType codepage bits.\\n- * Used as a hint for the languages supported in a TrueType font.\\n- */\\n-\\n-/*\\n- * ulCodePageRange1\\n- */\\n-#define TT_OS2_CPR1_LATIN1       (0x00000001) /* Latin 1                     */\\n-#define TT_OS2_CPR1_LATIN2       (0x00000002) /* Latin 2: Eastern Europe     */\\n-#define TT_OS2_CPR1_CYRILLIC     (0x00000004) /* Cyrillic                    */\\n-#define TT_OS2_CPR1_GREEK        (0x00000008) /* Greek                       */\\n-#define TT_OS2_CPR1_TURKISH      (0x00000010) /* Turkish                     */\\n-#define TT_OS2_CPR1_HEBREW       (0x00000020) /* Hebrew                      */\\n-#define TT_OS2_CPR1_ARABIC       (0x00000040) /* Arabic                      */\\n-#define TT_OS2_CPR1_BALTIC       (0x00000080) /* Windows Baltic              */\\n-#define TT_OS2_CPR1_VIETNAMESE   (0x00000100) /* Vietnamese                  */\\n-                                 /* 9-15     Reserved for Alternate ANSI     */\\n-#define TT_OS2_CPR1_THAI         (0x00010000) /* Thai                        */\\n-#define TT_OS2_CPR1_JAPANESE     (0x00020000) /* JIS/Japan                   */\\n-#define TT_OS2_CPR1_CHINESE_SIMP (0x00040000) /* Chinese: Simplified         */\\n-#define TT_OS2_CPR1_KO_WANSUNG   (0x00080000) /* Korean Wansung              */\\n-#define TT_OS2_CPR1_CHINESE_TRAD (0x00100000) /* Chinese: Traditional        */\\n-#define TT_OS2_CPR1_KO_JOHAB     (0x00200000) /* Korean Johab                */\\n-                                 /* 22-28    Reserved for Alternate ANSI&OEM */\\n-#define TT_OS2_CPR1_MAC_ROMAN    (0x20000000) /* Mac (US Roman)              */\\n-#define TT_OS2_CPR1_OEM          (0x40000000) /* OEM Character Set           */\\n-#define TT_OS2_CPR1_SYMBOL       (0x80000000) /* Symbol Character Set        */\\n-\\n-/*\\n- * ulCodePageRange2\\n- */                              /* 32-47    Reserved for OEM                */\\n-#define TT_OS2_CPR2_GREEK        (0x00010000) /* IBM Greek                   */\\n-#define TT_OS2_CPR2_RUSSIAN      (0x00020000) /* MS-DOS Russian              */\\n-#define TT_OS2_CPR2_NORDIC       (0x00040000) /* MS-DOS Nordic               */\\n-#define TT_OS2_CPR2_ARABIC       (0x00080000) /* Arabic                      */\\n-#define TT_OS2_CPR2_CA_FRENCH    (0x00100000) /* MS-DOS Canadian French      */\\n-#define TT_OS2_CPR2_HEBREW       (0x00200000) /* Hebrew                      */\\n-#define TT_OS2_CPR2_ICELANDIC    (0x00400000) /* MS-DOS Icelandic            */\\n-#define TT_OS2_CPR2_PORTUGESE    (0x00800000) /* MS-DOS Portuguese           */\\n-#define TT_OS2_CPR2_TURKISH      (0x01000000) /* IBM Turkish                 */\\n-#define TT_OS2_CPR2_CYRILLIC     (0x02000000)/*IBM Cyrillic; primarily Russian*/\\n-#define TT_OS2_CPR2_LATIN2       (0x04000000) /* Latin 2                     */\\n-#define TT_OS2_CPR2_BALTIC       (0x08000000) /* MS-DOS Baltic               */\\n-#define TT_OS2_CPR2_GREEK_437G   (0x10000000) /* Greek; former 437 G         */\\n-#define TT_OS2_CPR2_ARABIC_708   (0x20000000) /* Arabic; ASMO 708            */\\n-#define TT_OS2_CPR2_WE_LATIN1    (0x40000000) /* WE/Latin 1                  */\\n-#define TT_OS2_CPR2_US           (0x80000000) /* US                          */\\n-\\n-#endif\\n\""}