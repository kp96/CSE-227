{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas3980c50\""},"diff":"\"3980c50 Bug 395280 - \\\"Build failure on Sparc Linux due to xptcall API changes\\\" [p=marc@petit-huguenin.org (Marc Petit-Huguenin) r=bsmedberg a=damons]\\ndiff --git a/xpcom/reflect/xptcall/src/md/unix/xptcinvoke_asm_sparc_linux.s b/xpcom/reflect/xptcall/src/md/unix/xptcinvoke_asm_sparc_linux.s\\nindex 2ace97c..9b380b7 100644\\n--- a/xpcom/reflect/xptcall/src/md/unix/xptcinvoke_asm_sparc_linux.s\\n+++ b/xpcom/reflect/xptcall/src/md/unix/xptcinvoke_asm_sparc_linux.s\\n@@ -37,13 +37,13 @@\\n  * ***** END LICENSE BLOCK ***** */\\n \\n /* Platform specific code to invoke XPCOM methods on native objects */\\n-        .global XPTC_InvokeByIndex\\n+        .global NS_InvokeByIndex_P\\n /*\\n-    XPTC_InvokeByIndex(nsISupports* that, PRUint32 methodIndex,\\n+    NS_InvokeByIndex(nsISupports* that, PRUint32 methodIndex,\\n                    PRUint32 paramCount, nsXPTCVariant* params);\\n     \\n */\\n-XPTC_InvokeByIndex:\\n+NS_InvokeByIndex_P:\\n         save    %sp,-(64 + 16),%sp   ! room for the register window and\\n                                     ! struct pointer, rounded up to 0 % 16\\n         mov     %i2,%o0             ! paramCount\\ndiff --git a/xpcom/reflect/xptcall/src/md/unix/xptcinvoke_asm_sparc_linux_GCC3.s b/xpcom/reflect/xptcall/src/md/unix/xptcinvoke_asm_sparc_linux_GCC3.s\\nindex f64830e..979710c 100644\\n--- a/xpcom/reflect/xptcall/src/md/unix/xptcinvoke_asm_sparc_linux_GCC3.s\\n+++ b/xpcom/reflect/xptcall/src/md/unix/xptcinvoke_asm_sparc_linux_GCC3.s\\n@@ -41,13 +41,13 @@\\n  * Platform specific code to invoke XPCOM methods on native objects for\\n  * Linux/Sparc with gcc 3 ABI.\\n  */\\n-        .global XPTC_InvokeByIndex\\n+        .global NS_InvokeByIndex_P\\n /*\\n- *  XPTC_InvokeByIndex(nsISupports* that, PRUint32 methodIndex,\\n+ *  NS_InvokeByIndex(nsISupports* that, PRUint32 methodIndex,\\n  *                 PRUint32 paramCount, nsXPTCVariant* params);\\n  *   \\n  */\\n-XPTC_InvokeByIndex:\\n+NS_InvokeByIndex_P:\\n         save    %sp,-(64 + 16),%sp   ! room for the register window and\\n                                     ! struct pointer, rounded up to 0 % 16\\n         mov     %i2,%o0             ! paramCount\\n\""}