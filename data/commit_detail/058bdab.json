{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas058bdab\""},"diff":"\"058bdab Fix accounting showing leak of CSS value types, and optimize CSS value constructors/destructors a bit.  b=382027  r+sr=bzbarsky  a1.9=roc\\ndiff --git a/layout/style/nsCSSDataBlock.cpp b/layout/style/nsCSSDataBlock.cpp\\nindex 3e531a3..ce2dd52 100644\\n--- a/layout/style/nsCSSDataBlock.cpp\\n+++ b/layout/style/nsCSSDataBlock.cpp\\n@@ -615,23 +615,42 @@ nsCSSExpandedDataBlock::DoExpand(nsCSSCompressedDataBlock *aBlock,\\n         switch (nsCSSProps::kTypeTable[iProp]) {\\n             case eCSSType_Value: {\\n                 const nsCSSValue* val = ValueAtCursor(cursor);\\n+                nsCSSValue* dest = static_cast<nsCSSValue*>(prop);\\n                 NS_ASSERTION(val->GetUnit() != eCSSUnit_Null, \\\"oops\\\");\\n-                memcpy(prop, val, sizeof(nsCSSValue));\\n+                NS_ASSERTION(dest->GetUnit() == eCSSUnit_Null,\\n+                             \\\"expanding into non-empty block\\\");\\n+#ifdef NS_BUILD_REFCNT_LOGGING\\n+                dest->~nsCSSValue();\\n+#endif\\n+                memcpy(dest, val, sizeof(nsCSSValue));\\n                 cursor += CDBValueStorage_advance;\\n             } break;\\n \\n             case eCSSType_Rect: {\\n                 const nsCSSRect* val = RectAtCursor(cursor);\\n+                nsCSSRect* dest = static_cast<nsCSSRect*>(prop);\\n                 NS_ASSERTION(val->HasValue(), \\\"oops\\\");\\n-                memcpy(prop, val, sizeof(nsCSSRect));\\n+                NS_ASSERTION(!dest->HasValue(),\\n+                             \\\"expanding into non-empty block\\\");\\n+#ifdef NS_BUILD_REFCNT_LOGGING\\n+                dest->~nsCSSRect();\\n+#endif\\n+                memcpy(dest, val, sizeof(nsCSSRect));\\n                 cursor += CDBRectStorage_advance;\\n             } break;\\n \\n             case eCSSType_ValuePair: {\\n                 const nsCSSValuePair* val = ValuePairAtCursor(cursor);\\n+                nsCSSValuePair* dest = static_cast<nsCSSValuePair*>(prop);\\n                 NS_ASSERTION(val->mXValue.GetUnit() != eCSSUnit_Null ||\\n                              val->mYValue.GetUnit() != eCSSUnit_Null, \\\"oops\\\");\\n-                memcpy(prop, val, sizeof(nsCSSValuePair));\\n+                NS_ASSERTION(dest->mXValue.GetUnit() == eCSSUnit_Null &&\\n+                             dest->mYValue.GetUnit() == eCSSUnit_Null,\\n+                             \\\"expanding into non-empty block\\\");\\n+#ifdef NS_BUILD_REFCNT_LOGGING\\n+                dest->~nsCSSValuePair();\\n+#endif\\n+                memcpy(dest, val, sizeof(nsCSSValuePair));\\n                 cursor += CDBValuePairStorage_advance;\\n             } break;\\n \\n@@ -639,8 +658,10 @@ nsCSSExpandedDataBlock::DoExpand(nsCSSCompressedDataBlock *aBlock,\\n             case eCSSType_CounterData:\\n             case eCSSType_Quotes: {\\n                 void* val = PointerAtCursor(cursor);\\n+                void** dest = static_cast<void**>(prop);\\n                 NS_ASSERTION(val, \\\"oops\\\");\\n-                *static_cast<void**>(prop) = val;\\n+                NS_ASSERTION(!*dest, \\\"expanding into non-empty block\\\");\\n+                *dest = val;\\n                 cursor += CDBPointerStorage_advance;\\n             } break;\\n         }\\ndiff --git a/layout/style/nsCSSValue.cpp b/layout/style/nsCSSValue.cpp\\nindex 977ff36..74d7550 100644\\n--- a/layout/style/nsCSSValue.cpp\\n+++ b/layout/style/nsCSSValue.cpp\\n@@ -154,11 +154,6 @@ nsCSSValue::nsCSSValue(const nsCSSValue& aCopy)\\n   }\\n }\\n \\n-nsCSSValue::~nsCSSValue()\\n-{\\n-  Reset();\\n-}\\n-\\n nsCSSValue& nsCSSValue::operator=(const nsCSSValue& aCopy)\\n {\\n   if (this != &aCopy) {\\n@@ -241,6 +236,20 @@ nscoord nsCSSValue::GetLengthTwips() const\\n   return 0;\\n }\\n \\n+void nsCSSValue::DoReset()\\n+{\\n+  if (eCSSUnit_String <= mUnit && mUnit <= eCSSUnit_Attr) {\\n+    mValue.mString->Release();\\n+  } else if (eCSSUnit_Array <= mUnit && mUnit <= eCSSUnit_Counters) {\\n+    mValue.mArray->Release();\\n+  } else if (eCSSUnit_URL == mUnit) {\\n+    mValue.mURL->Release();\\n+  } else if (eCSSUnit_Image == mUnit) {\\n+    mValue.mImage->Release();\\n+  }\\n+  mUnit = eCSSUnit_Null;\\n+}\\n+\\n void nsCSSValue::SetIntValue(PRInt32 aValue, nsCSSUnit aUnit)\\n {\\n   NS_ASSERTION((eCSSUnit_Integer == aUnit) ||\\ndiff --git a/layout/style/nsCSSValue.h b/layout/style/nsCSSValue.h\\nindex c9f7d2a..e48ac82 100644\\n--- a/layout/style/nsCSSValue.h\\n+++ b/layout/style/nsCSSValue.h\\n@@ -137,10 +137,6 @@ public:\\n     : mUnit(aUnit)\\n   {\\n     NS_ASSERTION(aUnit <= eCSSUnit_System_Font, \\\"not a valueless unit\\\");\\n-    if (aUnit > eCSSUnit_System_Font) {\\n-      mUnit = eCSSUnit_Null;\\n-    }\\n-    mValue.mInt = 0;\\n   }\\n \\n   nsCSSValue(PRInt32 aValue, nsCSSUnit aUnit) NS_HIDDEN;\\n@@ -151,7 +147,7 @@ public:\\n   explicit nsCSSValue(URL* aValue) NS_HIDDEN;\\n   explicit nsCSSValue(Image* aValue) NS_HIDDEN;\\n   nsCSSValue(const nsCSSValue& aCopy) NS_HIDDEN;\\n-  NS_CONSTRUCTOR_FASTCALL ~nsCSSValue() NS_HIDDEN;\\n+  ~nsCSSValue() { Reset(); }\\n \\n   NS_HIDDEN_(nsCSSValue&)  operator=(const nsCSSValue& aCopy);\\n   NS_HIDDEN_(PRBool)      operator==(const nsCSSValue& aOther) const;\\n@@ -258,19 +254,13 @@ public:\\n \\n   NS_HIDDEN_(void)  Reset()  // sets to null\\n   {\\n-    if (eCSSUnit_String <= mUnit && mUnit <= eCSSUnit_Attr) {\\n-      mValue.mString->Release();\\n-    } else if (eCSSUnit_Array <= mUnit && mUnit <= eCSSUnit_Counters) {\\n-      mValue.mArray->Release();\\n-    } else if (eCSSUnit_URL == mUnit) {\\n-      mValue.mURL->Release();\\n-    } else if (eCSSUnit_Image == mUnit) {\\n-      mValue.mImage->Release();\\n-    }\\n-    mUnit = eCSSUnit_Null;\\n-    mValue.mInt = 0;\\n+    if (mUnit != eCSSUnit_Null)\\n+      DoReset();\\n   }\\n+private:\\n+  NS_HIDDEN_(void)  DoReset();\\n \\n+public:\\n   NS_HIDDEN_(void)  SetIntValue(PRInt32 aValue, nsCSSUnit aUnit);\\n   NS_HIDDEN_(void)  SetPercentValue(float aValue);\\n   NS_HIDDEN_(void)  SetFloatValue(float aValue, nsCSSUnit aUnit);\\n\""}