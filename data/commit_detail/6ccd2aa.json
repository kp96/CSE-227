{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas6ccd2aa\""},"diff":"\"6ccd2aa Bug 386150 - Can't save a login containing only a password. r=gavin, a=mconnor\\ndiff --git a/toolkit/components/passwordmgr/src/nsLoginManager.js b/toolkit/components/passwordmgr/src/nsLoginManager.js\\nindex 699f42d..c6ab065 100644\\n--- a/toolkit/components/passwordmgr/src/nsLoginManager.js\\n+++ b/toolkit/components/passwordmgr/src/nsLoginManager.js\\n@@ -344,8 +344,9 @@ LoginManager.prototype = {\\n         if (login.hostname == null || login.hostname.length == 0)\\n             throw \\\"Can't add a login with a null or empty hostname.\\\";\\n \\n-        if (login.username == null || login.username.length == 0)\\n-            throw \\\"Can't add a login with a null or empty username.\\\";\\n+        // For logins w/o a username, set to \\\"\\\", not null.\\n+        if (login.username == null)\\n+            throw \\\"Can't add a login with a null username.\\\";\\n \\n         if (login.password == null || login.password.length == 0)\\n             throw \\\"Can't add a login with a null or empty password.\\\";\\n@@ -585,8 +586,14 @@ LoginManager.prototype = {\\n         }\\n \\n         // If too few or too many fields, bail out.\\n-        if (pwFields.length == 0 || pwFields.length > 3)\\n+        if (pwFields.length == 0) {\\n+            this.log(\\\"(form ignored -- no password fields.)\\\");\\n             return null;\\n+        } else if (pwFields.length > 3) {\\n+            this.log(\\\"(form ignored -- too many password fields. [got \\\" +\\n+                        pwFields.length + \\\"])\\\");\\n+            return null;\\n+        }\\n \\n         return pwFields;\\n     },\\n@@ -609,13 +616,13 @@ LoginManager.prototype = {\\n      * that is being changed.\\n      */\\n     _getFormFields : function (form, isSubmission) {\\n+        var usernameField = null;\\n+\\n         // Locate the password field(s) in the form. Up to 3 supported.\\n         // If there's no password field, there's nothing for us to do.\\n         var pwFields = this._getPasswordFields(form, isSubmission);\\n-        if (!pwFields) {\\n-            this.log(\\\"(form ignored -- either 0 or >3 pw fields.)\\\");\\n+        if (!pwFields)\\n             return [null, null, null];\\n-        }\\n \\n \\n         // Locate the username field in the form by searching backwards\\n@@ -624,7 +631,7 @@ LoginManager.prototype = {\\n         // already logged in to the site. \\n         for (var i = pwFields[0].index - 1; i >= 0; i--) {\\n             if (form.elements[i].type == \\\"text\\\") {\\n-                var usernameField = form.elements[i];\\n+                usernameField = form.elements[i];\\n                 break;\\n             }\\n         }\\n@@ -706,24 +713,6 @@ LoginManager.prototype = {\\n         };\\n \\n         // local helper function\\n-        function findExistingLogin(pwmgr, hostname,\\n-                                   formSubmitURL, usernameField) {\\n-\\n-            var searchLogin = new pwmgr._nsLoginInfo();\\n-            searchLogin.init(hostname, formSubmitURL, null,\\n-                             usernameField.value, \\\"\\\",\\n-                             usernameField.name,  \\\"\\\");\\n-\\n-            var logins = pwmgr.findLogins({}, hostname, formSubmitURL, null);\\n-            var existingLogin;\\n-            var found = logins.some(function(l) {\\n-                                    existingLogin = l;\\n-                                    return searchLogin.equalsIgnorePassword(l);\\n-                                });\\n-\\n-            return (found ? existingLogin : null);\\n-        }\\n-\\n         function getPrompter(aWindow) {\\n             var prompterSvc = Cc[\\\"@mozilla.org/login-manager/prompter;1\\\"].\\n                             createInstance(Ci.nsILoginManagerPrompter);\\n@@ -731,8 +720,6 @@ LoginManager.prototype = {\\n             return prompterSvc;\\n         }\\n \\n-\\n-\\n         var doc = form.ownerDocument;\\n         var win = doc.defaultView;\\n \\n@@ -771,9 +758,9 @@ LoginManager.prototype = {\\n \\n         var formLogin = new this._nsLoginInfo();\\n         formLogin.init(hostname, formSubmitURL, null,\\n-                    (usernameField ? usernameField.value : null),\\n+                    (usernameField ? usernameField.value : \\\"\\\"),\\n                     newPasswordField.value,\\n-                    (usernameField ? usernameField.name  : null),\\n+                    (usernameField ? usernameField.name  : \\\"\\\"),\\n                     newPasswordField.name);\\n \\n         // If we didn't find a username field, but seem to be changing a\\n@@ -814,22 +801,60 @@ LoginManager.prototype = {\\n             return;\\n         }\\n \\n-        if (!usernameField && !oldPasswordField) {\\n-            this.log(\\\"XXX not handled yet\\\");\\n-            return;\\n+\\n+        // Look for an existing login that matches the form login.\\n+        var existingLogin = null;\\n+        var logins = this.findLogins({}, hostname, formSubmitURL, null);\\n+\\n+        for (var i = 0; i < logins.length; i++) {\\n+            var same, login = logins[i];\\n+\\n+            // If one login has a username but the other doesn't, ignore\\n+            // the username when comparing and only match if they have the\\n+            // same password. Otherwise, compare the logins and match even\\n+            // if the passwords differ.\\n+            if (!login.username && formLogin.username) {\\n+                var restoreMe = formLogin.username;\\n+                formLogin.username = \\\"\\\"; \\n+                same = formLogin.equals(login);\\n+                formLogin.username = restoreMe;\\n+            } else if (!formLogin.username && login.username) {\\n+                formLogin.username = login.username;\\n+                same = formLogin.equals(login);\\n+                formLogin.username = \\\"\\\"; // we know it's always blank.\\n+            } else {\\n+                same = formLogin.equalsIgnorePassword(login);\\n+            }\\n+\\n+            if (same) {\\n+                existingLogin = login;\\n+                break;\\n+            }\\n         }\\n \\n-        // We have a username. Look for an existing login that matches the\\n-        // form data (other than the password, which might be different)\\n-        existingLogin = findExistingLogin(this, hostname, formSubmitURL,\\n-                                          usernameField);\\n         if (existingLogin) {\\n             this.log(\\\"Found an existing login matching this form submission\\\");\\n \\n-            // Change password if needed\\n+            /*\\n+             * Change password if needed.\\n+             *\\n+             * If the login has a username, change the password w/o prompting\\n+             * (because we can be fairly sure there's only one password\\n+             * associated with the username). But for logins without a\\n+             * username, ask the user... Some sites use a password-only \\\"login\\\"\\n+             * in different contexts (enter your PIN, answer a security\\n+             * question, etc), and without a username we can't be sure if\\n+             * modifying an existing login is the right thing to do.\\n+             */\\n             if (existingLogin.password != formLogin.password) {\\n-                this.log(\\\"...Updating password for existing login.\\\");\\n-                this.modifyLogin(existingLogin, formLogin);\\n+                if (formLogin.username) {\\n+                    this.log(\\\"...Updating password for existing login.\\\");\\n+                    this.modifyLogin(existingLogin, formLogin);\\n+                } else {\\n+                    this.log(\\\"...passwords differ, prompting to change.\\\");\\n+                    prompter = getPrompter(win);\\n+                    prompter.promptToChangePassword(existingLogin, formLogin);\\n+                }\\n             }\\n \\n             return;\\n@@ -966,9 +991,10 @@ LoginManager.prototype = {\\n \\n             if (autofillForm) {\\n \\n-                // If username was specified in the form, only fill in the\\n-                // password if we find a matching login.\\n                 if (usernameField && usernameField.value) {\\n+                    // If username was specified in the form, only fill in the\\n+                    // password if we find a matching login.\\n+\\n                     var username = usernameField.value;\\n \\n                     var matchingLogin;\\n@@ -979,6 +1005,19 @@ LoginManager.prototype = {\\n                     if (found)\\n                         passwordField.value = matchingLogin.password;\\n \\n+                } else if (usernameField && logins.length == 2) {\\n+                    // Special case, for sites which have a normal user+pass\\n+                    // login *and* a password-only login (eg, a PIN)...\\n+                    // When we have a username field and 1 of 2 available\\n+                    // logins is password-only, go ahead and prefill the\\n+                    // one with a username.\\n+                    if (!logins[0].username && logins[1].username) {\\n+                        usernameField.value = logins[1].username;\\n+                        passwordField.value = logins[1].password;\\n+                    } else if (!logins[1].username && logins[0].username) {\\n+                        usernameField.value = logins[0].username;\\n+                        passwordField.value = logins[0].password;\\n+                    }\\n                 } else if (logins.length == 1) {\\n                     if (usernameField)\\n                         usernameField.value = logins[0].username;\\ndiff --git a/toolkit/components/passwordmgr/src/nsLoginManagerPrompter.js b/toolkit/components/passwordmgr/src/nsLoginManagerPrompter.js\\nindex bb8ba09..a326428 100644\\n--- a/toolkit/components/passwordmgr/src/nsLoginManagerPrompter.js\\n+++ b/toolkit/components/passwordmgr/src/nsLoginManagerPrompter.js\\n@@ -462,9 +462,15 @@ LoginManagerPrompter.prototype = {\\n     promptToChangePassword : function (aOldLogin, aNewLogin) {\\n         const buttonFlags = Ci.nsIPrompt.STD_YES_NO_BUTTONS;\\n \\n-        var dialogText  = this._getLocalizedString(\\n+        var dialogText;\\n+        if (aOldLogin.username)\\n+            dialogText  = this._getLocalizedString(\\n                                     \\\"passwordChangeText\\\",\\n                                     [aOldLogin.username]);\\n+        else\\n+            dialogText  = this._getLocalizedString(\\n+                                    \\\"passwordChangeTextNoUser\\\");\\n+\\n         var dialogTitle = this._getLocalizedString(\\n                                     \\\"passwordChangeTitle\\\");\\n \\ndiff --git a/toolkit/components/passwordmgr/src/storage-Legacy.js b/toolkit/components/passwordmgr/src/storage-Legacy.js\\nindex c2f6025..5cd974b 100644\\n--- a/toolkit/components/passwordmgr/src/storage-Legacy.js\\n+++ b/toolkit/components/passwordmgr/src/storage-Legacy.js\\n@@ -799,8 +799,8 @@ LoginManagerStorage_legacy.prototype = {\\n                 break;\\n \\n             // If decryption failed (corrupt entry?) skip it.\\n-            // XXX remove it from the original list entirely?\\n-            if (!username || !password)\\n+            // Note that we allow password-only logins, so username con be \\\"\\\".\\n+            if (username == null || !password)\\n                 continue;\\n \\n             // We could set the decrypted values on a copy of the object, to\\ndiff --git a/toolkit/components/passwordmgr/test/Makefile.in b/toolkit/components/passwordmgr/test/Makefile.in\\nindex 4bd037a..f43a8d2 100644\\n--- a/toolkit/components/passwordmgr/test/Makefile.in\\n+++ b/toolkit/components/passwordmgr/test/Makefile.in\\n@@ -57,6 +57,7 @@ MOCHI_TESTS = \\\\\\n \\t\\ttest_basic_form_2pw_2.html \\\\\\n \\t\\ttest_basic_form_3pw_1.html \\\\\\n \\t\\ttest_basic_form_autocomplete.html \\\\\\n+\\t\\ttest_basic_form_pwonly.html \\\\\\n \\t\\ttest_bug_227640.html \\\\\\n \\t\\ttest_bug_242956.html \\\\\\n \\t\\ttest_bug_360493_1.html \\\\\\ndiff --git a/toolkit/components/passwordmgr/test/pwmgr_common.js b/toolkit/components/passwordmgr/test/pwmgr_common.js\\nindex 8930c40..c519581 100644\\n--- a/toolkit/components/passwordmgr/test/pwmgr_common.js\\n+++ b/toolkit/components/passwordmgr/test/pwmgr_common.js\\n@@ -29,3 +29,78 @@ function $_(formNum, name) {\\n \\n   return element;\\n }\\n+\\n+\\n+/*\\n+ * checkForm\\n+ *\\n+ * Check a form for expected values. If an argument is null, a field's\\n+ * expected value will be the default value.\\n+ *\\n+ * <form id=\\\"form#\\\">\\n+ * checkForm(#, \\\"foo\\\");\\n+ */\\n+function checkForm(formNum, val1, val2, val3) {\\n+    var e, form = document.getElementById(\\\"form\\\" + formNum);\\n+    ok(form, \\\"Locating form \\\" + formNum);\\n+\\n+    var numToCheck = arguments.length - 1;\\n+    \\n+    if (!numToCheck--)\\n+        return;\\n+    e = form.elements[0];\\n+    if (val1 == null)\\n+        is(e.value, e.defaultValue, \\\"Test default value of field \\\" + e.name +\\n+            \\\" in form \\\" + formNum);\\n+    else\\n+        is(e.value, val1, \\\"Test value of field \\\" + e.name +\\n+            \\\" in form \\\" + formNum);\\n+\\n+\\n+    if (!numToCheck--)\\n+        return;\\n+    e = form.elements[1];\\n+    if (val2 == null)\\n+        is(e.value, e.defaultValue, \\\"Test default value of field \\\" + e.name +\\n+            \\\" in form \\\" + formNum);\\n+    else\\n+        is(e.value, val2, \\\"Test value of field \\\" + e.name +\\n+            \\\" in form \\\" + formNum);\\n+\\n+\\n+    if (!numToCheck--)\\n+        return;\\n+    e = form.elements[2];\\n+    if (val3 == null)\\n+        is(e.value, e.defaultValue, \\\"Test default value of field \\\" + e.name +\\n+            \\\" in form \\\" + formNum);\\n+    else\\n+        is(e.value, val3, \\\"Test value of field \\\" + e.name +\\n+            \\\" in form \\\" + formNum);\\n+\\n+}\\n+\\n+\\n+/*\\n+ * checkUnmodifiedForm\\n+ *\\n+ * Check a form for unmodified values from when page was loaded.\\n+ *\\n+ * <form id=\\\"form#\\\">\\n+ * checkUnmodifiedForm(#);\\n+ */\\n+function checkUnmodifiedForm(formNum) {\\n+    var form = document.getElementById(\\\"form\\\" + formNum);\\n+    ok(form, \\\"Locating form \\\" + formNum);\\n+\\n+    for (var i = 0; i < form.elements.length; i++) {\\n+        var ele = form.elements[i];\\n+\\n+        // No point in checking form submit/reset buttons.\\n+        if (ele.type == \\\"submit\\\" || ele.type == \\\"reset\\\")\\n+            continue;\\n+\\n+        is(ele.value, ele.defaultValue, \\\"Test to default value of field \\\" +\\n+            ele.name + \\\" in form \\\" + formNum);\\n+    }\\n+}\\ndiff --git a/toolkit/components/passwordmgr/test/test_0init.html b/toolkit/components/passwordmgr/test/test_0init.html\\nindex 3ff5a80..f68b1fa 100644\\n--- a/toolkit/components/passwordmgr/test/test_0init.html\\n+++ b/toolkit/components/passwordmgr/test/test_0init.html\\n@@ -64,7 +64,11 @@ ok(login != null, \\\"Adding login\\\");\\n login.init(\\\"http://localhost:8888\\\", \\\"http://localhost:8888\\\", null,\\n     \\\"testuser\\\", \\\"testpass\\\", \\\"uname\\\", \\\"pword\\\");\\n \\n-pwmgr.addLogin(login);\\n+try {\\n+    pwmgr.addLogin(login);\\n+} catch (e) {\\n+    ok(false, \\\"addLogin threw: \\\" + e);\\n+}\\n \\n // Simple check to see if everything was added fine.\\n var logins = pwmgr.getAllLogins({});\\ndiff --git a/toolkit/components/passwordmgr/test/test_basic_form_1pw.html b/toolkit/components/passwordmgr/test/test_basic_form_1pw.html\\nindex 78ea854..99754e15 100644\\n--- a/toolkit/components/passwordmgr/test/test_basic_form_1pw.html\\n+++ b/toolkit/components/passwordmgr/test/test_basic_form_1pw.html\\n@@ -2800,34 +2800,6 @@ function startTest() {\\n     SimpleTest.finish();\\n }\\n \\n-function checkForm(formNum, val1, val2, val3) {\\n-    var form = document.getElementById(\\\"form\\\" + formNum);\\n-    ok(form, \\\"Locating form \\\" + formNum);\\n-\\n-    is(form.elements[0].value, val1, \\\"Test value of field \\\" +\\n-            form.elements[0].name + \\\" in form \\\" + formNum);\\n-\\n-    if (val2 != null)\\n-        is(form.elements[1].value, val2, \\\"Test value of field \\\" +\\n-            form.elements[1].name + \\\" in form \\\" + formNum);\\n-\\n-    if (val3 != null)\\n-        is(form.elements[2].value, val3, \\\"Test value of field \\\" +\\n-            form.elements[2].name + \\\" in form \\\" + formNum);\\n-}\\n-\\n-function checkUnmodifiedForm(formNum) {\\n-    var form = document.getElementById(\\\"form\\\" + formNum);\\n-    ok(form, \\\"Locating form \\\" + formNum);\\n-\\n-    // Ignore last two elements, they're the two buttons.\\n-    for (var i = 0; i < form.elements.length - 2; i++) {\\n-        var ele = form.elements[i];\\n-\\n-        is(ele.value, ele.defaultValue, \\\"Test to default value of field \\\" +\\n-            ele.name + \\\" in form \\\" + formNum);\\n-    }\\n-}\\n \\n window.onload = startTest;\\n \\ndiff --git a/toolkit/components/passwordmgr/test/test_basic_form_2pw_1.html b/toolkit/components/passwordmgr/test/test_basic_form_2pw_1.html\\nindex d00da8e..7e39f17 100644\\n--- a/toolkit/components/passwordmgr/test/test_basic_form_2pw_1.html\\n+++ b/toolkit/components/passwordmgr/test/test_basic_form_2pw_1.html\\n@@ -15656,42 +15656,6 @@ function startTest() {\\n     SimpleTest.finish();\\n }\\n \\n-function checkForm(formNum, val1, val2, val3) {\\n-    var e, form = document.getElementById(\\\"form\\\" + formNum);\\n-    ok(form, \\\"Locating form \\\" + formNum);\\n-\\n-    \\n-    e = form.elements[0];\\n-    if (!val1)\\n-        is(e.value, e.defaultValue, \\\"Test default value of field \\\" + e.name +\\n-            \\\" in form \\\" + formNum);\\n-    else\\n-        is(e.value, val1, \\\"Test value of field \\\" + e.name +\\n-            \\\" in form \\\" + formNum);\\n-\\n-\\n-    e = form.elements[1];\\n-    if (!val2)\\n-        is(e.value, e.defaultValue, \\\"Test default value of field \\\" + e.name +\\n-            \\\" in form \\\" + formNum);\\n-    else\\n-        is(e.value, val2, \\\"Test value of field \\\" + e.name +\\n-            \\\" in form \\\" + formNum);\\n-\\n-\\n-    e = form.elements[2];\\n-    if (!val3)\\n-        is(e.value, e.defaultValue, \\\"Test default value of field \\\" + e.name +\\n-            \\\" in form \\\" + formNum);\\n-    else\\n-        is(e.value, val3, \\\"Test value of field \\\" + e.name +\\n-            \\\" in form \\\" + formNum);\\n-\\n-}\\n-\\n-function checkUnmodifiedForm(formNum) {\\n-    checkForm(formNum, null, null, null);\\n-}\\n \\n window.onload = startTest;\\n \\ndiff --git a/toolkit/components/passwordmgr/test/test_basic_form_autocomplete.html b/toolkit/components/passwordmgr/test/test_basic_form_autocomplete.html\\nindex 21e0f70..2fe365a 100644\\n--- a/toolkit/components/passwordmgr/test/test_basic_form_autocomplete.html\\n+++ b/toolkit/components/passwordmgr/test/test_basic_form_autocomplete.html\\n@@ -88,7 +88,7 @@ function restoreForm() {\\n \\n \\n // Check for expected username/password in form.\\n-function checkForm(expectedUsername, expectedPassword) {\\n+function checkACForm(expectedUsername, expectedPassword) {\\n   is(uname.value, expectedUsername, \\\"Checking form username\\\");\\n   is(pword.value, expectedPassword, \\\"Checking form password\\\");\\n }\\n@@ -130,7 +130,7 @@ function runTest(testNum) {\\n   switch(testNum) {\\n     case 1:\\n         // Make sure initial form is empty.\\n-        checkForm(\\\"\\\", \\\"\\\");\\n+        checkACForm(\\\"\\\", \\\"\\\");\\n         // Trigger autocomplete popup\\n         restoreForm();\\n         doKey(\\\"down\\\");\\n@@ -139,9 +139,9 @@ function runTest(testNum) {\\n     case 2:\\n         // Check first entry\\n         doKey(\\\"down\\\");\\n-        checkForm(\\\"\\\", \\\"\\\"); // value shouldn't update\\n+        checkACForm(\\\"\\\", \\\"\\\"); // value shouldn't update\\n         doKey(\\\"return\\\"); // not \\\"enter\\\"!\\n-        checkForm(\\\"tempuser1\\\", \\\"temppass1\\\");\\n+        checkACForm(\\\"tempuser1\\\", \\\"temppass1\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -153,7 +153,7 @@ function runTest(testNum) {\\n         doKey(\\\"down\\\");\\n         doKey(\\\"down\\\");\\n         doKey(\\\"return\\\"); // not \\\"enter\\\"!\\n-        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+        checkACForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -166,7 +166,7 @@ function runTest(testNum) {\\n         doKey(\\\"down\\\");\\n         doKey(\\\"down\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"testuser3\\\", \\\"testpass3\\\");\\n+        checkACForm(\\\"testuser3\\\", \\\"testpass3\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -180,7 +180,7 @@ function runTest(testNum) {\\n         doKey(\\\"down\\\");\\n         doKey(\\\"down\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+        checkACForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -196,7 +196,7 @@ function runTest(testNum) {\\n         doKey(\\\"down\\\"); // deselects\\n         doKey(\\\"down\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"tempuser1\\\", \\\"temppass1\\\");\\n+        checkACForm(\\\"tempuser1\\\", \\\"temppass1\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -207,7 +207,7 @@ function runTest(testNum) {\\n         // Check the last entry via arrow-up\\n         doKey(\\\"up\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+        checkACForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -220,7 +220,7 @@ function runTest(testNum) {\\n         doKey(\\\"up\\\");   // selects nothing!\\n         doKey(\\\"up\\\");   // select last entry\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+        checkACForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -238,7 +238,7 @@ function runTest(testNum) {\\n         doKey(\\\"up\\\"); // deselects\\n         doKey(\\\"up\\\"); // last entry\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+        checkACForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -249,7 +249,7 @@ function runTest(testNum) {\\n         // Set first entry w/o triggering autocomplete\\n         doKey(\\\"down\\\");\\n         doKey(\\\"right\\\");\\n-        checkForm(\\\"tempuser1\\\", \\\"\\\"); // empty password\\n+        checkACForm(\\\"tempuser1\\\", \\\"\\\"); // empty password\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -260,7 +260,7 @@ function runTest(testNum) {\\n         // Set first entry w/o triggering autocomplete\\n         doKey(\\\"down\\\");\\n         doKey(\\\"left\\\");\\n-        checkForm(\\\"tempuser1\\\", \\\"\\\"); // empty password\\n+        checkACForm(\\\"tempuser1\\\", \\\"\\\"); // empty password\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -273,7 +273,7 @@ function runTest(testNum) {\\n         doKey(\\\"down\\\");\\n         doKey(\\\"page_up\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"tempuser1\\\", \\\"temppass1\\\");\\n+        checkACForm(\\\"tempuser1\\\", \\\"temppass1\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -285,7 +285,7 @@ function runTest(testNum) {\\n         doKey(\\\"down\\\");\\n         doKey(\\\"page_down\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+        checkACForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -299,7 +299,7 @@ function runTest(testNum) {\\n //        doKey(\\\"down\\\");\\n //        doKey(\\\"down\\\");\\n //        doKey(\\\"escape\\\");\\n-//        checkForm(\\\"\\\", \\\"\\\");\\n+//        checkACForm(\\\"\\\", \\\"\\\");\\n \\n         // Trigger autocomplete popup\\n //        restoreForm();\\n@@ -323,11 +323,11 @@ function runTest(testNum) {\\n         // On Win/Linux, shift-backspace does not work, delete and shift-delete do.\\n         doKey(\\\"delete\\\", shiftModifier);\\n \\n-        checkForm(\\\"zzzuser4\\\", \\\"\\\"); // why does a value get set here?\\n+        checkACForm(\\\"zzzuser4\\\", \\\"\\\"); // why does a value get set here?\\n         numLogins = pwmgr.countLogins(\\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null);\\n         is(numLogins, 3, \\\"Correct number of logins after deleting one\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+        checkACForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -338,7 +338,7 @@ function runTest(testNum) {\\n         // Check the new first entry (of 3)\\n         doKey(\\\"down\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+        checkACForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -350,11 +350,11 @@ function runTest(testNum) {\\n         doKey(\\\"down\\\");\\n         doKey(\\\"down\\\");\\n         doKey(\\\"delete\\\", shiftModifier);\\n-        checkForm(\\\"testuser2\\\", \\\"\\\"); // XXX why does a value get set here?\\n+        checkACForm(\\\"testuser2\\\", \\\"\\\"); // XXX why does a value get set here?\\n         numLogins = pwmgr.countLogins(\\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null);\\n         is(numLogins, 2, \\\"Correct number of logins after deleting one\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+        checkACForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -365,7 +365,7 @@ function runTest(testNum) {\\n         // Check the new second entry (of 2)\\n         doKey(\\\"down\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+        checkACForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -377,11 +377,11 @@ function runTest(testNum) {\\n         doKey(\\\"down\\\");\\n         doKey(\\\"down\\\");\\n         doKey(\\\"delete\\\", shiftModifier);\\n-        checkForm(\\\"testuser2\\\", \\\"\\\"); // XXX why does a value get set here?\\n+        checkACForm(\\\"testuser2\\\", \\\"\\\"); // XXX why does a value get set here?\\n         numLogins = pwmgr.countLogins(\\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null);\\n         is(numLogins, 1, \\\"Correct number of logins after deleting one\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+        checkACForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -392,7 +392,7 @@ function runTest(testNum) {\\n         // Check the new second entry (of 2)\\n         doKey(\\\"down\\\");\\n         doKey(\\\"return\\\");\\n-        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+        checkACForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n \\n         // Trigger autocomplete popup\\n         restoreForm();\\n@@ -404,7 +404,7 @@ function runTest(testNum) {\\n         doKey(\\\"down\\\");\\n         doKey(\\\"delete\\\", shiftModifier);\\n         //doKey(\\\"return\\\");\\n-        checkForm(\\\"\\\", \\\"\\\");\\n+        checkACForm(\\\"\\\", \\\"\\\");\\n         numLogins = pwmgr.countLogins(\\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null);\\n         is(numLogins, 0, \\\"Correct number of logins after deleting one\\\");\\n \\ndiff --git a/toolkit/locales/en-US/chrome/passwordmgr/passwordmgr.properties b/toolkit/locales/en-US/chrome/passwordmgr/passwordmgr.properties\\nindex 222a0a3..03984e0 100644\\n--- a/toolkit/locales/en-US/chrome/passwordmgr/passwordmgr.properties\\n+++ b/toolkit/locales/en-US/chrome/passwordmgr/passwordmgr.properties\\n@@ -48,6 +48,7 @@ notifyBarRememberButtonText = Remember\\n notifyBarRememberButtonAccessKey = R\\n passwordChangeTitle = Confirm Password Change\\n passwordChangeText = Would you like to have Password Manager change the stored password for %S?\\n+passwordChangeTextNoUser = Would you like to have Password Manager change the stored password for this login?\\n userSelectText = Please confirm which user you are changing the password for\\n hidePasswords=Hide Passwords\\n showPasswords=Show Passwords\\n\""}