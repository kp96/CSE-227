{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basacb4994\""},"diff":"\"acb4994 Only substitute real frame for placeholder frame when it is an inline container. Bug 394239, r+sr+a=roc\\ndiff --git a/layout/base/nsBidiPresUtils.cpp b/layout/base/nsBidiPresUtils.cpp\\nindex 24dbe33..83ea23b 100644\\n--- a/layout/base/nsBidiPresUtils.cpp\\n+++ b/layout/base/nsBidiPresUtils.cpp\\n@@ -487,8 +487,17 @@ nsBidiPresUtils::InitLogicalArray(nsIFrame*       aCurrentFrame)\\n   for (nsIFrame* childFrame = aCurrentFrame; childFrame;\\n        childFrame = childFrame->GetNextSibling()) {\\n \\n-    nsIFrame* frame = (nsGkAtoms::placeholderFrame == childFrame->GetType()) ?\\n-      nsPlaceholderFrame::GetRealFrameFor(childFrame) : childFrame;\\n+    // If the real frame for a placeholder is an inline container, we need to\\n+    // drill down into it and include its contents in Bidi resolution. If it\\n+    // isn't an inline container, we just use the placeholder.\\n+    nsIFrame* frame = childFrame;\\n+    if (nsGkAtoms::placeholderFrame == childFrame->GetType()) {\\n+      nsIFrame* realFrame =\\n+        nsPlaceholderFrame::GetRealFrameForPlaceholder(childFrame);\\n+      if (realFrame->IsFrameOfType(nsIFrame::eBidiInlineContainer)) {\\n+        frame = realFrame;\\n+      }\\n+    }\\n \\n     PRUnichar ch = 0;\\n     if (frame->IsFrameOfType(nsIFrame::eBidiInlineContainer)) {\\n\""}