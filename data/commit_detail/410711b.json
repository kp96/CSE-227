{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas410711b\""},"diff":"\"410711b Bug 392397 Fix grids containing listboxes r=Enn sr=bz a=dbaron\\ndiff --git a/layout/xul/base/src/grid/nsGridLayout2.cpp b/layout/xul/base/src/grid/nsGridLayout2.cpp\\nindex 7282513..d8ee689 100644\\n--- a/layout/xul/base/src/grid/nsGridLayout2.cpp\\n+++ b/layout/xul/base/src/grid/nsGridLayout2.cpp\\n@@ -44,6 +44,7 @@\\n \\n #include \\\"nsGridLayout2.h\\\"\\n #include \\\"nsGridRowGroupLayout.h\\\"\\n+#include \\\"nsGridRow.h\\\"\\n #include \\\"nsBox.h\\\"\\n #include \\\"nsIScrollableFrame.h\\\"\\n #include \\\"nsSprocketLayout.h\\\"\\n@@ -247,6 +248,16 @@ nsGridLayout2::GetMaxSize(nsIBox* aBox, nsBoxLayoutState& aState, nsSize& aSize)\\n   return rv;\\n }\\n \\n+PRInt32\\n+nsGridLayout2::BuildRows(nsIBox* aBox, nsGridRow* aRows)\\n+{\\n+  if (aBox) {\\n+    aRows[0].Init(aBox, PR_TRUE);\\n+    return 1;\\n+  }\\n+  return 0;\\n+}\\n+\\n nsMargin\\n nsGridLayout2::GetTotalMargin(nsIBox* aBox, PRBool aIsHorizontal)\\n {\\ndiff --git a/layout/xul/base/src/grid/nsGridLayout2.h b/layout/xul/base/src/grid/nsGridLayout2.h\\nindex bbaec5a..88fafca 100644\\n--- a/layout/xul/base/src/grid/nsGridLayout2.h\\n+++ b/layout/xul/base/src/grid/nsGridLayout2.h\\n@@ -74,9 +74,9 @@ public:\\n   NS_IMETHOD GetMinSize(nsIBox* aBox, nsBoxLayoutState& aBoxLayoutState, nsSize& aSize);\\n   NS_IMETHOD GetPrefSize(nsIBox* aBox, nsBoxLayoutState& aBoxLayoutState, nsSize& aSize);\\n   NS_IMETHOD GetMaxSize(nsIBox* aBox, nsBoxLayoutState& aBoxLayoutState, nsSize& aSize);\\n-  virtual void CountRowsColumns(nsIBox* aBox, PRInt32& aRowCount, PRInt32& aComputedColumnCount) { NS_NOTREACHED(\\\"Should not be called\\\"); }\\n+  virtual void CountRowsColumns(nsIBox* aBox, PRInt32& aRowCount, PRInt32& aComputedColumnCount) { aRowCount++; }\\n   virtual void DirtyRows(nsIBox* aBox, nsBoxLayoutState& aState) { NS_NOTREACHED(\\\"Should not be called\\\"); }\\n-  virtual PRInt32 BuildRows(nsIBox* aBox, nsGridRow* aRows) { NS_NOTREACHED(\\\"Should not be called\\\"); return 0; }\\n+  virtual PRInt32 BuildRows(nsIBox* aBox, nsGridRow* aRows);\\n   virtual nsMargin GetTotalMargin(nsIBox* aBox, PRBool aIsHorizontal);\\n   virtual Type GetType() { return eGrid; }\\n   NS_IMETHOD ChildrenInserted(nsIBox* aBox, nsBoxLayoutState& aState,\\n\""}