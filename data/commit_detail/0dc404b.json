{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas0dc404b\""},"diff":"\"0dc404b Bug 396025 - accessible object created for tbody/thead/tfoot event when ARIA role is on parent table, r=aaronlev, a=discore\\ndiff --git a/accessible/src/base/nsAccessibilityService.cpp b/accessible/src/base/nsAccessibilityService.cpp\\nindex a53d833..95f22f1 100644\\n--- a/accessible/src/base/nsAccessibilityService.cpp\\n+++ b/accessible/src/base/nsAccessibilityService.cpp\\n@@ -1361,12 +1361,9 @@ NS_IMETHODIMP nsAccessibilityService::GetAccessible(nsIDOMNode *aNode,\\n                                         nsIAccessibleRole::ROLE_EQUATION);\\n     }\\n   } else if (!newAcc) {  // HTML accessibles\\n-    // Prefer to use markup (mostly tag name, perhaps attributes) to\\n-    // decide if and what kind of accessible to create.\\n-    CreateHTMLAccessibleByMarkup(frame, aWeakShell, aNode, getter_AddRefs(newAcc));\\n+    PRBool tryTagNameOrFrame = PR_TRUE;\\n \\n-    PRBool tryFrame = (newAcc == nsnull);\\n-    if (!content->IsFocusable()) { \\n+    if (!content->IsFocusable()) {\\n       // If we're in unfocusable table-related subcontent, check for the\\n       // Presentation role on the containing table\\n       nsIAtom *tag = content->Tag();\\n@@ -1386,28 +1383,40 @@ NS_IMETHODIMP nsAccessibilityService::GetAccessible(nsIDOMNode *aNode,\\n               // Table that we're a descendant of is not styled as a table,\\n               // and has no table accessible for an ancestor, or\\n               // table that we're a descendant of is presentational\\n-              tryFrame = PR_FALSE;\\n+              tryTagNameOrFrame = PR_FALSE;\\n             }\\n-\\n             break;\\n           }\\n         }\\n       }\\n     }\\n \\n-    if (tryFrame) {\\n-      // Do not create accessible object subtrees for non-rendered table captions.\\n-      // This could not be done in nsTableCaptionFrame::GetAccessible() because the\\n-      // descendants of the table caption would still be created.\\n-      // By setting *aIsHidden = PR_TRUE we ensure that no descendant accessibles are created\\n-      if (frame->GetType() == nsAccessibilityAtoms::tableCaptionFrame &&\\n-         frame->GetRect().IsEmpty()) {\\n-        // XXX This is not the ideal place for this code, but right now there is \\n-        // no better place:\\n-        *aIsHidden = PR_TRUE;\\n-        return NS_OK;\\n+    if (tryTagNameOrFrame) {\\n+      // Prefer to use markup (mostly tag name, perhaps attributes) to\\n+      // decide if and what kind of accessible to create.\\n+      // The method creates accessibles for table related content too therefore\\n+      // we do not call it if accessibles for table related content are\\n+      // prevented above.\\n+      rv = CreateHTMLAccessibleByMarkup(frame, aWeakShell, aNode,\\n+                                        getter_AddRefs(newAcc));\\n+      NS_ENSURE_SUCCESS(rv, rv);\\n+\\n+      if (!newAcc) {\\n+        // Do not create accessible object subtrees for non-rendered table\\n+        // captions. This could not be done in\\n+        // nsTableCaptionFrame::GetAccessible() because the descendants of\\n+        // the table caption would still be created. By setting\\n+        // *aIsHidden = PR_TRUE we ensure that no descendant accessibles are\\n+        // created.\\n+        if (frame->GetType() == nsAccessibilityAtoms::tableCaptionFrame &&\\n+           frame->GetRect().IsEmpty()) {\\n+          // XXX This is not the ideal place for this code, but right now there\\n+          // is no better place:\\n+          *aIsHidden = PR_TRUE;\\n+          return NS_OK;\\n+        }\\n+        frame->GetAccessible(getter_AddRefs(newAcc)); // Try using frame to do it\\n       }\\n-      frame->GetAccessible(getter_AddRefs(newAcc)); // Try using frame to do it\\n     }\\n   }\\n \\n\""}