{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basb9778e3\""},"diff":"\"b9778e3 fix for bug #394484:  Star icon in url autocomplete results shouldn't be set for items in RSS / Live Bookmarks. r=dietrich\\ndiff --git a/toolkit/components/places/src/nsNavHistory.cpp b/toolkit/components/places/src/nsNavHistory.cpp\\nindex 101175b..53b3653 100644\\n--- a/toolkit/components/places/src/nsNavHistory.cpp\\n+++ b/toolkit/components/places/src/nsNavHistory.cpp\\n@@ -229,6 +229,7 @@ const PRInt32 nsNavHistory::kAutoCompleteIndex_URL = 0;\\n const PRInt32 nsNavHistory::kAutoCompleteIndex_Title = 1;\\n const PRInt32 nsNavHistory::kAutoCompleteIndex_FaviconURL = 2;\\n const PRInt32 nsNavHistory::kAutoCompleteIndex_ItemId = 3;\\n+const PRInt32 nsNavHistory::kAutoCompleteIndex_ParentId = 4;\\n \\n static nsDataHashtable<nsCStringHashKey, int>* gTldTypes;\\n static const char* gQuitApplicationMessage = \\\"quit-application\\\";\\ndiff --git a/toolkit/components/places/src/nsNavHistory.h b/toolkit/components/places/src/nsNavHistory.h\\nindex 4a36246..a007d84 100644\\n--- a/toolkit/components/places/src/nsNavHistory.h\\n+++ b/toolkit/components/places/src/nsNavHistory.h\\n@@ -559,6 +559,7 @@ protected:\\n   static const PRInt32 kAutoCompleteIndex_Title;\\n   static const PRInt32 kAutoCompleteIndex_FaviconURL;\\n   static const PRInt32 kAutoCompleteIndex_ItemId;\\n+  static const PRInt32 kAutoCompleteIndex_ParentId;\\n   nsCOMPtr<mozIStorageStatement> mDBAutoCompleteQuery; //  kAutoCompleteIndex_* results\\n   nsresult InitAutoComplete();\\n   nsresult CreateAutoCompleteQuery();\\n@@ -572,6 +573,9 @@ protected:\\n   PRTime mCurrentChunkEndTime;\\n   PRTime mCurrentOldestVisit;\\n \\n+  nsDataHashtable<nsTrimInt64HashKey, PRBool> mLivemarkFeedItemIds;  \\n+  nsCOMPtr<mozIStorageStatement> mLivemarkFeedsQuery;\\n+\\n   nsresult AutoCompleteTypedSearch();\\n   nsresult AutoCompleteFullHistorySearch();\\n \\ndiff --git a/toolkit/components/places/src/nsNavHistoryAutoComplete.cpp b/toolkit/components/places/src/nsNavHistoryAutoComplete.cpp\\nindex eeddaea..447fff5 100644\\n--- a/toolkit/components/places/src/nsNavHistoryAutoComplete.cpp\\n+++ b/toolkit/components/places/src/nsNavHistoryAutoComplete.cpp\\n@@ -68,6 +68,7 @@\\n // This is the maximum results we'll return for a \\\"typed\\\" search\\n // This happens in response to clicking the down arrow next to the URL.\\n #define AUTOCOMPLETE_MAX_PER_TYPED 100\\n+#define LMANNO_FEEDURI \\\"livemark/feedURI\\\"\\n \\n // nsNavHistory::InitAutoComplete\\n nsresult\\n@@ -76,9 +77,19 @@ nsNavHistory::InitAutoComplete()\\n   nsresult rv = CreateAutoCompleteQuery();\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n+  nsCString sql = NS_LITERAL_CSTRING(\\n+    \\\"SELECT annos.item_id FROM moz_anno_attributes attrs \\\"\\n+    \\\"JOIN moz_items_annos annos WHERE attrs.name = \\\\\\\"\\\" LMANNO_FEEDURI \\\"\\\\\\\" \\\"\\n+    \\\"AND attrs.id = annos.anno_attribute_id\\\");\\n+  rv = mDBConn->CreateStatement(sql, getter_AddRefs(mLivemarkFeedsQuery));\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+\\n   if (!mCurrentResultURLs.Init(128))\\n     return NS_ERROR_OUT_OF_MEMORY;\\n \\n+  if (!mLivemarkFeedItemIds.Init(128))\\n+    return NS_ERROR_OUT_OF_MEMORY;\\n+\\n   return NS_OK;\\n }\\n \\n@@ -92,7 +103,7 @@ nsresult\\n nsNavHistory::CreateAutoCompleteQuery()\\n {\\n   nsCString sql = NS_LITERAL_CSTRING(\\n-    \\\"SELECT h.url, h.title, f.url, b.id \\\"\\n+    \\\"SELECT h.url, h.title, f.url, b.id, b.parent \\\"\\n     \\\"FROM moz_places h \\\"\\n     \\\"JOIN moz_historyvisits v ON h.id = v.place_id \\\"\\n     \\\"LEFT OUTER JOIN moz_bookmarks b ON b.fk = h.id \\\"\\n@@ -265,6 +276,19 @@ nsNavHistory::StartSearch(const nsAString & aSearchString,\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n   mCurrentResultURLs.Clear();\\n+  mLivemarkFeedItemIds.Clear();\\n+\\n+  // find all the items that have the \\\"livemark/feedURI\\\" annotation\\n+  // and save off their item ids.  when doing autocomplete, \\n+  // if a result's parent item id matches a saved item id, the result\\n+  // it is not really a bookmark, but a rss feed item.\\n+  mozStorageStatementScoper scope(mLivemarkFeedsQuery);\\n+  PRBool hasMore = PR_FALSE;\\n+  while (NS_SUCCEEDED(mLivemarkFeedsQuery->ExecuteStep(&hasMore)) && hasMore) {\\n+    PRInt64 itemId = 0;\\n+    mLivemarkFeedsQuery->GetInt64(0, &itemId);\\n+    mLivemarkFeedItemIds.Put(itemId, PR_TRUE);\\n+  }\\n \\n   // Search through the previous result\\n   if (searchPrevious) {\\n@@ -326,7 +350,7 @@ nsresult nsNavHistory::AutoCompleteTypedSearch()\\n   nsCOMPtr<mozIStorageStatement> dbSelectStatement;\\n \\n   nsCString sql = NS_LITERAL_CSTRING(\\n-    \\\"SELECT h.url, h.title, f.url, b.id \\\"\\n+    \\\"SELECT h.url, h.title, f.url, b.id, b.parent \\\"\\n     \\\"FROM moz_places h \\\"\\n     \\\"LEFT OUTER JOIN moz_bookmarks b ON b.fk = h.id \\\"\\n     \\\"LEFT OUTER JOIN moz_favicons f ON h.favicon_id = f.id \\\"\\n@@ -351,12 +375,19 @@ nsresult nsNavHistory::AutoCompleteTypedSearch()\\n     dbSelectStatement->GetString(kAutoCompleteIndex_FaviconURL, entryFavicon);\\n     PRInt64 itemId = 0;\\n     dbSelectStatement->GetInt64(kAutoCompleteIndex_ItemId, &itemId);\\n+    PRInt64 parentId = 0;\\n+    dbSelectStatement->GetInt64(kAutoCompleteIndex_ParentId, &parentId);\\n+\\n+    PRBool dummy;\\n+    // don't show rss feed items as bookmarked\\n+    PRBool isBookmark = (itemId != 0) && \\n+                        !mLivemarkFeedItemIds.Get(parentId, &dummy);\\n \\n     nsCAutoString imageSpec;\\n     faviconService->GetFaviconSpecForIconString(\\n       NS_ConvertUTF16toUTF8(entryFavicon), imageSpec);\\n     rv = mCurrentResult->AppendMatch(entryURL, entryTitle, \\n-      NS_ConvertUTF8toUTF16(imageSpec), itemId ? NS_LITERAL_STRING(\\\"bookmark\\\") : NS_LITERAL_STRING(\\\"favicon\\\"));\\n+      NS_ConvertUTF8toUTF16(imageSpec), isBookmark ? NS_LITERAL_STRING(\\\"bookmark\\\") : NS_LITERAL_STRING(\\\"favicon\\\"));\\n     NS_ENSURE_SUCCESS(rv, rv);\\n   } \\n   return NS_OK;\\n@@ -402,8 +433,14 @@ nsNavHistory::AutoCompleteFullHistorySearch()\\n     mDBAutoCompleteQuery->GetString(kAutoCompleteIndex_FaviconURL, entryFavicon);\\n     PRInt64 itemId = 0;\\n     mDBAutoCompleteQuery->GetInt64(kAutoCompleteIndex_ItemId, &itemId);\\n+    PRInt64 parentId = 0;\\n+    mDBAutoCompleteQuery->GetInt64(kAutoCompleteIndex_ParentId, &parentId);\\n \\n     PRBool dummy;\\n+    // don't show rss feed items as bookmarked\\n+    PRBool isBookmark = (itemId != 0) && \\n+                        !mLivemarkFeedItemIds.Get(parentId, &dummy);\\n+\\n     // prevent duplicates.  this can happen when chunking as we\\n     // may have already seen this URL from an earlier chunk of time\\n     if (!mCurrentResultURLs.Get(entryURL, &dummy)) {\\n@@ -412,7 +449,7 @@ nsNavHistory::AutoCompleteFullHistorySearch()\\n       faviconService->GetFaviconSpecForIconString(\\n         NS_ConvertUTF16toUTF8(entryFavicon), faviconSpec);\\n       rv = mCurrentResult->AppendMatch(entryURL, entryTitle, \\n-        NS_ConvertUTF8toUTF16(faviconSpec), itemId ? NS_LITERAL_STRING(\\\"bookmark\\\") : NS_LITERAL_STRING(\\\"favicon\\\"));\\n+        NS_ConvertUTF8toUTF16(faviconSpec), isBookmark ? NS_LITERAL_STRING(\\\"bookmark\\\") : NS_LITERAL_STRING(\\\"favicon\\\"));\\n       NS_ENSURE_SUCCESS(rv, rv);\\n \\n       mCurrentResultURLs.Put(entryURL, PR_TRUE);\\n\""}