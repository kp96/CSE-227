{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basf5b9eb6\""},"diff":"\"f5b9eb6 Bug 298717 - Crash on multipart/x-mixed-replace: gif,jpeg,jpeg sequence [@ nsJPEGDecoder::OutputScanlines][@ gdk_rgb_convert_0888][@ gdk_rgb_init], patch by andrew smith <asmith15@learn.senecac.on.ca>, r+sr=pavlov, a1.9=itsablocker\\ndiff --git a/gfx/src/shared/gfxImageFrame.cpp b/gfx/src/shared/gfxImageFrame.cpp\\nindex 53d72d1..6194105 100644\\n--- a/gfx/src/shared/gfxImageFrame.cpp\\n+++ b/gfx/src/shared/gfxImageFrame.cpp\\n@@ -270,8 +270,6 @@ NS_IMETHODIMP gfxImageFrame::GetImageData(PRUint8 **aData, PRUint32 *length)\\n   if (!mInitialized)\\n     return NS_ERROR_NOT_INITIALIZED;\\n \\n-  NS_ASSERTION(mMutable, \\\"trying to get data on an immutable frame\\\");\\n-\\n   *aData = mImage->GetBits();\\n   *length = mImage->GetLineStride() * mSize.height;\\n \\ndiff --git a/gfx/src/thebes/nsThebesImage.cpp b/gfx/src/thebes/nsThebesImage.cpp\\nindex 164ff80..8b968fb 100644\\n--- a/gfx/src/thebes/nsThebesImage.cpp\\n+++ b/gfx/src/thebes/nsThebesImage.cpp\\n@@ -319,6 +319,10 @@ nsThebesImage::UnlockImagePixels(PRBool aMaskPixels)\\n     if (aMaskPixels)\\n         return NS_ERROR_NOT_IMPLEMENTED;\\n     if (mImageSurface && mOptSurface) {\\n+        nsRefPtr<gfxContext> context = new gfxContext(mOptSurface);\\n+        context->SetOperator(gfxContext::OPERATOR_SOURCE);\\n+        context->SetSource(mImageSurface);\\n+        context->Paint();\\n         // Don't need the pixel data anymore\\n         mImageSurface = nsnull;\\n     }\\ndiff --git a/modules/libpr0n/decoders/jpeg/nsJPEGDecoder.cpp b/modules/libpr0n/decoders/jpeg/nsJPEGDecoder.cpp\\nindex 0a16c4b..e6c39f3 100644\\n--- a/modules/libpr0n/decoders/jpeg/nsJPEGDecoder.cpp\\n+++ b/modules/libpr0n/decoders/jpeg/nsJPEGDecoder.cpp\\n@@ -555,6 +555,8 @@ nsJPEGDecoder::OutputScanlines()\\n   const PRUint32 top = mInfo.output_scanline;\\n   PRBool rv = PR_TRUE;\\n \\n+  mFrame->LockImageData();\\n+  \\n   // we're thebes. we can write stuff directly to the data\\n   PRUint8 *imageData;\\n   PRUint32 imageDataLength;\\n@@ -605,7 +607,9 @@ nsJPEGDecoder::OutputScanlines()\\n       img->ImageUpdated(nsnull, nsImageUpdateFlags_kBitsChanged, &r);\\n       mObserver->OnDataAvailable(nsnull, mFrame, &r);\\n   }\\n-\\n+  \\n+  mFrame->UnlockImageData();\\n+  \\n   return rv;\\n }\\n \\n\""}