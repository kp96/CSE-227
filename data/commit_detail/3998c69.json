{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas3998c69\""},"diff":"\"3998c69 bug 238696; handle additional progress listeners by calling enterTabbedMode (ported from mozilla/xpfe/global/resources/content/bindings/tabbrowser.xml); r=dveditz/bryner\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 73287ba..2e6adfa 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -927,14 +927,26 @@\\n               this.mPanelContainer.addEventListener(\\\"DOMLinkAdded\\\", this.onLinkAdded, false);\\n             }\\n \\n+            if (!this.mTabbedMode && this.mProgressListeners.length == 1) {\\n+              // If we are adding a 2nd progress listener, we need to enter tabbed mode\\n+              // because the browser status filter can only handle one progress listener.\\n+              // In tabbed mode, mTabProgressListener is used which will iterate over all listeners.\\n+              this.enterTabbedMode();\\n+            }\\n+\\n             this.mProgressListeners.push(aListener);\\n \\n             if (!this.mTabbedMode) {\\n-              // hook a filter up to our first browser\\n-              const filter = Components.classes[\\\"@mozilla.org/appshell/component/browser-status-filter;1\\\"]\\n-                                       .createInstance(Components.interfaces.nsIWebProgress);\\n-              this.mTabFilters[0] = filter;\\n-              this.mCurrentBrowser.webProgress.addProgressListener(filter, Components.interfaces.nsIWebProgress.NOTIFY_ALL);\\n+              // If someone does this:\\n+              // addProgressListener, removeProgressListener, addProgressListener\\n+              // don't create a new filter; reuse the existing filter.\\n+              if (this.mTabFilters.length == 0) {\\n+                // hook a filter up to our first browser\\n+                const filter = Components.classes[\\\"@mozilla.org/appshell/component/browser-status-filter;1\\\"]\\n+                                         .createInstance(Components.interfaces.nsIWebProgress);\\n+                this.mTabFilters[0] = filter;\\n+                this.mCurrentBrowser.webProgress.addProgressListener(filter, Components.interfaces.nsIWebProgress.NOTIFY_ALL);\\n+              }\\n \\n               // Directly hook the listener up to the filter for better performance\\n               this.mTabFilters[0].addProgressListener(aListener, aMask);\\n\""}