{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basb55ea7e\""},"diff":"\"b55ea7e Bug 390219: Ignore OnStartRequest/OnStopRequest calls for other channels, i.e. ones already aborted. Also set owner on the right channel for multipart responses. r/sr/a=jst\\ndiff --git a/content/base/src/nsXMLHttpRequest.cpp b/content/base/src/nsXMLHttpRequest.cpp\\nindex b287572..01a99f5 100644\\n--- a/content/base/src/nsXMLHttpRequest.cpp\\n+++ b/content/base/src/nsXMLHttpRequest.cpp\\n@@ -1503,10 +1503,29 @@ nsXMLHttpRequest::OnDataAvailable(nsIRequest *request, nsISupports *ctxt, nsIInp\\n   return inStr->ReadSegments(nsXMLHttpRequest::StreamReaderFunc, (void*)this, count, &totalRead);\\n }\\n \\n+PRBool\\n+IsSameOrBaseChannel(nsIRequest* aPossibleBase, nsIChannel* aChannel)\\n+{\\n+  nsCOMPtr<nsIMultiPartChannel> mpChannel = do_QueryInterface(aPossibleBase);\\n+  if (mpChannel) {\\n+    nsCOMPtr<nsIChannel> baseChannel;\\n+    nsresult rv = mpChannel->GetBaseChannel(getter_AddRefs(baseChannel));\\n+    NS_ENSURE_SUCCESS(rv, PR_FALSE);\\n+    \\n+    return baseChannel == aChannel;\\n+  }\\n+\\n+  return aPossibleBase == aChannel;\\n+}\\n+\\n /* void onStartRequest (in nsIRequest request, in nsISupports ctxt); */\\n NS_IMETHODIMP\\n nsXMLHttpRequest::OnStartRequest(nsIRequest *request, nsISupports *ctxt)\\n {\\n+  if (!IsSameOrBaseChannel(request, mChannel)) {\\n+    return NS_OK;\\n+  }\\n+\\n   // Don't do anything if we have been aborted\\n   if (mState & XML_HTTP_REQUEST_UNINITIALIZED)\\n     return NS_OK;\\n@@ -1520,7 +1539,7 @@ nsXMLHttpRequest::OnStartRequest(nsIRequest *request, nsISupports *ctxt)\\n   nsCOMPtr<nsIChannel> channel(do_QueryInterface(request));\\n   NS_ENSURE_TRUE(channel, NS_ERROR_UNEXPECTED);\\n \\n-  mChannel->SetOwner(mPrincipal);\\n+  channel->SetOwner(mPrincipal);\\n \\n   mReadRequest = request;\\n   mContext = ctxt;\\n@@ -1617,6 +1636,10 @@ nsXMLHttpRequest::OnStartRequest(nsIRequest *request, nsISupports *ctxt)\\n NS_IMETHODIMP\\n nsXMLHttpRequest::OnStopRequest(nsIRequest *request, nsISupports *ctxt, nsresult status)\\n {\\n+  if (!IsSameOrBaseChannel(request, mChannel)) {\\n+    return NS_OK;\\n+  }\\n+\\n   // Don't do anything if we have been aborted\\n   if (mState & XML_HTTP_REQUEST_UNINITIALIZED)\\n     return NS_OK;\\n\""}