{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basf4a130c\""},"diff":"\"f4a130c update from chris' work\\ndiff --git a/services/sync/nsBookmarksSyncService.js b/services/sync/nsBookmarksSyncService.js\\nindex ff58101..b955c9b 100644\\n--- a/services/sync/nsBookmarksSyncService.js\\n+++ b/services/sync/nsBookmarksSyncService.js\\n@@ -302,49 +302,46 @@ BookmarksSyncService.prototype = {\\n         return;\\n       }\\n \\n+      LOG(\\\"Local snapshot version: \\\" + this._snapshotVersion);\\n+      LOG(\\\"Latest server version: \\\" + server['version']);\\n+\\n       // 2) Generate local deltas from snapshot -> current client status\\n       LOG(\\\"Generating local updates\\\");\\n       var localUpdates = this._sanitizeCommands(this._sync.detectUpdates(this._snapshot, localJson));\\n-\\n-      // 3) Reconcile client/server deltas and generate new deltas for them.\\n-\\n       if (!(server['status'] == 1 || localUpdates.length > 0)) {\\n-        LOG(\\\"Sync complete: no changes needed on client or server\\\");\\n+        LOG(\\\"Sync complete (1): no changes needed on client or server\\\");\\n         return;\\n       }\\n-\\n+\\t  \\n+      // 3) Reconcile client/server deltas and generate new deltas for them.\\n       var propagations = [server['updates'], localUpdates];\\n-\\n       if (server['status'] == 1 && localUpdates.length > 0) {\\n         LOG(\\\"Reconciling updates\\\");\\n-        var propagations = this._sync.reconcile([localUpdates, server['updates']]);\\n+        propagations = this._sync.reconcile([localUpdates, server['updates']]);\\n       }\\n-      LOG(\\\"Local:\\\" + uneval(propagations[0]));\\n-      LOG(\\\"To server:\\\" + uneval(propagations[1]));\\n-\\n-      LOG(\\\"Local snapshot version: \\\" + this._snapshotVersion);\\n-      LOG(\\\"Latest server version: \\\" + server['version']);\\n-      this._snapshotVersion = server['version'];\\n-\\n-      if (!(propagations[0].length || propagations[1].length)) {\\n+\\t  \\n+\\t  if (!((propagations[0] && propagations[0].length > 0) || (propagations[1] && propagations[1].length > 0))) {\\n         this._snapshot = this._wrapNode(localBookmarks);\\n-        LOG(\\\"Sync complete: no changes needed on client or server\\\");\\n+        LOG(\\\"Sync complete (2): no changes needed on client or server\\\");\\n         return;\\n-      }\\n+      } \\n+\\t  \\n+\\t this._snapshotVersion = server['version'];\\n \\n       // 3.1) Apply server changes to local store\\n-      if (propagations[0].length) {\\n+      if (propagations[0] && propagations[0].length > 0) {\\n         LOG(\\\"Applying changes locally\\\");\\n         localBookmarks = this._getLocalBookmarks(); // fixme: wtf\\n         this._snapshot = this._wrapNode(localBookmarks);\\n-        // applyCommands changes the imput commands, so we eval(uneval()) them to make a copy :-/\\n-        this._sync.applyCommands(this._snapshot, eval(uneval(propagations[0])));\\n+        // applyCommands changes the input commands, so we eval(uneval()) them to make a copy :-/\\n+   \\t    this._sync.applyCommands(this._snapshot, eval(uneval(propagations[0])));\\n         this._applyCommands(localBookmarks, propagations[0]);\\n         this._snapshot = this._wrapNode(localBookmarks);\\n+\\t\\tthis._snapshotVersion = server['version'];\\n       }\\n \\n       // 3.2) Append server delta to the delta file and upload\\n-      if (propagations[1].length) {\\n+      if (propagations[1] && propagations[1].length) {\\n         LOG(\\\"Uploading changes to server\\\");\\n         this._snapshotVersion++;\\n         server['deltas'][this._snapshotVersion] = propagations[1];\\n@@ -356,8 +353,7 @@ BookmarksSyncService.prototype = {\\n         else\\n           LOG(\\\"Error: could not update deltas on server\\\");\\n       }\\n-\\n-      LOG(\\\"Sync complete\\\");\\n+\\t      LOG(\\\"Sync complete\\\");\\n     } finally {\\n       //this._dav.unlock(handlers);\\n       //data = yield;\\ndiff --git a/services/sync/services-sync.js b/services/sync/services-sync.js\\nnew file mode 100644\\nindex 0000000..aaa6ec2\\n--- /dev/null\\n+++ b/services/sync/services-sync.js\\n@@ -0,0 +1,4 @@\\n+pref(\\\"browser.places.sync.serverUrl\\\", \\\"http://places.sync.url/\\\");\\n+pref(\\\"extensions.sync.lastversion\\\", \\\"firstrun\\\");\\n+pref(\\\"extensions.sync.lastsync\\\", \\\"\\\");\\n+\\n\""}