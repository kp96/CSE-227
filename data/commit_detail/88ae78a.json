{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas88ae78a\""},"diff":"\"88ae78a Bug 282178: sync tabbrowsers (mostly changes from bug 105885), r=mconnor\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex ccde2ba..ef7f6ea 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -58,13 +58,14 @@\\n     </resources>\\n \\n     <content>\\n-      <xul:stringbundle src=\\\"chrome://global/locale/tabbrowser.properties\\\"/>\\n-      <xul:tabbox flex=\\\"1\\\" eventnode=\\\"document\\\" xbl:inherits=\\\"handleCtrlPageUpDown\\\"\\n+      <xul:stringbundle anonid=\\\"tbstringbundle\\\" src=\\\"chrome://global/locale/tabbrowser.properties\\\"/>\\n+      <xul:tabbox anonid=\\\"tabbox\\\" flex=\\\"1\\\" eventnode=\\\"document\\\" xbl:inherits=\\\"handleCtrlPageUpDown\\\"\\n                   onselect=\\\"if (!('updateCurrentBrowser' in this.parentNode) || event.target.localName != 'tabpanels') return; this.parentNode.updateCurrentBrowser();\\\">\\n         <xul:hbox class=\\\"tab-drop-indicator-bar\\\">\\n           <xul:hbox class=\\\"tab-drop-indicator\\\"/>\\n         </xul:hbox>\\n         <xul:hbox class=\\\"tabbrowser-strip\\\" collapsed=\\\"true\\\" tooltip=\\\"_child\\\" context=\\\"_child\\\"\\n+                  anonid=\\\"strip\\\"\\n                   ondraggesture=\\\"nsDragAndDrop.startDrag(event, this.parentNode.parentNode); event.stopPropagation();\\\"\\n                   ondragover=\\\"nsDragAndDrop.dragOver(event, this.parentNode.parentNode); event.stopPropagation();\\\"\\n                   ondragdrop=\\\"nsDragAndDrop.drop(event, this.parentNode.parentNode); event.stopPropagation();\\\"\\n@@ -92,7 +93,9 @@\\n                                      tabbrowser.removeTab(tabbrowser.mContextTab);\\\"/>\\n           </xul:menupopup>\\n \\n-          <xul:tabs class=\\\"tabbrowser-tabs\\\" flex=\\\"1\\\" setfocus=\\\"false\\\"\\n+          <xul:tabs class=\\\"tabbrowser-tabs\\\" flex=\\\"1\\\"\\n+                    anonid=\\\"tabcontainer\\\"\\n+                    setfocus=\\\"false\\\"\\n                     onclick=\\\"this.parentNode.parentNode.parentNode.onTabClick(event);\\\"\\n                     xbl:inherits=\\\"onnewtab\\\"\\n                     ondblclick=\\\"this.parentNode.parentNode.parentNode.onTabBarDblClick(event);\\\"\\n@@ -107,7 +110,7 @@\\n                      class=\\\"tabbrowser-tab\\\" label=\\\"&untitledTab;\\\" crop=\\\"end\\\"/>\\n           </xul:tabs>\\n         </xul:hbox>\\n-        <xul:tabpanels flex=\\\"1\\\" class=\\\"plain\\\" selectedIndex=\\\"0\\\">\\n+        <xul:tabpanels flex=\\\"1\\\" class=\\\"plain\\\" selectedIndex=\\\"0\\\" anonid=\\\"panelcontainer\\\">\\n           <xul:vbox flex=\\\"1\\\">\\n             <xul:browsermessage hidden=\\\"true\\\" type=\\\"top\\\"/>\\n             <xul:browser flex=\\\"1\\\" type=\\\"content-primary\\\" message=\\\"true\\\" disablehistory=\\\"true\\\" xbl:inherits=\\\"tooltip=contenttooltip,contextmenu=contentcontextmenu,autocompletepopup\\\"/>\\n@@ -127,26 +130,26 @@\\n         Components.classes[\\\"@mozilla.org/docshell/urifixup;1\\\"]\\n                   .getService(Components.interfaces.nsIURIFixup);\\n       </field>\\n-      <field name=\\\"mTabBox\\\">\\n-        document.getAnonymousNodes(this)[1]\\n+      <field name=\\\"mTabBox\\\" readonly=\\\"true\\\">\\n+        document.getAnonymousElementByAttribute(this, \\\"anonid\\\", \\\"tabbox\\\");\\n       </field>\\n       <field name=\\\"mTabDropIndicatorBar\\\">\\n         this.mTabBox.childNodes[0]\\n       </field>\\n-      <field name=\\\"mStrip\\\">\\n-        this.mTabBox.childNodes[1]\\n+      <field name=\\\"mStrip\\\" readonly=\\\"true\\\">\\n+        document.getAnonymousElementByAttribute(this, \\\"anonid\\\", \\\"strip\\\");\\n       </field>\\n-      <field name=\\\"mTabContainer\\\">\\n-        this.mStrip.childNodes[2]\\n+      <field name=\\\"mTabContainer\\\" readonly=\\\"true\\\">\\n+        document.getAnonymousElementByAttribute(this, \\\"anonid\\\", \\\"tabcontainer\\\");\\n       </field>\\n-      <field name=\\\"mPanelContainer\\\">\\n-        this.mTabBox.childNodes[2]\\n+      <field name=\\\"mPanelContainer\\\" readonly=\\\"true\\\">\\n+        document.getAnonymousElementByAttribute(this, \\\"anonid\\\", \\\"panelcontainer\\\");\\n       </field>\\n-      <field name=\\\"mTabs\\\">\\n+      <field name=\\\"mTabs\\\" readonly=\\\"true\\\">\\n         this.mTabContainer.childNodes\\n       </field>\\n       <field name=\\\"mStringBundle\\\">\\n-        document.getAnonymousNodes(this)[0]\\n+        document.getAnonymousElementByAttribute(this, \\\"anonid\\\", \\\"tbstringbundle\\\");\\n       </field>\\n       <field name=\\\"mCurrentTab\\\">\\n         null\\n@@ -155,7 +158,7 @@\\n         null\\n       </field>\\n       <field name=\\\"mProgressListeners\\\">\\n-        new Array()\\n+        []\\n       </field>\\n       <field name=\\\"mTabListeners\\\">\\n         new Array()\\n@@ -770,8 +773,7 @@\\n         <parameter name=\\\"event\\\"/>\\n         <body>\\n           <![CDATA[\\n-            var tabBrowser = this.parentNode.parentNode;\\n-            if (!tabBrowser.mPrefs.getBoolPref(\\\"browser.chrome.site_icons\\\"))\\n+            if (!this.mPrefs.getBoolPref(\\\"browser.chrome.site_icons\\\"))\\n               return;\\n \\n             if (!event.originalTarget.rel.match((/(?:^|\\\\s)icon(?:\\\\s|$)/i)))\\n@@ -830,13 +832,13 @@\\n                                          null) != nsIContentPolicy.ACCEPT)\\n               return;\\n \\n-            var browserIndex = tabBrowser.getBrowserIndexForDocument(targetDoc);\\n+            var browserIndex = this.getBrowserIndexForDocument(targetDoc);\\n             // no browser? no favicon.\\n             if (browserIndex == -1)\\n               return;\\n \\n-            var tab = tabBrowser.mTabContainer.childNodes[browserIndex];\\n-            tabBrowser.setIcon(tab, href);\\n+            var tab = this.mTabContainer.childNodes[browserIndex];\\n+            this.setIcon(tab, href);\\n           ]]>\\n         </body>\\n       </method>\\n@@ -1444,9 +1446,6 @@\\n               var tabStripHide = !window.toolbar.visible;\\n               if (!autoHide && !forceHide && !tabStripHide)\\n                 this.setStripVisibilityTo(true);\\n-\\n-              // Hook up a listener for <link>s.\\n-              this.mPanelContainer.addEventListener(\\\"DOMLinkAdded\\\", this.onLinkAdded, false);\\n             }\\n \\n             if (!this.mTabbedMode && this.mProgressListeners.length == 1) {\\n@@ -2183,13 +2182,14 @@\\n             this.mTabListeners[i] = null;\\n             this.getBrowserAtIndex(i).removeEventListener(\\\"DOMTitleChanged\\\", this.onTitleChanged, false);\\n           }\\n-          this.mPanelContainer.removeEventListener(\\\"DOMLinkAdded\\\", this.onLinkAdded, false);\\n           document.removeEventListener(\\\"keypress\\\", this._keyEventHandler, false);\\n         ]]>\\n       </destructor>\\n     </implementation>\\n \\n     <handlers>\\n+      <handler event=\\\"DOMLinkAdded\\\" action=\\\"this.onLinkAdded(event);\\\"/>\\n+\\n       <handler event=\\\"DOMWindowClose\\\">\\n         <![CDATA[\\n           if (!event.isTrusted)\\n\""}