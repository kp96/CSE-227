{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas4f3fb59\""},"diff":"\"4f3fb59 b=395004. p=paul.rouget, r=mfinkle, dtownsend, gavin, a=mconnor. Add enaled property to FUEL Extension object\\ndiff --git a/browser/fuel/public/fuelIApplication.idl b/browser/fuel/public/fuelIApplication.idl\\nindex 79a664b..459978a 100644\\n--- a/browser/fuel/public/fuelIApplication.idl\\n+++ b/browser/fuel/public/fuelIApplication.idl\\n@@ -285,6 +285,11 @@ interface fuelIExtension : nsISupports\\n   readonly attribute AString name;\\n   \\n   /**\\n+   * Check if the extension is currently enabled, or not.\\n+   */\\n+  readonly attribute boolean enabled;\\n+  \\n+  /**\\n    * The version number of the extension.\\n    */\\n   readonly attribute AString version;\\ndiff --git a/browser/fuel/src/fuelApplication.js b/browser/fuel/src/fuelApplication.js\\nindex 8656851..601b21c 100644\\n--- a/browser/fuel/src/fuelApplication.js\\n+++ b/browser/fuel/src/fuelApplication.js\\n@@ -401,6 +401,19 @@ function Extension(aItem) {\\n     this._firstRun = true;\\n   }\\n \\n+  this._enabled = false;\\n+  const PREFIX_ITEM_URI = \\\"urn:mozilla:item:\\\";\\n+  const PREFIX_NS_EM = \\\"http://www.mozilla.org/2004/em-rdf#\\\";\\n+  var rdf = Cc[\\\"@mozilla.org/rdf/rdf-service;1\\\"].getService(Ci.nsIRDFService);\\n+  var itemResource = rdf.GetResource(PREFIX_ITEM_URI + this._item.id);\\n+  if (itemResource) {\\n+    var extmgr = Cc[\\\"@mozilla.org/extensions/manager;1\\\"].getService(Ci.nsIExtensionManager);\\n+    var ds = extmgr.datasource;\\n+    var target = ds.GetTarget(itemResource, rdf.GetResource(PREFIX_NS_EM + \\\"isDisabled\\\"), true);\\n+    if (target && target instanceof Ci.nsIRDFLiteral)\\n+      this._enabled = (target.Value != \\\"true\\\");\\n+  }\\n+\\n   var os = Components.classes[\\\"@mozilla.org/observer-service;1\\\"]\\n                      .getService(Ci.nsIObserverService);\\n   os.addObserver(this, \\\"em-action-requested\\\", false);\\n@@ -449,6 +462,10 @@ Extension.prototype = {\\n     return this._item.name;\\n   },\\n \\n+  get enabled() {\\n+    return this._enabled;\\n+  },\\n+\\n   get version() {\\n     return this._item.version;\\n   },\\ndiff --git a/browser/fuel/test/browser_Extensions.js b/browser/fuel/test/browser_Extensions.js\\nindex d78571d..cbaeec1 100644\\n--- a/browser/fuel/test/browser_Extensions.js\\n+++ b/browser/fuel/test/browser_Extensions.js\\n@@ -22,6 +22,7 @@ function test() {\\n   // The known version number changes too frequently to hardcode in\\n   ok(inspector.version, \\\"Check 'Extension.version' for known extension\\\");\\n   ok(inspector.firstRun, \\\"Check 'Extension.firstRun' for known extension\\\");\\n+  ok(inspector.enabled, \\\"Check 'Extension.enabled' for known extension\\\");\\n   \\n   // test to see if extension find works\\n   is(Application.extensions.all.length, 1, \\\"Check a find for all extensions\\\");\\n\""}