{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5113c8b\""},"diff":"\"5113c8b Bug 396936 - FLAGP_TO_THING bustage from C++, r+a=brendan\\ndiff --git a/js/src/jsgc.c b/js/src/jsgc.c\\nindex cebee5d..2c2bb23 100644\\n--- a/js/src/jsgc.c\\n+++ b/js/src/jsgc.c\\n@@ -336,8 +336,8 @@ static JSBool js_gcUseMmap = JS_FALSE;\\n #define FLAGP_TO_THING(flagp, thingSize)                                      \\\\\\n     (JS_ASSERT(((jsuword) (flagp) & GC_ARENA_MASK) >=                         \\\\\\n                (ARENA_INFO_OFFSET - THINGS_PER_ARENA(thingSize))),            \\\\\\n-     (void *)(((jsuword) (flagp) & ~GC_ARENA_MASK) +                          \\\\\\n-              (thingSize) * FLAGP_TO_INDEX(flagp)))\\n+     (JSGCThing *)(((jsuword) (flagp) & ~GC_ARENA_MASK) +                     \\\\\\n+                   (thingSize) * FLAGP_TO_INDEX(flagp)))\\n \\n #ifdef JS_THREADSAFE\\n /*\\n@@ -1445,7 +1445,7 @@ js_NewGCThing(JSContext *cx, uintN flags, size_t nbytes)\\n         }\\n \\n         flagp = THING_FLAGP(a, arenaList->lastCount);\\n-        thing = (JSGCThing *) FLAGP_TO_THING(flagp, nbytes);\\n+        thing = FLAGP_TO_THING(flagp, nbytes);\\n         arenaList->lastCount++;\\n \\n #ifdef JS_THREADSAFE\\n@@ -1466,7 +1466,7 @@ js_NewGCThing(JSContext *cx, uintN flags, size_t nbytes)\\n             --maxFreeThings;\\n \\n             tmpflagp = THING_FLAGP(a, arenaList->lastCount);\\n-            tmpthing = (JSGCThing *) FLAGP_TO_THING(tmpflagp, nbytes);\\n+            tmpthing = FLAGP_TO_THING(tmpflagp, nbytes);\\n             arenaList->lastCount++;\\n             tmpthing->flagp = tmpflagp;\\n             *tmpflagp = GCF_FINAL;    /* signifying that thing is free */\\n@@ -2633,7 +2633,7 @@ restart:\\n                     METER(++arenaList->stats.nthings);\\n                 } else if (!(flags & GCF_FINAL)) {\\n                     /* Call the finalizer with GCF_FINAL ORed into flags. */\\n-                    thing = (JSGCThing *) FLAGP_TO_THING(flagp, thingSize);\\n+                    thing = FLAGP_TO_THING(flagp, thingSize);\\n                     *flagp = (uint8)(flags | GCF_FINAL);\\n                     type = flags & GCF_TYPEMASK;\\n                     switch (type) {\\n\""}