{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas6463d32\""},"diff":"\"6463d32 381812 improved testcase for storage stream behaviour when the stream hasn't been written to r=bsmedberg\\ndiff --git a/xpcom/tests/unit/test_storagestream.js b/xpcom/tests/unit/test_storagestream.js\\nindex 9d73264..e954c74 100644\\n--- a/xpcom/tests/unit/test_storagestream.js\\n+++ b/xpcom/tests/unit/test_storagestream.js\\n@@ -60,6 +60,21 @@ function test1()\\n \\n   var out = ss.getOutputStream(0);\\n   var inp2 = ss.newInputStream(0);\\n+  do_check_eq(inp2.available(), 0);\\n+  do_check_true(inp2.isNonBlocking());\\n+\\n+  var sis =\\n+      Cc[\\\"@mozilla.org/scriptableinputstream;1\\\"]\\n+        .createInstance(Ci.nsIScriptableInputStream);\\n+  sis.init(inp2);\\n+\\n+  var threw = false;\\n+  try {\\n+    sis.read(1);\\n+  } catch (ex if ex.result == Cr.NS_BASE_STREAM_WOULD_BLOCK) {\\n+    threw = true;\\n+  }\\n+  do_check_true(threw);\\n }\\n \\n /**\\n\""}