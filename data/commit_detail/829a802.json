{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas829a802\""},"diff":"\"829a802 Bug 394387.  Only cells with expanders should have STATE_EXPANDABLE and expand/collapse actions. r=evan.yan, a=dsicore\\ndiff --git a/accessible/src/xul/nsXULTreeAccessible.cpp b/accessible/src/xul/nsXULTreeAccessible.cpp\\nindex 09df9c9..b20af1d 100644\\n--- a/accessible/src/xul/nsXULTreeAccessible.cpp\\n+++ b/accessible/src/xul/nsXULTreeAccessible.cpp\\n@@ -634,18 +634,11 @@ nsXULTreeitemAccessible::GetState(PRUint32 *aState, PRUint32 *aExtraState)\\n             nsIAccessibleStates::STATE_SELECTABLE;\\n \\n   // get expanded/collapsed state\\n-  PRBool isContainer, isContainerOpen, isContainerEmpty;\\n-  mTreeView->IsContainer(mRow, &isContainer);\\n-  if (isContainer) {\\n-    mTreeView->IsContainerEmpty(mRow, &isContainerEmpty);\\n-    if (!isContainerEmpty) {\\n-      if (aExtraState)\\n-        *aExtraState |= nsIAccessibleStates::EXT_STATE_EXPANDABLE;\\n-\\n-      mTreeView->IsContainerOpen(mRow, &isContainerOpen);\\n-      *aState |= isContainerOpen? PRUint32(nsIAccessibleStates::STATE_EXPANDED):\\n-                                  PRUint32(nsIAccessibleStates::STATE_COLLAPSED);\\n-    }\\n+  if (IsExpandable()) {\\n+    PRBool isContainerOpen;\\n+    mTreeView->IsContainerOpen(mRow, &isContainerOpen);\\n+    *aState |= isContainerOpen? PRUint32(nsIAccessibleStates::STATE_EXPANDED):\\n+                                PRUint32(nsIAccessibleStates::STATE_COLLAPSED);\\n   }\\n \\n   // get selected state\\n@@ -689,17 +682,31 @@ nsXULTreeitemAccessible::GetState(PRUint32 *aState, PRUint32 *aExtraState)\\n   return NS_OK;\\n }\\n \\n-// \\\"activate\\\" (xor \\\"cycle\\\") action is available for all treeitems\\n-// \\\"expand/collapse\\\" action is avaible for treeitem which is container\\n-NS_IMETHODIMP nsXULTreeitemAccessible::GetNumActions(PRUint8 *_retval)\\n+PRBool nsXULTreeitemAccessible::IsExpandable()\\n {\\n-  NS_ENSURE_TRUE(mTree && mTreeView, NS_ERROR_FAILURE);\\n+  NS_ENSURE_TRUE(mTree && mTreeView && mColumn, NS_ERROR_FAILURE);\\n   PRBool isContainer;\\n   mTreeView->IsContainer(mRow, &isContainer);\\n-  if (isContainer)\\n-    *_retval = 2;\\n-  else\\n-    *_retval = 1;\\n+  if (isContainer) {\\n+    PRBool isEmpty; \\n+    mTreeView->IsContainerEmpty(mRow, &isEmpty);\\n+    if (!isEmpty) {\\n+      PRBool isPrimary;\\n+      mColumn->GetPrimary(&isPrimary);\\n+      if (isPrimary) {\\n+        return PR_TRUE;\\n+      }\\n+    }\\n+  }\\n+  return PR_FALSE;\\n+}\\n+\\n+// \\\"activate\\\" (xor \\\"cycle\\\") action is available for all treeitems\\n+// \\\"expand/collapse\\\" action is avaible for treeitem which is container\\n+NS_IMETHODIMP nsXULTreeitemAccessible::GetNumActions(PRUint8 *aNumActions)\\n+{\\n+  NS_ENSURE_TRUE(mTree && mTreeView && mColumn, NS_ERROR_FAILURE);\\n+  *aNumActions = IsExpandable() ? 2 : 1;\\n \\n   return NS_OK;\\n }\\n@@ -720,17 +727,13 @@ NS_IMETHODIMP nsXULTreeitemAccessible::GetActionName(PRUint8 aIndex, nsAString&\\n     }\\n     return NS_OK;\\n   }\\n-  else if (aIndex == eAction_Expand) {\\n-    PRBool isContainer, isContainerOpen;\\n-    mTreeView->IsContainer(mRow, &isContainer);\\n-    if (isContainer) {\\n-      mTreeView->IsContainerOpen(mRow, &isContainerOpen);\\n-      if (isContainerOpen)\\n-        aName.AssignLiteral(\\\"collapse\\\");\\n-      else\\n-        aName.AssignLiteral(\\\"expand\\\");\\n-    }\\n-\\n+  else if (aIndex == eAction_Expand && IsExpandable()) {\\n+    PRBool isContainerOpen;\\n+    mTreeView->IsContainerOpen(mRow, &isContainerOpen);\\n+    if (isContainerOpen)\\n+      aName.AssignLiteral(\\\"collapse\\\");\\n+    else\\n+      aName.AssignLiteral(\\\"expand\\\");\\n     return NS_OK;\\n   }\\n \\n@@ -920,11 +923,8 @@ NS_IMETHODIMP nsXULTreeitemAccessible::DoAction(PRUint8 index)\\n     }\\n     return rv;\\n   }\\n-  else if (index == eAction_Expand) {\\n-    PRBool isContainer;\\n-    mTreeView->IsContainer(mRow, &isContainer);\\n-    if (isContainer)\\n-      return mTreeView->ToggleOpenState(mRow);\\n+  else if (index == eAction_Expand && IsExpandable()) {\\n+    return mTreeView->ToggleOpenState(mRow);\\n   }\\n \\n   return NS_ERROR_INVALID_ARG;\\ndiff --git a/accessible/src/xul/nsXULTreeAccessible.h b/accessible/src/xul/nsXULTreeAccessible.h\\nindex f510228..a0e39f8 100644\\n--- a/accessible/src/xul/nsXULTreeAccessible.h\\n+++ b/accessible/src/xul/nsXULTreeAccessible.h\\n@@ -128,6 +128,7 @@ public:\\n   NS_IMETHOD GetUniqueID(void **aUniqueID);\\n \\n protected:\\n+  PRBool IsExpandable();\\n   nsCOMPtr<nsITreeBoxObject> mTree;\\n   nsCOMPtr<nsITreeView> mTreeView;\\n   PRInt32 mRow;\\n\""}