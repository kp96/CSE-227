{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basdc448b0\""},"diff":"\"dc448b0 Bug 390234. Coalesce glyph runs after sorting them, gets them into the canonical form. Also add debug code to help track down textrun-cache related crashers. r=vlad\\ndiff --git a/gfx/thebes/public/gfxFont.h b/gfx/thebes/public/gfxFont.h\\nindex 3cafe0d..d71ba6c 100644\\n--- a/gfx/thebes/public/gfxFont.h\\n+++ b/gfx/thebes/public/gfxFont.h\\n@@ -1113,6 +1113,11 @@ public:\\n         PRPackedBool mPartIsEndOfLigature;\\n     };\\n \\n+#ifdef DEBUG\\n+    // number of entries referencing this textrun in the gfxTextRunWordCache\\n+    PRUint32 mCachedWords;\\n+#endif\\n+\\n private:\\n     // **** general helpers **** \\n \\ndiff --git a/gfx/thebes/src/gfxFont.cpp b/gfx/thebes/src/gfxFont.cpp\\nindex 606c5d2..246572f 100644\\n--- a/gfx/thebes/src/gfxFont.cpp\\n+++ b/gfx/thebes/src/gfxFont.cpp\\n@@ -1489,8 +1489,23 @@ gfxTextRun::AddGlyphRun(gfxFont *aFont, PRUint32 aUTF16Offset, PRBool aForceNewR\\n void\\n gfxTextRun::SortGlyphRuns()\\n {\\n+    if (mGlyphRuns.Length() <= 1)\\n+        return;\\n+\\n+    nsTArray<GlyphRun> runs(mGlyphRuns);\\n     GlyphRunOffsetComparator comp;\\n-    mGlyphRuns.Sort(comp);\\n+    runs.Sort(comp);\\n+\\n+    // Now copy back, coalescing adjacent glyph runs that have the same font\\n+    mGlyphRuns.Clear();\\n+    PRUint32 i;\\n+    for (i = 0; i < runs.Length(); ++i) {\\n+        // a GlyphRun with the same font as the previous GlyphRun can just\\n+        // be skipped; the last GlyphRun will cover its character range.\\n+        if (i == 0 || runs[i].mFont != runs[i - 1].mFont) {\\n+            mGlyphRuns.AppendElement(runs[i]);\\n+        }\\n+    }\\n }\\n \\n PRUint32\\n@@ -1653,8 +1668,15 @@ gfxTextRun::CopyGlyphDataFrom(gfxTextRun *aSource, PRUint32 aStart,\\n     }\\n \\n     GlyphRunIterator iter(aSource, aStart, aLength);\\n+#ifdef DEBUG\\n+    gfxFont *lastFont = nsnull;\\n+#endif\\n     while (iter.NextRun()) {\\n         gfxFont *font = iter.GetGlyphRun()->mFont;\\n+        NS_ASSERTION(font != lastFont, \\\"Glyphruns not coalesced?\\\");\\n+#ifdef DEBUG\\n+        lastFont = font;\\n+#endif\\n         PRUint32 start = iter.GetStringStart();\\n         PRUint32 end = iter.GetStringEnd();\\n         NS_ASSERTION(aSource->IsClusterStart(start),\\ndiff --git a/gfx/thebes/src/gfxTextRunWordCache.cpp b/gfx/thebes/src/gfxTextRunWordCache.cpp\\nindex 9786ef0..b5c49f0 100644\\n--- a/gfx/thebes/src/gfxTextRunWordCache.cpp\\n+++ b/gfx/thebes/src/gfxTextRunWordCache.cpp\\n@@ -243,6 +243,9 @@ TextRunWordCache::LookupWord(gfxTextRun *aTextRun, gfxFont *aFirstFont,\\n     if (fontEntry->mTextRun) {\\n         existingEntry = fontEntry;\\n     } else {\\n+#ifdef DEBUG\\n+        ++aTextRun->mCachedWords;\\n+#endif\\n         PR_LOG(gWordCacheLog, PR_LOG_DEBUG, (\\\"%p(%d-%d,%d): added using font\\\", aTextRun, aStart, aEnd - aStart, aHash));\\n         key.mFontOrGroup = aTextRun->GetFontGroup();\\n         CacheHashEntry *groupEntry = mCache.GetEntry(key);\\n@@ -368,7 +371,10 @@ TextRunWordCache::MakeTextRun(const PRUnichar *aText, PRUint32 aLength,\\n     nsAutoPtr<gfxTextRun> textRun;\\n     textRun = new gfxTextRun(aParams, aText, aLength, aFontGroup, aFlags);\\n     if (!textRun || !textRun->GetCharacterGlyphs())\\n-        return nsnull;   \\n+        return nsnull;\\n+#ifdef DEBUG\\n+    textRun->mCachedWords = 0;\\n+#endif\\n \\n     gfxFont *font = aFontGroup->GetFontAt(0);\\n     nsresult rv = textRun->AddGlyphRun(font, 0);\\n@@ -442,6 +448,9 @@ TextRunWordCache::MakeTextRun(const PRUint8 *aText, PRUint32 aLength,\\n     textRun = new gfxTextRun(aParams, aText, aLength, aFontGroup, aFlags);\\n     if (!textRun || !textRun->GetCharacterGlyphs())\\n         return nsnull;\\n+#ifdef DEBUG\\n+    textRun->mCachedWords = 0;\\n+#endif\\n \\n     gfxFont *font = aFontGroup->GetFontAt(0);\\n     nsresult rv = textRun->AddGlyphRun(font, 0);\\n@@ -519,6 +528,9 @@ TextRunWordCache::RemoveWord(gfxTextRun *aTextRun, PRUint32 aStart,\\n         // XXX would like to use RawRemoveEntry here plus some extra method\\n         // that conditionally shrinks the hashtable\\n         mCache.RemoveEntry(key);\\n+#ifdef DEBUG\\n+        --aTextRun->mCachedWords;\\n+#endif\\n         PR_LOG(gWordCacheLog, PR_LOG_DEBUG, (\\\"%p(%d-%d,%d): removed using %s\\\",\\n             aTextRun, aStart, length, aHash,\\n             key.mFontOrGroup == aTextRun->GetFontGroup() ? \\\"fontgroup\\\" : \\\"font\\\"));\\n@@ -543,6 +555,10 @@ TextRunWordCache::RemoveTextRun(gfxTextRun *aTextRun)\\n         }\\n     }\\n     RemoveWord(aTextRun, wordStart, i, hash);\\n+#ifdef DEBUG\\n+    NS_ASSERTION(aTextRun->mCachedWords == 0,\\n+                 \\\"Textrun was not completely removed from the cache!\\\");\\n+#endif\\n }\\n \\n static PRBool\\n\""}