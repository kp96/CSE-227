{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas0b1b6c6\""},"diff":"\"0b1b6c6 Bug 390180: Full page zoom interacts badly with bfcache. r+sr+a=roc\\ndiff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp\\nindex a8d1ceb..cb0d16d 100644\\n--- a/docshell/base/nsDocShell.cpp\\n+++ b/docshell/base/nsDocShell.cpp\\n@@ -5433,9 +5433,12 @@ nsDocShell::RestoreFromHistory()\\n \\n     nsCOMPtr<nsIMarkupDocumentViewer> oldMUDV(do_QueryInterface(mContentViewer));\\n     nsCOMPtr<nsIMarkupDocumentViewer> newMUDV(do_QueryInterface(viewer));\\n-    float zoom = 1.0;\\n-    if (oldMUDV && newMUDV)\\n-        oldMUDV->GetTextZoom(&zoom);\\n+    float textZoom = 1.0f;\\n+    float pageZoom = 1.0f;\\n+    if (oldMUDV && newMUDV) {\\n+        oldMUDV->GetTextZoom(&textZoom);\\n+        oldMUDV->GetFullZoom(&pageZoom);\\n+    }\\n \\n     // Protect against mLSHE going away via a load triggered from\\n     // pagehide or unload.\\n@@ -5614,8 +5617,10 @@ nsDocShell::RestoreFromHistory()\\n         FavorPerformanceHint(PR_TRUE, NS_EVENT_STARVATION_DELAY_HINT);\\n \\n \\n-    if (oldMUDV && newMUDV)\\n-        newMUDV->SetTextZoom(zoom);\\n+    if (oldMUDV && newMUDV) {\\n+        newMUDV->SetTextZoom(textZoom);\\n+        newMUDV->SetFullZoom(pageZoom);\\n+    }\\n \\n     nsCOMPtr<nsIDocument> document = do_QueryInterface(domDoc);\\n     if (document) {\\n@@ -5947,6 +5952,7 @@ nsDocShell::SetupNewViewer(nsIContentViewer * aNewViewer)\\n     PRInt32 hintCharsetSource;\\n     nsCAutoString prevDocCharset;\\n     float textZoom;\\n+    float pageZoom;\\n     PRBool styleDisabled;\\n     // |newMUDV| also serves as a flag to set the data from the above vars\\n     nsCOMPtr<nsIMarkupDocumentViewer> newMUDV;\\n@@ -5997,6 +6003,9 @@ nsDocShell::SetupNewViewer(nsIContentViewer * aNewViewer)\\n                                   GetTextZoom(&textZoom),\\n                                   NS_ERROR_FAILURE);\\n                 NS_ENSURE_SUCCESS(oldMUDV->\\n+                                  GetFullZoom(&pageZoom),\\n+                                  NS_ERROR_FAILURE);\\n+                NS_ENSURE_SUCCESS(oldMUDV->\\n                                   GetAuthorStyleDisabled(&styleDisabled),\\n                                   NS_ERROR_FAILURE);\\n                 NS_ENSURE_SUCCESS(oldMUDV->\\n@@ -6130,6 +6139,8 @@ nsDocShell::SetupNewViewer(nsIContentViewer * aNewViewer)\\n                           NS_ERROR_FAILURE);\\n         NS_ENSURE_SUCCESS(newMUDV->SetTextZoom(textZoom),\\n                           NS_ERROR_FAILURE);\\n+        NS_ENSURE_SUCCESS(newMUDV->SetFullZoom(pageZoom),\\n+                          NS_ERROR_FAILURE);\\n         NS_ENSURE_SUCCESS(newMUDV->SetAuthorStyleDisabled(styleDisabled),\\n                           NS_ERROR_FAILURE);\\n     }\\ndiff --git a/layout/base/nsDocumentViewer.cpp b/layout/base/nsDocumentViewer.cpp\\nindex 5904f02..4ca42f4 100644\\n--- a/layout/base/nsDocumentViewer.cpp\\n+++ b/layout/base/nsDocumentViewer.cpp\\n@@ -412,6 +412,7 @@ protected:\\n   nsIWidget* mParentWidget;          // purposely won't be ref counted\\n \\n   float mTextZoom;      // Text zoom, defaults to 1.0\\n+  float mPageZoom;\\n \\n   PRInt16 mNumURLStarts;\\n   PRInt16 mDestroyRefCount;    // a second \\\"refcount\\\" for the document viewer's \\\"destroy\\\"\\n@@ -507,7 +508,7 @@ void DocumentViewerImpl::PrepareToStartLoad()\\n \\n // Note: operator new zeros our memory, so no need to init things to null.\\n DocumentViewerImpl::DocumentViewerImpl()\\n-  : mTextZoom(1.0),\\n+  : mTextZoom(1.0), mPageZoom(1.0),\\n     mIsSticky(PR_TRUE),\\n     mHintCharsetSource(kCharsetUninitialized)\\n {\\n@@ -682,12 +683,13 @@ DocumentViewerImpl::InitPresentationStuff(PRBool aDoInitialReflow)\\n   nsRect bounds;\\n   mWindow->GetBounds(bounds);\\n \\n-  nscoord width = mPresContext->DevPixelsToAppUnits(bounds.width);\\n-  nscoord height = mPresContext->DevPixelsToAppUnits(bounds.height);\\n+  nscoord width = mPresContext->DeviceContext()->UnscaledAppUnitsPerDevPixel() * bounds.width;\\n+  nscoord height = mPresContext->DeviceContext()->UnscaledAppUnitsPerDevPixel() * bounds.height;\\n \\n   mViewManager->DisableRefresh();\\n   mViewManager->SetWindowDimensions(width, height);\\n   mPresContext->SetTextZoom(mTextZoom);\\n+  mPresContext->SetFullZoom(mPageZoom);\\n \\n   // Setup default view manager background color\\n \\n@@ -2716,6 +2718,7 @@ DocumentViewerImpl::GetTextZoom(float* aTextZoom)\\n NS_IMETHODIMP\\n DocumentViewerImpl::SetFullZoom(float aFullZoom)\\n {\\n+  mPageZoom = aFullZoom;\\n   struct ZoomInfo ZoomInfo = { aFullZoom };\\n   CallChildren(SetChildFullZoom, &ZoomInfo);\\n   if (mPresContext) {\\n@@ -2729,7 +2732,9 @@ NS_IMETHODIMP\\n DocumentViewerImpl::GetFullZoom(float* aFullZoom)\\n {\\n   NS_ENSURE_ARG_POINTER(aFullZoom);\\n-  *aFullZoom = mPresContext ? mPresContext->GetFullZoom() : 1.0;\\n+  NS_ASSERTION(!mPresContext || mPresContext->GetFullZoom() == mPageZoom, \\n+               \\\"mPresContext->GetFullZoom() != mPageZoom\\\");\\n+  *aFullZoom = mPresContext ? mPresContext->GetFullZoom() : 1.0f;\\n   return NS_OK;\\n }\\n \\n\""}