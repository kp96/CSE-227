{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas27877b1\""},"diff":"\"27877b1 Bug 380448 - simply SVG frame initialization.  r=longsonr, sr=roc, a=vlad\\ndiff --git a/layout/svg/base/src/nsSVGClipPathFrame.cpp b/layout/svg/base/src/nsSVGClipPathFrame.cpp\\nindex f3b864a..6868156 100644\\n--- a/layout/svg/base/src/nsSVGClipPathFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGClipPathFrame.cpp\\n@@ -74,19 +74,6 @@ NS_GetSVGClipPathElement(nsIURI *aURI, nsIContent *aContent)\\n   return nsnull;\\n }\\n \\n-NS_IMETHODIMP\\n-nsSVGClipPathFrame::InitSVG()\\n-{\\n-  nsresult rv = nsSVGClipPathFrameBase::InitSVG();\\n-  if (NS_FAILED(rv))\\n-    return rv;\\n-\\n-  mClipParentMatrix = NULL;\\n-  mInUse = PR_FALSE;\\n-\\n-  return NS_OK;\\n-}\\n-\\n nsresult\\n nsSVGClipPathFrame::ClipPaint(nsSVGRenderState* aContext,\\n                               nsISVGChildFrame* aParent,\\ndiff --git a/layout/svg/base/src/nsSVGClipPathFrame.h b/layout/svg/base/src/nsSVGClipPathFrame.h\\nindex 787bd78..6c25b1a 100644\\n--- a/layout/svg/base/src/nsSVGClipPathFrame.h\\n+++ b/layout/svg/base/src/nsSVGClipPathFrame.h\\n@@ -46,9 +46,10 @@ class nsSVGClipPathFrame : public nsSVGClipPathFrameBase\\n   friend nsIFrame*\\n   NS_NewSVGClipPathFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext);\\n \\n-  NS_IMETHOD InitSVG();\\n-\\n-  nsSVGClipPathFrame(nsStyleContext* aContext) : nsSVGClipPathFrameBase(aContext) {}\\n+  nsSVGClipPathFrame(nsStyleContext* aContext) :\\n+    nsSVGClipPathFrameBase(aContext),\\n+    mClipParentMatrix(nsnull),\\n+    mInUse(PR_FALSE) {}\\n \\n  public:\\n   // nsSVGClipPathFrame methods:\\ndiff --git a/layout/svg/base/src/nsSVGContainerFrame.cpp b/layout/svg/base/src/nsSVGContainerFrame.cpp\\nindex 0a2cf60..b1dcb81 100644\\n--- a/layout/svg/base/src/nsSVGContainerFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGContainerFrame.cpp\\n@@ -84,27 +84,23 @@ nsSVGContainerFrame::RemoveFrame(nsIAtom* aListName,\\n }\\n \\n NS_IMETHODIMP\\n-nsSVGContainerFrame::InitSVG()\\n-{\\n-  AddStateBits(NS_STATE_SVG_NONDISPLAY_CHILD);\\n-  return NS_OK;\\n-}\\n-\\n-NS_IMETHODIMP\\n nsSVGContainerFrame::Init(nsIContent* aContent,\\n-\\t\\t\\t  nsIFrame* aParent,\\n-\\t\\t\\t  nsIFrame* aPrevInFlow)\\n+                          nsIFrame* aParent,\\n+                          nsIFrame* aPrevInFlow)\\n {\\n+  AddStateBits(NS_STATE_SVG_NONDISPLAY_CHILD);\\n   nsresult rv = nsSVGContainerFrameBase::Init(aContent, aParent, aPrevInFlow);\\n-  InitSVG();\\n   return rv;\\n }\\n \\n NS_IMETHODIMP\\n-nsSVGDisplayContainerFrame::InitSVG()\\n+nsSVGDisplayContainerFrame::Init(nsIContent* aContent,\\n+                                 nsIFrame* aParent,\\n+                                 nsIFrame* aPrevInFlow)\\n {\\n-  AddStateBits(mParent->GetStateBits() & NS_STATE_SVG_NONDISPLAY_CHILD);\\n-  return NS_OK;\\n+  AddStateBits(aParent->GetStateBits() & NS_STATE_SVG_NONDISPLAY_CHILD);\\n+  nsresult rv = nsSVGContainerFrameBase::Init(aContent, aParent, aPrevInFlow);\\n+  return rv;\\n }\\n \\n void\\ndiff --git a/layout/svg/base/src/nsSVGContainerFrame.h b/layout/svg/base/src/nsSVGContainerFrame.h\\nindex 915289a..a593a94 100644\\n--- a/layout/svg/base/src/nsSVGContainerFrame.h\\n+++ b/layout/svg/base/src/nsSVGContainerFrame.h\\n@@ -56,8 +56,6 @@ protected:\\n     return nsSVGContainerFrameBase::IsFrameOfType(aFlags & ~(nsIFrame::eSVG));\\n   }\\n \\n-  NS_IMETHOD InitSVG();\\n-  \\n public:\\n   nsSVGContainerFrame(nsStyleContext* aContext) :\\n     nsSVGContainerFrameBase(aContext) {}\\n@@ -80,9 +78,6 @@ public:\\n class nsSVGDisplayContainerFrame : public nsSVGContainerFrame,\\n                                    public nsISVGChildFrame\\n {\\n-protected:\\n-  NS_IMETHOD InitSVG();\\n-\\n public:\\n   nsSVGDisplayContainerFrame(nsStyleContext* aContext) :\\n     nsSVGContainerFrame(aContext) {}\\n@@ -101,6 +96,9 @@ public:\\n                           nsIFrame*       aFrameList);\\n   NS_IMETHOD RemoveFrame(nsIAtom*        aListName,\\n                          nsIFrame*       aOldFrame);\\n+  NS_IMETHOD Init(nsIContent*      aContent,\\n+                  nsIFrame*        aParent,\\n+                  nsIFrame*        aPrevInFlow);\\n \\n   // nsISVGChildFrame interface:\\n   NS_IMETHOD PaintSVG(nsSVGRenderState* aContext, nsRect *aDirtyRect);\\ndiff --git a/layout/svg/base/src/nsSVGFilterFrame.cpp b/layout/svg/base/src/nsSVGFilterFrame.cpp\\nindex b65c211..0026c3f 100644\\n--- a/layout/svg/base/src/nsSVGFilterFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGFilterFrame.cpp\\n@@ -68,19 +68,6 @@ NS_GetSVGFilterElement(nsIURI *aURI, nsIContent *aContent)\\n   return nsnull;\\n }\\n \\n-NS_IMETHODIMP\\n-nsSVGFilterFrame::InitSVG()\\n-{\\n-  nsresult rv = nsSVGFilterFrameBase::InitSVG();\\n-  if (NS_FAILED(rv))\\n-    return rv;\\n-\\n-  nsCOMPtr<nsIDOMSVGFilterElement> filter = do_QueryInterface(mContent);\\n-  NS_ASSERTION(filter, \\\"wrong content element\\\");\\n-\\n-  return NS_OK;\\n-}\\n-\\n void\\n nsSVGFilterFrame::FilterFailCleanup(nsSVGRenderState *aContext,\\n                                     nsISVGChildFrame *aTarget)\\ndiff --git a/layout/svg/base/src/nsSVGFilterFrame.h b/layout/svg/base/src/nsSVGFilterFrame.h\\nindex e2af51f..b03fe27 100644\\n--- a/layout/svg/base/src/nsSVGFilterFrame.h\\n+++ b/layout/svg/base/src/nsSVGFilterFrame.h\\n@@ -47,9 +47,6 @@ class nsSVGFilterFrame : public nsSVGFilterFrameBase\\n   friend nsIFrame*\\n   NS_NewSVGFilterFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext);\\n \\n-protected:\\n-  NS_IMETHOD InitSVG();\\n-\\n public:\\n   nsSVGFilterFrame(nsStyleContext* aContext) : nsSVGFilterFrameBase(aContext) {}\\n \\ndiff --git a/layout/svg/base/src/nsSVGGeometryFrame.cpp b/layout/svg/base/src/nsSVGGeometryFrame.cpp\\nindex 836b4eb..48426b3 100644\\n--- a/layout/svg/base/src/nsSVGGeometryFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGGeometryFrame.cpp\\n@@ -61,29 +61,13 @@ nsSVGGeometryFrame::Destroy()\\n }\\n \\n NS_IMETHODIMP\\n-nsSVGGeometryFrame::InitSVG()\\n-{\\n-  AddStateBits(mParent->GetStateBits() & NS_STATE_SVG_NONDISPLAY_CHILD);\\n-  return NS_OK;\\n-}\\n-\\n-NS_IMETHODIMP\\n nsSVGGeometryFrame::Init(nsIContent* aContent,\\n                          nsIFrame* aParent,\\n                          nsIFrame* aPrevInFlow)\\n {\\n-  mContent = aContent;\\n-  NS_IF_ADDREF(mContent);\\n-  mParent = aParent;\\n-\\n-  if (mContent) {\\n-    mContent->SetMayHaveFrame(PR_TRUE);\\n-  }\\n-\\n-  InitSVG();\\n-  DidSetStyleContext();\\n-\\n-  return NS_OK;\\n+  AddStateBits(aParent->GetStateBits() & NS_STATE_SVG_NONDISPLAY_CHILD);\\n+  nsresult rv = nsSVGGeometryFrameBase::Init(aContent, aParent, aPrevInFlow);\\n+  return rv;\\n }\\n \\n NS_IMETHODIMP\\ndiff --git a/layout/svg/base/src/nsSVGGeometryFrame.h b/layout/svg/base/src/nsSVGGeometryFrame.h\\nindex f856137..23a5eb6 100644\\n--- a/layout/svg/base/src/nsSVGGeometryFrame.h\\n+++ b/layout/svg/base/src/nsSVGGeometryFrame.h\\n@@ -57,7 +57,6 @@ class nsSVGGeometryFrame : public nsSVGGeometryFrameBase,\\n {\\n protected:\\n   nsSVGGeometryFrame(nsStyleContext *aContext) : nsSVGGeometryFrameBase(aContext) {}\\n-  NS_IMETHOD InitSVG();\\n \\n public:\\n   // nsIFrame interface:\\ndiff --git a/layout/svg/base/src/nsSVGImageFrame.cpp b/layout/svg/base/src/nsSVGImageFrame.cpp\\nindex e285c35..7e6f239 100644\\n--- a/layout/svg/base/src/nsSVGImageFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGImageFrame.cpp\\n@@ -82,7 +82,6 @@ class nsSVGImageFrame : public nsSVGPathGeometryFrame\\n protected:\\n   nsSVGImageFrame(nsStyleContext* aContext) : nsSVGPathGeometryFrame(aContext) {}\\n   virtual ~nsSVGImageFrame();\\n-  NS_IMETHOD InitSVG();\\n \\n public:\\n   // nsISVGChildFrame interface:\\n@@ -101,6 +100,9 @@ public:\\n   NS_IMETHOD  AttributeChanged(PRInt32         aNameSpaceID,\\n                                nsIAtom*        aAttribute,\\n                                PRInt32         aModType);\\n+  NS_IMETHOD Init(nsIContent*      aContent,\\n+                  nsIFrame*        aParent,\\n+                  nsIFrame*        aPrevInFlow);\\n \\n   /**\\n    * Get the \\\"type\\\" of the frame\\n@@ -155,9 +157,11 @@ nsSVGImageFrame::~nsSVGImageFrame()\\n }\\n \\n NS_IMETHODIMP\\n-nsSVGImageFrame::InitSVG()\\n+nsSVGImageFrame::Init(nsIContent* aContent,\\n+                      nsIFrame* aParent,\\n+                      nsIFrame* aPrevInFlow)\\n {\\n-  nsresult rv = nsSVGPathGeometryFrame::InitSVG();\\n+  nsresult rv = nsSVGPathGeometryFrame::Init(aContent, aParent, aPrevInFlow);\\n   if (NS_FAILED(rv)) return rv;\\n   \\n   nsCOMPtr<nsIDOMSVGImageElement> Rect = do_QueryInterface(mContent);\\ndiff --git a/layout/svg/base/src/nsSVGMarkerFrame.cpp b/layout/svg/base/src/nsSVGMarkerFrame.cpp\\nindex 1e1046d..7d7f814 100644\\n--- a/layout/svg/base/src/nsSVGMarkerFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGMarkerFrame.cpp\\n@@ -63,21 +63,6 @@ NS_GetSVGMarkerElement(nsIURI *aURI, nsIContent *aContent)\\n   return nsnull;\\n }\\n \\n-NS_IMETHODIMP\\n-nsSVGMarkerFrame::InitSVG()\\n-{\\n-  nsresult rv = nsSVGMarkerFrameBase::InitSVG();\\n-  NS_ENSURE_SUCCESS(rv, rv);\\n-\\n-  nsCOMPtr<nsIDOMSVGMarkerElement> marker = do_QueryInterface(mContent);\\n-  NS_ASSERTION(marker, \\\"wrong content element\\\");\\n-\\n-  mMarkedFrame = nsnull;\\n-  mInUse = mInUse2 = PR_FALSE;\\n-\\n-  return NS_OK;\\n-}\\n-\\n //----------------------------------------------------------------------\\n // nsSVGContainerFrame methods:\\n \\ndiff --git a/layout/svg/base/src/nsSVGMarkerFrame.h b/layout/svg/base/src/nsSVGMarkerFrame.h\\nindex a7735f4..0457dad 100644\\n--- a/layout/svg/base/src/nsSVGMarkerFrame.h\\n+++ b/layout/svg/base/src/nsSVGMarkerFrame.h\\n@@ -53,10 +53,12 @@ protected:\\n   friend nsIFrame*\\n   NS_NewSVGMarkerFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext);\\n \\n-  NS_IMETHOD InitSVG();\\n-\\n public:\\n-  nsSVGMarkerFrame(nsStyleContext* aContext) : nsSVGMarkerFrameBase(aContext) {}\\n+  nsSVGMarkerFrame(nsStyleContext* aContext) :\\n+    nsSVGMarkerFrameBase(aContext),\\n+    mMarkedFrame(nsnull),\\n+    mInUse(PR_FALSE),\\n+    mInUse2(PR_FALSE) {}\\n \\n   /**\\n    * Get the \\\"type\\\" of the frame\\ndiff --git a/layout/svg/base/src/nsSVGMaskFrame.cpp b/layout/svg/base/src/nsSVGMaskFrame.cpp\\nindex 3dde6908..8071a9a 100644\\n--- a/layout/svg/base/src/nsSVGMaskFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGMaskFrame.cpp\\n@@ -65,23 +65,6 @@ NS_GetSVGMaskElement(nsIURI *aURI, nsIContent *aContent)\\n   return nsnull;\\n }\\n \\n-NS_IMETHODIMP\\n-nsSVGMaskFrame::InitSVG()\\n-{\\n-  nsresult rv = nsSVGMaskFrameBase::InitSVG();\\n-  if (NS_FAILED(rv))\\n-    return rv;\\n-\\n-  mMaskParentMatrix = nsnull;\\n-  mInUse = PR_FALSE;\\n-\\n-  nsCOMPtr<nsIDOMSVGMaskElement> mask = do_QueryInterface(mContent);\\n-  NS_ASSERTION(mask, \\\"wrong content element\\\");\\n-\\n-  return NS_OK;\\n-}\\n-\\n-\\n already_AddRefed<gfxPattern>\\n nsSVGMaskFrame::ComputeMaskAlpha(nsSVGRenderState *aContext,\\n                                  nsISVGChildFrame* aParent,\\ndiff --git a/layout/svg/base/src/nsSVGMaskFrame.h b/layout/svg/base/src/nsSVGMaskFrame.h\\nindex 88bad7a..ba30288 100644\\n--- a/layout/svg/base/src/nsSVGMaskFrame.h\\n+++ b/layout/svg/base/src/nsSVGMaskFrame.h\\n@@ -49,9 +49,10 @@ class nsSVGMaskFrame : public nsSVGMaskFrameBase\\n   friend nsIFrame*\\n   NS_NewSVGMaskFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext);\\n \\n-  NS_IMETHOD InitSVG();\\n-\\n-  nsSVGMaskFrame(nsStyleContext* aContext) : nsSVGMaskFrameBase(aContext) {}\\n+  nsSVGMaskFrame(nsStyleContext* aContext) :\\n+    nsSVGMaskFrameBase(aContext),\\n+    mMaskParentMatrix(nsnull),\\n+    mInUse(PR_FALSE) {}\\n \\n  public:\\n   // nsSVGMaskFrame method:\\ndiff --git a/layout/svg/base/src/nsSVGOuterSVGFrame.cpp b/layout/svg/base/src/nsSVGOuterSVGFrame.cpp\\nindex f7167d0..28b2194 100644\\n--- a/layout/svg/base/src/nsSVGOuterSVGFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGOuterSVGFrame.cpp\\n@@ -153,8 +153,12 @@ nsSVGOuterSVGFrame::nsSVGOuterSVGFrame(nsStyleContext* aContext)\\n }\\n \\n NS_IMETHODIMP\\n-nsSVGOuterSVGFrame::InitSVG()\\n+nsSVGOuterSVGFrame::Init(nsIContent* aContent,\\n+                         nsIFrame* aParent,\\n+                         nsIFrame* aPrevInFlow)\\n {\\n+  nsresult rv = nsSVGOuterSVGFrameBase::Init(aContent, aParent, aPrevInFlow);\\n+\\n   nsIDocument* doc = mContent->GetCurrentDoc();\\n   if (doc) {\\n     // we only care about our content's zoom and pan values if it's the root element\\n@@ -173,7 +177,7 @@ nsSVGOuterSVGFrame::InitSVG()\\n \\n   AddStateBits(NS_STATE_IS_OUTER_SVG);\\n \\n-  return NS_OK;\\n+  return rv;\\n }\\n \\n //----------------------------------------------------------------------\\ndiff --git a/layout/svg/base/src/nsSVGOuterSVGFrame.h b/layout/svg/base/src/nsSVGOuterSVGFrame.h\\nindex 58bf7a2..007b0a6 100644\\n--- a/layout/svg/base/src/nsSVGOuterSVGFrame.h\\n+++ b/layout/svg/base/src/nsSVGOuterSVGFrame.h\\n@@ -56,7 +56,6 @@ class nsSVGOuterSVGFrame : public nsSVGOuterSVGFrameBase,\\n   NS_NewSVGOuterSVGFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext);\\n protected:\\n   nsSVGOuterSVGFrame(nsStyleContext* aContext);\\n-  NS_IMETHOD InitSVG();\\n \\n    // nsISupports interface:\\n   NS_IMETHOD QueryInterface(const nsIID& aIID, void** aInstancePtr);\\n@@ -88,6 +87,10 @@ public:\\n                               const nsRect&           aDirtyRect,\\n                               const nsDisplayListSet& aLists);\\n \\n+  NS_IMETHOD Init(nsIContent*      aContent,\\n+                  nsIFrame*        aParent,\\n+                  nsIFrame*        aPrevInFlow);\\n+\\n   /**\\n    * Get the \\\"type\\\" of the frame\\n    *\\n\""}