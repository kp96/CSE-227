{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5ef1644\""},"diff":"\"5ef1644 390414 - text-changed:delete event details no longer correct effective, r=aaronlev, sr=bz, a=dsicore\\ndiff --git a/accessible/src/base/nsDocAccessible.cpp b/accessible/src/base/nsDocAccessible.cpp\\nindex 1a02eaa..7bb9596d 100644\\n--- a/accessible/src/base/nsDocAccessible.cpp\\n+++ b/accessible/src/base/nsDocAccessible.cpp\\n@@ -1171,11 +1171,18 @@ void nsDocAccessible::ContentStatesChanged(nsIDocument* aDocument,\\n   nsHTMLSelectOptionAccessible::SelectionChangedIfOption(aContent2);\\n }\\n \\n+void nsDocAccessible::CharacterDataWillChange(nsIDocument *aDocument,\\n+                                              nsIContent* aContent,\\n+                                              CharacterDataChangeInfo* aInfo)\\n+{\\n+  FireTextChangeEventForText(aContent, aInfo, PR_FALSE);\\n+}\\n+\\n void nsDocAccessible::CharacterDataChanged(nsIDocument *aDocument,\\n                                            nsIContent* aContent,\\n                                            CharacterDataChangeInfo* aInfo)\\n {\\n-  FireTextChangedEventOnDOMCharacterDataModified(aContent, aInfo);\\n+  FireTextChangeEventForText(aContent, aInfo, PR_TRUE);\\n }\\n \\n void\\n@@ -1206,8 +1213,9 @@ nsDocAccessible::ParentChainChanged(nsIContent *aContent)\\n }\\n \\n void\\n-nsDocAccessible::FireTextChangedEventOnDOMCharacterDataModified(nsIContent *aContent,\\n-                                                                CharacterDataChangeInfo* aInfo)\\n+nsDocAccessible::FireTextChangeEventForText(nsIContent *aContent,\\n+                                            CharacterDataChangeInfo* aInfo,\\n+                                            PRBool aIsInserted)\\n {\\n   if (!mIsContentLoaded || !mDocument) {\\n     return;\\n@@ -1229,26 +1237,38 @@ nsDocAccessible::FireTextChangedEventOnDOMCharacterDataModified(nsIContent *aCon\\n     return;\\n \\n   PRInt32 start = aInfo->mChangeStart;\\n-  PRUint32 end = aInfo->mChangeEnd;\\n-  PRInt32 length = end - start;\\n-  PRUint32 replaceLen = aInfo->mReplaceLength;\\n \\n   PRInt32 offset = 0;\\n   rv = textAccessible->DOMPointToHypertextOffset(node, start, &offset);\\n   if (NS_FAILED(rv))\\n     return;\\n \\n-  // Text has been removed.\\n+  PRInt32 length = aIsInserted ?\\n+    aInfo->mReplaceLength; // text has been added\\n+    aInfo->mChangeEnd - start : // text has been removed\\n+\\n   if (length > 0) {\\n-    nsCOMPtr<nsIAccessibleTextChangeEvent> event =\\n-      new nsAccTextChangeEvent(accessible, offset, length, PR_FALSE);\\n-    textAccessible->FireAccessibleEvent(event);\\n-  }\\n+    nsCOMPtr<nsIPresShell> shell(do_QueryReferent(mWeakShell));\\n+    if (!shell)\\n+      return;\\n+\\n+    PRUint32 renderedStartOffset, renderedEndOffset;\\n+    nsIFrame* frame = shell->GetPrimaryFrameFor(aContent);\\n+\\n+    rv = textAccessible->ContentToRenderedOffset(frame, start,\\n+                                                 &renderedStartOffset);\\n+    if (NS_FAILED(rv))\\n+      return;\\n+\\n+    rv = textAccessible->ContentToRenderedOffset(frame, start + length,\\n+                                                 &renderedEndOffset);\\n+    if (NS_FAILED(rv))\\n+      return;\\n \\n-  // Text has been added.\\n-  if (replaceLen) {\\n     nsCOMPtr<nsIAccessibleTextChangeEvent> event =\\n-      new nsAccTextChangeEvent(accessible, offset, replaceLen, PR_TRUE);\\n+      new nsAccTextChangeEvent(accessible, offset,\\n+                               renderedEndOffset - renderedStartOffset,\\n+                               aIsInserted, PR_FALSE);\\n     textAccessible->FireAccessibleEvent(event);\\n   }\\n }\\ndiff --git a/accessible/src/base/nsDocAccessible.h b/accessible/src/base/nsDocAccessible.h\\nindex d0a0b4d..c02455b 100644\\n--- a/accessible/src/base/nsDocAccessible.h\\n+++ b/accessible/src/base/nsDocAccessible.h\\n@@ -157,10 +157,17 @@ class nsDocAccessible : public nsHyperTextAccessibleWrap,\\n     void ARIAAttributeChanged(nsIContent* aContent, nsIAtom* aAttribute);\\n \\n     /**\\n-     * Fire text changed event for charackter data changed.\\n+     * Fire text changed event for character data changed. The method is used\\n+     * from nsIMutationObserver methods.\\n+     *\\n+     * @param aContent     the text node holding changed data\\n+     * @param aInfo        info structure describing how the data was changed\\n+     * @param aIsInserted  the flag pointed whether removed or inserted\\n+     *                     characters should be cause of event\\n      */\\n-    void FireTextChangedEventOnDOMCharacterDataModified(nsIContent *aContent,\\n-                                                        CharacterDataChangeInfo* aInfo);\\n+    void FireTextChangeEventForText(nsIContent *aContent,\\n+                                    CharacterDataChangeInfo* aInfo,\\n+                                    PRBool aIsInserted);\\n \\n     /**\\n      * Create a text change event for a changed node\\ndiff --git a/content/base/public/nsIMutationObserver.h b/content/base/public/nsIMutationObserver.h\\nindex e60db1d..1333308 100755\\n--- a/content/base/public/nsIMutationObserver.h\\n+++ b/content/base/public/nsIMutationObserver.h\\n@@ -45,8 +45,8 @@ class nsIDocument;\\n class nsINode;\\n \\n #define NS_IMUTATION_OBSERVER_IID \\\\\\n-{ 0x93542eb8, 0x98e1, 0x46f6, \\\\\\n- { 0xbb, 0xa2, 0x90, 0x54, 0x05, 0xfe, 0xbe, 0xf9 } }\\n+{ 0x32e68316, 0x67d4, 0x44a5, \\\\\\n+ { 0x8d, 0x35, 0xd, 0x39, 0xf, 0xa9, 0xdf, 0x11 } }\\n \\n /**\\n  * Information details about a characterdata change\\n@@ -77,6 +77,22 @@ public:\\n \\n   /**\\n    * Notification that the node value of a data node (text, cdata, pi, comment)\\n+   * will be changed.\\n+   *\\n+   * This notification is not sent when a piece of content is\\n+   * added/removed from the document (the other notifications are used\\n+   * for that).\\n+   *\\n+   * @param aDocument The owner-document of aContent. Can be null.\\n+   * @param aContent  The piece of content that changed. Is never null.\\n+   * @param aInfo     The structure with information details about the change.\\n+   */\\n+  virtual void CharacterDataWillChange(nsIDocument *aDocument,\\n+                                       nsIContent* aContent,\\n+                                       CharacterDataChangeInfo* aInfo) = 0;\\n+\\n+  /**\\n+   * Notification that the node value of a data node (text, cdata, pi, comment)\\n    * has changed.\\n    *\\n    * This notification is not sent when a piece of content is\\n@@ -85,7 +101,7 @@ public:\\n    *\\n    * @param aDocument The owner-document of aContent. Can be null.\\n    * @param aContent  The piece of content that changed. Is never null.\\n-   * @param aAppend   Whether the change was an append\\n+   * @param aInfo     The structure with information details about the change.\\n    */\\n   virtual void CharacterDataChanged(nsIDocument *aDocument,\\n                                     nsIContent* aContent,\\n@@ -194,6 +210,11 @@ public:\\n \\n NS_DEFINE_STATIC_IID_ACCESSOR(nsIMutationObserver, NS_IMUTATION_OBSERVER_IID)\\n \\n+#define NS_DECL_NSIMUTATIONOBSERVER_CHARACTERDATAWILLCHANGE                  \\\\\\n+    virtual void CharacterDataWillChange(nsIDocument* aDocument,             \\\\\\n+                                         nsIContent* aContent,               \\\\\\n+                                         CharacterDataChangeInfo* aInfo);\\n+\\n #define NS_DECL_NSIMUTATIONOBSERVER_CHARACTERDATACHANGED                     \\\\\\n     virtual void CharacterDataChanged(nsIDocument* aDocument,                \\\\\\n                                       nsIContent* aContent,                  \\\\\\n@@ -231,6 +252,7 @@ NS_DEFINE_STATIC_IID_ACCESSOR(nsIMutationObserver, NS_IMUTATION_OBSERVER_IID)\\n     virtual void ParentChainChanged(nsIContent *aContent);\\n \\n #define NS_DECL_NSIMUTATIONOBSERVER                                          \\\\\\n+    NS_DECL_NSIMUTATIONOBSERVER_CHARACTERDATAWILLCHANGE                      \\\\\\n     NS_DECL_NSIMUTATIONOBSERVER_CHARACTERDATACHANGED                         \\\\\\n     NS_DECL_NSIMUTATIONOBSERVER_ATTRIBUTECHANGED                             \\\\\\n     NS_DECL_NSIMUTATIONOBSERVER_CONTENTAPPENDED                              \\\\\\n@@ -247,6 +269,12 @@ _class::NodeWillBeDestroyed(const nsINode* aNode)\\n \\n #define NS_IMPL_NSIMUTATIONOBSERVER_CONTENT(_class)                       \\\\\\n void                                                                      \\\\\\n+_class::CharacterDataWillChange(nsIDocument* aDocument,                   \\\\\\n+                                nsIContent* aContent,                     \\\\\\n+                                CharacterDataChangeInfo* aInfo)           \\\\\\n+{                                                                         \\\\\\n+}                                                                         \\\\\\n+void                                                                      \\\\\\n _class::CharacterDataChanged(nsIDocument* aDocument,                      \\\\\\n                              nsIContent* aContent,                        \\\\\\n                              CharacterDataChangeInfo* aInfo)              \\\\\\ndiff --git a/content/base/src/nsGenericDOMDataNode.cpp b/content/base/src/nsGenericDOMDataNode.cpp\\nindex 5f436ea..5c8c04e 100644\\n--- a/content/base/src/nsGenericDOMDataNode.cpp\\n+++ b/content/base/src/nsGenericDOMDataNode.cpp\\n@@ -423,6 +423,16 @@ nsGenericDOMDataNode::SetTextInternal(PRUint32 aOffset, PRUint32 aCount,\\n     endOffset = textLength;\\n   }\\n \\n+  if (aNotify) {\\n+    CharacterDataChangeInfo info = {\\n+      aOffset == textLength,\\n+      aOffset,\\n+      endOffset,\\n+      aLength\\n+    };\\n+    nsNodeUtils::CharacterDataWillChange(this, &info);\\n+  }\\n+\\n   if (aOffset == 0 && endOffset == textLength) {\\n     // Replacing whole text or old text was empty\\n     mText.SetTo(aBuffer, aLength);\\ndiff --git a/content/base/src/nsNodeUtils.cpp b/content/base/src/nsNodeUtils.cpp\\nindex 8d87100..ec11d40 100755\\n--- a/content/base/src/nsNodeUtils.cpp\\n+++ b/content/base/src/nsNodeUtils.cpp\\n@@ -80,6 +80,15 @@\\n \\n \\n void\\n+nsNodeUtils::CharacterDataWillChange(nsIContent* aContent,\\n+                                     CharacterDataChangeInfo* aInfo)\\n+{\\n+  nsIDocument* doc = aContent->GetOwnerDoc();\\n+  IMPL_MUTATION_NOTIFICATION(CharacterDataWillChange, aContent,\\n+                             (doc, aContent, aInfo));\\n+}\\n+\\n+void\\n nsNodeUtils::CharacterDataChanged(nsIContent* aContent,\\n                                   CharacterDataChangeInfo* aInfo)\\n {\\ndiff --git a/content/base/src/nsNodeUtils.h b/content/base/src/nsNodeUtils.h\\nindex e4b0bd8..4dac9f0 100755\\n--- a/content/base/src/nsNodeUtils.h\\n+++ b/content/base/src/nsNodeUtils.h\\n@@ -56,6 +56,15 @@ class nsNodeUtils\\n {\\n public:\\n   /**\\n+   * Send CharacterDataWillChange notifications to nsIMutationObservers.\\n+   * @param aContent  Node whose data changed\\n+   * @param aInfo     Struct with information details about the change\\n+   * @see nsIMutationObserver::CharacterDataWillChange\\n+   */\\n+  static void CharacterDataWillChange(nsIContent* aContent,\\n+                                      CharacterDataChangeInfo* aInfo);\\n+\\n+  /**\\n    * Send CharacterDataChanged notifications to nsIMutationObservers.\\n    * @param aContent  Node whose data changed\\n    * @param aInfo     Struct with information details about the change\\ndiff --git a/content/events/src/nsXMLEventsManager.cpp b/content/events/src/nsXMLEventsManager.cpp\\nindex 0924f30..6f2340b 100644\\n--- a/content/events/src/nsXMLEventsManager.cpp\\n+++ b/content/events/src/nsXMLEventsManager.cpp\\n@@ -347,6 +347,10 @@ nsXMLEventsManager::EndLoad(nsIDocument* aDocument)\\n   AddListeners(aDocument);\\n }\\n NS_IMPL_NSIDOCUMENTOBSERVER_STATE_STUB(nsXMLEventsManager)\\n+void\\n+nsXMLEventsManager::CharacterDataWillChange(nsIDocument* aDocument,\\n+                                            nsIContent* aContent,\\n+                                            CharacterDataChangeInfo* aInfo) {}\\n void \\n nsXMLEventsManager::CharacterDataChanged(nsIDocument* aDocument,\\n                                          nsIContent* aContent,\\ndiff --git a/content/xbl/src/nsBindingManager.cpp b/content/xbl/src/nsBindingManager.cpp\\nindex eb6cfd1..d76dbb1 100644\\n--- a/content/xbl/src/nsBindingManager.cpp\\n+++ b/content/xbl/src/nsBindingManager.cpp\\n@@ -1182,6 +1182,15 @@ nsBindingManager::RemoveObserver(nsIMutationObserver* aObserver)\\n }\\n \\n void\\n+nsBindingManager::CharacterDataWillChange(nsIDocument* aDocument,\\n+                                          nsIContent* aContent,\\n+                                          CharacterDataChangeInfo* aInfo)\\n+{\\n+  NS_BINDINGMANAGER_NOTIFY_OBSERVERS(CharacterDataWillChange,\\n+                                     (aDocument, aContent, aInfo));\\n+}\\n+\\n+void\\n nsBindingManager::CharacterDataChanged(nsIDocument* aDocument,\\n                                        nsIContent* aContent,\\n                                        CharacterDataChangeInfo* aInfo)\\ndiff --git a/docshell/shistory/src/nsSHEntry.cpp b/docshell/shistory/src/nsSHEntry.cpp\\nindex 2380939..e057c1f 100644\\n--- a/docshell/shistory/src/nsSHEntry.cpp\\n+++ b/docshell/shistory/src/nsSHEntry.cpp\\n@@ -649,6 +649,13 @@ nsSHEntry::NodeWillBeDestroyed(const nsINode* aNode)\\n }\\n \\n void\\n+nsSHEntry::CharacterDataWillChange(nsIDocument* aDocument,\\n+                                   nsIContent* aContent,\\n+                                   CharacterDataChangeInfo* aInfo)\\n+{\\n+}\\n+\\n+void\\n nsSHEntry::CharacterDataChanged(nsIDocument* aDocument,\\n                                 nsIContent* aContent,\\n                                 CharacterDataChangeInfo* aInfo)\\ndiff --git a/widget/src/cocoa/nsMenuBarX.mm b/widget/src/cocoa/nsMenuBarX.mm\\nindex e4365935..01bd2d7 100644\\n--- a/widget/src/cocoa/nsMenuBarX.mm\\n+++ b/widget/src/cocoa/nsMenuBarX.mm\\n@@ -846,6 +846,12 @@ NS_IMETHODIMP nsMenuBarX::Paint()\\n //\\n \\n \\n+nsMenuBarX::CharacterDataWillChange(nsIDocument * aDocument,\\n+                                    nsIContent * aContent,\\n+                                    CharacterDataChangeInfo * aInfo)\\n+{\\n+}\\n+\\n void\\n nsMenuBarX::CharacterDataChanged(nsIDocument * aDocument,\\n                                  nsIContent * aContent,\\n\""}