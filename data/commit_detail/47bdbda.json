{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas47bdbda\""},"diff":"\"47bdbda Copying/Dragging text should be setting URL pasteboard data where appropriate. Patch by Stan Shebs. b=386790 r=josh sr=roc\\ndiff --git a/widget/src/cocoa/nsChildView.mm b/widget/src/cocoa/nsChildView.mm\\nindex 5c1176b..842d33e 100644\\n--- a/widget/src/cocoa/nsChildView.mm\\n+++ b/widget/src/cocoa/nsChildView.mm\\n@@ -1818,6 +1818,8 @@ NSEvent* gLastDragEvent = nil;\\n                                                           NSURLPboardType,\\n                                                           NSFilesPromisePboardType,\\n                                                           kWildcardPboardType,\\n+                                                          kCorePasteboardFlavorType_url,\\n+                                                          kCorePasteboardFlavorType_urln,\\n                                                           nil]];\\n \\n   return self;\\ndiff --git a/widget/src/cocoa/nsClipboard.mm b/widget/src/cocoa/nsClipboard.mm\\nindex 912d1f6..9ec71ca 100644\\n--- a/widget/src/cocoa/nsClipboard.mm\\n+++ b/widget/src/cocoa/nsClipboard.mm\\n@@ -46,6 +46,8 @@\\n #include \\\"nsIImage.h\\\"\\n #include \\\"nsILocalFile.h\\\"\\n #include \\\"nsStringStream.h\\\"\\n+#include \\\"nsDragService.h\\\"\\n+#include \\\"nsEscape.h\\\"\\n \\n // Screenshots use the (undocumented) png pasteboard type.\\n #define IMAGE_PASTEBOARD_TYPES NSTIFFPboardType, @\\\"Apple PNG pasteboard type\\\", nil\\n@@ -469,7 +471,42 @@ nsClipboard::PasteboardDictFromTransferable(nsITransferable* aTransferable)\\n     else if (flavorStr.EqualsLiteral(kFilePromiseMime)) {\\n       [pasteboardOutputDict setObject:[NSArray arrayWithObject:@\\\"\\\"] forKey:NSFilesPromisePboardType];      \\n     }\\n+    else if (flavorStr.EqualsLiteral(kURLMime)) {\\n+      PRUint32 len = 0;\\n+      nsCOMPtr<nsISupports> genericURL;\\n+      rv = aTransferable->GetTransferData(flavorStr, getter_AddRefs(genericURL), &len);\\n+      nsCOMPtr<nsISupportsString> urlObject(do_QueryInterface(genericURL));\\n+\\n+      nsAutoString url;\\n+      urlObject->GetData(url);\\n+\\n+      // A newline embedded in the URL means that the form is actually URL + title.\\n+      PRInt32 newlinePos = url.FindChar(PRUnichar('\\\\n'));\\n+      if (newlinePos >= 0) {\\n+        url.Truncate(newlinePos);\\n+\\n+        nsAutoString urlTitle;\\n+        urlObject->GetData(urlTitle);\\n+        urlTitle.Mid(urlTitle, newlinePos + 1, len - (newlinePos + 1));\\n+\\n+        NSString *nativeTitle = [[NSString alloc] initWithCharacters:urlTitle.get() length:urlTitle.Length()];\\n+        // be nice to Carbon apps, normalize the receiver's contents using Form C.\\n+        [pasteboardOutputDict setObject:[nativeTitle precomposedStringWithCanonicalMapping] forKey:kCorePasteboardFlavorType_urln];\\n+        [nativeTitle release];\\n+      }\\n+\\n+      // The Finder doesn't like getting random binary data aka\\n+      // Unicode, so change it into an escaped URL containing only\\n+      // ASCII.\\n+      nsCAutoString utf8Data = NS_ConvertUTF16toUTF8(url.get(), url.Length());\\n+      nsCAutoString escData;\\n+      NS_EscapeURL(utf8Data.get(), utf8Data.Length(), esc_OnlyNonASCII|esc_AlwaysCopy, escData);\\n \\n+      // printf(\\\"Escaped url is %s, length %d\\\\n\\\", escData.get(), escData.Length());\\n+\\n+      NSString *nativeURL = [NSString stringWithUTF8String:escData.get()];\\n+      [pasteboardOutputDict setObject:nativeURL forKey:kCorePasteboardFlavorType_url];\\n+    }\\n     // If it wasn't a type that we recognize as exportable we don't put it on the system\\n     // clipboard. We'll just access it from our cached transferable when we need it.\\n   }\\ndiff --git a/widget/src/cocoa/nsDragService.h b/widget/src/cocoa/nsDragService.h\\nindex d840b88..5b3285e 100644\\n--- a/widget/src/cocoa/nsDragService.h\\n+++ b/widget/src/cocoa/nsDragService.h\\n@@ -44,6 +44,8 @@\\n #include <Cocoa/Cocoa.h>\\n \\n extern NSString* const kWildcardPboardType;\\n+extern NSString* const kCorePasteboardFlavorType_url;\\n+extern NSString* const kCorePasteboardFlavorType_urln;\\n \\n class nsDragService : public nsBaseDragService\\n {\\ndiff --git a/widget/src/cocoa/nsDragService.mm b/widget/src/cocoa/nsDragService.mm\\nindex c87fea4..683148e 100644\\n--- a/widget/src/cocoa/nsDragService.mm\\n+++ b/widget/src/cocoa/nsDragService.mm\\n@@ -83,6 +83,8 @@ extern NSEvent* gLastDragEvent;\\n nsISupportsArray *gDraggedTransferables = nsnull;\\n \\n NSString* const kWildcardPboardType = @\\\"MozillaWildcard\\\";\\n+NSString* const kCorePasteboardFlavorType_url  = @\\\"CorePasteboardFlavorType 0x75726C20\\\"; // 'url '  url\\n+NSString* const kCorePasteboardFlavorType_urln = @\\\"CorePasteboardFlavorType 0x75726C6E\\\"; // 'urln'  title\\n \\n nsDragService::nsDragService()\\n {\\n@@ -131,7 +133,9 @@ static nsresult SetUpDragClipboard(nsISupportsArray* aTransferableArray)\\n     for (unsigned int i = 0; i < typeCount; i++) {\\n       NSString* currentKey = [types objectAtIndex:i];\\n       id currentValue = [pasteboardOutputDict valueForKey:currentKey];\\n-      if (currentKey == NSStringPboardType) {\\n+      if (currentKey == NSStringPboardType ||\\n+          currentKey == kCorePasteboardFlavorType_url ||\\n+          currentKey == kCorePasteboardFlavorType_urln) {\\n         [dragPBoard setString:currentValue forType:currentKey];\\n       }\\n       else if (currentKey == NSTIFFPboardType) {\\n\""}