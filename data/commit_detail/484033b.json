{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas484033b\""},"diff":"\"484033b Bug 393737 - GTK buttons should have a \\\"default button\\\" style if its the default button p=Michael Ventnor <ventnor.bugzilla@yahoo.com.au> r+sr=roc, a=pavlov\\ndiff --git a/widget/src/gtk2/gtk2drawing.c b/widget/src/gtk2/gtk2drawing.c\\nindex dcd5f07..a471898 100644\\n--- a/widget/src/gtk2/gtk2drawing.c\\n+++ b/widget/src/gtk2/gtk2drawing.c\\n@@ -406,25 +406,8 @@ moz_gtk_button_paint(GdkDrawable* drawable, GdkRectangle* rect,\\n \\n     gtk_widget_set_state(widget, button_state);\\n \\n-    /*\\n-     * XXX fix this code when we have default state working.\\n-    if (state->isDefault) {\\n-        TSOffsetStyleGCs(style, x, y);\\n-        gtk_paint_box(style, drawable, GTK_STATE_NORMAL, GTK_SHADOW_IN,\\n-                      cliprect, widget, \\\"buttondefault\\\", x, y, width, height);\\n-    }\\n-\\n-    if (state->canDefault) {\\n-        x += XTHICKNESS(style);\\n-        y += YTHICKNESS(style);\\n-\\n-        width -= 2 * x + default_spacing;\\n-        height -= 2 * y + default_spacing;\\n-\\n-        x += (1 + default_spacing) / 2;\\n-        y += (1 + default_spacing) / 2;\\n-    }\\n-    */\\n+    if (state->isDefault)\\n+        GTK_WIDGET_SET_FLAGS(widget, GTK_HAS_DEFAULT);\\n \\n     if (!interior_focus && state->focused) {\\n         x += focus_width + focus_pad;\\n@@ -463,6 +446,7 @@ moz_gtk_button_paint(GdkDrawable* drawable, GdkRectangle* rect,\\n                         widget, \\\"button\\\", x, y, width, height);\\n     }\\n \\n+    GTK_WIDGET_UNSET_FLAGS(widget, GTK_HAS_DEFAULT);\\n     return MOZ_GTK_SUCCESS;\\n }\\n \\ndiff --git a/widget/src/gtk2/nsNativeThemeGTK.cpp b/widget/src/gtk2/nsNativeThemeGTK.cpp\\nindex f6a3d69..79c82e2 100644\\n--- a/widget/src/gtk2/nsNativeThemeGTK.cpp\\n+++ b/widget/src/gtk2/nsNativeThemeGTK.cpp\\n@@ -224,7 +224,7 @@ nsNativeThemeGTK::GetGtkWidgetAndState(PRUint8 aWidgetType, nsIFrame* aFrame,\\n       aState->active  = (eventState & NS_EVENT_STATE_ACTIVE) == NS_EVENT_STATE_ACTIVE;\\n       aState->focused = (eventState & NS_EVENT_STATE_FOCUS) == NS_EVENT_STATE_FOCUS;\\n       aState->inHover = (eventState & NS_EVENT_STATE_HOVER) == NS_EVENT_STATE_HOVER;\\n-      aState->isDefault = FALSE; // XXX fix me\\n+      aState->isDefault = IsDefaultButton(aFrame);\\n       aState->canDefault = FALSE; // XXX fix me\\n \\n       if (aFrame && aFrame->GetContent()->IsNodeOfType(nsINode::eXUL)) {\\n@@ -891,6 +891,7 @@ nsNativeThemeGTK::WidgetStateChanged(nsIFrame* aFrame, PRUint8 aWidgetType,\\n         aAttribute == nsWidgetAtoms::selected ||\\n         aAttribute == nsWidgetAtoms::focused ||\\n         aAttribute == nsWidgetAtoms::readonly ||\\n+        aAttribute == nsWidgetAtoms::_default ||\\n         aAttribute == nsWidgetAtoms::mozmenuactive)\\n       *aShouldRepaint = PR_TRUE;\\n   }\\n\""}