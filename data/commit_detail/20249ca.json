{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas20249ca\""},"diff":"\"20249ca Bustage fix for token pasting under gcc. Need to find better solution long-term\\ndiff --git a/accessible/src/base/nsARIAMap.cpp b/accessible/src/base/nsARIAMap.cpp\\nindex d9d8c53..7f0d62c 100644\\n--- a/accessible/src/base/nsARIAMap.cpp\\n+++ b/accessible/src/base/nsARIAMap.cpp\\n@@ -41,11 +41,42 @@\\n #include \\\"nsIAccessibleRole.h\\\"\\n #include \\\"nsIAccessibleStates.h\\\"\\n \\n-#define ARIA_PROPERTY(atom) &nsAccessibilityAtoms::##atom,\\n nsIAtom** nsARIAMap::gAriaAtomPtrsNS[eAria_none] = {\\n-#include \\\"nsARIAPropertyList.h\\\"\\n+  &nsAccessibilityAtoms::activedescendant,\\n+  &nsAccessibilityAtoms::atomic,\\n+  &nsAccessibilityAtoms::autocomplete,\\n+  &nsAccessibilityAtoms::busy,\\n+  &nsAccessibilityAtoms::channel,\\n+  &nsAccessibilityAtoms::checked,\\n+  &nsAccessibilityAtoms::controls,\\n+  &nsAccessibilityAtoms::datatype,\\n+  &nsAccessibilityAtoms::describedby,\\n+  &nsAccessibilityAtoms::disabled,\\n+  &nsAccessibilityAtoms::dropeffect,\\n+  &nsAccessibilityAtoms::expanded,\\n+  &nsAccessibilityAtoms::flowto,\\n+  &nsAccessibilityAtoms::grab,\\n+  &nsAccessibilityAtoms::haspopup,\\n+  &nsAccessibilityAtoms::invalid,\\n+  &nsAccessibilityAtoms::labelledby,\\n+  &nsAccessibilityAtoms::level,\\n+  &nsAccessibilityAtoms::live,\\n+  &nsAccessibilityAtoms::multiline,\\n+  &nsAccessibilityAtoms::multiselectable,\\n+  &nsAccessibilityAtoms::owns,\\n+  &nsAccessibilityAtoms::posinset,\\n+  &nsAccessibilityAtoms::pressed,\\n+  &nsAccessibilityAtoms::readonly,\\n+  &nsAccessibilityAtoms::relevant,\\n+  &nsAccessibilityAtoms::required,\\n+  &nsAccessibilityAtoms::secret,\\n+  &nsAccessibilityAtoms::selected,\\n+  &nsAccessibilityAtoms::setsize,\\n+  &nsAccessibilityAtoms::sort,\\n+  &nsAccessibilityAtoms::valuenow,\\n+  &nsAccessibilityAtoms::valuemin,\\n+  &nsAccessibilityAtoms::valuemax,\\n };\\n-#undef ARIA_PROPERTY\\n \\n #define ARIA_PROPERTY(atom) &nsAccessibilityAtoms::aria_##atom,\\n nsIAtom** nsARIAMap::gAriaAtomPtrsHyphenated[eAria_none] = {\\n\""}