{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas259367e\""},"diff":"\"259367e Bug 145320, support hover in xul trees, r+sr=neil\\ndiff --git a/content/base/src/nsGkAtomList.h b/content/base/src/nsGkAtomList.h\\nindex 1157e80..bcf61aa 100755\\n--- a/content/base/src/nsGkAtomList.h\\n+++ b/content/base/src/nsGkAtomList.h\\n@@ -384,6 +384,7 @@ GK_ATOM(hidden, \\\"hidden\\\")\\n GK_ATOM(hidechrome, \\\"hidechrome\\\")\\n GK_ATOM(highest, \\\"highest\\\")\\n GK_ATOM(horizontal, \\\"horizontal\\\")\\n+GK_ATOM(hover, \\\"hover\\\")\\n GK_ATOM(hr, \\\"hr\\\")\\n GK_ATOM(href, \\\"href\\\")\\n GK_ATOM(hreflang, \\\"hreflang\\\")\\ndiff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp\\nindex c57388a..1e702f8 100644\\n--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp\\n+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.cpp\\n@@ -160,6 +160,7 @@ nsTreeBodyFrame::nsTreeBodyFrame(nsIPresShell* aPresShell, nsStyleContext* aCont\\n  mReflowCallbackPosted(PR_FALSE),\\n  mUpdateBatchNest(0),\\n  mRowCount(0),\\n+ mMouseOverRow(-1),\\n  mSlots(nsnull)\\n {\\n   mColumns = new nsTreeColumns(nsnull);\\n@@ -1898,9 +1899,12 @@ nsTreeBodyFrame::PrefillPropertyArray(PRInt32 aRowIndex, nsTreeColumn* aCol)\\n     mScratchArray->AppendElement(nsGkAtoms::dragSession);\\n \\n   if (aRowIndex != -1) {\\n+    if (aRowIndex == mMouseOverRow)\\n+      mScratchArray->AppendElement(nsGkAtoms::hover);\\n+  \\n     nsCOMPtr<nsITreeSelection> selection;\\n     mView->GetSelection(getter_AddRefs(selection));\\n-  \\n+\\n     if (selection) {\\n       // selected\\n       PRBool isSelected;\\n@@ -2483,7 +2487,27 @@ nsTreeBodyFrame::HandleEvent(nsPresContext* aPresContext,\\n                              nsGUIEvent* aEvent,\\n                              nsEventStatus* aEventStatus)\\n {\\n-  if (aEvent->message == NS_DRAGDROP_ENTER) {\\n+  if (aEvent->message == NS_MOUSE_ENTER_SYNTH || aEvent->message == NS_MOUSE_MOVE) {\\n+    nsPoint pt = nsLayoutUtils::GetEventCoordinatesRelativeTo(aEvent, this);\\n+    PRInt32 xTwips = pt.x - mInnerBox.x;\\n+    PRInt32 yTwips = pt.y - mInnerBox.y;\\n+    PRInt32 newrow = GetRowAt(xTwips, yTwips);\\n+    if (mMouseOverRow != newrow) {\\n+      // redraw the old and the new row\\n+      if (mMouseOverRow != -1)\\n+        InvalidateRow(mMouseOverRow);\\n+      mMouseOverRow = newrow;\\n+      if (mMouseOverRow != -1)\\n+        InvalidateRow(mMouseOverRow);\\n+    }\\n+  }\\n+  else if (aEvent->message == NS_MOUSE_EXIT_SYNTH) {\\n+    if (mMouseOverRow != -1) {\\n+      InvalidateRow(mMouseOverRow);\\n+      mMouseOverRow = -1;\\n+    }\\n+  }\\n+  else if (aEvent->message == NS_DRAGDROP_ENTER) {\\n     if (!mSlots)\\n       mSlots = new Slots();\\n \\ndiff --git a/layout/xul/base/src/tree/src/nsTreeBodyFrame.h b/layout/xul/base/src/tree/src/nsTreeBodyFrame.h\\nindex b8e4ae2..16f252a 100644\\n--- a/layout/xul/base/src/tree/src/nsTreeBodyFrame.h\\n+++ b/layout/xul/base/src/tree/src/nsTreeBodyFrame.h\\n@@ -475,6 +475,9 @@ protected: // Data Members\\n   // Cached row count.\\n   PRInt32 mRowCount;\\n \\n+  // The row the mouse is hovering over.\\n+  PRInt32 mMouseOverRow;\\n+\\n   class Slots {\\n     public:\\n       Slots()\\n\""}