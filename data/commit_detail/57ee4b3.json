{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas57ee4b3\""},"diff":"\"57ee4b3 Remove MAX_INLINE_CALL_COUNT policing, plus old MAX_INTERP_LEVEL deadwood (392973, r=crowder).\\ndiff --git a/js/src/jsinterp.c b/js/src/jsinterp.c\\nindex a554272..8bc2d75 100644\\n--- a/js/src/jsinterp.c\\n+++ b/js/src/jsinterp.c\\n@@ -2005,16 +2005,6 @@ InternNonIntElementId(JSContext *cx, JSObject *obj, jsval idval, jsid *idp)\\n     return JS_TRUE;\\n }\\n \\n-#ifndef MAX_INTERP_LEVEL\\n-#if defined(XP_OS2)\\n-#define MAX_INTERP_LEVEL 250\\n-#else\\n-#define MAX_INTERP_LEVEL 1000\\n-#endif\\n-#endif\\n-\\n-#define MAX_INLINE_CALL_COUNT 1000\\n-\\n /*\\n  * Threaded interpretation via computed goto appears to be well-supported by\\n  * GCC 3 and higher.  IBM's C compiler when run with the right options (e.g.,\\n@@ -3932,14 +3922,6 @@ interrupt:\\n                     JSInlineFrame *newifp;\\n                     JSInterpreterHook hook;\\n \\n-                    /* Restrict recursion of lightweight functions. */\\n-                    if (inlineCallCount == MAX_INLINE_CALL_COUNT) {\\n-                        JS_ReportErrorNumber(cx, js_GetErrorMessage, NULL,\\n-                                             JSMSG_OVER_RECURSED);\\n-                        ok = JS_FALSE;\\n-                        goto out;\\n-                    }\\n-\\n                     /* Compute the total number of stack slots needed by fun. */\\n                     nframeslots = JS_HOWMANY(sizeof(JSInlineFrame),\\n                                              sizeof(jsval));\\n\""}