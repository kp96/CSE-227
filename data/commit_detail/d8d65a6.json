{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basd8d65a6\""},"diff":"\"d8d65a6 Bug 393464  Bookmarks manager doesn't search in tags field (reverting)\\ndiff --git a/toolkit/components/places/public/nsITaggingService.idl b/toolkit/components/places/public/nsITaggingService.idl\\nindex de99adc..cbf048f 100644\\n--- a/toolkit/components/places/public/nsITaggingService.idl\\n+++ b/toolkit/components/places/public/nsITaggingService.idl\\n@@ -91,9 +91,3 @@ interface nsITaggingService : nsISupports\\n    */\\n   readonly attribute nsIVariant allTags;\\n };\\n-\\n-%{C++\\n-\\n-#define TAGGING_SERVICE_CID \\\"@mozilla.org/browser/tagging-service;1\\\"\\n-\\n-%}\\ndiff --git a/toolkit/components/places/src/nsNavHistory.cpp b/toolkit/components/places/src/nsNavHistory.cpp\\nindex db548a6..1af84fa 100644\\n--- a/toolkit/components/places/src/nsNavHistory.cpp\\n+++ b/toolkit/components/places/src/nsNavHistory.cpp\\n@@ -69,9 +69,6 @@\\n #include \\\"prtime.h\\\"\\n #include \\\"prprf.h\\\"\\n #include \\\"nsEscape.h\\\"\\n-#include \\\"nsITaggingService.h\\\"\\n-#include \\\"nsIVariant.h\\\"\\n-#include \\\"nsVariant.h\\\"\\n \\n #include \\\"mozIStorageService.h\\\"\\n #include \\\"mozIStorageConnection.h\\\"\\n@@ -4099,45 +4096,6 @@ nsNavHistory::GroupByHost(nsNavHistoryQueryResultNode *aResultNode,\\n   return NS_OK;\\n }\\n \\n-PRBool\\n-nsNavHistory::URIHasTag(nsIURI* aURI, const nsAString& aTag)\\n-{\\n-  nsresult rv;\\n-  nsCOMPtr<nsITaggingService> tagService =\\n-    do_GetService(TAGGING_SERVICE_CID, &rv);\\n-  NS_ENSURE_SUCCESS(rv, rv);\\n-\\n-  nsCOMPtr<nsIVariant> tagsV;\\n-  rv = tagService->GetTagsForURI(aURI, getter_AddRefs(tagsV));\\n-  NS_ENSURE_SUCCESS(rv, rv);\\n-\\n-  // confirm that type is array, and has elements\\n-  // (data type is different for empty array)\\n-  PRUint16 dataType;\\n-  tagsV->GetDataType(&dataType);\\n-  if (dataType != nsIDataType::VTYPE_ARRAY)\\n-    return PR_FALSE;\\n-\\n-  // get tags as array\\n-  PRUint16 type;\\n-  nsIID iid;\\n-  PRUint32 count;\\n-  PRUnichar** tags;\\n-  rv = tagsV->GetAsArray(&type, &iid, &count, (void**)&tags);\\n-  NS_ENSURE_SUCCESS(rv, rv);\\n-\\n-  for (PRUint32 i = 0; i < count; i++) {\\n-    nsAutoString tag(tags[i]);\\n-    PRInt32 position = Compare(tag, aTag, nsCaseInsensitiveStringComparator());\\n-    if (position == 0) {\\n-      nsMemory::Free(tags);\\n-      return PR_TRUE;\\n-    }\\n-  }\\n-  nsMemory::Free(tags);\\n-  return PR_FALSE;\\n-}\\n-\\n \\n // nsNavHistory::FilterResultSet\\n //\\n@@ -4203,7 +4161,6 @@ nsNavHistory::FilterResultSet(nsNavHistoryQueryResultNode* aParentNode,\\n     if (terms.Count() == 0) {\\n         allTermsFound = PR_TRUE;\\n     } else {\\n-\\n       for (PRInt32 termIndex = 0; termIndex < terms.Count(); termIndex ++) {\\n         PRBool termFound = PR_FALSE;\\n         // title and URL\\n@@ -4213,7 +4170,6 @@ nsNavHistory::FilterResultSet(nsNavHistoryQueryResultNode* aParentNode,\\n              CaseInsensitiveFindInReadable(*terms[termIndex],\\n                                     NS_ConvertUTF8toUTF16(aSet[nodeIndex]->mURI))))\\n           termFound = PR_TRUE;\\n-\\n         // searchable annotations\\n         /*if (! termFound) {\\n           for (PRInt32 annotIndex = 0; annotIndex < curAnnotations.Count(); annotIndex ++) {\\n@@ -4222,16 +4178,7 @@ nsNavHistory::FilterResultSet(nsNavHistoryQueryResultNode* aParentNode,\\n               termFound = PR_TRUE;\\n           }\\n         }*/\\n-\\n-        // search tags\\n-        if (!termFound) {\\n-          nsCOMPtr<nsIURI> itemURI;\\n-          rv = NS_NewURI(getter_AddRefs(itemURI), aSet[nodeIndex]->mURI);\\n-          NS_ENSURE_SUCCESS(rv, rv);\\n-          termFound = URIHasTag(itemURI, *terms[termIndex]);\\n-        }\\n-\\n-        if (!termFound) {\\n+        if (! termFound) {\\n           allTermsFound = PR_FALSE;\\n           break;\\n         }\\ndiff --git a/toolkit/components/places/src/nsNavHistory.h b/toolkit/components/places/src/nsNavHistory.h\\nindex d287b57..8ee2446 100644\\n--- a/toolkit/components/places/src/nsNavHistory.h\\n+++ b/toolkit/components/places/src/nsNavHistory.h\\n@@ -511,8 +511,6 @@ protected:\\n                        nsCOMArray<nsNavHistoryResultNode>* aDest,\\n                        PRBool aIsDomain);\\n \\n-  PRBool URIHasTag(nsIURI* aURI, const nsAString& aTag);\\n-\\n   nsresult FilterResultSet(nsNavHistoryQueryResultNode *aParentNode,\\n                            const nsCOMArray<nsNavHistoryResultNode>& aSet,\\n                            nsCOMArray<nsNavHistoryResultNode>* aFiltered,\\ndiff --git a/toolkit/components/places/tests/bookmarks/test_395101.js b/toolkit/components/places/tests/bookmarks/test_395101.js\\nindex 50d04f6..6f8f9e7 100644\\n--- a/toolkit/components/places/tests/bookmarks/test_395101.js\\n+++ b/toolkit/components/places/tests/bookmarks/test_395101.js\\n@@ -63,6 +63,7 @@ var root = bmsvc.bookmarksRoot;\\n \\n // main\\n function run_test() {\\n+  return true;\\n   // test searching for tagged bookmarks\\n \\n   // test folder\\n\""}