{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basfc5215c\""},"diff":"\"fc5215c Bug 384979 --> move nsTextFormatter to the glue code so it can be used with frozen linkage. Patch by prasad <prasad@medhas.org> sr=bsmedberg a=bsmedberg\\ndiff --git a/xpcom/ds/Makefile.in b/xpcom/ds/Makefile.in\\nindex 44e11c1..6d9f59d 100644\\n--- a/xpcom/ds/Makefile.in\\n+++ b/xpcom/ds/Makefile.in\\n@@ -74,7 +74,6 @@ CPPSRCS\\t\\t= \\\\\\n \\t\\tnsSupportsPrimitives.cpp \\\\\\n \\t\\tnsUnicharBuffer.cpp \\\\\\n \\t\\tnsVariant.cpp \\\\\\n-\\t\\tnsTextFormatter.cpp \\\\\\n \\t\\tnsTimelineService.cpp \\\\\\n \\t\\tnsValueArray.cpp \\\\\\n \\t\\tnsArray.cpp \\\\\\n@@ -104,7 +103,6 @@ EXPORTS\\t\\t= \\\\\\n \\t\\tnsTime.h \\\\\\n \\t\\tnsUnitConversion.h \\\\\\n \\t\\tnsVariant.h \\\\\\n-\\t\\tnsTextFormatter.h \\\\\\n \\t\\tnsValueArray.h \\\\\\n \\t\\tnsStringEnumerator.h \\\\\\n \\t\\tnsHashPropertyBag.h \\\\\\ndiff --git a/xpcom/ds/nsTextFormatter.h b/xpcom/ds/nsTextFormatter.h\\ndeleted file mode 100644\\nindex 903ac19..0000000\\n--- a/xpcom/ds/nsTextFormatter.h\\n+++ /dev/null\\n@@ -1,115 +0,0 @@\\n-/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\\n-/* ***** BEGIN LICENSE BLOCK *****\\n- * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n- *\\n- * The contents of this file are subject to the Mozilla Public License Version\\n- * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n- * the License. You may obtain a copy of the License at\\n- * http://www.mozilla.org/MPL/\\n- *\\n- * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n- * for the specific language governing rights and limitations under the\\n- * License.\\n- *\\n- * The Original Code is mozilla.org Code.\\n- *\\n- * The Initial Developer of the Original Code is\\n- * Netscape Communications Corporation.\\n- * Portions created by the Initial Developer are Copyright (C) 1998\\n- * the Initial Developer. All Rights Reserved.\\n- *\\n- * Contributor(s):\\n- *\\n- * Alternatively, the contents of this file may be used under the terms of\\n- * either of the GNU General Public License Version 2 or later (the \\\"GPL\\\"),\\n- * or the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n- * in which case the provisions of the GPL or the LGPL are applicable instead\\n- * of those above. If you wish to allow use of your version of this file only\\n- * under the terms of either the GPL or the LGPL, and not to allow others to\\n- * use your version of this file under the terms of the MPL, indicate your\\n- * decision by deleting the provisions above and replace them with the notice\\n- * and other provisions required by the GPL or the LGPL. If you do not delete\\n- * the provisions above, a recipient may use your version of this file under\\n- * the terms of any one of the MPL, the GPL or the LGPL.\\n- *\\n- * ***** END LICENSE BLOCK ***** */\\n-\\n-#ifndef nsTextFormatter_h___\\n-#define nsTextFormatter_h___\\n-\\n-/*\\n-** API for PR printf like routines. Supports the following formats\\n-**\\t%d - decimal\\n-**\\t%u - unsigned decimal\\n-**\\t%x - unsigned hex\\n-**\\t%X - unsigned uppercase hex\\n-**\\t%o - unsigned octal\\n-**\\t%hd, %hu, %hx, %hX, %ho - 16-bit versions of above\\n-**\\t%ld, %lu, %lx, %lX, %lo - 32-bit versions of above\\n-**\\t%lld, %llu, %llx, %llX, %llo - 64 bit versions of above\\n-**\\t%s - utf8 string\\n-**\\t%S - PRUnichar string\\n-**\\t%c - character\\n-**\\t%p - pointer (deals with machine dependent pointer size)\\n-**\\t%f - float\\n-**\\t%g - float\\n-*/\\n-#include \\\"prtypes.h\\\"\\n-#include \\\"prio.h\\\"\\n-#include <stdio.h>\\n-#include <stdarg.h>\\n-#include \\\"nscore.h\\\"\\n-#include \\\"nsAString.h\\\"\\n-\\n-\\n-class NS_COM nsTextFormatter {\\n-\\n-public:\\n-\\n-/*\\n-** sprintf into a fixed size buffer. Guarantees that a NUL is at the end\\n-** of the buffer. Returns the length of the written output, NOT including\\n-** the NUL, or (PRUint32)-1 if an error occurs.\\n-*/\\n-static PRUint32  snprintf(PRUnichar *out, PRUint32 outlen, const PRUnichar *fmt, ...);\\n-\\n-/*\\n-** sprintf into a PR_MALLOC'd buffer. Return a pointer to the malloc'd\\n-** buffer on success, NULL on failure. Call \\\"smprintf_free\\\" to release\\n-** the memory returned.\\n-*/\\n-static PRUnichar*  smprintf(const PRUnichar *fmt, ...);\\n-\\n-\\n-static PRUint32 ssprintf(nsAString& out, const PRUnichar* fmt, ...);\\n-/*\\n-** Free the memory allocated, for the caller, by smprintf\\n-*/\\n-static void smprintf_free(PRUnichar *mem);\\n-\\n-/*\\n-** \\\"append\\\" sprintf into a PR_MALLOC'd buffer. \\\"last\\\" is the last value of\\n-** the PR_MALLOC'd buffer. sprintf will append data to the end of last,\\n-** growing it as necessary using realloc. If last is NULL, PR_sprintf_append\\n-** will allocate the initial string. The return value is the new value of\\n-** last for subsequent calls, or NULL if there is a malloc failure.\\n-*/\\n-static PRUnichar*  sprintf_append(PRUnichar *last, const PRUnichar *fmt, ...);\\n-\\n-/*\\n-** va_list forms of the above.\\n-*/\\n-static PRUint32  vsnprintf(PRUnichar *out, PRUint32 outlen, const PRUnichar *fmt, va_list ap);\\n-static PRUnichar*  vsmprintf(const PRUnichar *fmt, va_list ap);\\n-static PRUint32    vssprintf(nsAString& out, const PRUnichar *fmt, va_list ap);\\n-static PRUnichar*  vsprintf_append(PRUnichar *last, const PRUnichar *fmt, va_list ap);\\n-\\n-#ifdef DEBUG\\n-static PRBool SelfTest();\\n-#endif\\n-\\n-\\n-};\\n-\\n-#endif /* nsTextFormatter_h___ */\\ndiff --git a/xpcom/glue/Makefile.in b/xpcom/glue/Makefile.in\\nindex 91a07b0..201903f 100644\\n--- a/xpcom/glue/Makefile.in\\n+++ b/xpcom/glue/Makefile.in\\n@@ -88,6 +88,7 @@ SDK_HEADERS = \\\\\\n \\t\\tnsStringGlue.h \\\\\\n \\t\\tnsRefPtrHashtable.h \\\\\\n \\t\\tnsStringAPI.h \\\\\\n+\\t\\tnsTextFormatter.h \\\\\\n \\t\\tnsTHashtable.h \\\\\\n \\t\\tnsVoidArray.h \\\\\\n \\t\\tnsTArray.h \\\\\\ndiff --git a/xpcom/ds/nsTextFormatter.cpp b/xpcom/glue/nsTextFormatter.cpp\\nsimilarity index 93%\\nrename from xpcom/ds/nsTextFormatter.cpp\\nrename to xpcom/glue/nsTextFormatter.cpp\\nindex 60f94ab..0e1aa94 100644\\n--- a/xpcom/ds/nsTextFormatter.cpp\\n+++ b/xpcom/glue/nsTextFormatter.cpp\\n@@ -20,6 +20,7 @@\\n  * the Initial Developer. All Rights Reserved.\\n  *\\n  * Contributor(s):\\n+ *      Prasad <prasad@medhas.org>\\n  *\\n  * Alternatively, the contents of this file may be used under the terms of\\n  * either of the GNU General Public License Version 2 or later (the \\\"GPL\\\"),\\n@@ -46,6 +47,12 @@\\n  *   Daniele Nicolodi  <daniele@grinta.net>\\n  */\\n \\n+/*\\n+ * Copied from xpcom/ds/nsTextFormatter.cpp r1.22\\n+ *     Changed to use nsMemory and Frozen linkage\\n+ *                  -- Prasad <prasad@medhas.org>\\n+ */\\n+\\n #include <stdarg.h>\\n #include <stddef.h>\\n #include <stdio.h>\\n@@ -53,12 +60,11 @@\\n #include \\\"prdtoa.h\\\"\\n #include \\\"prlong.h\\\"\\n #include \\\"prlog.h\\\"\\n-#include \\\"prmem.h\\\"\\n #include \\\"prprf.h\\\"\\n-#include \\\"nsCRT.h\\\"\\n+#include \\\"prmem.h\\\"\\n+#include \\\"nsCRTGlue.h\\\"\\n #include \\\"nsTextFormatter.h\\\"\\n-#include \\\"nsString.h\\\"\\n-#include \\\"nsReadableUtils.h\\\"\\n+#include \\\"nsMemory.h\\\"\\n \\n /*\\n ** Note: on some platforms va_list is defined as an array,\\n@@ -517,7 +523,7 @@ static int cvt_f(SprintfState *ss, double d, int width, int prec,\\n     while ((*rbufp++ = *bufp++)) { }\\n     *rbufp = '\\\\0';\\n \\n-    return fill2(ss, rbuf, nsCRT::strlen(rbuf), width, flags);\\n+    return fill2(ss, rbuf, NS_strlen(rbuf), width, flags);\\n }\\n \\n /*\\n@@ -535,7 +541,7 @@ static int cvt_S(SprintfState *ss, const PRUnichar *s, int width,\\n     }\\n \\n     /* Limit string length by precision value */\\n-    slen = s ? nsCRT::strlen(s) : 6;\\n+    slen = s ? NS_strlen(s) : 6;\\n     if (prec > 0) {\\n \\tif (prec < slen) {\\n \\t    slen = prec;\\n@@ -622,7 +628,7 @@ static struct NumArgState* BuildArgArray(const PRUnichar *fmt,\\n     }\\n     \\n     if (number > NAS_DEFAULT_NUM) {\\n-\\tnas = (struct NumArgState*)PR_MALLOC(number * sizeof(struct NumArgState));\\n+\\tnas = (struct NumArgState*)nsMemory::Alloc(number * sizeof(struct NumArgState));\\n \\tif (!nas) {\\n \\t    *rv = -1;\\n \\t    return NULL;\\n@@ -1187,10 +1193,7 @@ StringStuff(SprintfState* ss, const PRUnichar* sp, PRUint32 len)\\n     nsAString* str = static_cast<nsAString*>(ss->stuffclosure);\\n     str->Append(sp, len);\\n \\n-    // we can assume contiguous storage\\n-    nsAString::iterator begin;\\n-    str->BeginWriting(begin);\\n-    ss->base = begin.get();\\n+    ss->base = str->BeginWriting();\\n     ss->cur = ss->base + off;\\n \\n     return 0;\\n@@ -1211,9 +1214,9 @@ static int GrowStuff(SprintfState *ss, const PRUnichar *sp, PRUint32 len)\\n \\t/* Grow the buffer */\\n \\tnewlen = ss->maxlen + ((len > 32) ? len : 32);\\n \\tif (ss->base) {\\n-\\t    newbase = (PRUnichar*) PR_REALLOC(ss->base, newlen*sizeof(PRUnichar));\\n+\\t    newbase = (PRUnichar*) nsMemory::Realloc(ss->base, newlen*sizeof(PRUnichar));\\n \\t} else {\\n-\\t    newbase = (PRUnichar*) PR_MALLOC(newlen*sizeof(PRUnichar));\\n+\\t    newbase = (PRUnichar*) nsMemory::Alloc(newlen*sizeof(PRUnichar));\\n \\t}\\n \\tif (!newbase) {\\n \\t    /* Ran out of memory */\\n@@ -1258,14 +1261,6 @@ PRUint32 nsTextFormatter::ssprintf(nsAString& out, const PRUnichar* fmt, ...)\\n     return rv;\\n }\\n \\n-/*\\n-** Free memory allocated, for the caller, by smprintf\\n-*/\\n-void nsTextFormatter::smprintf_free(PRUnichar *mem)\\n-{\\n-    PR_DELETE(mem);\\n-}\\n-\\n PRUint32 nsTextFormatter::vssprintf(nsAString& out, const PRUnichar* fmt, va_list ap)\\n {\\n     SprintfState ss;\\n@@ -1361,63 +1356,11 @@ PRUint32 nsTextFormatter::vsnprintf(PRUnichar *out, PRUint32 outlen,const PRUnic\\n     return n ? n - 1 : n;\\n }\\n \\n-PRUnichar * nsTextFormatter::sprintf_append(PRUnichar *last, const PRUnichar *fmt, ...)\\n+/*\\n+ * Free memory allocated, for the caller, by smprintf\\n+ */\\n+void nsTextFormatter::smprintf_free(PRUnichar *mem)\\n {\\n-    va_list ap;\\n-    PRUnichar *rv;\\n-\\n-    va_start(ap, fmt);\\n-    rv = nsTextFormatter::vsprintf_append(last, fmt, ap);\\n-    va_end(ap);\\n-    return rv;\\n+    nsMemory::Free(mem);\\n }\\n \\n-PRUnichar * nsTextFormatter::vsprintf_append(PRUnichar *last, const PRUnichar *fmt, va_list ap)\\n-{\\n-    SprintfState ss;\\n-    int rv;\\n-\\n-    ss.stuff = GrowStuff;\\n-    if (last) {\\n-\\tint lastlen = nsCRT::strlen(last);\\n-\\tss.base = last;\\n-\\tss.cur = last + lastlen;\\n-\\tss.maxlen = lastlen;\\n-    } else {\\n-\\tss.base = 0;\\n-\\tss.cur = 0;\\n-\\tss.maxlen = 0;\\n-    }\\n-    rv = dosprintf(&ss, fmt, ap);\\n-    if (rv < 0) {\\n-\\tif (ss.base) {\\n-\\t    PR_DELETE(ss.base);\\n-\\t}\\n-\\treturn 0;\\n-    }\\n-    return ss.base;\\n-}\\n-#ifdef DEBUG\\n-PRBool nsTextFormatter::SelfTest()\\n-{ \\n-    PRBool passed = PR_TRUE ;\\n-    nsAutoString fmt(NS_LITERAL_STRING(\\\"%3$s %4$S %1$d %2$d\\\"));\\n-\\n-    char utf8[] = \\\"Hello\\\";\\n-    PRUnichar ucs2[]={'W', 'o', 'r', 'l', 'd', 0x4e00, 0xAc00, 0xFF45, 0x0103};\\n-    int d=3;\\n-\\n-\\n-    PRUnichar buf[256];\\n-    int ret;\\n-    ret = nsTextFormatter::snprintf(buf, 256, fmt.get(), d, 333, utf8, ucs2);\\n-    printf(\\\"ret = %d\\\\n\\\", ret);\\n-    nsAutoString out(buf);\\n-    printf(\\\"%s \\\\n\\\", NS_LossyConvertUTF16toASCII(out).get());\\n-    const PRUnichar *uout = out.get();\\n-    for(PRUint32 i=0;i<out.Length();i++)\\n-        printf(\\\"%2X \\\", uout[i]);\\n-\\n-    return passed;\\n-}\\n-#endif\\ndiff --git a/xpcom/glue/nsTextFormatter.h b/xpcom/glue/nsTextFormatter.h\\nnew file mode 100644\\nindex 0000000..fe69151\\n--- /dev/null\\n+++ b/xpcom/glue/nsTextFormatter.h\\n@@ -0,0 +1,108 @@\\n+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is mozilla.org Code.\\n+ *\\n+ * The Initial Developer of the Original Code is\\n+ * Netscape Communications Corporation.\\n+ * Portions created by the Initial Developer are Copyright (C) 1998\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *      Prasad <prasad@medhas.org>\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either of the GNU General Public License Version 2 or later (the \\\"GPL\\\"),\\n+ * or the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by deleting the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not delete\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL.\\n+ *\\n+ * ***** END LICENSE BLOCK ***** */\\n+\\n+/*\\n+ * This code was copied from xpcom/ds/nsTextFormatter r1.3\\n+ *           Memory model and Frozen linkage changes only.\\n+ *                           -- Prasad <prasad@medhas.org>\\n+ */\\n+\\n+#ifndef nsTextFormatter_h___\\n+#define nsTextFormatter_h___\\n+\\n+/*\\n+ ** API for PR printf like routines. Supports the following formats\\n+ **\\t%d - decimal\\n+ **\\t%u - unsigned decimal\\n+ **\\t%x - unsigned hex\\n+ **\\t%X - unsigned uppercase hex\\n+ **\\t%o - unsigned octal\\n+ **\\t%hd, %hu, %hx, %hX, %ho - 16-bit versions of above\\n+ **\\t%ld, %lu, %lx, %lX, %lo - 32-bit versions of above\\n+ **\\t%lld, %llu, %llx, %llX, %llo - 64 bit versions of above\\n+ **\\t%s - utf8 string\\n+ **\\t%S - PRUnichar string\\n+ **\\t%c - character\\n+ **\\t%p - pointer (deals with machine dependent pointer size)\\n+ **\\t%f - float\\n+ **\\t%g - float\\n+ */\\n+#include \\\"prtypes.h\\\"\\n+#include \\\"prio.h\\\"\\n+#include <stdio.h>\\n+#include <stdarg.h>\\n+#include \\\"nscore.h\\\"\\n+#include \\\"nsStringGlue.h\\\"\\n+\\n+\\n+class NS_COM_GLUE nsTextFormatter {\\n+\\n+  public:\\n+\\n+    /*\\n+     * sprintf into a fixed size buffer. Guarantees that a NULL is at the end\\n+     * of the buffer. Returns the length of the written output, NOT including\\n+     * the NUL, or (PRUint32)-1 if an error occurs.\\n+     */\\n+    static PRUint32 snprintf(PRUnichar *out, PRUint32 outlen, const PRUnichar *fmt, ...);\\n+\\n+    /*\\n+     * sprintf into a nsMemory::Alloc'd buffer. Return a pointer to \\n+     * buffer on success, NULL on failure. \\n+     */\\n+    static PRUnichar* smprintf(const PRUnichar *fmt, ...);\\n+\\n+    static PRUint32 ssprintf(nsAString& out, const PRUnichar* fmt, ...);\\n+\\n+    /*\\n+     * va_list forms of the above.\\n+     */\\n+    static PRUint32 vsnprintf(PRUnichar *out, PRUint32 outlen, const PRUnichar *fmt, va_list ap);\\n+    static PRUnichar* vsmprintf(const PRUnichar *fmt, va_list ap);\\n+    static PRUint32 vssprintf(nsAString& out, const PRUnichar *fmt, va_list ap);\\n+\\n+    /*\\n+     * Free the memory allocated, for the caller, by smprintf.\\n+     * -- Deprecated --\\n+     * Callers can substitute calling smprintf_free with nsMemory::Free\\n+     */\\n+    static void smprintf_free(PRUnichar *mem);\\n+\\n+};\\n+\\n+#endif /* nsTextFormatter_h___ */\\ndiff --git a/xpcom/glue/objs.mk b/xpcom/glue/objs.mk\\nindex 93555db..80118e1 100644\\n--- a/xpcom/glue/objs.mk\\n+++ b/xpcom/glue/objs.mk\\n@@ -65,6 +65,7 @@ XPCOM_GLUE_SRC_LCPPSRCS =        \\\\\\n   nsTObserverArray.cpp           \\\\\\n   nsCycleCollectionParticipant.cpp \\\\\\n   nsDeque.cpp \\\\\\n+  nsTextFormatter.cpp \\\\\\n   $(NULL)\\n \\n XPCOM_GLUE_SRC_CPPSRCS = $(addprefix $(topsrcdir)/xpcom/glue/, $(XPCOM_GLUE_SRC_LCPPSRCS))\\ndiff --git a/xpcom/tests/Makefile.in b/xpcom/tests/Makefile.in\\nindex 11b9b73..020ca4c1c 100644\\n--- a/xpcom/tests/Makefile.in\\n+++ b/xpcom/tests/Makefile.in\\n@@ -87,6 +87,7 @@ CPPSRCS += \\\\\\n \\t\\tTestXPIDLString.cpp \\\\\\n \\t\\tTestDeque.cpp \\\\\\n \\t\\tTestStrings.cpp \\\\\\n+\\t\\tTestTextFormatter.cpp \\\\\\n \\t\\tTestStorageStream.cpp \\\\\\n \\t\\tTestExpirationTracker.cpp \\\\\\n \\t\\t$(NULL)\\n@@ -138,3 +139,5 @@ install::\\n check::\\n \\t@echo \\\"Running TestVersionComparator tests\\\"\\n \\t@$(PERL) -w $(srcdir)/TestVersionComparatorRunner.pl \\\"$(RUN_TEST_PROGRAM) $(FINAL_TARGET)/TestVersionComparator$(BIN_SUFFIX)\\\"\\n+\\t@echo \\\"Running nsTextFormater tests\\\"\\n+\\t@$(RUN_TEST_PROGRAM) $(DIST)/bin/run-mozilla.sh $(FINAL_TARGET)/TestTextFormatter$(BIN_SUFFIX)\\ndiff --git a/xpcom/tests/TestTextFormatter.cpp b/xpcom/tests/TestTextFormatter.cpp\\nnew file mode 100644\\nindex 0000000..1d29be7\\n--- /dev/null\\n+++ b/xpcom/tests/TestTextFormatter.cpp\\n@@ -0,0 +1,68 @@\\n+/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is mozilla.org Code.\\n+ *\\n+ * The Initial Developer of the Original Code is\\n+ * Netscape Communications Corporation.\\n+ * Portions created by the Initial Developer are Copyright (C) 1998\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *    Prasad <prasad@medhas.org>\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either of the GNU General Public License Version 2 or later (the \\\"GPL\\\"),\\n+ * or the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by deleting the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not delete\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL.\\n+ *\\n+ * ***** END LICENSE BLOCK ***** */\\n+\\n+#include <nsTextFormatter.h>\\n+#include <nsStringGlue.h>\\n+#include <stdio.h>\\n+\\n+int main() \\n+{  \\n+  int test_ok = true;\\n+\\n+  nsAutoString fmt(NS_LITERAL_STRING(\\\"%3$s %4$S %1$d %2$d\\\")); \\n+  char utf8[] = \\\"Hello\\\"; \\n+  PRUnichar ucs2[]={'W', 'o', 'r', 'l', 'd', 0x4e00, 0xAc00, 0xFF45, 0x0103, 0x00}; \\n+  int d=3; \\n+\\n+  PRUnichar buf[256]; \\n+  nsTextFormatter::snprintf(buf, 256, fmt.get(), d, 333, utf8, ucs2); \\n+  nsAutoString out(buf); \\n+  if(strcmp(\\\"Hello World\\\", NS_LossyConvertUTF16toASCII(out).get()))\\n+    test_ok = false;\\n+\\n+  const PRUnichar *uout = out.get(); \\n+  const PRUnichar expected[] = {0x48, 0x65, 0x6C, 0x6C, 0x6F, 0x20,\\n+                                0x57, 0x6F, 0x72, 0x6C, 0x64, 0x4E00,\\n+                                0xAC00, 0xFF45, 0x0103, 0x20, 0x33,\\n+                                0x20, 0x33, 0x33, 0x33};\\n+  for(PRUint32 i=0;i<out.Length();i++) \\n+    if(uout[i] != expected[i]) \\n+      test_ok = false;\\n+  printf(test_ok? \\\"nsTextFormatter: OK\\\\n\\\": \\\"nsTextFormatter: FAIL\\\\n\\\");\\n+}\\n+\\n\""}