{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas828b8c7\""},"diff":"\"828b8c7 Bug 390979 - \\\"tabbrowser drag&drop code cleanup\\\" [p=w.woods@optusnet.com.au (Wayne Woods) r=gavin a1.9=mconnor]\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 7c9533e..4502b77 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -66,7 +66,7 @@\\n       <xul:stringbundle anonid=\\\"tbstringbundle\\\" src=\\\"chrome://browser/locale/tabbrowser.properties\\\"/>\\n       <xul:tabbox anonid=\\\"tabbox\\\" flex=\\\"1\\\" eventnode=\\\"document\\\" xbl:inherits=\\\"handleCtrlPageUpDown\\\"\\n                   onselect=\\\"if (!('updateCurrentBrowser' in this.parentNode) || event.target.localName != 'tabpanels') return; this.parentNode.updateCurrentBrowser();\\\">\\n-        <xul:hbox class=\\\"tab-drop-indicator-bar\\\">\\n+        <xul:hbox class=\\\"tab-drop-indicator-bar\\\" collapsed=\\\"true\\\" chromedir=\\\"&locale.dir;\\\">\\n           <xul:hbox class=\\\"tab-drop-indicator\\\" mousethrough=\\\"always\\\"/>\\n         </xul:hbox>\\n         <xul:hbox class=\\\"tabbrowser-strip\\\" collapsed=\\\"true\\\" tooltip=\\\"_child\\\" context=\\\"_child\\\"\\n@@ -1753,7 +1753,7 @@\\n                 (aEvent.screenX >= aDragSession.sourceNode.boxObject.screenX &&\\n                  aEvent.screenX <= (aDragSession.sourceNode.boxObject.screenX +\\n                                     aDragSession.sourceNode.boxObject.width)))\\n-                return false;\\n+              return false;\\n             return true;\\n           ]]>\\n         </body>\\n@@ -1761,6 +1761,7 @@\\n \\n       <field name=\\\"mDragTime\\\">0</field>\\n       <field name=\\\"mDragOverDelay\\\">350</field>\\n+\\n       <method name=\\\"onDragOver\\\">\\n         <parameter name=\\\"aEvent\\\"/>\\n         <parameter name=\\\"aFlavour\\\"/>\\n@@ -1797,98 +1798,59 @@\\n             }\\n \\n             var newIndex = this.getNewIndex(aEvent);\\n-\\n             var ib = this.mTabDropIndicatorBar;\\n             var ind = ib.firstChild;\\n-            ib.setAttribute('dragging',\\n-               aDragSession.canDrop ? 'true' : 'false');\\n-\\n             var tabStripBoxObject = tabStrip.scrollBoxObject;\\n-            var halfIndWidth = Math.floor((ind.boxObject.width + 1) / 2);\\n-            if (window.getComputedStyle(this.parentNode, null)\\n-                      .direction == \\\"ltr\\\") {\\n-              var newMarginLeft;\\n-              var minMarginLeft = tabStripBoxObject.x - halfIndWidth -\\n-                                  ib.boxObject.x;\\n-              // make sure we don't place the tab drop indicator past the\\n-              // edge, or the containing box will flex and stretch\\n-              // the tab drop indicator bar, which will flex the url bar.  \\n-              // XXX todo\\n-              // just use first value if you can figure out how to get\\n-              // the tab drop indicator to crop instead of flex and stretch\\n-              // the tab drop indicator bar.\\n-              var maxMarginLeft = Math.min(\\n-                (minMarginLeft + tabStripBoxObject.width), \\n-                (ib.boxObject.x + ib.boxObject.width - ind.boxObject.width));\\n-\\n+            var minMargin = tabStripBoxObject.x - this.boxObject.x;\\n+            // make sure we don't place the tab drop indicator past the\\n+            // edge, or the containing box will flex and stretch\\n+            // the tab drop indicator bar, which will flex the url bar.  \\n+            // XXX todo\\n+            // just use first value if you can figure out how to get\\n+            // the tab drop indicator to crop instead of flex and stretch\\n+            // the tab drop indicator bar.\\n+            var maxMargin = Math.min(minMargin + tabStripBoxObject.width, \\n+                                     ib.boxObject.x + ib.boxObject.width -\\n+                                     ind.boxObject.width);\\n+            var newMargin, tabBoxObject;\\n+            var ltr = (window.getComputedStyle(this.parentNode, null).direction\\n+                       == \\\"ltr\\\");\\n+            if (pixelsToScroll) {\\n               // if we are scrolling, put the drop indicator at the edge\\n               // so that it doesn't jump while scrolling\\n-              if (pixelsToScroll > 0)\\n-                newMarginLeft = maxMarginLeft;\\n-              else if (pixelsToScroll < 0)\\n-                newMarginLeft = minMarginLeft;\\n-              else {\\n+              newMargin = (pixelsToScroll > 0) ? maxMargin : minMargin;\\n+            }\\n+            else {\\n               if (newIndex == this.mTabs.length) {\\n-                  newMarginLeft = this.mTabs[newIndex-1].boxObject.screenX +\\n-                                  this.mTabs[newIndex-1].boxObject.width - \\n-                                  this.boxObject.screenX - halfIndWidth;\\n-              } else {\\n-                  newMarginLeft = this.mTabs[newIndex].boxObject.screenX - \\n-                                  this.boxObject.screenX - halfIndWidth;\\n-              }\\n-\\n-              // ensure we never place the drop indicator beyond\\n-              // our limits\\n-              if (newMarginLeft < minMarginLeft)\\n-                newMarginLeft = minMarginLeft;\\n-              else if (newMarginLeft > maxMarginLeft)\\n-                newMarginLeft = maxMarginLeft;\\n+                tabBoxObject =  this.mTabs[newIndex-1].boxObject;\\n+                if (ltr)\\n+                  newMargin = tabBoxObject.screenX - this.boxObject.screenX\\n+                              + tabBoxObject.width;\\n+                else\\n+                  newMargin = this.boxObject.screenX - tabBoxObject.screenX\\n+                              + this.boxObject.width;\\n               }\\n-              ind.style.marginLeft = newMarginLeft + 'px';\\n-            } else {\\n-              var newMarginRight;\\n-              var minMarginRight = tabStripBoxObject.x - halfIndWidth -\\n-                                   ib.boxObject.x;\\n-              // make sure we don't place the tab drop indicator past the\\n-              // edge, or the containing box will flex and stretch\\n-              // the tab drop indicator bar, which will flex the url bar.  \\n-              // XXX todo\\n-              // just use first value if you can figure out how to get\\n-              // the tab drop indicator to crop instead of flex and stretch\\n-              // the tab drop indicator bar.\\n-              var maxMarginRight = Math.min(\\n-                (minMarginRight + tabStripBoxObject.width), \\n-                (ib.boxObject.x + ib.boxObject.width - ind.boxObject.width));\\n-\\n-              // if we are scrolling, put the drop indicator at the edge\\n-              // so that it doesn't jump while scrolling\\n-              if (pixelsToScroll > 0)\\n-                newMarginRight = maxMarginRight;\\n-              else if (pixelsToScroll < 0)\\n-                newMarginRight = minMarginRight;\\n               else {\\n-                if (newIndex == this.mTabs.length) {\\n-                    newMarginRight = this.boxObject.width + \\n-                                     this.boxObject.screenX -\\n-                                     this.mTabs[newIndex-1].boxObject.screenX -\\n-                                     halfIndWidth;\\n-                } else {\\n-                    newMarginRight = this.boxObject.width + \\n-                                     this.boxObject.screenX -\\n-                                     this.mTabs[newIndex].boxObject.screenX -\\n-                                     this.mTabs[newIndex].boxObject.width -\\n-                                     halfIndWidth;\\n-                }\\n-\\n-                // ensure we never place the drop indicator beyond\\n-                // our limits\\n-                if (newMarginRight < minMarginRight)\\n-                  newMarginRight = minMarginRight;\\n-                else if (newMarginRight > maxMarginRight)\\n-                  newMarginRight = maxMarginRight;\\n+                tabBoxObject =  this.mTabs[newIndex].boxObject;\\n+                if (ltr)\\n+                  newMargin = tabBoxObject.screenX - this.boxObject.screenX;\\n+                else\\n+                  newMargin = this.boxObject.screenX - tabBoxObject.screenX\\n+                              + this.boxObject.width - tabBoxObject.width;\\n               }\\n-              ind.style.marginRight = newMarginRight + 'px';\\n+              // ensure we never place the drop indicator beyond our limits\\n+              if (newMargin < minMargin)\\n+                newMargin = minMargin;\\n+              else if (newMargin > maxMargin)\\n+                newMargin = maxMargin;\\n             }\\n+\\n+            if (ltr)\\n+              ind.style.marginLeft = newMargin + 'px';\\n+            else\\n+              ind.style.marginRight = newMargin + 'px';\\n+\\n+            ib.collapsed = !aDragSession.canDrop;\\n           ]]>\\n         </body>\\n       </method>\\n@@ -1963,14 +1925,7 @@\\n               if (target)\\n                 return;\\n             }\\n-            this.mTabDropIndicatorBar.setAttribute('dragging','false');\\n-\\n-            // FIXME: bug 390979 - we need to reset the horizontal margins on the\\n-            // tab-drop indicator here to avoid impacting tabbar resizing. This\\n-            // shouldn't be necessary once we can collapse the indicator.\\n-            var dropIndicator = this.mTabDropIndicatorBar.firstChild;\\n-            dropIndicator.style.marginRight = \\\"0px\\\";\\n-            dropIndicator.style.marginLeft = \\\"0px\\\";\\n+            this.mTabDropIndicatorBar.collapsed = true;\\n           ]]>\\n         </body>\\n       </method>\\n@@ -2033,11 +1988,10 @@\\n                 if (aEvent.screenX < this.mTabs[i].boxObject.screenX + this.mTabs[i].boxObject.width / 2) \\n                   return i;\\n             } else {\\n-               for (i = aEvent.target.localName == \\\"tab\\\" ? aEvent.target._tPos : 0; i < this.mTabs.length; i++)\\n+              for (i = aEvent.target.localName == \\\"tab\\\" ? aEvent.target._tPos : 0; i < this.mTabs.length; i++)\\n                 if (aEvent.screenX > this.mTabs[i].boxObject.screenX + this.mTabs[i].boxObject.width / 2)\\n                   return i;\\n             }\\n-\\n             return this.mTabs.length;\\n           ]]>\\n         </body>\\n@@ -2090,7 +2044,7 @@\\n             var tabPos = this.mCurrentTab._tPos;\\n             if (tabPos < this.browsers.length - 1) {\\n               this.moveTabTo(this.mCurrentTab,\\n-                                        this.browsers.length - 1);\\n+                             this.browsers.length - 1);\\n               this.mCurrentTab.focus();\\n             }\\n           ]]>\\ndiff --git a/browser/themes/pinstripe/browser/browser.css b/browser/themes/pinstripe/browser/browser.css\\nindex bd1a494..a8f9281 100755\\n--- a/browser/themes/pinstripe/browser/browser.css\\n+++ b/browser/themes/pinstripe/browser/browser.css\\n@@ -1232,10 +1232,6 @@ toolbarbutton.chevron > .toolbarbutton-menu-dropmarker {\\n \\n /* ::::: tabbrowser ::::: */\\n \\n-.tabs-left {\\n-\\tdisplay: none !important;\\n-}\\n-\\n .tabbrowser-tab:not([selected=\\\"true\\\"]):hover {\\n   background: url(\\\"chrome://browser/skin/tabbrowser/tabbrowser-tabs-bkgnd.png\\\") repeat-x;\\n }\\n@@ -1298,10 +1294,6 @@ toolbarbutton.chevron > .toolbarbutton-menu-dropmarker {\\n   color: #000000;\\n }\\n \\n-.tabbrowser-tab[first-tab=\\\"true\\\"] > .tab-image-left {\\n-  margin-left: 3px !important;\\n-}\\n-\\n .tab-image-left, .tab-image-right {\\n   width: 8px;\\n   margin: 0px;\\n@@ -1394,32 +1386,43 @@ toolbarbutton.chevron > .toolbarbutton-menu-dropmarker {\\n   margin: 0px !important;\\n }\\n \\n+.tabs-left {\\n+  display: -moz-box;\\n+  width: 3px;\\n+}\\n+\\n+.tabbrowser-tabs[overflow=\\\"true\\\"] .tabs-left {\\n+  display: none;\\n+}\\n+\\n tabbrowser > tabbox > tabpanels {\\n   -moz-appearance: none !important;\\n }\\n \\n+/**\\n+ * Tab Drag and Drop\\n+ */\\n+\\n .tab-drop-indicator-bar {\\n-   visibility: hidden;\\n-   height: 9px;\\n-   margin-top: -9px;\\n-   position: relative;\\n+  height: 10px;\\n+  margin-top: -10px;\\n+  position: relative;\\n+  /* set -moz-margin-start to -1/2 indicator width: */\\n+  -moz-margin-start: -4px;\\n }\\n \\n .tab-drop-indicator {\\n-   height: 9px;\\n-   width: 9px;\\n-   margin-bottom: -5px;\\n-   position: relative;\\n-   background: url('chrome://browser/skin/tabbrowser/tabDragIndicator.png') 50% 50% no-repeat;\\n-}\\n-\\n-.tab-drop-indicator-bar[dragging=\\\"true\\\"] {\\n-   visibility: visible;\\n+  height: 10px;\\n+  width: 8px;\\n+  margin-bottom: -5px;\\n+  position: relative;\\n+  background: url('chrome://browser/skin/tabbrowser/tabDragIndicator.png') 50% 50% no-repeat;\\n }\\n \\n /**\\n  * In-tab close button\\n  */\\n+\\n .tab-close-button > .toolbarbutton-icon {\\n   -moz-margin-end: 0px !important;\\n   margin-top: 2px;\\ndiff --git a/browser/themes/pinstripe/browser/tabbrowser/tabDragIndicator.png b/browser/themes/pinstripe/browser/tabbrowser/tabDragIndicator.png\\nindex c50c408..6fd49c7 100755\\nBinary files a/browser/themes/pinstripe/browser/tabbrowser/tabDragIndicator.png and b/browser/themes/pinstripe/browser/tabbrowser/tabDragIndicator.png differ\\ndiff --git a/browser/themes/winstripe/browser/browser.css b/browser/themes/winstripe/browser/browser.css\\nindex 784b297..c3e012d 100644\\n--- a/browser/themes/winstripe/browser/browser.css\\n+++ b/browser/themes/winstripe/browser/browser.css\\n@@ -1340,22 +1340,19 @@ tabpanels {\\n  */\\n \\n .tab-drop-indicator-bar {\\n-    visibility: hidden;\\n-    height: 9px;\\n-    margin-top: -9px;\\n-    position: relative;\\n+  height: 11px;\\n+  margin-top: -11px;\\n+  position: relative;\\n+  /* set -moz-margin-start to -1/2 indicator width: */\\n+  -moz-margin-start: -5px;\\n }\\n \\n .tab-drop-indicator {\\n-    height: 9px;\\n-    width: 9px;\\n-    margin-bottom: -5px;\\n-    position: relative;\\n-    background: url('chrome://browser/skin/tabbrowser/tabDragIndicator.png') 50% 50% no-repeat;\\n-}\\n-\\n-.tab-drop-indicator-bar[dragging=\\\"true\\\"] {\\n-    visibility: visible;\\n+  height: 11px;\\n+  width: 11px;\\n+  margin-bottom: -5px;\\n+  position: relative;\\n+  background: url('chrome://browser/skin/tabbrowser/tabDragIndicator.png') 50% 50% no-repeat;\\n }\\n \\n /**\\n\""}