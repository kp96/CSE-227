{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas65155d8\""},"diff":"\"65155d8 Bug 397159 - New style nsSVGBoolean. r=tor,sr=roc,a=roc\\ndiff --git a/content/svg/content/src/Makefile.in b/content/svg/content/src/Makefile.in\\nindex c475cfd..468e13d 100644\\n--- a/content/svg/content/src/Makefile.in\\n+++ b/content/svg/content/src/Makefile.in\\n@@ -72,13 +72,13 @@ CPPSRCS\\t\\t= \\\\\\n \\t\\tnsSVGAElement.cpp \\\\\\n \\t\\tnsSVGAngle.cpp \\\\\\n \\t\\tnsSVGAnimatedAngle.cpp \\\\\\n-\\t\\tnsSVGAnimatedBoolean.cpp \\\\\\n \\t\\tnsSVGAnimatedLengthList.cpp \\\\\\n \\t\\tnsSVGAnimatedNumberList.cpp \\\\\\n \\t\\tnsSVGAnimatedRect.cpp \\\\\\n \\t\\tnsSVGAnimatedPreserveAspectRatio.cpp \\\\\\n \\t\\tnsSVGAnimatedString.cpp \\\\\\n \\t\\tnsSVGAnimatedTransformList.cpp \\\\\\n+\\t\\tnsSVGBoolean.cpp \\\\\\n \\t\\tnsSVGCircleElement.cpp \\\\\\n \\t\\tnsSVGClassValue.cpp \\\\\\n \\t\\tnsSVGClipPathElement.cpp \\\\\\ndiff --git a/content/svg/content/src/nsSVGAnimatedBoolean.cpp b/content/svg/content/src/nsSVGAnimatedBoolean.cpp\\ndeleted file mode 100644\\nindex 844c1f0..0000000\\n--- a/content/svg/content/src/nsSVGAnimatedBoolean.cpp\\n+++ /dev/null\\n@@ -1,173 +0,0 @@\\n-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\\n-/* ----- BEGIN LICENSE BLOCK -----\\n- * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n- *\\n- * The contents of this file are subject to the Mozilla Public License\\n- * Version 1.1 (the \\\"License\\\"); you may not use this file except in\\n- * compliance with the License. You may obtain a copy of the License at\\n- * http://www.mozilla.org/MPL/\\n- *\\n- * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n- * for the specific language governing rights and limitations under the\\n- * License.\\n- *\\n- * The Original Code is the Mozilla SVG project.\\n- *\\n- * The Initial Developer of the Original Code is IBM Corporation.\\n- * Portions created by the Initial Developer are Copyright (C) 2007\\n- * the Initial Developer. All Rights Reserved.\\n- *\\n- * Contributor(s):\\n- *\\n- * Alternatively, the contents of this file may be used under the terms of\\n- * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or \\n- * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n- * in which case the provisions of the GPL or the LGPL are applicable instead\\n- * of those above. If you wish to allow use of your version of this file only\\n- * under the terms of either the GPL or the LGPL, and not to allow others to\\n- * use your version of this file under the terms of the NPL, indicate your\\n- * decision by deleting the provisions above and replace them with the notice\\n- * and other provisions required by the GPL or the LGPL. If you do not delete\\n- * the provisions above, a recipient may use your version of this file under\\n- * the terms of any one of the MPL, the GPL or the LGPL.\\n- *\\n- * ----- END LICENSE BLOCK ----- */\\n-\\n-#include \\\"nsSVGAnimatedBoolean.h\\\"\\n-#include \\\"nsSVGValue.h\\\"\\n-#include \\\"nsISVGValueUtils.h\\\"\\n-#include \\\"nsDOMError.h\\\"\\n-#include \\\"nsContentUtils.h\\\"\\n-\\n-\\n-////////////////////////////////////////////////////////////////////////\\n-// nsSVGAnimatedBoolean\\n-\\n-class nsSVGAnimatedBoolean : public nsIDOMSVGAnimatedBoolean,\\n-                             public nsSVGValue\\n-{\\n-protected:\\n-  friend nsresult NS_NewSVGAnimatedBoolean(nsIDOMSVGAnimatedBoolean** result,\\n-                                           PRBool aBaseVal);\\n-  void Init(PRBool aBaseVal);\\n-\\n-public:\\n-  // nsISupports interface:\\n-  NS_DECL_ISUPPORTS\\n-\\n-  // nsIDOMSVGAnimatedBoolean interface:\\n-  NS_DECL_NSIDOMSVGANIMATEDBOOLEAN\\n-\\n-  // remainder of nsISVGValue interface:\\n-  NS_IMETHOD SetValueString(const nsAString& aValue);\\n-  NS_IMETHOD GetValueString(nsAString& aValue);\\n-\\n-protected:\\n-  PRPackedBool mBaseVal;\\n-};\\n-\\n-\\n-//----------------------------------------------------------------------\\n-// Implementation\\n-\\n-void\\n-nsSVGAnimatedBoolean::Init(PRBool aBaseVal)\\n-{\\n-  mBaseVal = aBaseVal;\\n-}\\n-\\n-//----------------------------------------------------------------------\\n-// nsISupports methods:\\n-\\n-NS_IMPL_ADDREF(nsSVGAnimatedBoolean)\\n-NS_IMPL_RELEASE(nsSVGAnimatedBoolean)\\n-\\n-NS_INTERFACE_MAP_BEGIN(nsSVGAnimatedBoolean)\\n-  NS_INTERFACE_MAP_ENTRY(nsISVGValue)\\n-  NS_INTERFACE_MAP_ENTRY(nsIDOMSVGAnimatedBoolean)\\n-  NS_INTERFACE_MAP_ENTRY_CONTENT_CLASSINFO(SVGAnimatedBoolean)\\n-  NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsISVGValue)\\n-NS_INTERFACE_MAP_END\\n-\\n-//----------------------------------------------------------------------\\n-// nsISVGValue methods:\\n-\\n-NS_IMETHODIMP\\n-nsSVGAnimatedBoolean::SetValueString(const nsAString& aValue)\\n-{\\n-  nsresult rv = NS_OK;\\n-  WillModify();\\n-\\n-  if (aValue.EqualsLiteral(\\\"true\\\"))\\n-    mBaseVal = PR_TRUE;\\n-  else if (aValue.EqualsLiteral(\\\"false\\\"))\\n-    mBaseVal = PR_FALSE;\\n-  else\\n-    rv = NS_ERROR_FAILURE;\\n-\\n-  DidModify();\\n-  return rv;\\n-}\\n-\\n-NS_IMETHODIMP\\n-nsSVGAnimatedBoolean::GetValueString(nsAString& aValue)\\n-{\\n-  aValue.Assign(mBaseVal\\n-                ? NS_LITERAL_STRING(\\\"true\\\")\\n-                : NS_LITERAL_STRING(\\\"false\\\"));\\n-\\n-  return NS_OK;\\n-}\\n-\\n-//----------------------------------------------------------------------\\n-// nsIDOMSVGAnimatedBoolean methods:\\n-\\n-/* attribute nsIDOMSVGNumber baseVal; */\\n-NS_IMETHODIMP\\n-nsSVGAnimatedBoolean::GetBaseVal(PRBool *aBaseVal)\\n-{\\n-  *aBaseVal = mBaseVal;\\n-  return NS_OK;\\n-}\\n-\\n-/* attribute nsIDOMSVGNumber baseVal; */\\n-NS_IMETHODIMP\\n-nsSVGAnimatedBoolean::SetBaseVal(PRBool aBaseVal)\\n-{\\n-  if (mBaseVal != aBaseVal &&\\n-      (aBaseVal == PR_TRUE || aBaseVal == PR_FALSE)) {\\n-    WillModify();\\n-    mBaseVal = aBaseVal;\\n-    DidModify();\\n-  }\\n-  return NS_OK;\\n-}\\n-\\n-/* readonly attribute nsIDOMSVGNumber animVal; */\\n-NS_IMETHODIMP\\n-nsSVGAnimatedBoolean::GetAnimVal(PRBool *aAnimVal)\\n-{\\n-  *aAnimVal = mBaseVal;\\n-  return NS_OK;\\n-}\\n-\\n-////////////////////////////////////////////////////////////////////////\\n-// Exported creation functions\\n-\\n-nsresult\\n-NS_NewSVGAnimatedBoolean(nsIDOMSVGAnimatedBoolean** aResult,\\n-                         PRBool aBaseVal)\\n-{\\n-  *aResult = nsnull;\\n-\\n-  nsSVGAnimatedBoolean* animatedBoolean = new nsSVGAnimatedBoolean();\\n-  if (!animatedBoolean) return NS_ERROR_OUT_OF_MEMORY;\\n-  NS_ADDREF(animatedBoolean);\\n-\\n-  animatedBoolean->Init(aBaseVal);\\n-\\n-  *aResult = (nsIDOMSVGAnimatedBoolean*) animatedBoolean;\\n-\\n-  return NS_OK;\\n-}\\ndiff --git a/content/svg/content/src/nsSVGAnimatedBoolean.h b/content/svg/content/src/nsSVGAnimatedBoolean.h\\ndeleted file mode 100644\\nindex 7a37ff0..0000000\\n--- a/content/svg/content/src/nsSVGAnimatedBoolean.h\\n+++ /dev/null\\n@@ -1,47 +0,0 @@\\n-/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\\n-/* ----- BEGIN LICENSE BLOCK -----\\n- * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n- *\\n- * The contents of this file are subject to the Mozilla Public License\\n- * Version 1.1 (the \\\"License\\\"); you may not use this file except in\\n- * compliance with the License. You may obtain a copy of the License at\\n- * http://www.mozilla.org/MPL/\\n- *\\n- * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n- * for the specific language governing rights and limitations under the\\n- * License.\\n- *\\n- * The Original Code is the Mozilla SVG project.\\n- *\\n- * The Initial Developer of the Original Code is IBM Corporation.\\n- * Portions created by the Initial Developer are Copyright (C) 2007\\n- * the Initial Developer. All Rights Reserved.\\n- *\\n- * Contributor(s):\\n- *\\n- * Alternatively, the contents of this file may be used under the terms of\\n- * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or \\n- * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n- * in which case the provisions of the GPL or the LGPL are applicable instead\\n- * of those above. If you wish to allow use of your version of this file only\\n- * under the terms of either the GPL or the LGPL, and not to allow others to\\n- * use your version of this file under the terms of the NPL, indicate your\\n- * decision by deleting the provisions above and replace them with the notice\\n- * and other provisions required by the GPL or the LGPL. If you do not delete\\n- * the provisions above, a recipient may use your version of this file under\\n- * the terms of any one of the MPL, the GPL or the LGPL.\\n- *\\n- * ----- END LICENSE BLOCK ----- */\\n-\\n-#ifndef __NS_SVGANIMATEDBOOLEAN_H__\\n-#define __NS_SVGANIMATEDBOOLEAN_H__\\n-\\n-#include \\\"nsIDOMSVGAnimatedBoolean.h\\\"\\n-\\n-nsresult NS_NewSVGAnimatedBoolean(nsIDOMSVGAnimatedBoolean** result,\\n-                                  PRBool baseVal);\\n-\\n-#endif //__NS_SVGANIMATEDBOOLEAN_H__\\n-\\n-\\ndiff --git a/content/svg/content/src/nsSVGBoolean.cpp b/content/svg/content/src/nsSVGBoolean.cpp\\nnew file mode 100644\\nindex 0000000..948229e\\n--- /dev/null\\n+++ b/content/svg/content/src/nsSVGBoolean.cpp\\n@@ -0,0 +1,96 @@\\n+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is the Mozilla SVG project.\\n+ *\\n+ * The Initial Developer of the Original Code is Robert Longson.\\n+ * Portions created by the Initial Developer are Copyright (C) 2007\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n+ * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by deleting the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not delete\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL.\\n+ *\\n+ * ***** END LICENSE BLOCK ***** */\\n+\\n+#include \\\"nsSVGBoolean.h\\\"\\n+\\n+NS_IMPL_ADDREF(nsSVGBoolean::DOMAnimatedBoolean)\\n+NS_IMPL_RELEASE(nsSVGBoolean::DOMAnimatedBoolean)\\n+\\n+NS_INTERFACE_MAP_BEGIN(nsSVGBoolean::DOMAnimatedBoolean)\\n+  NS_INTERFACE_MAP_ENTRY(nsIDOMSVGAnimatedBoolean)\\n+  NS_INTERFACE_MAP_ENTRY(nsISupports)\\n+  NS_INTERFACE_MAP_ENTRY_CONTENT_CLASSINFO(SVGAnimatedBoolean)\\n+NS_INTERFACE_MAP_END\\n+\\n+/* Implementation */\\n+\\n+nsresult\\n+nsSVGBoolean::SetBaseValueString(const nsAString &aValueAsString,\\n+                                 nsSVGElement *aSVGElement,\\n+                                 PRBool aDoSetAttr)\\n+{\\n+  PRBool val;\\n+\\n+  if (aValueAsString.EqualsLiteral(\\\"true\\\"))\\n+    val = PR_TRUE;\\n+  else if (aValueAsString.EqualsLiteral(\\\"false\\\"))\\n+    val = PR_FALSE;\\n+  else\\n+    return NS_ERROR_FAILURE;\\n+\\n+  mBaseVal = mAnimVal = val;\\n+  return NS_OK;\\n+}\\n+\\n+void\\n+nsSVGBoolean::GetBaseValueString(nsAString & aValueAsString)\\n+{\\n+  aValueAsString.Assign(mBaseVal\\n+                        ? NS_LITERAL_STRING(\\\"true\\\")\\n+                        : NS_LITERAL_STRING(\\\"false\\\"));\\n+}\\n+\\n+void\\n+nsSVGBoolean::SetBaseValue(int aValue,\\n+                           nsSVGElement *aSVGElement,\\n+                           PRBool aDoSetAttr)\\n+{\\n+  mAnimVal = mBaseVal = aValue;\\n+  aSVGElement->DidChangeBoolean(mAttrEnum, aDoSetAttr);\\n+}\\n+\\n+nsresult\\n+nsSVGBoolean::ToDOMAnimatedBoolean(nsIDOMSVGAnimatedBoolean **aResult,\\n+                                   nsSVGElement *aSVGElement)\\n+{\\n+  *aResult = new DOMAnimatedBoolean(this, aSVGElement);\\n+  if (!*aResult)\\n+    return NS_ERROR_OUT_OF_MEMORY;\\n+\\n+  NS_ADDREF(*aResult);\\n+  return NS_OK;\\n+}\\n+\\ndiff --git a/content/svg/content/src/nsSVGBoolean.h b/content/svg/content/src/nsSVGBoolean.h\\nnew file mode 100644\\nindex 0000000..363961b\\n--- /dev/null\\n+++ b/content/svg/content/src/nsSVGBoolean.h\\n@@ -0,0 +1,93 @@\\n+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is the Mozilla SVG project.\\n+ *\\n+ * The Initial Developer of the Original Code is Robert Longson.\\n+ * Portions created by the Initial Developer are Copyright (C) 2007\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either of the GNU General Public License Version 2 or later (the \\\"GPL\\\"),\\n+ * or the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by deleting the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not delete\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL.\\n+ *\\n+ * ***** END LICENSE BLOCK ***** */\\n+\\n+#ifndef __NS_SVGBOOLEAN_H__\\n+#define __NS_SVGBOOLEAN_H__\\n+\\n+#include \\\"nsIDOMSVGAnimatedBoolean.h\\\"\\n+#include \\\"nsSVGElement.h\\\"\\n+#include \\\"nsDOMError.h\\\"\\n+\\n+class nsSVGBoolean\\n+{\\n+\\n+public:\\n+    void Init(PRUint8 aAttrEnum = 0xff, PRBool aValue = PR_FALSE) {\\n+    mAnimVal = mBaseVal = aValue;\\n+    mAttrEnum = aAttrEnum;\\n+  }\\n+\\n+  nsresult SetBaseValueString(const nsAString& aValue,\\n+                              nsSVGElement *aSVGElement,\\n+                              PRBool aDoSetAttr);\\n+  void GetBaseValueString(nsAString& aValue);\\n+\\n+  void SetBaseValue(PRBool aValue, nsSVGElement *aSVGElement, PRBool aDoSetAttr);\\n+  PRBool GetBaseValue() const\\n+    { return mBaseVal; }\\n+  PRBool GetAnimValue() const\\n+    { return mAnimVal; }\\n+\\n+  nsresult ToDOMAnimatedBoolean(nsIDOMSVGAnimatedBoolean **aResult,\\n+                                nsSVGElement* aSVGElement);\\n+\\n+private:\\n+\\n+  PRPackedBool mAnimVal;\\n+  PRPackedBool mBaseVal;\\n+  PRUint8 mAttrEnum; // element specified tracking for attribute\\n+\\n+  struct DOMAnimatedBoolean : public nsIDOMSVGAnimatedBoolean\\n+  {\\n+    NS_DECL_ISUPPORTS\\n+\\n+    DOMAnimatedBoolean(nsSVGBoolean* aVal, nsSVGElement *aSVGElement)\\n+      : mVal(aVal), mSVGElement(aSVGElement) {}\\n+\\n+    nsSVGBoolean* mVal; // kept alive because it belongs to content\\n+    nsRefPtr<nsSVGElement> mSVGElement;\\n+\\n+    NS_IMETHOD GetBaseVal(PRBool* aResult)\\n+      { *aResult = mVal->GetBaseValue(); return NS_OK; }\\n+    NS_IMETHOD SetBaseVal(PRBool aValue)\\n+      { mVal->SetBaseValue(aValue, mSVGElement, PR_TRUE); return NS_OK; }\\n+    NS_IMETHOD GetAnimVal(PRBool* aResult)\\n+      { *aResult = mVal->GetAnimValue(); return NS_OK; }\\n+\\n+  };\\n+\\n+};\\n+#endif //__NS_SVGBOOLEAN_H__\\ndiff --git a/content/svg/content/src/nsSVGElement.cpp b/content/svg/content/src/nsSVGElement.cpp\\nindex afbb654..14d06dd 100644\\n--- a/content/svg/content/src/nsSVGElement.cpp\\n+++ b/content/svg/content/src/nsSVGElement.cpp\\n@@ -68,6 +68,7 @@\\n #include \\\"nsSVGLength2.h\\\"\\n #include \\\"nsSVGNumber2.h\\\"\\n #include \\\"nsSVGInteger.h\\\"\\n+#include \\\"nsSVGBoolean.h\\\"\\n #include \\\"nsSVGEnum.h\\\"\\n #include \\\"nsIDOMSVGUnitTypes.h\\\"\\n #include \\\"nsIDOMSVGAngle.h\\\"\\n@@ -130,6 +131,12 @@ nsSVGElement::Init()\\n     integerInfo.mIntegers[i].Init(i, integerInfo.mIntegerInfo[i].mDefaultValue);\\n   }\\n \\n+  BooleanAttributesInfo booleanInfo = GetBooleanInfo();\\n+\\n+  for (i = 0; i < booleanInfo.mBooleanCount; i++) {\\n+    booleanInfo.mBooleans[i].Init(i, booleanInfo.mBooleanInfo[i].mDefaultValue);\\n+  }\\n+\\n   EnumAttributesInfo enumInfo = GetEnumInfo();\\n \\n   for (i = 0; i < enumInfo.mEnumCount; i++) {\\n@@ -277,6 +284,15 @@ nsSVGElement::ParseAttribute(PRInt32 aNamespaceID,\\n       }\\n     }\\n \\n+    // Check for nsSVGBoolean attribute\\n+    BooleanAttributesInfo booleanInfo = GetBooleanInfo();\\n+    for (PRUint32 i = 0; i < booleanInfo.mBooleanCount && !foundMatch; i++) {\\n+      if (aAttribute == *booleanInfo.mBooleanInfo[i].mName) {\\n+        rv = booleanInfo.mBooleans[i].SetBaseValueString(aValue, this, PR_FALSE);\\n+        foundMatch = PR_TRUE;\\n+      }\\n+    }\\n+\\n     // Check for nsSVGEnum attribute\\n     EnumAttributesInfo enumInfo = GetEnumInfo();\\n     for (PRUint32 i = 0; i < enumInfo.mEnumCount && !foundMatch; i++) {\\n@@ -350,6 +366,16 @@ nsSVGElement::UnsetAttr(PRInt32 aNamespaceID, nsIAtom* aName,\\n         }\\n       }\\n \\n+      // Check if this is a boolean attribute going away\\n+      BooleanAttributesInfo boolInfo = GetBooleanInfo();\\n+\\n+      for (i = 0; i < boolInfo.mBooleanCount; i++) {\\n+        if (aName == *boolInfo.mBooleanInfo[i].mName) {\\n+          boolInfo.mBooleans[i].Init(i, boolInfo.mBooleanInfo[i].mDefaultValue);\\n+          DidChangeBoolean(i, PR_FALSE);\\n+        }\\n+      }\\n+\\n       // Check if this is an enum attribute going away\\n       EnumAttributesInfo enumInfo = GetEnumInfo();\\n \\n@@ -367,9 +393,6 @@ nsSVGElement::UnsetAttr(PRInt32 aNamespaceID, nsIAtom* aName,\\n #ifdef DEBUG_tor\\n         nsCOMPtr<nsIDOMSVGAnimatedAngle> a = do_QueryInterface(svg_value);\\n         NS_ASSERTION(!a, \\\"must provide element processing for unset angle\\\");\\n-\\n-        nsCOMPtr<nsIDOMSVGAnimatedBoolean> b = do_QueryInterface(svg_value);\\n-        NS_ASSERTION(!b, \\\"must provide element processing for unset boolean\\\");\\n #endif\\n \\n         nsCOMPtr<nsIDOMSVGAnimatedRect> r = do_QueryInterface(svg_value);\\n@@ -1040,6 +1063,32 @@ nsSVGElement::GetAnimatedIntegerValues(PRInt32 *aFirst, ...)\\n   va_end(args);\\n }\\n \\n+nsSVGElement::BooleanAttributesInfo\\n+nsSVGElement::GetBooleanInfo()\\n+{\\n+  return BooleanAttributesInfo(nsnull, nsnull, 0);\\n+}\\n+\\n+void\\n+nsSVGElement::DidChangeBoolean(PRUint8 aAttrEnum, PRBool aDoSetAttr)\\n+{\\n+  if (!aDoSetAttr)\\n+    return;\\n+\\n+  BooleanAttributesInfo info = GetBooleanInfo();\\n+\\n+  NS_ASSERTION(info.mBooleanCount > 0,\\n+               \\\"DidChangeInteger on element with no boolean attribs\\\");\\n+\\n+  NS_ASSERTION(aAttrEnum < info.mBooleanCount, \\\"aAttrEnum out of range\\\");\\n+\\n+  nsAutoString newStr;\\n+  info.mBooleans[aAttrEnum].GetBaseValueString(newStr);\\n+\\n+  SetAttr(kNameSpaceID_None, *info.mBooleanInfo[aAttrEnum].mName,\\n+          newStr, PR_TRUE);\\n+}\\n+\\n nsSVGElement::EnumAttributesInfo\\n nsSVGElement::GetEnumInfo()\\n {\\ndiff --git a/content/svg/content/src/nsSVGElement.h b/content/svg/content/src/nsSVGElement.h\\nindex 31671c5..e634deb 100644\\n--- a/content/svg/content/src/nsSVGElement.h\\n+++ b/content/svg/content/src/nsSVGElement.h\\n@@ -58,6 +58,7 @@ class nsSVGSVGElement;\\n class nsSVGLength2;\\n class nsSVGNumber2;\\n class nsSVGInteger;\\n+class nsSVGBoolean;\\n class nsSVGEnum;\\n struct nsSVGEnumMapping;\\n \\n@@ -120,6 +121,7 @@ public:\\n   virtual void DidChangeLength(PRUint8 aAttrEnum, PRBool aDoSetAttr);\\n   virtual void DidChangeNumber(PRUint8 aAttrEnum, PRBool aDoSetAttr);\\n   virtual void DidChangeInteger(PRUint8 aAttrEnum, PRBool aDoSetAttr);\\n+  virtual void DidChangeBoolean(PRUint8 aAttrEnum, PRBool aDoSetAttr);\\n   virtual void DidChangeEnum(PRUint8 aAttrEnum, PRBool aDoSetAttr);\\n \\n   void GetAnimatedLengthValues(float *aFirst, ...);\\n@@ -146,7 +148,6 @@ protected:\\n   \\n   static nsIAtom* GetEventNameForAttr(nsIAtom* aAttr);\\n \\n-protected:\\n   struct LengthInfo {\\n     nsIAtom** mName;\\n     float     mDefaultValue;\\n@@ -200,6 +201,23 @@ protected:\\n       {}\\n   };\\n \\n+  struct BooleanInfo {\\n+    nsIAtom**    mName;\\n+    PRPackedBool mDefaultValue;\\n+  };\\n+\\n+  struct BooleanAttributesInfo {\\n+    nsSVGBoolean* mBooleans;\\n+    BooleanInfo*  mBooleanInfo;\\n+    PRUint32      mBooleanCount;\\n+\\n+    BooleanAttributesInfo(nsSVGBoolean *aBooleans,\\n+                          BooleanInfo *aBooleanInfo,\\n+                          PRUint32 aBooleanCount) :\\n+      mBooleans(aBooleans), mBooleanInfo(aBooleanInfo), mBooleanCount(aBooleanCount)\\n+      {}\\n+  };\\n+\\n   friend class nsSVGEnum;\\n \\n   struct EnumInfo {\\n@@ -220,12 +238,11 @@ protected:\\n       {}\\n   };\\n \\n-  virtual EnumAttributesInfo GetEnumInfo();\\n-\\n-protected:\\n   virtual LengthAttributesInfo GetLengthInfo();\\n   virtual NumberAttributesInfo GetNumberInfo();\\n   virtual IntegerAttributesInfo GetIntegerInfo();\\n+  virtual BooleanAttributesInfo GetBooleanInfo();\\n+  virtual EnumAttributesInfo GetEnumInfo();\\n \\n   static nsresult ReportAttributeParseFailure(nsIDocument* aDocument,\\n                                               nsIAtom* aAttribute,\\ndiff --git a/content/svg/content/src/nsSVGFilters.cpp b/content/svg/content/src/nsSVGFilters.cpp\\nindex df15814..8b1d3ed 100644\\n--- a/content/svg/content/src/nsSVGFilters.cpp\\n+++ b/content/svg/content/src/nsSVGFilters.cpp\\n@@ -40,6 +40,7 @@\\n #include \\\"nsGkAtoms.h\\\"\\n #include \\\"nsSVGNumber2.h\\\"\\n #include \\\"nsSVGInteger.h\\\"\\n+#include \\\"nsSVGBoolean.h\\\"\\n #include \\\"nsIDOMSVGFilters.h\\\"\\n #include \\\"nsCOMPtr.h\\\"\\n #include \\\"nsISVGFilter.h\\\"\\n@@ -59,7 +60,6 @@\\n #include \\\"nsIDocument.h\\\"\\n #include \\\"nsIFrame.h\\\"\\n #include \\\"gfxContext.h\\\"\\n-#include \\\"nsSVGAnimatedBoolean.h\\\"\\n #include \\\"nsSVGLengthList.h\\\"\\n \\n //--------------------Filter Resource-----------------------\\n@@ -3237,12 +3237,11 @@ nsSVGFETurbulenceElement::Filter(nsSVGFilterInstance *instance)\\n #endif\\n \\n   float fX, fY, seed;\\n-  PRInt32 octaves;\\n+  PRInt32 octaves = mIntegerAttributes[OCTAVES].GetAnimValue();\\n   PRUint16 type = mEnumAttributes[TYPE].GetAnimValue();\\n   PRUint16 stitch = mEnumAttributes[STITCHTILES].GetAnimValue();\\n \\n   GetAnimatedNumberValues(&fX, &fY, &seed, nsnull);\\n-  GetAnimatedIntegerValues(&octaves, nsnull);\\n \\n   InitSeed((PRInt32)seed);\\n \\n@@ -3829,18 +3828,15 @@ public:\\n                                 const nsAString& aValue,\\n                                 nsAttrValue& aResult);\\n   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;\\n-  virtual nsresult UnsetAttr(PRInt32 aNamespaceID, nsIAtom* aName,\\n-                             PRBool aNotify);\\n \\n protected:\\n   virtual PRBool OperatesOnPremultipledAlpha() {\\n-    PRBool preserveAlpha;\\n-    mPreserveAlpha->GetAnimVal(&preserveAlpha);\\n-    return !preserveAlpha;\\n+    return !mBooleanAttributes[PRESERVEALPHA].GetAnimValue();\\n   }\\n \\n   virtual NumberAttributesInfo GetNumberInfo();\\n   virtual IntegerAttributesInfo GetIntegerInfo();\\n+  virtual BooleanAttributesInfo GetBooleanInfo();\\n   virtual EnumAttributesInfo GetEnumInfo();\\n \\n   enum { DIVISOR, BIAS, KERNEL_UNIT_LENGTH_X, KERNEL_UNIT_LENGTH_Y };\\n@@ -3851,13 +3847,16 @@ protected:\\n   nsSVGInteger mIntegerAttributes[4];\\n   static IntegerInfo sIntegerInfo[4];\\n \\n+  enum { PRESERVEALPHA };\\n+  nsSVGBoolean mBooleanAttributes[1];\\n+  static BooleanInfo sBooleanInfo[1];\\n+\\n   enum { EDGEMODE };\\n   nsSVGEnum mEnumAttributes[1];\\n   static nsSVGEnumMapping sEdgeModeMap[];\\n   static EnumInfo sEnumInfo[1];\\n \\n   nsCOMPtr<nsIDOMSVGAnimatedNumberList>  mKernelMatrix;\\n-  nsCOMPtr<nsIDOMSVGAnimatedBoolean> mPreserveAlpha;\\n \\n   nsCOMPtr<nsIDOMSVGAnimatedString> mIn1;\\n };\\n@@ -3878,6 +3877,11 @@ nsSVGElement::IntegerInfo nsSVGFEConvolveMatrixElement::sIntegerInfo[4] =\\n   { &nsGkAtoms::targetY, 0 }\\n };\\n \\n+nsSVGElement::BooleanInfo nsSVGFEConvolveMatrixElement::sBooleanInfo[1] =\\n+{\\n+  { &nsGkAtoms::preserveAlpha, PR_FALSE }\\n+};\\n+\\n nsSVGEnumMapping nsSVGFEConvolveMatrixElement::sEdgeModeMap[] = {\\n   {&nsGkAtoms::duplicate, nsSVGFEConvolveMatrixElement::SVG_EDGEMODE_DUPLICATE},\\n   {&nsGkAtoms::wrap, nsSVGFEConvolveMatrixElement::SVG_EDGEMODE_WRAP},\\n@@ -3933,14 +3937,6 @@ nsSVGFEConvolveMatrixElement::Init()\\n     NS_ENSURE_SUCCESS(rv,rv);\\n   }\\n \\n-  // DOM property: preserveAlpha , #IMPLIED attrib: preserveAlpha\\n-  {\\n-    rv = NS_NewSVGAnimatedBoolean(getter_AddRefs(mPreserveAlpha), PR_FALSE);\\n-    NS_ENSURE_SUCCESS(rv,rv);\\n-    rv = AddMappedSVGValue(nsGkAtoms::preserveAlpha, mPreserveAlpha);\\n-    NS_ENSURE_SUCCESS(rv,rv);\\n-  }\\n-\\n   // DOM property: in1 , #IMPLIED attrib: in\\n   {\\n     rv = NS_NewSVGAnimatedString(getter_AddRefs(mIn1));\\n@@ -4001,9 +3997,7 @@ NS_IMETHODIMP nsSVGFEConvolveMatrixElement::GetEdgeMode(nsIDOMSVGAnimatedEnumera\\n \\n NS_IMETHODIMP nsSVGFEConvolveMatrixElement::GetPreserveAlpha(nsIDOMSVGAnimatedBoolean * *aPreserveAlpha)\\n {\\n-  *aPreserveAlpha = mPreserveAlpha;\\n-  NS_IF_ADDREF(*aPreserveAlpha);\\n-  return NS_OK;\\n+  return mBooleanAttributes[PRESERVEALPHA].ToDOMAnimatedBoolean(aPreserveAlpha, this);\\n }\\n \\n NS_IMETHODIMP\\n@@ -4098,18 +4092,6 @@ nsSVGFEConvolveMatrixElement::ParseAttribute(PRInt32 aNameSpaceID, nsIAtom* aNam\\n                                                           aValue, aResult);\\n }\\n \\n-nsresult\\n-nsSVGFEConvolveMatrixElement::UnsetAttr(PRInt32 aNamespaceID, nsIAtom* aName,\\n-                                        PRBool aNotify)\\n-{\\n-  if (aNamespaceID == kNameSpaceID_None && aName == nsGkAtoms::preserveAlpha) {\\n-    mPreserveAlpha->SetBaseVal(PR_FALSE);\\n-    return nsGenericElement::UnsetAttr(aNamespaceID, aName, aNotify);\\n-  }\\n-\\n-  return nsSVGFEConvolveMatrixElementBase::UnsetAttr(aNamespaceID, aName, aNotify);\\n-}\\n-\\n #define BOUND(val, min, max) \\\\\\n   PR_MIN(PR_MAX(val, min), max)\\n \\n@@ -4182,9 +4164,6 @@ ConvolvePixel(const PRUint8 *aSourceData,\\n NS_IMETHODIMP\\n nsSVGFEConvolveMatrixElement::Filter(nsSVGFilterInstance *instance)\\n {\\n-  PRBool preserveAlpha;\\n-  mPreserveAlpha->GetAnimVal(&preserveAlpha);\\n-\\n   nsCOMPtr<nsIDOMSVGNumberList> list;\\n   mKernelMatrix->GetAnimVal(getter_AddRefs(list));\\n   PRUint32 num = 0;\\n@@ -4259,6 +4238,7 @@ nsSVGFEConvolveMatrixElement::Filter(nsSVGFilterInstance *instance)\\n #endif\\n \\n   PRUint16 edgeMode = mEnumAttributes[EDGEMODE].GetAnimValue();\\n+  PRBool preserveAlpha = mBooleanAttributes[PRESERVEALPHA].GetAnimValue();\\n \\n   float bias = 0;\\n   if (HasAttr(kNameSpaceID_None, nsGkAtoms::bias)) {\\n@@ -4306,6 +4286,13 @@ nsSVGFEConvolveMatrixElement::GetIntegerInfo()\\n                                NS_ARRAY_LENGTH(sIntegerInfo));\\n }\\n \\n+nsSVGElement::BooleanAttributesInfo\\n+nsSVGFEConvolveMatrixElement::GetBooleanInfo()\\n+{\\n+  return BooleanAttributesInfo(mBooleanAttributes, sBooleanInfo,\\n+                               NS_ARRAY_LENGTH(sBooleanInfo));\\n+}\\n+\\n nsSVGElement::EnumAttributesInfo\\n nsSVGFEConvolveMatrixElement::GetEnumInfo()\\n {\\ndiff --git a/content/svg/content/src/nsSVGInteger.cpp b/content/svg/content/src/nsSVGInteger.cpp\\nindex d042e2ba..1ace1d3 100755\\n--- a/content/svg/content/src/nsSVGInteger.cpp\\n+++ b/content/svg/content/src/nsSVGInteger.cpp\\n@@ -35,8 +35,6 @@\\n  * ***** END LICENSE BLOCK ***** */\\n \\n #include \\\"nsSVGInteger.h\\\"\\n-#include \\\"nsTextFormatter.h\\\"\\n-#include \\\"prdtoa.h\\\"\\n \\n NS_IMPL_ADDREF(nsSVGInteger::DOMAnimatedInteger)\\n NS_IMPL_RELEASE(nsSVGInteger::DOMAnimatedInteger)\\ndiff --git a/content/svg/content/src/nsSVGNumber2.h b/content/svg/content/src/nsSVGNumber2.h\\nindex 73165d6..77410ac 100644\\n--- a/content/svg/content/src/nsSVGNumber2.h\\n+++ b/content/svg/content/src/nsSVGNumber2.h\\n@@ -57,9 +57,9 @@ public:\\n   void GetBaseValueString(nsAString& aValue);\\n \\n   void SetBaseValue(float aValue, nsSVGElement *aSVGElement, PRBool aDoSetAttr);\\n-  float GetBaseValue()\\n+  float GetBaseValue() const\\n     { return mBaseVal; }\\n-  float GetAnimValue()\\n+  float GetAnimValue() const\\n     { return mAnimVal; }\\n \\n   nsresult ToDOMAnimatedNumber(nsIDOMSVGAnimatedNumber **aResult,\\n\""}