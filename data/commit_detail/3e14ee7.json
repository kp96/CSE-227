{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas3e14ee7\""},"diff":"\"3e14ee7 bug 213228: new toolkit independence bug, part 7: update and use the new toolkit widgetry. tabbrowser.xml: bug 205341, 112697, 210760 by jag, bug 121234, 133503  by neil, bug 206668 by shliang. not ported: bug 169589, [mac] ctrl-tab no longer moves btwn frames             bug 203960, go back group             bug 104778, remember what user typed when switching tabs.             bug 103720, prefill URI when opening new tab.\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 6b648a6..bab9b94 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -43,7 +43,7 @@\\n           xmlns=\\\"http://www.mozilla.org/xbl\\\"\\n           xmlns:xul=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\"\\n           xmlns:xbl=\\\"http://www.mozilla.org/xbl\\\">\\n- \\n+\\n   <binding id=\\\"tabbrowser\\\">\\n     <resources>\\n       <stylesheet src=\\\"chrome://global/skin/browser.css\\\"/>\\n@@ -51,7 +51,7 @@\\n \\n     <content>\\n       <xul:stringbundle src=\\\"chrome://global/locale/tabbrowser.properties\\\"/>\\n-      <xul:tabbox flex=\\\"1\\\"\\n+      <xul:tabbox flex=\\\"1\\\" xbl:inherits=\\\"handleCtrlPageUpDown\\\"\\n                   onselect=\\\"if (!('updateCurrentBrowser' in this.parentNode) || event.target.localName != 'tabpanels') return; this.parentNode.updateCurrentBrowser();\\\">\\n         <xul:hbox class=\\\"tabbrowser-strip chromeclass-toolbar\\\" collapsed=\\\"true\\\" tooltip=\\\"_child\\\" context=\\\"_child\\\">\\n           <xul:tooltip onpopupshowing=\\\"event.preventBubble(); if (document.tooltipNode.hasAttribute('label')) { this.setAttribute('label', document.tooltipNode.getAttribute('label')); return true; } return false;\\\"/>\\n@@ -79,6 +79,7 @@\\n \\n           <xul:tabs class=\\\"tabbrowser-tabs\\\" closebutton=\\\"true\\\" flex=\\\"1\\\"\\n                     onclick=\\\"this.parentNode.parentNode.parentNode.onTabClick(event);\\\"\\n+                    onmousedown=\\\"this.parentNode.parentNode.parentNode.updateContextTab(event);\\\"\\n                     ondragover=\\\"nsDragAndDrop.dragOver(event, this.parentNode.parentNode.parentNode);\\n                                 event.stopPropagation();\\\"\\n                     ondragdrop=\\\"nsDragAndDrop.drop(event, this.parentNode.parentNode.parentNode);\\n@@ -151,7 +152,7 @@\\n         null\\n       </field>\\n \\n-      <!-- A web progress listener object definition for a given tab. --> \\n+      <!-- A web progress listener object definition for a given tab. -->\\n       <method name=\\\"mTabProgressListener\\\">\\n         <parameter name=\\\"aTabBrowser\\\"/>\\n         <parameter name=\\\"aTab\\\"/>\\n@@ -166,7 +167,8 @@\\n \\n             onProgressChange : function (aWebProgress, aRequest,\\n                                          aCurSelfProgress, aMaxSelfProgress,\\n-                                         aCurTotalProgress, aMaxTotalProgress) {\\n+                                         aCurTotalProgress, aMaxTotalProgress)\\n+            {\\n               if (!this.mBlank && this.mTabBrowser.mCurrentTab == this.mTab) {\\n                 for (var i = 0; i < this.mTabBrowser.mProgressListeners.length; i++) {\\n                   var p = this.mTabBrowser.mProgressListeners[i];\\n@@ -177,15 +179,11 @@\\n                 }\\n               }\\n             },\\n-            \\n+\\n             onStateChange : function(aWebProgress, aRequest, aStateFlags, aStatus)\\n             {\\n               if (!aRequest)\\n                 return;\\n-      \\n-              //ignore local/resource:/chrome: files\\n-              if (aStatus == NS_NET_STATUS_READ_FROM || aStatus == NS_NET_STATUS_WROTE_TO)\\n-                return;\\n \\n               var oldBlank = this.mBlank;\\n \\n@@ -205,16 +203,16 @@\\n                        aStateFlags & nsIWebProgressListener.STATE_IS_NETWORK) {\\n                 if (this.mBlank)\\n                   this.mBlank = false;\\n-                \\n+\\n                 this.mTab.removeAttribute(\\\"busy\\\");\\n-                  \\n+\\n                 var location = aRequest.QueryInterface(nsIChannel).URI;\\n                 if (this.mIcon) {\\n                   this.mTab.setAttribute(\\\"image\\\", this.mIcon);\\n                   mIcon = \\\"\\\";\\n                 }\\n                 else if (this.mTabBrowser.shouldLoadFavIcon(location))\\n-                  this.mTabBrowser.loadFavIcon(location, \\\"image\\\", this.mTab); \\n+                  this.mTabBrowser.loadFavIcon(location, \\\"image\\\", this.mTab);\\n \\n                 if (this.mTab.label == this.mTabBrowser.mStringBundle.getString(\\\"tabs.loading\\\"))\\n                   this.mTabBrowser.setTabTitle(this.mTab);\\n@@ -244,10 +242,9 @@\\n             },\\n \\n             onStatusChange : function(aWebProgress, aRequest, aStatus, aMessage) {\\n-              //ignore local/resource:/chrome: files\\n-              if (this.mBlank || aStatus == NS_NET_STATUS_READ_FROM || aStatus == NS_NET_STATUS_WROTE_TO)\\n+              if (this.mBlank)\\n                 return;\\n-              \\n+\\n               if (this.mTabBrowser.mCurrentTab == this.mTab) {\\n                 for (var i = 0; i < this.mTabBrowser.mProgressListeners.length; i++) {\\n                   var p = this.mTabBrowser.mProgressListeners[i];\\n@@ -257,7 +254,8 @@\\n               }\\n             },\\n \\n-            onSecurityChange : function(aWebProgress, aRequest, aState) { \\n+            onSecurityChange : function(aWebProgress, aRequest, aState)\\n+            {\\n               if (this.mTabBrowser.mCurrentTab == this.mTab) {\\n                 for (var i = 0; i < this.mTabBrowser.mProgressListeners.length; i++) {\\n                   var p = this.mTabBrowser.mProgressListeners[i];\\n@@ -309,17 +307,7 @@\\n         <body>\\n           <![CDATA[\\n             var iconURL = this.buildFavIconString(aURI);\\n-            if (!this.mMissedIconCache) {\\n-              var cacheService = Components.classes['@mozilla.org/network/cache-service;1'].getService(Components.interfaces.nsICacheService);\\n-              this.mMissedIconCache = cacheService.createSession(\\\"MissedIconCache\\\", Components.interfaces.nsICache.STORE_ANYWHERE, true);\\n-              if (!this.mMissedIconCache)\\n-                return;\\n-            }\\n-        \\n-            try {\\n-              var entry = this.mMissedIconCache.openCacheEntry(iconURL, Components.interfaces.nsICache.ACCESS_READ, true);\\n-            }\\n-            catch (exc) {}\\n+            var entry = this.openCacheEntry(iconURL, Components.interfaces.nsICache.ACCESS_READ);\\n             if (!entry)\\n               aElt.setAttribute(aAttr, iconURL);\\n             else {\\n@@ -334,7 +322,10 @@\\n         <parameter name=\\\"aURI\\\"/>\\n         <body>\\n           <![CDATA[\\n-            var entry = this.mMissedIconCache.openCacheEntry(aURI, Components.interfaces.nsICache.ACCESS_READ_WRITE, true);\\n+            var entry = this.openCacheEntry(aURI, Components.interfaces.nsICache.ACCESS_READ_WRITE);\\n+            if (!entry)\\n+              return;\\n+\\n             if (entry.accessGranted == Components.interfaces.nsICache.ACCESS_WRITE)\\n               // It's a new entry.  Just write a bit of metadata in to the entry.\\n               entry.setMetaDataElement(\\\"Icon\\\", \\\"Missed\\\");\\n@@ -344,6 +335,27 @@\\n         </body>\\n       </method>\\n \\n+      <method name=\\\"openCacheEntry\\\">\\n+        <parameter name=\\\"key\\\"/>\\n+        <parameter name=\\\"access\\\"/>\\n+        <body>\\n+          <![CDATA[\\n+            try {\\n+              if (!this.mMissedIconCache) {\\n+                var cacheService = Components.classes['@mozilla.org/network/cache-service;1'].getService(Components.interfaces.nsICacheService);\\n+                this.mMissedIconCache = cacheService.createSession(\\\"MissedIconCache\\\", Components.interfaces.nsICache.STORE_ANYWHERE, true);\\n+                if (!this.mMissedIconCache)\\n+                  return null;\\n+              }\\n+              return this.mMissedIconCache.openCacheEntry(key, access, true);\\n+            }\\n+            catch (e) {\\n+              return null;\\n+            }\\n+          ]]>\\n+        </body>\\n+      </method>\\n+\\n       <method name=\\\"updateTitlebar\\\">\\n         <body>\\n           <![CDATA[\\n@@ -369,11 +381,22 @@\\n         </body>\\n       </method>\\n \\n+      <method name=\\\"updateContextTab\\\">\\n+        <parameter name=\\\"aEvent\\\"/>\\n+        <body>\\n+          <![CDATA[\\n+            if (aEvent.originalTarget.localName == \\\"tab\\\")\\n+              this.mContextTab = aEvent.originalTarget;\\n+            else\\n+              this.mContextTab = document.popupNode;\\n+          ]]>\\n+        </body>\\n+      </method>\\n+\\n       <method name=\\\"updatePopupMenu\\\">\\n         <parameter name=\\\"aPopupMenu\\\"/>\\n         <body>\\n           <![CDATA[\\n-            this.mContextTab = document.popupNode;\\n             var disabled = this.mPanelContainer.childNodes.length == 1;\\n             var menuItems = aPopupMenu.getElementsByAttribute(\\\"tbattr\\\", \\\"tabbrowser-multiple\\\");\\n             for (var i = 0; i < menuItems.length; i++)\\n@@ -464,7 +487,7 @@\\n           <![CDATA[\\n             if (event.button != 1 || event.target.localName != 'tab' ||\\n                 this.mPrefs.getBoolPref(\\\"middlemouse.contentLoadURL\\\"))\\n-              return; \\n+              return;\\n \\n             this.removeTab(event.target);\\n             event.stopPropagation();\\n@@ -487,20 +510,20 @@\\n             var href = event.target.href;\\n             if (!href)\\n               return;\\n-            \\n+\\n             // Verify that the load of this icon is legal.  We use the same\\n             // content policy that is used for a Web page loading images.\\n             var contentPolicy = Components.classes['@mozilla.org/layout/content-policy;1'].getService(Components.interfaces.nsIContentPolicy);\\n             if (!contentPolicy)\\n               return; // Refuse to load if we can't do a security check.\\n-            \\n+\\n             // Make a URI out of our href.\\n             var uri = Components.classes['@mozilla.org/network/standard-url;1'].createInstance();\\n             uri = uri.QueryInterface(Components.interfaces.nsIURI);\\n-  \\n+\\n             var notifyListeners = true;\\n             var i;\\n-            \\n+\\n             if (tabBrowser.mTabbedMode) {\\n               // We need to update a tab.\\n               for (i = 0; i < this.childNodes.length; i++) {\\n@@ -508,7 +531,7 @@\\n                   if (!contentPolicy.shouldLoad(Components.interfaces.nsIContentPolicy.IMAGE,\\n                                                 uri, event.target, this.childNodes[i].contentWindow))\\n                     return;\\n-                                                 \\n+\\n                   var listener = tabBrowser.mTabListeners[i];\\n                   listener.mIcon = href;\\n                   break;\\n@@ -552,7 +575,7 @@\\n \\n             if (tab == tabBrowser.mCurrentTab)\\n               tabBrowser.updateTitlebar();\\n-          ]]> \\n+          ]]>\\n         </body>\\n       </method>\\n \\n@@ -614,7 +637,7 @@\\n \\n             // Get the first tab all hooked up with a title listener and popup blocking listener.\\n             this.mCurrentBrowser.addEventListener(\\\"DOMTitleChanged\\\", this.onTitleChanged, false);\\n-            \\n+\\n             this.setTabTitle(this.mCurrentTab);\\n \\n             // Hook up our favicon.\\n@@ -671,7 +694,7 @@\\n               t.setAttribute(\\\"label\\\", this.mStringBundle.getString(\\\"tabs.untitled\\\"));\\n             else\\n               t.setAttribute(\\\"label\\\", aURI);\\n-            \\n+\\n             t.setAttribute(\\\"crop\\\", \\\"end\\\");\\n             t.maxWidth = 250;\\n             t.minWidth = 30;\\n@@ -695,12 +718,12 @@\\n             this.mPanelContainer.appendChild(b);\\n \\n             b.addEventListener(\\\"DOMTitleChanged\\\", this.onTitleChanged, false);\\n-            \\n+\\n             if (this.mStrip.collapsed)\\n               this.setStripVisibilityTo(true);\\n \\n             this.mPrefs.setBoolPref(\\\"browser.tabs.forceHide\\\", false);\\n-            \\n+\\n             // wire up a progress listener for the new browser object.\\n             var position = this.mTabContainer.childNodes.length-1;\\n             var tabListener = (this.mTabProgressListener)(this, t, blank);\\n@@ -719,7 +742,7 @@\\n           ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"removeAllTabsBut\\\">\\n         <parameter name=\\\"aTab\\\"/>\\n         <body>\\n@@ -737,7 +760,7 @@\\n           ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"removeCurrentTab\\\">\\n         <body>\\n           <![CDATA[\\n@@ -745,7 +768,7 @@\\n           ]]>\\n         </body>\\n       </method>\\n-         \\n+\\n       <method name=\\\"removeTab\\\">\\n         <parameter name=\\\"aTab\\\"/>\\n         <body>\\n@@ -787,7 +810,7 @@\\n \\n             // Remove our title change and blocking listeners\\n             oldBrowser.removeEventListener(\\\"DOMTitleChanged\\\", this.onTitleChanged, false);\\n-            \\n+\\n             // We are no longer the primary content area.\\n             oldBrowser.setAttribute(\\\"type\\\", \\\"content\\\");\\n \\n@@ -805,7 +828,7 @@\\n               newIndex = index;\\n \\n             var oldTab = aTab;\\n-            \\n+\\n             // clean up the before/afterselected attributes before removing the tab\\n             oldTab.selected = false;\\n \\n@@ -828,8 +851,13 @@\\n         <body>\\n           <![CDATA[\\n             var l = this.mPanelContainer.childNodes.length;\\n-            for (var i = 0; i < l; i++)\\n-              this.mPanelContainer.childNodes[i].webNavigation.reload(true);\\n+            for (var i = 0; i < l; i++) {\\n+              try {\\n+                this.mPanelContainer.childNodes[i].reload();\\n+              } catch (e) {\\n+                // ignore failure to reload so others will be reloaded\\n+              }\\n+            }\\n           ]]>\\n         </body>\\n       </method>\\n@@ -838,10 +866,10 @@\\n         <parameter name=\\\"aTab\\\"/>\\n         <body>\\n           <![CDATA[\\n-            var l = this.mPanelContainer.childNodes.length;\\n-            for (var i = 0; i < l; i++)\\n-              if (this.mTabContainer.childNodes[i] == aTab)\\n-                this.mPanelContainer.childNodes[i].webNavigation.reload(true);\\n+            if (aTab.localName != \\\"tab\\\")\\n+              aTab = this.mCurrentTab;\\n+\\n+            this.getBrowserForTab(aTab).reload();\\n           ]]>\\n         </body>\\n       </method>\\n@@ -965,23 +993,23 @@\\n             var url = transferUtils.retrieveURLFromData(aXferData.data, aXferData.flavour.contentType);\\n \\n             // valid urls don't contain spaces ' '; if we have a space it isn't a valid url so bail out\\n-            if (!url || !url.length || url.indexOf(\\\" \\\", 0) != -1) \\n+            if (!url || !url.length || url.indexOf(\\\" \\\", 0) != -1)\\n               return;\\n-            \\n+\\n             var bgLoad = this.mPrefs.getBoolPref(\\\"browser.tabs.loadInBackground\\\");\\n \\n-            if (aEvent.target.localName == \\\"tabs\\\") {\\n+            var tab = null;\\n+            if (aEvent.originalTarget.localName != \\\"tab\\\") {\\n               // We're adding a new tab.\\n-              var tab = this.addTab(getShortcutOrURI(url));\\n-              if (!bgLoad)\\n-                this.selectedTab = tab;\\n+              tab = this.addTab(getShortcutOrURI(url));\\n             }\\n-            else if (aEvent.target.localName == \\\"tab\\\") {\\n+            else {\\n               // Load in an existing tab.\\n-              this.getBrowserForTab(aEvent.target).loadURI(getShortcutOrURI(url));\\n-              if (this.mCurrentTab != aEvent.target && !bgLoad)\\n-                this.selectedTab = aEvent.target;\\n+              tab = aEvent.originalTarget;\\n+              this.getBrowserForTab(tab).loadURI(getShortcutOrURI(url));\\n             }\\n+            if (this.mCurrentTab != tab && !bgLoad)\\n+              this.selectedTab = tab;\\n           ]]>\\n         </body>\\n       </method>\\n@@ -1207,7 +1235,12 @@\\n     </implementation>\\n \\n     <handlers>\\n-      <handler event=\\\"keypress\\\" modifiers=\\\"control\\\" keycode=\\\"vk_f4\\\" action=\\\"this.removeCurrentTab();\\\"/>\\n+      <handler event=\\\"keypress\\\" modifiers=\\\"control\\\" keycode=\\\"VK_F4\\\">\\n+        <![CDATA[\\n+          if (this.mTabBox.handleCtrlPageUpDown)\\n+            this.removeCurrentTab();\\n+        ]]>\\n+      </handler>\\n \\n       <handler event=\\\"DOMWindowClose\\\">\\n         <![CDATA[\\n\""}