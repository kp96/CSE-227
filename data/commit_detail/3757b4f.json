{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas3757b4f\""},"diff":"\"3757b4f Fixing bug 375175. Get rid of unused function nsSVGOuterSVGFrame::InitiateReflow. Patch by Eli Friedman <sharparrow1@yahoo.com>. r=jwatt@jwatt.org, sr=tor@acm.org, a=bzbarsky@mit.edu\\ndiff --git a/layout/svg/base/src/nsSVGOuterSVGFrame.cpp b/layout/svg/base/src/nsSVGOuterSVGFrame.cpp\\nindex 1539742..1d4c236 100644\\n--- a/layout/svg/base/src/nsSVGOuterSVGFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGOuterSVGFrame.cpp\\n@@ -148,7 +148,6 @@ NS_NewSVGOuterSVGFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleCo\\n nsSVGOuterSVGFrame::nsSVGOuterSVGFrame(nsStyleContext* aContext)\\n     : nsSVGOuterSVGFrameBase(aContext),\\n       mRedrawSuspendCount(0),\\n-      mNeedsReflow(PR_FALSE),\\n       mViewportInitialized(PR_FALSE)\\n {\\n }\\n@@ -510,16 +509,12 @@ nsSVGOuterSVGFrame::UnsuspendRedraw()\\n #ifdef DEBUG\\n //  printf(\\\"unsuspend redraw (count=%d)\\\\n\\\", mRedrawSuspendCount);\\n #endif\\n+\\n+  NS_ASSERTION(mRedrawSuspendCount >=0, \\\"unbalanced suspend count!\\\");\\n+\\n   if (--mRedrawSuspendCount > 0)\\n     return NS_OK;\\n-  \\n-  NS_ASSERTION(mRedrawSuspendCount >=0, \\\"unbalanced suspend count!\\\");\\n-  \\n-  // If we need to reflow, do so before we update any of our\\n-  // children. Reflows are likely to affect the display of children:\\n-  if (mNeedsReflow)\\n-    InitiateReflow();\\n-  \\n+\\n   for (nsIFrame* kid = mFrames.FirstChild(); kid;\\n        kid = kid->GetNextSibling()) {\\n     nsISVGChildFrame* SVGFrame=nsnull;\\n@@ -601,20 +596,6 @@ nsSVGOuterSVGFrame::GetCanvasTM()\\n //----------------------------------------------------------------------\\n // Implementation helpers\\n \\n-void nsSVGOuterSVGFrame::InitiateReflow()\\n-{\\n-  mNeedsReflow = PR_FALSE;\\n-  \\n-  nsIPresShell* presShell = PresContext()->PresShell();\\n-  presShell->FrameNeedsReflow(this, nsIPresShell::eStyleChange,\\n-                              NS_FRAME_IS_DIRTY);\\n-  // XXXbz why is this synchronously flushing reflows, exactly?  If it\\n-  // needs to, why is it not using the presshell's reflow batching\\n-  // instead of hacking its own?\\n-  presShell->FlushPendingNotifications(Flush_OnlyReflow);  \\n-}\\n-\\n-\\n void\\n nsSVGOuterSVGFrame::CalculateAvailableSpace(nsRect *maxRect,\\n                                             nsRect *preferredRect,\\ndiff --git a/layout/svg/base/src/nsSVGOuterSVGFrame.h b/layout/svg/base/src/nsSVGOuterSVGFrame.h\\nindex a1a88e6..a30a0e6 100644\\n--- a/layout/svg/base/src/nsSVGOuterSVGFrame.h\\n+++ b/layout/svg/base/src/nsSVGOuterSVGFrame.h\\n@@ -125,8 +125,6 @@ public:\\n   virtual already_AddRefed<nsIDOMSVGMatrix> GetCanvasTM();\\n \\n protected:\\n-  // implementation helpers:\\n-  void InitiateReflow();\\n \\n   void CalculateAvailableSpace(nsRect *maxRect, nsRect *preferredRect,\\n                                nsPresContext* aPresContext,\\n@@ -140,7 +138,6 @@ protected:\\n   nsCOMPtr<nsIDOMSVGPoint>  mCurrentTranslate;\\n   nsCOMPtr<nsIDOMSVGNumber> mCurrentScale;\\n \\n-  PRPackedBool mNeedsReflow;\\n   PRPackedBool mViewportInitialized;\\n };\\n \\n\""}