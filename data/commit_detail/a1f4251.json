{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basa1f4251\""},"diff":"\"a1f4251 Bug 324449: error when moving a tab before it's parent and then closing it (Error: uncaught exception: 2147500037), r=ben\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 5c9ed43..66819d1 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -63,7 +63,7 @@\\n                   onselect=\\\"if (!('updateCurrentBrowser' in this.parentNode) || event.target.localName != 'tabpanels') return; this.parentNode.updateCurrentBrowser();\\\">\\n         <xul:hbox class=\\\"tab-drop-indicator-bar\\\">\\n           <xul:hbox class=\\\"tab-drop-indicator\\\"/>\\n-        </xul:hbox>          \\n+        </xul:hbox>\\n         <xul:hbox class=\\\"tabbrowser-strip\\\" collapsed=\\\"true\\\" tooltip=\\\"_child\\\" context=\\\"_child\\\"\\n                   ondraggesture=\\\"nsDragAndDrop.startDrag(event, this.parentNode.parentNode); event.stopPropagation();\\\"\\n                   ondragover=\\\"nsDragAndDrop.dragOver(event, this.parentNode.parentNode); event.stopPropagation();\\\"\\n@@ -184,7 +184,7 @@\\n #else\\n         false\\n #endif\\n-      </field> \\n+      </field>\\n       <field name=\\\"mAddProgressListenerWasCalled\\\">\\n         false\\n       </field>\\n@@ -211,7 +211,7 @@\\n           ]]>\\n         </body>\\n       </method>\\n-        \\n+\\n       <method name=\\\"getMessageForBrowser\\\">\\n         <parameter name=\\\"aBrowser\\\"/>\\n         <parameter name=\\\"aTopBottom\\\"/>\\n@@ -221,7 +221,7 @@\\n           ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"showMessage\\\">\\n         <parameter name=\\\"aBrowser\\\"/>\\n         <parameter name=\\\"aIconURL\\\"/>\\n@@ -239,7 +239,7 @@\\n             message.image = aIconURL;\\n             message.text = aMessage;\\n             message.buttonText = aButtonLabel;\\n-            message.buttonAccesskey = \\n+            message.buttonAccesskey =\\n               typeof(aButtonAccesskey) == \\\"undefined\\\" ? \\\"\\\"\\n                 : aButtonAccesskey;\\n             message.hidden = false;\\n@@ -261,7 +261,7 @@\\n           ]]>\\n         </body>\\n       </method>\\n-            \\n+\\n       <method name=\\\"hideMessage\\\">\\n         <parameter name=\\\"aBrowser\\\"/>\\n         <parameter name=\\\"aTopBottom\\\"/>\\n@@ -432,7 +432,7 @@\\n         ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"setIcon\\\">\\n         <parameter name=\\\"aTab\\\"/>\\n         <parameter name=\\\"aURI\\\"/>\\n@@ -569,7 +569,7 @@\\n \\n             if (this.docShell.contentViewer)\\n               docTitle = this.contentTitle;\\n-            \\n+\\n             if (!docTitle)\\n               docTitle = docElement.getAttribute(\\\"titledefault\\\");\\n \\n@@ -581,7 +581,7 @@\\n                 newTitle += sep;\\n             }\\n             newTitle += modifier;\\n-            \\n+\\n             // If location bar is hidden and the URL type supports a host,\\n             // add the scheme and host to the title to prevent spoofing.\\n             // XXX https://bugzilla.mozilla.org/show_bug.cgi?id=22183#c239\\n@@ -594,7 +594,7 @@\\n                   newTitle = uri.prePath + sep + newTitle;\\n               }\\n             } catch (e) {}\\n-                        \\n+\\n             this.ownerDocument.title = newTitle;\\n           ]]>\\n         </body>\\n@@ -659,7 +659,7 @@\\n               }\\n               this.mCurrentBrowser.setAttribute(\\\"type\\\", \\\"content\\\");\\n             }\\n-            \\n+\\n             var updatePageReport = false;\\n             if ((this.mCurrentBrowser.pageReport && !newBrowser.pageReport) ||\\n                 (!this.mCurrentBrowser.pageReport && newBrowser.pageReport))\\n@@ -668,7 +668,7 @@\\n             newBrowser.setAttribute(\\\"type\\\", \\\"content-primary\\\");\\n             this.mCurrentBrowser = newBrowser;\\n             this.mCurrentTab = this.selectedTab;\\n-            \\n+\\n             if (updatePageReport)\\n               this.mCurrentBrowser.updatePageReport();\\n \\n@@ -834,7 +834,7 @@\\n             // no browser? no favicon.\\n             if (browserIndex == -1)\\n               return;\\n-      \\n+\\n             var tab = tabBrowser.mTabContainer.childNodes[browserIndex];\\n             tabBrowser.setIcon(tab, href);\\n           ]]>\\n@@ -853,7 +853,7 @@\\n               if (this.parentNode.parentNode.childNodes[i].firstChild.nextSibling == this)\\n                 break;\\n             }\\n-            \\n+\\n             var tabBrowser = this.parentNode.parentNode.parentNode.parentNode;\\n \\n             var tab = document.getAnonymousElementByAttribute(tabBrowser, \\\"linkedpanel\\\", this.parentNode.id);\\n@@ -882,7 +882,7 @@\\n             var browser = this.getBrowserForTab(aTab);\\n             var crop = \\\"end\\\";\\n             var title = browser.contentDocument.title;\\n-            \\n+\\n             if (!title) {\\n               if (browser.currentURI.spec) {\\n                 try {\\n@@ -989,13 +989,13 @@\\n           ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"_createMessage\\\">\\n         <parameter name=\\\"aType\\\"/>\\n         <body>\\n           <![CDATA[\\n             var message = document.createElementNS(\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\",\\n-                                                   \\\"browsermessage\\\"); \\n+                                                   \\\"browsermessage\\\");\\n             message.hidden = true;\\n             message.setAttribute(\\\"type\\\", aType);\\n             return message;\\n@@ -1029,13 +1029,13 @@\\n          ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"loadTabs\\\">\\n         <parameter name=\\\"aURIs\\\"/>\\n         <parameter name=\\\"aLoadInBackground\\\"/>\\n         <parameter name=\\\"aReplace\\\"/>\\n         <body><![CDATA[\\n-          // The tab selected after this new tab is closed (i.e. the new tab's \\n+          // The tab selected after this new tab is closed (i.e. the new tab's\\n           // \\\"owner\\\") is the next adjacent tab (i.e. not the previously viewed tab)\\n           // when several urls are opened here (i.e. closing the first should select\\n           // the next of many URLs opened) or if the pref to have UI links opened in\\n@@ -1048,7 +1048,7 @@\\n           //    > 1               false/true                NO\\n           var owner = (aURIs.length > 1) || aLoadInBackground ? null : gBrowser.selectedTab;\\n           var firstTabAdded = null;\\n-          if (aReplace) \\n+          if (aReplace)\\n             this.loadURI(aURIs[0], null, null);\\n           else\\n             firstTabAdded = gBrowser.addTab(aURIs[0], null, null, null, owner);\\n@@ -1060,7 +1060,7 @@\\n               // .selectedTab setter focuses the content area\\n               this.selectedTab = firstTabAdded;\\n             }\\n-            else \\n+            else\\n               window.content.focus();\\n           }\\n         ]]></body>\\n@@ -1099,7 +1099,7 @@\\n             // If this new tab is owned by another, assert that relationship\\n             if (aOwner !== undefined && aOwner !== null) {\\n               t.owner = aOwner;\\n-              \\n+\\n               var self = this;\\n               function attrChanged(event) {\\n                 if (event.attrName == \\\"selectedIndex\\\" &&\\n@@ -1121,9 +1121,9 @@\\n             if (this.hasAttribute(\\\"autocompletepopup\\\"))\\n               b.setAttribute(\\\"autocompletepopup\\\", this.getAttribute(\\\"autocompletepopup\\\"));\\n \\n-            // Add the Message and the Browser to the box            \\n+            // Add the Message and the Browser to the box\\n             var vbox = document.createElementNS(\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\",\\n-                                                \\\"vbox\\\"); \\n+                                                \\\"vbox\\\");\\n             vbox.setAttribute(\\\"flex\\\", \\\"1\\\");\\n             vbox.appendChild(this._createMessage(\\\"top\\\"));\\n             vbox.appendChild(b);\\n@@ -1147,7 +1147,7 @@\\n             b.webProgress.addProgressListener(filter, Components.interfaces.nsIWebProgress.NOTIFY_ALL);\\n             this.mTabListeners[position] = tabListener;\\n             this.mTabFilters[position] = filter;\\n-            \\n+\\n             b._fastFind = this.fastFind;\\n \\n             var uniqueId = \\\"panel\\\" + Date.now() + position;\\n@@ -1155,9 +1155,9 @@\\n             t.linkedPanel = uniqueId;\\n             t.linkedBrowser = b;\\n             t._tPos = position;\\n-            if (t.previousSibling.selected) \\n+            if (t.previousSibling.selected)\\n               t.setAttribute(\\\"afterselected\\\", true);\\n-            \\n+\\n             if (!blank) {\\n               // pretend the user typed this so it'll be available till\\n               // the document successfully loads\\n@@ -1177,12 +1177,12 @@\\n       <method name=\\\"warnAboutClosingTabs\\\">\\n       <parameter name=\\\"aAll\\\"/>\\n       <body>\\n-        <![CDATA[          \\n+        <![CDATA[\\n           var numTabs = this.mTabContainer.childNodes.length;\\n           var reallyClose = true;\\n           if (numTabs <= 1)\\n             return reallyClose;\\n-            \\n+\\n           const pref = \\\"browser.tabs.warnOnClose\\\";\\n           var shouldPrompt = this.mPrefs.getBoolPref(pref);\\n \\n@@ -1195,7 +1195,7 @@\\n             var bundle = this.mStringBundle;\\n             var tabsToClose = numTabs;  //number of tabs to be removed\\n             if (!aAll)\\n-              --tabsToClose; \\n+              --tabsToClose;\\n \\n             var messageKey = (tabsToClose == 1) ? \\\"tabs.closeWarningOne\\\" : \\\"tabs.closeWarningMultiple\\\";\\n             var closeKey = (tabsToClose == 1) ? \\\"tabs.closeButtonOne\\\" : \\\"tabs.closeButtonMultiple\\\";\\n@@ -1217,7 +1217,7 @@\\n         ]]>\\n       </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"removeAllTabsBut\\\">\\n         <parameter name=\\\"aTab\\\"/>\\n         <body>\\n@@ -1247,14 +1247,14 @@\\n           ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"resetOwner\\\">\\n         <parameter name=\\\"oldIndex\\\"/>\\n         <body>\\n           <![CDATA[\\n             // Reset the owner property, since we're leaving the modally opened\\n             // tab for another.\\n-            if (oldIndex < this.mTabContainer.childNodes.length) { \\n+            if (oldIndex < this.mTabContainer.childNodes.length) {\\n               var tab = this.mTabContainer.childNodes[oldIndex];\\n               tab.owner = null;\\n             }\\n@@ -1318,38 +1318,19 @@\\n             // We are no longer the primary content area.\\n             oldBrowser.setAttribute(\\\"type\\\", \\\"content\\\");\\n \\n-            // Now select the new tab before nuking the old one.\\n+            // Get the index of the tab we're removing before unselecting it\\n             var currentIndex = this.mTabContainer.selectedIndex;\\n \\n-            var newIndex = -1;\\n-            if (currentIndex > index)\\n-              newIndex = currentIndex-1;\\n-            else if (currentIndex < index)\\n-              newIndex = currentIndex;\\n-            else {\\n-              if (\\\"owner\\\" in aTab && aTab.owner &&\\n-                  this.mPrefs.getBoolPref(\\\"browser.tabs.selectOwnerOnClose\\\")) {\\n-                for (i = 0; i < this.mTabContainer.childNodes.length; ++i) {\\n-                  var tab = this.mTabContainer.childNodes[i];\\n-                  if (tab == aTab.owner) {\\n-                    newIndex = i;\\n-                    break;\\n-                  }\\n-                }\\n-              }\\n-              if (newIndex == -1)\\n-                newIndex = (index == l - 1) ? index - 1 : index;\\n-            }\\n-\\n             var oldTab = aTab;\\n \\n             // clean up the before/afterselected attributes before removing the tab\\n             oldTab.selected = false;\\n-            \\n+\\n             // Remove this tab as the owner of any other tabs, since it's going away.\\n             for (i = 0; i < this.mTabContainer.childNodes.length; ++i) {\\n-              tab = this.mTabContainer.childNodes[i];\\n-              if (tab.owner == oldTab)\\n+              var tab = this.mTabContainer.childNodes[i];\\n+              if (\\\"owner\\\" in tab && tab.owner == oldTab)\\n+                // |tab| is a child of the tab we're removing - make it an orphan\\n                 tab.owner = null;\\n             }\\n \\n@@ -1364,13 +1345,36 @@\\n             // clearing focusedWindow happens below because it gets\\n             // reset by updateCurrentBrowser.\\n             oldBrowser.destroy();\\n-            \\n+\\n+            // Remove the tab\\n             this.mTabContainer.removeChild(oldTab);\\n             this.mPanelContainer.removeChild(oldBrowser.parentNode);\\n \\n+            // Find the tab to select\\n+            var newIndex = -1;\\n+            if (currentIndex > index)\\n+              newIndex = currentIndex-1;\\n+            else if (currentIndex < index)\\n+              newIndex = currentIndex;\\n+            else {\\n+              if (\\\"owner\\\" in oldTab && oldTab.owner &&\\n+                  this.mPrefs.getBoolPref(\\\"browser.tabs.selectOwnerOnClose\\\")) {\\n+                for (i = 0; i < this.mTabContainer.childNodes.length; ++i) {\\n+                  tab = this.mTabContainer.childNodes[i];\\n+                  if (tab == oldTab.owner) {\\n+                    newIndex = i;\\n+                    break;\\n+                  }\\n+                }\\n+              }\\n+              if (newIndex == -1)\\n+                newIndex = (index == l - 1) ? index - 1 : index;\\n+            }\\n+\\n+            // Select the new tab\\n             this.selectedTab = this.mTabContainer.childNodes[newIndex];\\n-            var i;\\n-            for (i = oldTab._tPos; i < this.mTabContainer.childNodes.length; i++) { \\n+\\n+            for (i = oldTab._tPos; i < this.mTabContainer.childNodes.length; i++) {\\n               this.mTabContainer.childNodes[i]._tPos = i;\\n             }\\n             this.mTabBox.selectedPanel = this.getBrowserForTab(this.mCurrentTab).parentNode;\\n@@ -1427,7 +1431,7 @@\\n           ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"addProgressListener\\\">\\n         <parameter name=\\\"aListener\\\"/>\\n         <parameter name=\\\"aMask\\\"/>\\n@@ -1544,10 +1548,10 @@\\n         <parameter name=\\\"aDragAction\\\"/>\\n         <body>\\n         <![CDATA[\\n-          if (aEvent.target.localName == \\\"tab\\\" && \\n+          if (aEvent.target.localName == \\\"tab\\\" &&\\n               aEvent.originalTarget.localName != \\\"toolbarbutton\\\") {\\n             aXferData.data = new TransferData();\\n-            \\n+\\n             var URI = this.getBrowserForTab(aEvent.target).currentURI;\\n             if (URI) {\\n               aXferData.data.addDataForFlavour(\\\"text/unicode\\\", URI.spec);\\n@@ -1574,10 +1578,10 @@\\n               var ib = this.mTabDropIndicatorBar;\\n               var ind = ib.firstChild;\\n               ib.setAttribute('dragging','true');\\n-              \\n+\\n               if (window.getComputedStyle(this.parentNode, null).direction == \\\"ltr\\\") {\\n                 if (newIndex == this.mTabs.length) {\\n-                  ind.style.marginLeft = this.mTabs[newIndex-1].boxObject.x + \\n+                  ind.style.marginLeft = this.mTabs[newIndex-1].boxObject.x +\\n                                          this.mTabs[newIndex-1].boxObject.width - this.boxObject.x - 7 + 'px';\\n                 } else {\\n                   ind.style.marginLeft = this.mTabs[newIndex].boxObject.x - this.boxObject.x - 7 + 'px';\\n@@ -1607,9 +1611,9 @@\\n               var newIndex = this.getNewIndex(aEvent);\\n               var oldIndex = aDragSession.sourceNode._tPos;\\n \\n-              if (newIndex > oldIndex) \\n+              if (newIndex > oldIndex)\\n                 newIndex--;\\n-              if (newIndex != oldIndex) \\n+              if (newIndex != oldIndex)\\n                 this.moveTabTo(this.mTabs[oldIndex], newIndex);\\n             } else {\\n               var url = transferUtils.retrieveURLFromData(aXferData.data, aXferData.flavour.contentType);\\n@@ -1669,7 +1673,7 @@\\n         ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"moveTabTo\\\">\\n         <parameter name=\\\"aTab\\\"/>\\n         <parameter name=\\\"aIndex\\\"/>\\n@@ -1698,15 +1702,15 @@\\n       <method name=\\\"getNewIndex\\\">\\n         <parameter name=\\\"aEvent\\\"/>\\n         <body>\\n-          <![CDATA[     \\n+          <![CDATA[\\n             var i;\\n             if (window.getComputedStyle(this.parentNode, null).direction == \\\"ltr\\\") {\\n               for (i = aEvent.target.localName == \\\"tab\\\" ? aEvent.target._tPos : 0; i < this.mTabs.length; i++)\\n-                if (aEvent.clientX < this.mTabs[i].boxObject.x + this.mTabs[i].boxObject.width / 2) \\n+                if (aEvent.clientX < this.mTabs[i].boxObject.x + this.mTabs[i].boxObject.width / 2)\\n                   return i;\\n             } else {\\n                for (i = aEvent.target.localName == \\\"tab\\\" ? aEvent.target._tPos : 0; i < this.mTabs.length; i++)\\n-                if (aEvent.clientX > this.mTabs[i].boxObject.x + this.mTabs[i].boxObject.width / 2) \\n+                if (aEvent.clientX > this.mTabs[i].boxObject.x + this.mTabs[i].boxObject.width / 2)\\n                   return i;\\n             }\\n \\n@@ -1755,20 +1759,20 @@\\n           ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"moveTabToEnd\\\">\\n         <body>\\n           <![CDATA[\\n             var tabPos = this.mCurrentTab._tPos;\\n             if (tabPos < this.browsers.length - 1) {\\n-              this.moveTabTo(this.mCurrentTab, \\n+              this.moveTabTo(this.mCurrentTab,\\n                                         this.browsers.length - 1);\\n               this.mCurrentTab.focus();\\n             }\\n           ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"moveTabOver\\\">\\n         <parameter name=\\\"aEvent\\\"/>\\n         <body>\\n@@ -1782,7 +1786,7 @@\\n           ]]>\\n         </body>\\n       </method>\\n-                                                        \\n+\\n       <!-- BEGIN FORWARDED BROWSER PROPERTIES.  IF YOU ADD A PROPERTY TO THE BROWSER ELEMENT\\n            MAKE SURE TO ADD IT HERE AS WELL. -->\\n       <property name=\\\"canGoBack\\\"\\n@@ -1889,7 +1893,7 @@\\n           ]]>\\n         </body>\\n       </method>\\n-      \\n+\\n       <method name=\\\"attachFormFill\\\">\\n         <body><![CDATA[\\n           for (var i = 0; i < this.mPanelContainer.childNodes.length; ++i) {\\n@@ -1923,18 +1927,18 @@\\n         <![CDATA[\\n           if (!this._fastFind) {\\n             this._fastFind = Components.classes[\\\"@mozilla.org/typeaheadfind;1\\\"]\\n-                                       .createInstance(Components.interfaces.nsITypeAheadFind);                                \\n+                                       .createInstance(Components.interfaces.nsITypeAheadFind);\\n             this._fastFind.init(this.docShell);\\n           }\\n           return this._fastFind;\\n         ]]>\\n         </getter>\\n       </property>\\n-                      \\n+\\n       <property name=\\\"findString\\\"\\n                 onget=\\\"return this.mCurrentBrowser.findString;\\\"\\n                 readonly=\\\"true\\\"/>\\n-                \\n+\\n       <property name=\\\"docShell\\\"\\n                 onget=\\\"return this.mCurrentBrowser.docShell\\\"\\n                 readonly=\\\"true\\\"/>\\n@@ -2083,7 +2087,7 @@\\n #else\\n           if (('ctrlKey' in aEvent && aEvent.ctrlKey) &&\\n               !('metaKey' in aEvent && aEvent.metaKey)) {\\n-            if (aEvent.keyCode == KeyEvent.DOM_VK_F4 && \\n+            if (aEvent.keyCode == KeyEvent.DOM_VK_F4 &&\\n                 this.tabbrowser.mTabBox.handleCtrlPageUpDown) {\\n               this.tabbrowser.removeCurrentTab();\\n               return;\\n@@ -2108,7 +2112,7 @@\\n                   this.tabbrowser.moveTabToEnd();\\n                   break;\\n                 default:\\n-                  // Stop the keypress event for the above keyboard \\n+                  // Stop the keypress event for the above keyboard\\n                   // shortcuts only.\\n                   return;\\n               }\\n@@ -2118,7 +2122,7 @@\\n           }\\n         }\\n       })]]>\\n-      </field>      \\n+      </field>\\n \\n       <property name=\\\"canFindAgain\\\"\\n                 onget=\\\"return this.mCurrentBrowser.canFindAgain;\\\"\\n@@ -2134,12 +2138,12 @@\\n \\n       <property name=\\\"forceSyncURLBarUpdate\\\"\\n                 onget=\\\"return this.mModalDialogShowing;\\\"/>\\n-                \\n+\\n       <method name=\\\"createTooltip\\\">\\n         <parameter name=\\\"event\\\"/>\\n         <body>\\n           <![CDATA[\\n-            event.preventBubble(); \\n+            event.preventBubble();\\n             var tn = document.tooltipNode;\\n             if (tn.localName != \\\"tab\\\")\\n               return false; // Not a tab, so cancel the tooltip\\n@@ -2147,11 +2151,11 @@\\n               event.target.setAttribute(\\\"label\\\", tn.getAttribute(\\\"closetabtext\\\"));\\n               return true;\\n             }\\n-            if (tn.hasAttribute(\\\"label\\\")) { \\n-              event.target.setAttribute(\\\"label\\\", tn.getAttribute(\\\"label\\\")); \\n-              return true; \\n-            } \\n-            return false;                          \\n+            if (tn.hasAttribute(\\\"label\\\")) {\\n+              event.target.setAttribute(\\\"label\\\", tn.getAttribute(\\\"label\\\"));\\n+              return true;\\n+            }\\n+            return false;\\n           ]]>\\n         </body>\\n       </method>\\n@@ -2246,8 +2250,8 @@\\n       </handler>\\n     </handlers>\\n   </binding>\\n-  \\n-  <binding id=\\\"tabbrowser-tabs\\\" \\n+\\n+  <binding id=\\\"tabbrowser-tabs\\\"\\n            extends=\\\"chrome://global/content/bindings/tabbox.xml#tabs\\\">\\n     <content>\\n       <xul:hbox flex=\\\"1\\\" style=\\\"min-width: 1px;\\\">\\n@@ -2257,7 +2261,7 @@\\n     </content>\\n     <implementation implements=\\\"nsIObserver\\\">\\n       <constructor>\\n-        var pb2 = \\n+        var pb2 =\\n             Components.classes['@mozilla.org/preferences-service;1'].\\n             getService(Components.interfaces.nsIPrefBranch2);\\n         try {\\n@@ -2265,27 +2269,27 @@\\n         }\\n         catch (e) {\\n         }\\n-        \\n+\\n         this._updateDisableBackgroundClose();\\n         pb2.addObserver(\\\"browser.tabs.disableBackgroundClose\\\", this, false);\\n-      \\n+\\n         var self = this;\\n         function onResize() {\\n           self.adjustCloseButtons(1);\\n         }\\n         window.addEventListener(\\\"resize\\\", onResize, false);\\n       </constructor>\\n-      \\n+\\n       <destructor>\\n-        var pb2 = \\n+        var pb2 =\\n             Components.classes[\\\"@mozilla.org/preferences-service;1\\\"].\\n             getService(Components.interfaces.nsIPrefBranch2);\\n         pb2.removeObserver(\\\"browser.tabs.disableBackgroundClose\\\", this);\\n       </destructor>\\n-      \\n+\\n       <method name=\\\"_updateDisableBackgroundClose\\\">\\n         <body><![CDATA[\\n-          var prefs = \\n+          var prefs =\\n               Components.classes['@mozilla.org/preferences-service;1'].\\n               getService(Components.interfaces.nsIPrefBranch);\\n           try {\\n@@ -2312,26 +2316,26 @@\\n       <method name=\\\"adjustCloseButtons\\\">\\n         <parameter name=\\\"aNumTabs\\\"/>\\n         <body><![CDATA[\\n-          // aNumTabs is the number of tabs that need to be present to cause \\n+          // aNumTabs is the number of tabs that need to be present to cause\\n           // the close button on the last visible tab to disappear when the\\n           // pref for \\\"always show the tab bar, even when only one tab is open\\\"\\n-          // is set. \\n+          // is set.\\n           // When tabs are being removed from the tab strip, and the number of\\n-          // open tabs approaches 1 (i.e. when the number of open tabs is 2 \\n+          // open tabs approaches 1 (i.e. when the number of open tabs is 2\\n           // and one is removed), we need to set an attribute on the tabstrip\\n-          // that will cause the close button on the last item to be hidden. \\n+          // that will cause the close button on the last item to be hidden.\\n           // When tabs are being added to the tab strip - the number of open\\n           // tabs is increasing (i.e. the number of open tabs is 1 and one is\\n           // added) then we need to remove the attribute on the tab strip which\\n-          // will cause the close button to be shown on all tabs. \\n+          // will cause the close button to be shown on all tabs.\\n           try {\\n-            if (this.childNodes.length == aNumTabs) \\n+            if (this.childNodes.length == aNumTabs)\\n               this.setAttribute(\\\"singlechild\\\", \\\"true\\\");\\n             else\\n               this.removeAttribute(\\\"singlechild\\\");\\n-            \\n+\\n             var width = this.firstChild.boxObject.width;\\n-            // 0 width is an invalid value and indicates an item without display, \\n+            // 0 width is an invalid value and indicates an item without display,\\n             // so ignore.\\n             if (width > this.mTabClipWidth || width == 0)\\n               this.removeAttribute(\\\"tiny\\\");\\n@@ -2347,11 +2351,11 @@\\n       <handler event=\\\"DOMNodeInserted\\\" action=\\\"this.adjustCloseButtons(1);\\\"/>\\n       <handler event=\\\"DOMNodeRemoved\\\" action=\\\"this.adjustCloseButtons(2);\\\"/>\\n     </handlers>\\n-  </binding>  \\n-  \\n+  </binding>\\n+\\n   <binding id=\\\"tabbrowser-tab\\\" display=\\\"xul:box\\\"\\n            extends=\\\"chrome://global/content/bindings/tabbox.xml#tab\\\">\\n-    <content chromedir=\\\"&locale.dir;\\\" mousethrough=\\\"always\\\" \\n+    <content chromedir=\\\"&locale.dir;\\\" mousethrough=\\\"always\\\"\\n              closetabtext=\\\"&closeTab.label;\\\">\\n       <xul:hbox class=\\\"tab-middle box-inherit\\\" xbl:inherits=\\\"align,dir,pack,orient,selected\\\" flex=\\\"1\\\">\\n         <xul:image class=\\\"tab-icon\\\" xbl:inherits=\\\"validate,src=image\\\"/>\\n@@ -2360,7 +2364,7 @@\\n       <xul:image anonid=\\\"close-button-placeholder\\\" class=\\\"tab-close-button-placeholder\\\"/>\\n       <xul:toolbarbutton anonid=\\\"close-button\\\" class=\\\"tab-close-button\\\"/>\\n     </content>\\n-    \\n+\\n     <implementation>\\n       <field name=\\\"mOverCloseButton\\\">false</field>\\n     </implementation>\\n\""}