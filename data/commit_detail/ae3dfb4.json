{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basae3dfb4\""},"diff":"\"ae3dfb4 Fix bustage from TestPipe.cpp; turns out NS_NewPipe2 isn't exported from XPCOM -- who knew?  r+a=bustage\\ndiff --git a/xpcom/tests/TestHarness.h b/xpcom/tests/TestHarness.h\\nindex ac90c47..f81807b 100644\\n--- a/xpcom/tests/TestHarness.h\\n+++ b/xpcom/tests/TestHarness.h\\n@@ -37,13 +37,14 @@\\n \\n /*\\n  * Test harness for XPCOM objects, providing a scoped XPCOM initializer,\\n- * nsCOMPtr, nsRefPtr, and stdio.h/stdlib.h.\\n+ * nsCOMPtr, nsRefPtr, do_CreateInstance, and stdio.h/stdlib.h.\\n  */\\n \\n #ifndef TestHarness_h__\\n #define TestHarness_h__\\n \\n #include \\\"nsIServiceManager.h\\\"\\n+#include \\\"nsComponentManagerUtils.h\\\"\\n #include \\\"nsCOMPtr.h\\\"\\n #include \\\"nsAutoPtr.h\\\"\\n #include <stdio.h>\\ndiff --git a/xpcom/tests/TestPipe.cpp b/xpcom/tests/TestPipe.cpp\\nindex 08d3b6f..d47b7c8 100644\\n--- a/xpcom/tests/TestPipe.cpp\\n+++ b/xpcom/tests/TestPipe.cpp\\n@@ -40,6 +40,33 @@\\n #include \\\"nsIPipe.h\\\"\\n #include \\\"nsIMemory.h\\\"\\n \\n+/** NS_NewPipe2 reimplemented, because it's not exported by XPCOM */\\n+nsresult NS_NewPipe2(nsIAsyncInputStream** input,\\n+                     nsIAsyncOutputStream** output,\\n+                     PRBool nonBlockingInput = PR_FALSE,\\n+                     PRBool nonBlockingOutput = PR_FALSE,\\n+                     size_t segmentSize = 0,\\n+                     PRUint32 segmentCount = 0,\\n+                     nsIMemory* segmentAlloc = nsnull)\\n+{\\n+  nsCOMPtr<nsIPipe> pipe = do_CreateInstance(\\\"@mozilla.org/pipe;1\\\");\\n+  if (!pipe)\\n+    return NS_ERROR_OUT_OF_MEMORY;\\n+\\n+  nsresult rv = pipe->Init(nonBlockingInput,\\n+                           nonBlockingOutput,\\n+                           segmentSize,\\n+                           segmentCount,\\n+                           segmentAlloc);\\n+\\n+  if (NS_FAILED(rv))\\n+    return rv;\\n+\\n+  pipe->GetInputStream(input);\\n+  pipe->GetOutputStream(output);\\n+  return NS_OK;\\n+}\\n+\\n /**\\n  * Allocator can allocate exactly count * size bytes, stored at mMemory;\\n  * immediately after the end of this is a byte-map of 0/1 values indicating\\n\""}