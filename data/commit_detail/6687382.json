{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas6687382\""},"diff":"\"6687382 Bug 392820 (Bookmarks 'star' panel should capture keyboard shortcuts) - * block accel+w/accel+shift+w within the panel. * close the panel on enter/esc. * focus the name-field/picker and select its contents when opening the panel. * focus the content-area when the panel is closed. r=dietrich.\\ndiff --git a/browser/base/content/browser-places.js b/browser/base/content/browser-places.js\\nindex 8bc78c5..a7fd4bd 100644\\n--- a/browser/base/content/browser-places.js\\n+++ b/browser/base/content/browser-places.js\\n@@ -53,12 +53,48 @@ var PlacesCommandHook = {\\n     return document.getElementById(\\\"editBookmarkPanel\\\");\\n   },\\n \\n+  // list of command elements (by id) to disable when the panel is opened\\n+  _blockedCommands: [\\\"cmd_close\\\", \\\"cmd_closeWindow\\\"],\\n+\\n+  _blockCommands: function PCH__blockCommands() {\\n+    for each(var key in this._blockedCommands) {\\n+      var elt = document.getElementById(key);\\n+      if (elt.getAttribute(\\\"disabled\\\") == \\\"true\\\")\\n+        elt.setAttribute(\\\"wasDisabled\\\", \\\"true\\\");\\n+      else {\\n+        elt.setAttribute(\\\"wasDisabled\\\", \\\"false\\\");\\n+        elt.setAttribute(\\\"disabled\\\", \\\"true\\\");\\n+      }\\n+    }\\n+  },\\n+\\n+  _restoreCommandsState: function PCH__restoreCommandsState() {\\n+    for each(var key in this._blockedCommands) {\\n+      var elt = document.getElementById(key);\\n+      if (elt.getAttribute(\\\"wasDisabled\\\") != \\\"true\\\")\\n+        elt.removeAttribute(\\\"disabled\\\");\\n+      elt.removeAttribute(\\\"wasDisabled\\\");\\n+    }\\n+  },\\n+\\n   // nsIDOMEventListener\\n   handleEvent: function PCH_handleEvent(aEvent) {\\n-    if (aEvent.originalTarget != this.panel)\\n-      return;\\n-\\n-    gEditItemOverlay.uninitPanel(true);\\n+    switch (aEvent.type) {\\n+      case \\\"popuphiding\\\":\\n+        if (aEvent.originalTarget == this.panel) {\\n+          gEditItemOverlay.uninitPanel(true);\\n+          this._restoreCommandsState();\\n+        }\\n+        break;\\n+      case \\\"keypress\\\":\\n+        if (aEvent.keyCode == KeyEvent.DOM_VK_ESCAPE ||\\n+            aEvent.keyCode == KeyEvent.DOM_VK_RETURN) {\\n+          // focus the content area and hide the panel\\n+          window.content.focus();\\n+          this.panel.hidePopup();\\n+        }\\n+        break;\\n+    }\\n   },\\n \\n   _overlayLoaded: false,\\n@@ -98,10 +134,17 @@ var PlacesCommandHook = {\\n \\n   _doShowEditBookmarkPanel:\\n   function PCH__doShowEditBookmarkPanel(aItemId, aAnchorElement, aPosition) {\\n+    this.panel.addEventListener(\\\"keypress\\\", this, true);\\n+    this._blockCommands(); // un-done in the popuphiding handler\\n     this.panel.openPopup(aAnchorElement, aPosition, -1, -1);\\n \\n     gEditItemOverlay.initPanel(aItemId,\\n                                { hiddenRows: [\\\"description\\\", \\\"location\\\"] });\\n+    setTimeout(function() {\\n+                 var namePicker = document.getElementById(\\\"editBMPanel_namePicker\\\");\\n+                 namePicker.focus();\\n+                 namePicker.editor.selectAll();\\n+              }, 0);\\n   },\\n \\n   /**\\n\""}