{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas10ff565\""},"diff":"\"10ff565 Bug 292607 Dragging preformatted text collapses whitespace r+sr=bz a=pavlov\\ndiff --git a/content/base/src/nsContentAreaDragDrop.cpp b/content/base/src/nsContentAreaDragDrop.cpp\\nindex 3741ab1..7722b6c 100644\\n--- a/content/base/src/nsContentAreaDragDrop.cpp\\n+++ b/content/base/src/nsContentAreaDragDrop.cpp\\n@@ -98,6 +98,9 @@\\n #include \\\"nsISelectionController.h\\\"\\n #include \\\"nsFrameSelection.h\\\"\\n #include \\\"nsIDOMEventTarget.h\\\"\\n+#include \\\"nsWidgetsCID.h\\\"\\n+\\n+static NS_DEFINE_CID(kHTMLConverterCID,        NS_HTMLFORMATCONVERTER_CID);\\n \\n // private clipboard data flavors for html copy, used by editor when pasting\\n #define kHTMLContext   \\\"text/_moz_htmlcontext\\\"\\n@@ -137,11 +140,8 @@ private:\\n   static void GetSelectedLink(nsISelection* inSelection,\\n                               nsIDOMNode **outLinkNode);\\n \\n-  enum serializationMode {serializeAsText, serializeAsHTML};\\n   // if inNode is null, use the selection from the window\\n-  static nsresult SerializeNodeOrSelection(serializationMode inMode,\\n-                                           PRUint32 inFlags,\\n-                                           nsIDOMWindow* inWindow,\\n+  static nsresult SerializeNodeOrSelection(nsIDOMWindow* inWindow,\\n                                            nsIDOMNode* inNode,\\n                                            nsAString& outResultString,\\n                                            nsAString& outHTMLContext,\\n@@ -1338,16 +1338,24 @@ nsTransferableFactory::Produce(PRBool* aDragSelection,\\n       nodeToSerialize = nsnull;\\n     }\\n \\n-    SerializeNodeOrSelection(serializeAsHTML,\\n-                             nsIDocumentEncoder::OutputAbsoluteLinks |\\n-                             nsIDocumentEncoder::OutputEncodeW3CEntities,\\n-                             window, nodeToSerialize,\\n+    SerializeNodeOrSelection(window, nodeToSerialize,\\n                              mHtmlString, mContextString, mInfoString);\\n \\n-    nsAutoString dummy1, dummy2;\\n-    SerializeNodeOrSelection(serializeAsText, 0,\\n-                             window, nodeToSerialize,\\n-                             mTitleString, dummy1, dummy2);\\n+    nsCOMPtr<nsIFormatConverter> htmlConverter =\\n+      do_CreateInstance(kHTMLConverterCID);\\n+    NS_ENSURE_TRUE(htmlConverter, NS_ERROR_FAILURE);\\n+\\n+    nsCOMPtr<nsISupportsString> html =\\n+      do_CreateInstance(NS_SUPPORTS_STRING_CONTRACTID);\\n+    NS_ENSURE_TRUE(html, NS_ERROR_FAILURE);\\n+    html->SetData(mHtmlString);\\n+\\n+    nsCOMPtr<nsISupportsString> text;\\n+    PRUint32 textLen;\\n+    htmlConverter->Convert(kHTMLMime, html, mHtmlString.Length() * 2,\\n+                           kUnicodeMime, getter_AddRefs(text), &textLen);\\n+    NS_ENSURE_TRUE(text, NS_ERROR_FAILURE);\\n+    text->GetData(mTitleString);\\n \\n #ifdef CHANGE_SELECTION_ON_DRAG\\n     // We used to change the selection to wrap the dragged node (mainly\\n@@ -1688,9 +1696,7 @@ void nsTransferableFactory::GetSelectedLink(nsISelection* inSelection,\\n \\n // static\\n nsresult\\n-nsTransferableFactory::SerializeNodeOrSelection(serializationMode inMode,\\n-                                                PRUint32 inFlags,\\n-                                                nsIDOMWindow* inWindow,\\n+nsTransferableFactory::SerializeNodeOrSelection(nsIDOMWindow* inWindow,\\n                                                 nsIDOMNode* inNode,\\n                                                 nsAString& outResultString,\\n                                                 nsAString& outContext,\\n@@ -1699,22 +1705,16 @@ nsTransferableFactory::SerializeNodeOrSelection(serializationMode inMode,\\n   NS_ENSURE_ARG_POINTER(inWindow);\\n \\n   nsresult rv;\\n-  nsCOMPtr<nsIDocumentEncoder> encoder;\\n-  static const char *textplain = \\\"text/plain\\\";\\n-\\n-  if (inMode == serializeAsText) {\\n-    nsCAutoString formatType(NS_DOC_ENCODER_CONTRACTID_BASE);\\n-    formatType.Append(textplain);\\n-    encoder = do_CreateInstance(formatType.get(), &rv);\\n-  } else {\\n-    encoder = do_CreateInstance(NS_HTMLCOPY_ENCODER_CONTRACTID, &rv);\\n-  }\\n-  NS_ENSURE_SUCCESS(rv, rv);\\n+  nsCOMPtr<nsIDocumentEncoder> encoder =\\n+    do_CreateInstance(NS_HTMLCOPY_ENCODER_CONTRACTID);\\n+  NS_ENSURE_TRUE(encoder, NS_ERROR_FAILURE);\\n \\n   nsCOMPtr<nsIDOMDocument> domDoc;\\n   inWindow->GetDocument(getter_AddRefs(domDoc));\\n   NS_ENSURE_TRUE(domDoc, NS_ERROR_FAILURE);\\n \\n+  PRUint32 flags = nsIDocumentEncoder::OutputAbsoluteLinks |\\n+                   nsIDocumentEncoder::OutputEncodeW3CEntities;\\n   nsCOMPtr<nsIDOMRange> range;\\n   nsCOMPtr<nsISelection> selection;\\n   if (inNode) {\\n@@ -1725,14 +1725,10 @@ nsTransferableFactory::SerializeNodeOrSelection(serializationMode inMode,\\n     NS_ENSURE_SUCCESS(rv, rv);\\n   } else {\\n     inWindow->GetSelection(getter_AddRefs(selection));\\n-    inFlags |= nsIDocumentEncoder::OutputSelectionOnly;\\n+    flags |= nsIDocumentEncoder::OutputSelectionOnly;\\n   }\\n \\n-  if (inMode == serializeAsText) {\\n-    rv = encoder->Init(domDoc, NS_ConvertASCIItoUTF16(textplain), inFlags);\\n-  } else {\\n-    rv = encoder->Init(domDoc, NS_LITERAL_STRING(kHTMLMime), inFlags);\\n-  }\\n+  rv = encoder->Init(domDoc, NS_LITERAL_STRING(kHTMLMime), flags);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n   if (range) {\\n@@ -1741,12 +1737,6 @@ nsTransferableFactory::SerializeNodeOrSelection(serializationMode inMode,\\n     encoder->SetSelection(selection);\\n   }\\n \\n-  if (inMode == serializeAsText) {\\n-    outContext.Truncate();\\n-    outInfo.Truncate();\\n-    return encoder->EncodeToString(outResultString);\\n-  }\\n-\\n   return encoder->EncodeToStringWithContext(outContext, outInfo,\\n                                             outResultString);\\n }\\n\""}