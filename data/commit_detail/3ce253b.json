{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas3ce253b\""},"diff":"\"3ce253b Bug 393897 - IA2 methods returning S_FALSE on success, r=aaronlev, a=dsicore\\ndiff --git a/accessible/src/msaa/CAccessibleAction.cpp b/accessible/src/msaa/CAccessibleAction.cpp\\nindex f3bc2da..688413f 100755\\n--- a/accessible/src/msaa/CAccessibleAction.cpp\\n+++ b/accessible/src/msaa/CAccessibleAction.cpp\\n@@ -110,8 +110,10 @@ CAccessibleAction::get_description(long aActionIndex, BSTR *aDescription)\\n     return E_FAIL;\\n \\n   if (!description.IsVoid()) {\\n-    return ::SysReAllocStringLen(aDescription, description.get(),\\n-                                 description.Length());\\n+    INT result = ::SysReAllocStringLen(aDescription, description.get(),\\n+                                       description.Length());\\n+    if (!result)\\n+      return E_OUTOFMEMORY;\\n   }\\n \\n   return S_OK;\\n@@ -152,10 +154,10 @@ CAccessibleAction::get_keyBinding(long aActionIndex, long aNumMaxBinding,\\n   for (PRUint32 i = 0; i < numBinding; i++) {\\n     nsAutoString key;\\n     keys->Item(i, key);\\n-    HRESULT hr = ::SysReAllocStringLen(aKeyBinding[i], key.get(),\\n+    INT result = ::SysReAllocStringLen(aKeyBinding[i], key.get(),\\n                                        key.Length());\\n-    if (FAILED(hr))\\n-      return hr;\\n+    if (!result)\\n+      return E_OUTOFMEMORY;\\n   }\\n \\n   return S_OK;\\n@@ -175,8 +177,11 @@ CAccessibleAction::get_name(long aActionIndex, BSTR *aName)\\n   if (NS_FAILED(acc->GetActionName(index, name)))\\n     return E_FAIL;\\n \\n-  if (!name.IsVoid())\\n-    return ::SysReAllocStringLen(aName, name.get(), name.Length());\\n+  if (!name.IsVoid()) {\\n+    INT result = ::SysReAllocStringLen(aName, name.get(), name.Length());\\n+    if (!result)\\n+      return E_OUTOFMEMORY;\\n+  }\\n \\n   return S_OK;\\n }\\ndiff --git a/accessible/src/msaa/CAccessibleHyperlink.cpp b/accessible/src/msaa/CAccessibleHyperlink.cpp\\nindex 1cda3df..4d47eaa 100755\\n--- a/accessible/src/msaa/CAccessibleHyperlink.cpp\\n+++ b/accessible/src/msaa/CAccessibleHyperlink.cpp\\n@@ -135,8 +135,9 @@ CAccessibleHyperlink::get_anchorTarget(long aIndex, VARIANT *aAnchorTarget)\\n   AppendUTF8toUTF16(path, stringURI);\\n \\n   aAnchorTarget->vt = VT_BSTR;\\n-  return ::SysReAllocStringLen(&aAnchorTarget->bstrVal, stringURI.get(),\\n-                               stringURI.Length());\\n+  INT result = ::SysReAllocStringLen(&aAnchorTarget->bstrVal, stringURI.get(),\\n+                                     stringURI.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n STDMETHODIMP\\ndiff --git a/accessible/src/msaa/CAccessibleImage.cpp b/accessible/src/msaa/CAccessibleImage.cpp\\nindex 70e241f..b89dac1 100755\\n--- a/accessible/src/msaa/CAccessibleImage.cpp\\n+++ b/accessible/src/msaa/CAccessibleImage.cpp\\n@@ -82,8 +82,9 @@ CAccessibleImage::get_description(BSTR *aDescription)\\n   if (NS_FAILED(rv))\\n     return E_FAIL;\\n \\n-  return ::SysReAllocStringLen(aDescription, description.get(),\\n-                               description.Length());\\n+  INT result = ::SysReAllocStringLen(aDescription, description.get(),\\n+                                     description.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n STDMETHODIMP\\ndiff --git a/accessible/src/msaa/CAccessibleTable.cpp b/accessible/src/msaa/CAccessibleTable.cpp\\nindex 2d30a4b..c829751 100755\\n--- a/accessible/src/msaa/CAccessibleTable.cpp\\n+++ b/accessible/src/msaa/CAccessibleTable.cpp\\n@@ -159,7 +159,8 @@ CAccessibleTable::get_columnDescription(long aColumn, BSTR *aDescription)\\n   if (NS_FAILED(rv))\\n     return E_FAIL;\\n \\n-  return ::SysReAllocStringLen(aDescription, descr.get(), descr.Length());\\n+  INT result = ::SysReAllocStringLen(aDescription, descr.get(), descr.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n STDMETHODIMP\\n@@ -329,7 +330,8 @@ CAccessibleTable::get_rowDescription(long aRow, BSTR *aDescription)\\n   if (NS_FAILED(rv))\\n     return E_FAIL;\\n \\n-  return ::SysReAllocStringLen(aDescription, descr.get(), descr.Length());\\n+  INT result = ::SysReAllocStringLen(aDescription, descr.get(), descr.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n STDMETHODIMP\\ndiff --git a/accessible/src/msaa/CAccessibleText.cpp b/accessible/src/msaa/CAccessibleText.cpp\\nindex 007231f..82ba452 100755\\n--- a/accessible/src/msaa/CAccessibleText.cpp\\n+++ b/accessible/src/msaa/CAccessibleText.cpp\\n@@ -211,7 +211,8 @@ CAccessibleText::get_text(long aStartOffset, long aEndOffset, BSTR *aText)\\n   if (NS_FAILED(rv))\\n     return E_FAIL;\\n \\n-  return ::SysReAllocStringLen(aText, text.get(), text.Length());\\n+  INT result = ::SysReAllocStringLen(aText, text.get(), text.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n STDMETHODIMP\\n@@ -244,7 +245,8 @@ CAccessibleText::get_textBeforeOffset(long aOffset,\\n   *aStartOffset = startOffset;\\n   *aEndOffset = endOffset;\\n \\n-  return ::SysReAllocStringLen(aText, text.get(), text.Length());\\n+  INT result = ::SysReAllocStringLen(aText, text.get(), text.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n STDMETHODIMP\\n@@ -277,7 +279,8 @@ CAccessibleText::get_textAfterOffset(long aOffset,\\n   *aStartOffset = startOffset;\\n   *aEndOffset = endOffset;\\n \\n-  return ::SysReAllocStringLen(aText, text.get(), text.Length());\\n+  INT result = ::SysReAllocStringLen(aText, text.get(), text.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n STDMETHODIMP\\n@@ -310,7 +313,8 @@ CAccessibleText::get_textAtOffset(long aOffset,\\n   *aStartOffset = startOffset;\\n   *aEndOffset = endOffset;\\n \\n-  return ::SysReAllocStringLen(aText, text.get(), text.Length());\\n+  INT result = ::SysReAllocStringLen(aText, text.get(), text.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n STDMETHODIMP\\n@@ -425,7 +429,8 @@ CAccessibleText::GetModifiedText(PRBool aGetInsertedText,\\n   aText->start = startOffset;\\n   aText->end = endOffset;\\n \\n-  return ::SysReAllocStringLen(&(aText->text), text.get(), text.Length());\\n+  INT result = ::SysReAllocStringLen(&(aText->text), text.get(), text.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n nsAccessibleTextBoundary\\ndiff --git a/accessible/src/msaa/nsApplicationAccessibleWrap.cpp b/accessible/src/msaa/nsApplicationAccessibleWrap.cpp\\nindex 522945a..e1e3501 100755\\n--- a/accessible/src/msaa/nsApplicationAccessibleWrap.cpp\\n+++ b/accessible/src/msaa/nsApplicationAccessibleWrap.cpp\\n@@ -81,7 +81,8 @@ nsApplicationAccessibleWrap::get_appName(BSTR *aName)\\n     return E_FAIL;\\n \\n   NS_ConvertUTF8toUTF16 name(cname);\\n-  return ::SysReAllocStringLen(aName, name.get(), name.Length());\\n+  INT result = ::SysReAllocStringLen(aName, name.get(), name.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n STDMETHODIMP\\n@@ -97,7 +98,8 @@ nsApplicationAccessibleWrap::get_appVersion(BSTR *aVersion)\\n     return E_FAIL;\\n \\n   NS_ConvertUTF8toUTF16 version(cversion);\\n-  return ::SysReAllocStringLen(aVersion, version.get(), version.Length());\\n+  INT result = ::SysReAllocStringLen(aVersion, version.get(), version.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n STDMETHODIMP\\n@@ -119,7 +121,8 @@ nsApplicationAccessibleWrap::get_toolkitVersion(BSTR *aVersion)\\n     return E_FAIL;\\n \\n   NS_ConvertUTF8toUTF16 version(cversion);\\n-  return ::SysReAllocStringLen(aVersion, version.get(), version.Length());\\n+  INT result = ::SysReAllocStringLen(aVersion, version.get(), version.Length());\\n+  return result ? NS_OK : E_OUTOFMEMORY;\\n }\\n \\n // nsApplicationAccessibleWrap\\n\""}