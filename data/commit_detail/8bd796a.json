{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas8bd796a\""},"diff":"\"8bd796a Bug 393247: Downloads no longer remember last download directory, patch by Jim Mathies <jmathies@mozilla.com>, r=me\\ndiff --git a/browser/components/preferences/main.js b/browser/components/preferences/main.js\\nindex ab2d8ce..1066f01 100644\\n--- a/browser/components/preferences/main.js\\n+++ b/browser/components/preferences/main.js\\n@@ -178,8 +178,10 @@ var gMainPane = {\\n    *   True if the Download Manager should be closed when all downloads\\n    *   complete, false if it should be left open.\\n    * browser.download.useDownloadDir - bool\\n-   *   True if downloads are saved with no save-as UI shown, false if\\n-   *   the user should always be asked where to save a file.\\n+   *   True - Save files directly to the folder configured via the\\n+   *   browser.download.folderList preference.\\n+   *   False - Always ask the user where to save a file and default to \\n+   *   browser.download.lastDir when displaying a folder picker dialog.\\n    * browser.download.dir - local file handle\\n    *   A local folder the user may have selected for downloaded files to be\\n    *   saved. Migration of other browser settings may also set this path.\\ndiff --git a/toolkit/content/contentAreaUtils.js b/toolkit/content/contentAreaUtils.js\\nindex 7d6ef5b..04dd0f4 100644\\n--- a/toolkit/content/contentAreaUtils.js\\n+++ b/toolkit/content/contentAreaUtils.js\\n@@ -457,24 +457,22 @@ function getTargetFile(aFpP, aSkipPrompt)\\n   var useDownloadDir = prefs.getBoolPref(\\\"useDownloadDir\\\");\\n   var dir = null;\\n   \\n-  try {\\n-    // On prompt operations, default to lastDir, on direct to folder\\n-    // downloads, default to the user's configured download folder.\\n-    // (right-click save image vs. drag-and-drop into download manager)\\n+  // Default to lastDir if useDownloadDir is false, and lastDir\\n+  // is configured and valid. Otherwise, use the user's default\\n+  // downloads directory configured through download prefs.\\n+  var dnldMgr = Components.classes[\\\"@mozilla.org/download-manager;1\\\"]\\n+                          .getService(Components.interfaces.nsIDownloadManager);\\n+  try {                          \\n     var lastDir = prefs.getComplexValue(\\\"lastDir\\\", nsILocalFile);\\n-    var dnldMgr = Components.classes[\\\"@mozilla.org/download-manager;1\\\"]\\n-                            .getService(Components.interfaces.nsIDownloadManager);\\n-    if (!aSkipPrompt) {\\n+    if (!useDownloadDir && lastDir.exists())\\n       dir = lastDir;\\n-    } else {\\n+    else\\n       dir = dnldMgr.userDownloadsDirectory;\\n-    }\\n-  } catch (ex) {\\n+  } catch(ex) {\\n+    dir = dnldMgr.userDownloadsDirectory;\\n   }\\n \\n   if (!aSkipPrompt || !useDownloadDir || !dir || (dir && !dir.exists())) {\\n-    // If we're asking the user where to save the file, root the Save As...\\n-    // dialog on the place they last picked.\\n     if (!dir || (dir && !dir.exists())) {\\n       // Default to desktop.\\n       var fileLocator = Components.classes[\\\"@mozilla.org/file/directory_service;1\\\"]\\ndiff --git a/toolkit/mozapps/downloads/src/nsHelperAppDlg.js.in b/toolkit/mozapps/downloads/src/nsHelperAppDlg.js.in\\nindex e60bf2a..41b10c9 100644\\n--- a/toolkit/mozapps/downloads/src/nsHelperAppDlg.js.in\\n+++ b/toolkit/mozapps/downloads/src/nsHelperAppDlg.js.in\\n@@ -184,11 +184,20 @@ nsUnknownContentTypeDialog.prototype = {\\n \\n       picker.appendFilters( nsIFilePicker.filterAll );\\n \\n-      // Get the default download directory from download manager\\n+      // Default to lastDir if it's valid, use the user's default\\n+      // downloads directory otherwise.\\n       var dnldMgr = Components.classes[\\\"@mozilla.org/download-manager;1\\\"]\\n                               .getService(Components.interfaces.nsIDownloadManager);\\n-      var startDir = dnldMgr.defaultDownloadsDirectory;\\n-      picker.displayDirectory = startDir;\\n+      try {\\n+        var lastDir = prefs.getComplexValue(\\\"browser.download.lastDir\\\",\\n+                            Components.interfaces.nsILocalFile);\\n+        if (lastDir.exists())\\n+          picker.displayDirectory = lastDir;\\n+        else\\n+          picker.displayDirectory = dnldMgr.userDownloadsDirectory;\\n+      } catch (ex) {\\n+        picker.displayDirectory = dnldMgr.userDownloadsDirectory;\\n+      }\\n \\n       if (picker.show() == nsIFilePicker.returnCancel) {\\n         // null result means user cancelled.\\n@@ -210,7 +219,7 @@ nsUnknownContentTypeDialog.prototype = {\\n         }\\n         catch (e) { }\\n         var newDir = result.parent;\\n-        prefs.setComplexValue(\\\"browser.download.dir\\\", Components.interfaces.nsILocalFile, newDir);\\n+        prefs.setComplexValue(\\\"browser.download.lastDir\\\", Components.interfaces.nsILocalFile, newDir);\\n         result = this.validateLeafName(newDir, result.leafName, null);\\n       }\\n       return result;\\n\""}