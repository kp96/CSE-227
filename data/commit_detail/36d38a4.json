{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas36d38a4\""},"diff":"\"36d38a4 Bug 321954 - Make it easier for apps to hook into toolkit's printing component, patch nearly all by Ian Neal <iann_bugzilla@blueyonder.co.uk> with very little from me, r=gavin\\ndiff --git a/browser/base/content/browser.js b/browser/base/content/browser.js\\nindex 4059e59..5b47d83 100644\\n--- a/browser/base/content/browser.js\\n+++ b/browser/base/content/browser.js\\n@@ -99,6 +99,7 @@ var gProgressCollapseTimer = null;\\n var gPrefService = null;\\n var appCore = null;\\n var gBrowser = null;\\n+var gNavToolbox = null;\\n var gSidebarCommand = \\\"\\\";\\n \\n // Global variable that holds the nsContextMenu instance.\\n@@ -1029,8 +1030,7 @@ function delayedStartup()\\n \\n   SetPageProxyState(\\\"invalid\\\");\\n \\n-  var toolbox = document.getElementById(\\\"navigator-toolbox\\\");\\n-  toolbox.customizeDone = BrowserToolboxCustomizeDone;\\n+  getNavToolbox().customizeDone = BrowserToolboxCustomizeDone;\\n \\n   // Set up Sanitize Item\\n   gSanitizeListener = new SanitizeListener();\\n@@ -2279,13 +2279,13 @@ function toggleAffectedChrome(aHide)\\n   //   (*) menubar\\n   //   (*) navigation bar\\n   //   (*) bookmarks toolbar\\n+  //   (*) tabstrip\\n   //   (*) browser messages\\n   //   (*) sidebar\\n   //   (*) find bar\\n   //   (*) statusbar\\n \\n-  var navToolbox = document.getElementById(\\\"navigator-toolbox\\\");\\n-  navToolbox.hidden = aHide;\\n+  getNavToolbox().hidden = aHide;\\n   if (aHide)\\n   {\\n     gChromeState = {};\\n@@ -2293,6 +2293,9 @@ function toggleAffectedChrome(aHide)\\n     gChromeState.sidebarOpen = !sidebar.hidden;\\n     gSidebarCommand = sidebar.getAttribute(\\\"sidebarcommand\\\");\\n \\n+    gChromeState.hadTabStrip = gBrowser.getStripVisibility();\\n+    gBrowser.setStripVisibilityTo(false);\\n+\\n     var notificationBox = gBrowser.getNotificationBox();\\n     gChromeState.notificationsOpen = !notificationBox.notificationsHidden;\\n     notificationBox.notificationsHidden = aHide;\\n@@ -2305,6 +2308,10 @@ function toggleAffectedChrome(aHide)\\n     gFindBar.close();\\n   }\\n   else {\\n+    if (gChromeState.hadTabStrip) {\\n+      gBrowser.setStripVisibilityTo(true);\\n+    }\\n+\\n     if (gChromeState.notificationsOpen) {\\n       gBrowser.getNotificationBox().notificationsHidden = aHide;\\n     }\\n@@ -2333,6 +2340,11 @@ function onExitPrintPreview()\\n   toggleAffectedChrome(false);\\n }\\n \\n+function getPPBrowser()\\n+{\\n+  return document.getElementById(\\\"content\\\");\\n+}\\n+\\n function getMarkupDocumentViewer()\\n {\\n   return gBrowser.markupDocumentViewer;\\n@@ -3049,7 +3061,7 @@ function BrowserCustomizeToolbar()\\n   window.openDialog(\\\"chrome://global/content/customizeToolbar.xul\\\",\\n                     \\\"CustomizeToolbar\\\",\\n                     \\\"chrome,all,dependent\\\",\\n-                    document.getElementById(\\\"navigator-toolbox\\\"));\\n+                    getNavToolbox());\\n #endif\\n }\\n \\n@@ -3173,7 +3185,7 @@ var FullScreen =\\n       }\\n     }\\n \\n-    var toolbox = document.getElementById(\\\"navigator-toolbox\\\");\\n+    var toolbox = getNavToolbox();\\n     if (aShow)\\n       toolbox.removeAttribute(\\\"inFullscreen\\\");\\n     else\\n@@ -3872,7 +3884,7 @@ function onViewToolbarsPopupShowing(aEvent)\\n \\n   var firstMenuItem = popup.firstChild;\\n \\n-  var toolbox = document.getElementById(\\\"navigator-toolbox\\\");\\n+  var toolbox = getNavToolbox();\\n   for (i = 0; i < toolbox.childNodes.length; ++i) {\\n     var toolbar = toolbox.childNodes[i];\\n     var toolbarName = toolbar.getAttribute(\\\"toolbarname\\\");\\n@@ -3894,7 +3906,7 @@ function onViewToolbarsPopupShowing(aEvent)\\n \\n function onViewToolbarCommand(aEvent)\\n {\\n-  var toolbox = document.getElementById(\\\"navigator-toolbox\\\");\\n+  var toolbox = getNavToolbox();\\n   var index = aEvent.originalTarget.getAttribute(\\\"toolbarindex\\\");\\n   var toolbar = toolbox.childNodes[index];\\n \\n@@ -4386,7 +4398,6 @@ var contentAreaDNDObserver = {\\n \\n };\\n \\n-// For extensions\\n function getBrowser()\\n {\\n   if (!gBrowser)\\n@@ -4394,6 +4405,13 @@ function getBrowser()\\n   return gBrowser;\\n }\\n \\n+function getNavToolbox()\\n+{\\n+  if (!gNavToolbox)\\n+    gNavToolbox = document.getElementById(\\\"navigator-toolbox\\\");\\n+  return gNavToolbox;\\n+}\\n+\\n function MultiplexHandler(event)\\n { try {\\n     var node = event.target;\\ndiff --git a/toolkit/components/printing/content/printUtils.js b/toolkit/components/printing/content/printUtils.js\\nindex 030b1f6..bdd2823 100644\\n--- a/toolkit/components/printing/content/printUtils.js\\n+++ b/toolkit/components/printing/content/printUtils.js\\n@@ -39,8 +39,6 @@\\n #\\n # ***** END LICENSE BLOCK *****\\n \\n-var  XUL_NS = \\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\";\\n-\\n var gPrintSettingsAreGlobal = false;\\n var gSavePrintSettings = false;\\n \\n@@ -88,6 +86,12 @@ var PrintUtils = {\\n     }\\n   },\\n \\n+  // calling PrintUtils.printPreview() requires that you have three functions\\n+  // in the global scope: getPPBrowser(), which returns the browser element in\\n+  // the window print preview uses, getNavToolbox(), which returns the element\\n+  // (usually the main toolbox element) before which the print preview toolbar\\n+  // should be inserted, and getWebNavigation(), which returns the document's\\n+  // nsIWebNavigation object\\n   printPreview: function (aEnterPPCallback, aExitPPCallback, aWindow)\\n   {\\n     // if we're already in PP mode, don't set the callbacks; chances\\n@@ -98,10 +102,12 @@ var PrintUtils = {\\n       this._onEnterPP = aEnterPPCallback;\\n       this._onExitPP  = aExitPPCallback;\\n     } else {\\n-      // hide the toolbar here -- it will be shown in\\n+      // collapse the browser here -- it will be shown in\\n       // onEnterPrintPreview; this forces a reflow which fixes display\\n       // issues in bug 267422.\\n-      pptoolbar.hidden = true;\\n+      var browser = getPPBrowser();\\n+      if (browser)\\n+        browser.collapsed = true;\\n     }\\n \\n     this._webProgressPP = {};\\n@@ -122,7 +128,7 @@ var PrintUtils = {\\n       PPROMPTSVC.showProgress(this, webBrowserPrint, printSettings, this._obsPP, false,\\n                               this._webProgressPP, ppParams, notifyOnOpen);\\n       if (ppParams.value) {\\n-        var webNav = getBrowser().webNavigation;\\n+        var webNav = getWebNavigation();\\n         ppParams.value.docTitle = webNav.document.title;\\n         ppParams.value.docURL   = webNav.currentURI.spec;\\n       }\\n@@ -183,7 +189,6 @@ var PrintUtils = {\\n     return printSettings;\\n   },\\n \\n-  _chromeState: {},\\n   _closeHandlerPP: null,\\n   _webProgressPP: null,\\n   _onEnterPP: null,\\n@@ -223,25 +228,22 @@ var PrintUtils = {\\n     var printPreviewTB = document.getElementById(\\\"print-preview-toolbar\\\");\\n     if (printPreviewTB) {\\n       printPreviewTB.updateToolbar();\\n-      printPreviewTB.hidden = false;\\n+      var browser = getPPBrowser();\\n+      if (browser)\\n+        browser.collapsed = false;\\n       return;\\n     }\\n \\n     // show the toolbar after we go into print preview mode so\\n     // that we can initialize the toolbar with total num pages\\n+    var XUL_NS =\\n+      \\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\";\\n     printPreviewTB = document.createElementNS(XUL_NS, \\\"toolbar\\\");\\n     printPreviewTB.setAttribute(\\\"printpreview\\\", true);\\n     printPreviewTB.setAttribute(\\\"id\\\", \\\"print-preview-toolbar\\\");\\n \\n-#ifdef MOZ_PHOENIX\\n-    getBrowser().parentNode.insertBefore(printPreviewTB, getBrowser());\\n-\\n-    // Tab browser...\\n-    if (\\\"getStripVisibility\\\" in getBrowser()) {\\n-      this._chromeState.hadTabStrip = getBrowser().getStripVisibility();\\n-      getBrowser().setStripVisibilityTo(false);\\n-    }\\n-#endif\\n+    var navToolbox = getNavToolbox();\\n+    navToolbox.parentNode.insertBefore(printPreviewTB, navToolbox);\\n \\n     // copy the window close handler\\n     if (document.documentElement.hasAttribute(\\\"onclose\\\"))\\n@@ -267,24 +269,17 @@ var PrintUtils = {\\n   {\\n     window.removeEventListener(\\\"keypress\\\", this.onKeyPressPP, true);\\n \\n-#ifdef MOZ_THUNDERBIRD\\n-    BrowserExitPrintPreview(); // make the traditional call..don't do any of the inline toolbar browser stuff\\n-    return;\\n-#endif\\n-\\n     // restore the old close handler\\n     document.documentElement.setAttribute(\\\"onclose\\\", this._closeHandlerPP);\\n     this._closeHandlerPP = null;\\n \\n-    if (\\\"getStripVisibility\\\" in getBrowser())\\n-      getBrowser().setStripVisibilityTo(this._chromeState.hadTabStrip);\\n-\\n     var webBrowserPrint = this.getWebBrowserPrint(aWindow);\\n     webBrowserPrint.exitPrintPreview(); \\n \\n     // remove the print preview toolbar\\n+    var navToolbox = getNavToolbox();\\n     var printPreviewTB = document.getElementById(\\\"print-preview-toolbar\\\");\\n-    getBrowser().parentNode.removeChild(printPreviewTB);\\n+    navToolbox.parentNode.removeChild(printPreviewTB);\\n \\n     var contentWindow = aWindow || window.content;\\n     contentWindow.focus();\\ndiff --git a/toolkit/components/viewsource/content/viewSource.js b/toolkit/components/viewsource/content/viewSource.js\\nindex 6243e8b7..6277484 100644\\n--- a/toolkit/components/viewsource/content/viewSource.js\\n+++ b/toolkit/components/viewsource/content/viewSource.js\\n@@ -272,6 +272,25 @@ function onExitPP()\\n   toolbox.hidden = false;\\n }\\n \\n+function getPPBrowser()\\n+{\\n+  return document.getElementById(\\\"content\\\");\\n+}\\n+\\n+function getNavToolbox()\\n+{\\n+  return document.getElementById(\\\"appcontent\\\");\\n+}\\n+\\n+function getWebNavigation()\\n+{\\n+  try {\\n+    return gBrowser.webNavigation;\\n+  } catch (e) {\\n+    return null;\\n+  }\\n+}\\n+\\n function ViewSourceGoToLine()\\n {\\n   var promptService = Components.classes[\\\"@mozilla.org/embedcomp/prompt-service;1\\\"]\\n\""}