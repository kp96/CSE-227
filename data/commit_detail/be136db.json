{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basbe136db\""},"diff":"\"be136db return the event handling status correctly from DispatchEvent on child views, more event handling cleanup in our menu impl. b=396520 r=cbarrett sr=roc a=roc\\ndiff --git a/widget/src/cocoa/nsChildView.mm b/widget/src/cocoa/nsChildView.mm\\nindex db74907..548d9b0 100644\\n--- a/widget/src/cocoa/nsChildView.mm\\n+++ b/widget/src/cocoa/nsChildView.mm\\n@@ -1311,7 +1311,7 @@ NS_IMETHODIMP nsChildView::Scroll(PRInt32 aDx, PRInt32 aDy, nsRect *aClipRect)\\n }\\n \\n \\n-// Invokes callback and  ProcessEvent method on Event Listener object\\n+// Invokes callback and ProcessEvent methods on Event Listener object\\n NS_IMETHODIMP nsChildView::DispatchEvent(nsGUIEvent* event, nsEventStatus& aStatus)\\n {\\n   aStatus = nsEventStatus_eIgnore;\\n@@ -1344,7 +1344,7 @@ NS_IMETHODIMP nsChildView::DispatchEvent(nsGUIEvent* event, nsEventStatus& aStat\\n   \\n   // dispatch to event listener if event was not consumed\\n   if (mEventListener && aStatus != nsEventStatus_eConsumeNoDefault)\\n-    mEventListener->ProcessEvent(*event);\\n+    aStatus = mEventListener->ProcessEvent(*event);\\n \\n   return NS_OK;\\n }\\ndiff --git a/widget/src/cocoa/nsCocoaWindow.mm b/widget/src/cocoa/nsCocoaWindow.mm\\nindex b0f2fb7..97ea31e 100644\\n--- a/widget/src/cocoa/nsCocoaWindow.mm\\n+++ b/widget/src/cocoa/nsCocoaWindow.mm\\n@@ -932,7 +932,7 @@ NS_IMETHODIMP nsCocoaWindow::ResetInputState()\\n }\\n \\n \\n-// Invokes callback and  ProcessEvent method on Event Listener object\\n+// Invokes callback and ProcessEvent methods on Event Listener object\\n NS_IMETHODIMP \\n nsCocoaWindow::DispatchEvent(nsGUIEvent* event, nsEventStatus& aStatus)\\n {\\n@@ -940,16 +940,15 @@ nsCocoaWindow::DispatchEvent(nsGUIEvent* event, nsEventStatus& aStatus)\\n \\n   nsIWidget* aWidget = event->widget;\\n   NS_IF_ADDREF(aWidget);\\n-  \\n-  if (nsnull != mMenuListener){\\n-    if(NS_MENU_EVENT == event->eventStructType)\\n-      aStatus = mMenuListener->MenuSelected(static_cast<nsMenuEvent&>(*event));\\n-  }\\n+\\n+  if (mMenuListener &&  event->eventStructType == NS_MENU_EVENT)\\n+    aStatus = mMenuListener->MenuSelected(static_cast<nsMenuEvent&>(*event));\\n+\\n   if (mEventCallback)\\n     aStatus = (*mEventCallback)(event);\\n \\n   // Dispatch to event listener if event was not consumed\\n-  if ((aStatus != nsEventStatus_eConsumeNoDefault) && (mEventListener != nsnull))\\n+  if (mEventListener && aStatus != nsEventStatus_eConsumeNoDefault)\\n     aStatus = mEventListener->ProcessEvent(*event);\\n \\n   NS_IF_RELEASE(aWidget);\\ndiff --git a/widget/src/cocoa/nsMenuBarX.mm b/widget/src/cocoa/nsMenuBarX.mm\\nindex f09a613..c86022c 100644\\n--- a/widget/src/cocoa/nsMenuBarX.mm\\n+++ b/widget/src/cocoa/nsMenuBarX.mm\\n@@ -136,15 +136,6 @@ nsMenuBarX::~nsMenuBarX()\\n nsEventStatus \\n nsMenuBarX::MenuItemSelected(const nsMenuEvent &aMenuEvent)\\n {\\n-  for (PRInt32 i = mMenusArray.Count() - 1; i >= 0; i--) {\\n-    nsCOMPtr<nsIMenu> menu = mMenusArray.ObjectAt(i);\\n-    nsCOMPtr<nsIMenuListener> menuListener = do_QueryInterface(menu);\\n-    if (menuListener) {\\n-      nsEventStatus eventStatus = menuListener->MenuItemSelected(aMenuEvent);\\n-      if (eventStatus != nsEventStatus_eIgnore)\\n-        return eventStatus;\\n-    }\\n-  }\\n   return nsEventStatus_eIgnore;\\n }\\n \\n@@ -152,17 +143,6 @@ nsMenuBarX::MenuItemSelected(const nsMenuEvent &aMenuEvent)\\n nsEventStatus \\n nsMenuBarX::MenuSelected(const nsMenuEvent &aMenuEvent)\\n {\\n-  for (PRInt32 i = mMenusArray.Count() - 1; i >= 0; i--) {\\n-    nsCOMPtr<nsIMenu> menu = mMenusArray.ObjectAt(i);\\n-    nsCOMPtr<nsIMenuListener> thisListener = do_QueryInterface(menu);\\n-    if (thisListener) {\\n-      //TODO: MenuSelected is the right thing to call...\\n-      //eventStatus = menuListener->MenuSelected(aMenuEvent);\\n-      nsEventStatus eventStatus = thisListener->MenuItemSelected(aMenuEvent);\\n-      if (eventStatus != nsEventStatus_eIgnore)\\n-        return eventStatus;\\n-    }\\n-  }\\n   return nsEventStatus_eIgnore;\\n }\\n \\ndiff --git a/widget/src/cocoa/nsMenuItemX.mm b/widget/src/cocoa/nsMenuItemX.mm\\nindex c7fd902..5012b7c 100644\\n--- a/widget/src/cocoa/nsMenuItemX.mm\\n+++ b/widget/src/cocoa/nsMenuItemX.mm\\n@@ -255,8 +255,7 @@ NS_METHOD nsMenuItemX::IsSeparator(PRBool & aIsSep)\\n \\n nsEventStatus nsMenuItemX::MenuItemSelected(const nsMenuEvent & aMenuEvent)\\n {\\n-  // this is all handled by Carbon Events\\n-  return nsEventStatus_eConsumeNoDefault;\\n+  return nsEventStatus_eIgnore;\\n }\\n \\n \\ndiff --git a/widget/src/cocoa/nsMenuX.mm b/widget/src/cocoa/nsMenuX.mm\\nindex 8446faf..cdd7005 100644\\n--- a/widget/src/cocoa/nsMenuX.mm\\n+++ b/widget/src/cocoa/nsMenuX.mm\\n@@ -444,15 +444,13 @@ NS_IMETHODIMP nsMenuX::RemoveMenuListener(nsIMenuListener * aMenuListener)\\n \\n nsEventStatus nsMenuX::MenuItemSelected(const nsMenuEvent & aMenuEvent)\\n {\\n-  // all this is now handled by Carbon Events.\\n-  return nsEventStatus_eConsumeNoDefault;\\n+  return nsEventStatus_eIgnore;\\n }\\n \\n \\n nsEventStatus nsMenuX::MenuSelected(const nsMenuEvent & aMenuEvent)\\n {\\n   // printf(\\\"JOSH: MenuSelected called for %s \\\\n\\\", NS_LossyConvertUTF16toASCII(mLabel).get());\\n-  nsEventStatus eventStatus = nsEventStatus_eIgnore;\\n \\n   // Determine if this is the correct menu to handle the event\\n   MenuRef selectedMenuHandle = (MenuRef)aMenuEvent.mCommand;\\n@@ -479,7 +477,7 @@ nsEventStatus nsMenuX::MenuSelected(const nsMenuEvent & aMenuEvent)\\n \\n     OnCreated();  // Now that it's built, fire the popupShown event.\\n \\n-    eventStatus = nsEventStatus_eConsumeNoDefault;  \\n+    return nsEventStatus_eConsumeNoDefault;  \\n   }\\n   else {\\n     // Make sure none of our submenus are the ones that should be handling this\\n@@ -487,14 +485,14 @@ nsEventStatus nsMenuX::MenuSelected(const nsMenuEvent & aMenuEvent)\\n       nsISupports*              menuSupports = mMenuItemsArray.ObjectAt(i);\\n       nsCOMPtr<nsIMenuListener> menuListener = do_QueryInterface(menuSupports);\\n       if (menuListener) {\\n-        eventStatus = menuListener->MenuSelected(aMenuEvent);\\n-        if (nsEventStatus_eIgnore != eventStatus)\\n+        nsEventStatus eventStatus = menuListener->MenuSelected(aMenuEvent);\\n+        if (eventStatus != nsEventStatus_eIgnore)\\n           return eventStatus;\\n       }  \\n     }\\n   }\\n \\n-  return eventStatus;\\n+  return nsEventStatus_eIgnore;\\n }\\n \\n \\n\""}