{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas23c4888\""},"diff":"\"23c4888 Bug 392771: Load distribution-specific search engines at startup. r=gavin, r=bsmedberg, a=beltzner\\ndiff --git a/browser/components/dirprovider/nsBrowserDirectoryProvider.cpp b/browser/components/dirprovider/nsBrowserDirectoryProvider.cpp\\nindex 4479b7b..5f58c91 100755\\n--- a/browser/components/dirprovider/nsBrowserDirectoryProvider.cpp\\n+++ b/browser/components/dirprovider/nsBrowserDirectoryProvider.cpp\\n@@ -200,6 +200,95 @@ AppendFileKey(const char *key, nsIProperties* aDirSvc,\\n   array.AppendObject(file);\\n }\\n \\n+// Appends the distribution-specific search engine directories to the\\n+// array.  The directory structure is as follows:\\n+\\n+// appdir/\\n+// \\\\- distribution/\\n+//    \\\\- searchplugins/\\n+//       |- common/\\n+//       \\\\- locale/\\n+//          |- <locale 1>/\\n+//          ...\\n+//          \\\\- <locale N>/\\n+\\n+// common engines are loaded for all locales.  If there is no locale\\n+// directory for the current locale, there is a pref:\\n+// \\\"distribution.searchplugins.defaultLocale\\\"\\n+// which specifies a default locale to use.\\n+\\n+static void\\n+AppendDistroSearchDirs(nsIProperties* aDirSvc, nsCOMArray<nsIFile> &array)\\n+{\\n+  nsCOMPtr<nsIFile> searchPlugins;\\n+  nsresult rv = aDirSvc->Get(NS_XPCOM_CURRENT_PROCESS_DIR,\\n+                             NS_GET_IID(nsIFile),\\n+                             getter_AddRefs(searchPlugins));\\n+  if (NS_FAILED(rv))\\n+    return;\\n+  searchPlugins->AppendNative(NS_LITERAL_CSTRING(\\\"distribution\\\"));\\n+  searchPlugins->AppendNative(NS_LITERAL_CSTRING(\\\"searchplugins\\\"));\\n+\\n+  PRBool exists;\\n+  rv = searchPlugins->Exists(&exists);\\n+  if (NS_FAILED(rv) || !exists)\\n+    return;\\n+\\n+  nsCOMPtr<nsIFile> commonPlugins;\\n+  rv = searchPlugins->Clone(getter_AddRefs(commonPlugins));\\n+  if (NS_SUCCEEDED(rv)) {\\n+    commonPlugins->AppendNative(NS_LITERAL_CSTRING(\\\"common\\\"));\\n+    rv = commonPlugins->Exists(&exists);\\n+    if (NS_SUCCEEDED(rv) && exists)\\n+        array.AppendObject(commonPlugins);\\n+  }\\n+\\n+  nsCOMPtr<nsIPrefBranch> prefs(do_GetService(NS_PREFSERVICE_CONTRACTID));\\n+  if (prefs) {\\n+\\n+    nsCOMPtr<nsIFile> localePlugins;\\n+    rv = searchPlugins->Clone(getter_AddRefs(localePlugins));\\n+    if (NS_FAILED(rv))\\n+      return;\\n+\\n+    localePlugins->AppendNative(NS_LITERAL_CSTRING(\\\"locale\\\"));\\n+\\n+    nsCString locale;\\n+    rv = prefs->GetCharPref(\\\"general.useragent.locale\\\", getter_Copies(locale));\\n+    if (NS_SUCCEEDED(rv)) {\\n+\\n+      nsCOMPtr<nsIFile> curLocalePlugins;\\n+      rv = localePlugins->Clone(getter_AddRefs(curLocalePlugins));\\n+      if (NS_SUCCEEDED(rv)) {\\n+\\n+        curLocalePlugins->AppendNative(locale);\\n+        rv = curLocalePlugins->Exists(&exists);\\n+        if (NS_SUCCEEDED(rv) && exists) {\\n+          array.AppendObject(curLocalePlugins);\\n+          return; // all done\\n+        }\\n+      }\\n+    }\\n+\\n+    // we didn't append the locale dir - try the default one\\n+    nsCString defLocale;\\n+    rv = prefs->GetCharPref(\\\"distribution.searchplugins.defaultLocale\\\",\\n+                            getter_Copies(defLocale));\\n+    if (NS_SUCCEEDED(rv)) {\\n+\\n+      nsCOMPtr<nsIFile> defLocalePlugins;\\n+      rv = localePlugins->Clone(getter_AddRefs(defLocalePlugins));\\n+      if (NS_SUCCEEDED(rv)) {\\n+\\n+        defLocalePlugins->AppendNative(defLocale);\\n+        rv = defLocalePlugins->Exists(&exists);\\n+        if (NS_SUCCEEDED(rv) && exists)\\n+          array.AppendObject(defLocalePlugins);\\n+      }\\n+    }\\n+  }\\n+}\\n+\\n NS_IMETHODIMP\\n nsBrowserDirectoryProvider::GetFiles(const char *aKey,\\n                                      nsISimpleEnumerator* *aResult)\\n@@ -214,6 +303,7 @@ nsBrowserDirectoryProvider::GetFiles(const char *aKey,\\n \\n     nsCOMArray<nsIFile> baseFiles;\\n \\n+    AppendDistroSearchDirs(dirSvc, baseFiles);\\n     AppendFileKey(NS_APP_SEARCH_DIR, dirSvc, baseFiles);\\n     AppendFileKey(NS_APP_USER_SEARCH_DIR, dirSvc, baseFiles);\\n \\n\""}