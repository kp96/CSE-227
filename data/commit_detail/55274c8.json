{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas55274c8\""},"diff":"\"55274c8 [OS/2] Bug 395576: extension of downloaded files are upper-cased sometimes, r=mkaply\\ndiff --git a/xpcom/io/nsLocalFileOS2.cpp b/xpcom/io/nsLocalFileOS2.cpp\\nindex eacdd5a..313734a 100644\\n--- a/xpcom/io/nsLocalFileOS2.cpp\\n+++ b/xpcom/io/nsLocalFileOS2.cpp\\n@@ -2164,20 +2164,17 @@ nsLocalFile::IsExecutable(PRBool *_retval)\\n     if (pathEnd == leaf)\\n         return NS_OK;\\n \\n-    // get the extension, including the dot\\n-    char* ext = (char*) _mbsrchr((const unsigned char*)leaf, '.');\\n-    if (!ext)\\n-        return NS_OK;\\n+    // get the extension, including the dot, max. of 4 chars for comparison\\n+    // (copy the extension so that the original filename stays untouched)\\n+    char ext[5];\\n+    strncpy(ext, (char*) _mbsrchr((const unsigned char*)leaf, '.'), 4);\\n+    ext[4] = '\\\\0'; // ensure trailing nullbyte\\n \\n     // upper-case the extension, then see if it claims to be an executable\\n-#ifdef MOZ_OS2_HIGH_MEMORY\\n     // WinUpper() cannot be used because it crashes with high memory.\\n     // strupr() does not take into account non-ASCII characters but this is\\n     // irrelevant for the possible extensions below\\n     strupr(ext);\\n-#else\\n-    WinUpper(0, 0, 0, ext);\\n-#endif\\n     if (strcmp(ext, \\\".EXE\\\") == 0 ||\\n         strcmp(ext, \\\".CMD\\\") == 0 ||\\n         strcmp(ext, \\\".COM\\\") == 0 ||\\n\""}