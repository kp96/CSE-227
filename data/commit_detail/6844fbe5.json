{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas6844fbe5\""},"diff":"\"6844fbe5 Bug 345258 - Remove/add the corresponding menuitems in the all tabs menu when tabs are added/removed while the menu is open. patch from Michael Ventnor <ventnor.bugzilla@yahoo.com.au>, r=me.\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 63a67db..0c58719 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -28,6 +28,7 @@\\n    -   Asaf Romano <mozilla.mano@sent.com>\\n    -   Seth Spitzer <sspitzer@mozilla.org>\\n    -   Simon BÃ¼nzli <zeniko@gmail.com>\\n+   -   Michael Ventnor <ventnor.bugzilla@yahoo.com.au>\\n    -\\n    - Alternatively, the contents of this file may be used under the terms of\\n    - either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n@@ -2959,6 +2960,7 @@\\n               case \\\"crop\\\":\\n               case \\\"busy\\\":\\n               case \\\"image\\\":\\n+              case \\\"selected\\\":\\n                 if (aEvent.attrChange == aEvent.REMOVAL)\\n                   menuItem.removeAttribute(attrName);\\n                 else\\n@@ -2968,6 +2970,15 @@\\n         ]]></body>\\n       </method>\\n \\n+      <method name=\\\"_tabOnTabClose\\\">\\n+        <parameter name=\\\"aEvent\\\"/>\\n+        <body><![CDATA[\\n+          var menuItem = aEvent.target.mCorrespondingMenuitem;\\n+          if (menuItem)\\n+            this.removeChild(menuItem);\\n+        ]]></body>\\n+      </method>\\n+\\n       <method name=\\\"handleEvent\\\">\\n         <parameter name=\\\"aEvent\\\"/>\\n         <body><![CDATA[\\n@@ -2980,9 +2991,47 @@\\n               break;\\n             case \\\"DOMAttrModified\\\":\\n               this._tabOnAttrModified(aEvent);\\n+              break;\\n+            case \\\"TabClose\\\":\\n+              this._tabOnTabClose(aEvent);\\n+              break;\\n+            case \\\"TabOpen\\\":\\n+              this._createTabMenuItem(aEvent.originalTarget);\\n+              break;\\n           }\\n         ]]></body>\\n       </method>\\n+\\n+      <method name=\\\"_createTabMenuItem\\\">\\n+        <parameter name=\\\"aTab\\\"/>\\n+        <body><![CDATA[\\n+          var menuItem = document.createElementNS(\\n+            \\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\", \\n+            \\\"menuitem\\\");\\n+\\n+          menuItem.setAttribute(\\\"class\\\", \\\"menuitem-iconic alltabs-item\\\");\\n+\\n+          menuItem.setAttribute(\\\"label\\\", aTab.label);\\n+          menuItem.setAttribute(\\\"crop\\\", aTab.getAttribute(\\\"crop\\\"));\\n+          menuItem.setAttribute(\\\"image\\\", aTab.getAttribute(\\\"image\\\"));\\n+\\n+          if (aTab.hasAttribute(\\\"busy\\\"))\\n+            menuItem.setAttribute(\\\"busy\\\", aTab.getAttribute(\\\"busy\\\"));\\n+          if (aTab.selected)\\n+            menuItem.setAttribute(\\\"selected\\\", \\\"true\\\");\\n+\\n+          // Keep some attributes of the menuitem in sync with its\\n+          // corresponding tab (e.g. the tab label)\\n+          aTab.mCorrespondingMenuitem = menuItem;\\n+          aTab.addEventListener(\\\"DOMAttrModified\\\", this, false);\\n+          aTab.addEventListener(\\\"TabClose\\\", this, false);\\n+          menuItem.tab = aTab;\\n+          menuItem.addEventListener(\\\"command\\\", this, false);\\n+\\n+          this.appendChild(menuItem);\\n+          return menuItem;\\n+        ]]></body>\\n+      </method>\\n     </implementation>\\n \\n     <handlers>\\n@@ -2992,34 +3041,16 @@\\n         var tabcontainer = document.getBindingParent(this);\\n         var tabs = tabcontainer.childNodes;\\n \\n+        // Listen for changes in the tab bar.\\n+        var tabbrowser = document.getBindingParent(tabcontainer);\\n+        tabbrowser.addEventListener(\\\"TabOpen\\\", this, false);\\n+\\n         // if an animation is in progress and the user\\n         // clicks on the \\\"all tabs\\\" button, stop the animation\\n         tabcontainer._stopAnimation();\\n \\n         for (var i = 0; i < tabs.length; i++) {\\n-          var menuItem = document.createElementNS(\\n-            \\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\", \\n-            \\\"menuitem\\\");\\n-          var curTab = tabs[i];\\n-\\n-          if (curTab.selected)\\n-            menuItem.setAttribute(\\\"selected\\\", \\\"true\\\");\\n-          menuItem.setAttribute(\\\"class\\\", \\\"menuitem-iconic alltabs-item\\\");\\n-\\n-          menuItem.setAttribute(\\\"label\\\", curTab.label);\\n-          menuItem.setAttribute(\\\"crop\\\", curTab.getAttribute(\\\"crop\\\"));\\n-          menuItem.setAttribute(\\\"image\\\", curTab.getAttribute(\\\"image\\\"));\\n-          if (curTab.hasAttribute(\\\"busy\\\"))\\n-            menuItem.setAttribute(\\\"busy\\\", curTab.getAttribute(\\\"busy\\\"));\\n-\\n-          // Keep some attributes of the menuitem in sync with its\\n-          // corresponding tab (e.g. the tab label)\\n-          curTab.mCorrespondingMenuitem = menuItem;\\n-          curTab.addEventListener(\\\"DOMAttrModified\\\", this, false);\\n-\\n-          menuItem.tab = curTab;\\n-          menuItem.addEventListener(\\\"command\\\", this, false);\\n-          this.appendChild(menuItem);\\n+          this._createTabMenuItem(tabs[i]);\\n         }\\n       ]]></handler>\\n \\n@@ -3030,9 +3061,12 @@\\n           var menuItem = this.lastChild;\\n           menuItem.removeEventListener(\\\"command\\\", this, false);\\n           menuItem.tab.removeEventListener(\\\"DOMAttrModified\\\", this, false);\\n+          menuItem.tab.removeEventListener(\\\"TabClose\\\", this, false);\\n           menuItem.tab.mCorrespondingMenuitem = null;\\n           this.removeChild(menuItem);\\n         }\\n+        var tabbrowser = document.getBindingParent(document.getBindingParent(this));\\n+        tabbrowser.removeEventListener(\\\"TabOpen\\\", this, false);\\n       ]]></handler>\\n \\n       <handler event=\\\"DOMMenuItemActive\\\">\\n\""}