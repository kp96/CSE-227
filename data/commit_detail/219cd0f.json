{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas219cd0f\""},"diff":"\"219cd0f Bug 395150 - fillDoc() shouldn't trudge through each form if there are no stored logins for site. r=gavin, a=mconnor\\ndiff --git a/toolkit/components/passwordmgr/src/nsLoginManager.js b/toolkit/components/passwordmgr/src/nsLoginManager.js\\nindex a8f6c69..699f42d 100644\\n--- a/toolkit/components/passwordmgr/src/nsLoginManager.js\\n+++ b/toolkit/components/passwordmgr/src/nsLoginManager.js\\n@@ -884,19 +884,22 @@ LoginManager.prototype = {\\n     _fillDocument : function (doc) {\\n         var forms = doc.forms;\\n         if (!forms || forms.length == 0)\\n-            return; \\n+            return;\\n \\n         var formOrigin = this._getPasswordOrigin(doc.documentURI);\\n-        var autofillForm = this._prefBranch.getBoolPref(\\\"autofillForms\\\");\\n \\n-        this.log(\\\"fillDocument found \\\" + forms.length +\\n+        // If there are no logins for this site, bail out now.\\n+        if (!this.countLogins(formOrigin, \\\"\\\", null))\\n+            return;\\n+\\n+        this.log(\\\"fillDocument processing \\\" + forms.length +\\n                  \\\" forms on \\\" + doc.documentURI);\\n \\n+        var autofillForm = this._prefBranch.getBoolPref(\\\"autofillForms\\\");\\n         var previousActionOrigin = null;\\n \\n         for (var i = 0; i < forms.length; i++) {\\n             var form = forms[i];\\n-            var actionOrigin = this._getActionOrigin(form);\\n \\n             // Heuristically determine what the user/pass fields are\\n             // We do this before checking to see if logins are stored,\\n@@ -912,6 +915,7 @@ LoginManager.prototype = {\\n \\n             // Only the actionOrigin might be changing, so if it's the same\\n             // as the last form on the page we can reuse the same logins.\\n+            var actionOrigin = this._getActionOrigin(form);\\n             if (actionOrigin != previousActionOrigin) {\\n                 var foundLogins =\\n                     this.findLogins({}, formOrigin, actionOrigin, null);\\n\""}