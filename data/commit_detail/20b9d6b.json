{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas20b9d6b\""},"diff":"\"20b9d6b Bug 393109 - treat system colors as output device values.  r+a=pavlov\\ndiff --git a/gfx/thebes/public/gfxPlatform.h b/gfx/thebes/public/gfxPlatform.h\\nindex 82d3beb..8ee8291 100644\\n--- a/gfx/thebes/public/gfxPlatform.h\\n+++ b/gfx/thebes/public/gfxPlatform.h\\n@@ -152,6 +152,11 @@ public:\\n     static cmsHTRANSFORM GetCMSRGBTransform();\\n \\n     /**\\n+     * Return output -> sRGB device transform.\\n+     */\\n+    static cmsHTRANSFORM GetCMSInverseRGBTransform();\\n+\\n+    /**\\n      * Return sRGBA -> output device transform.\\n      */\\n     static cmsHTRANSFORM GetCMSRGBATransform();\\ndiff --git a/gfx/thebes/src/gfxPlatform.cpp b/gfx/thebes/src/gfxPlatform.cpp\\nindex 62ad1b1..fdddc03 100644\\n--- a/gfx/thebes/src/gfxPlatform.cpp\\n+++ b/gfx/thebes/src/gfxPlatform.cpp\\n@@ -72,6 +72,7 @@ gfxPlatform *gPlatform = nsnull;\\n int gGlitzState = -1;\\n static cmsHPROFILE gCMSOutputProfile = nsnull;\\n static cmsHTRANSFORM gCMSRGBTransform = nsnull;\\n+static cmsHTRANSFORM gCMSInverseRGBTransform = nsnull;\\n static cmsHTRANSFORM gCMSRGBATransform = nsnull;\\n \\n gfxPlatform*\\n@@ -358,6 +359,25 @@ gfxPlatform::GetCMSRGBTransform()\\n }\\n \\n cmsHTRANSFORM\\n+gfxPlatform::GetCMSInverseRGBTransform()\\n+{\\n+    if (!gCMSInverseRGBTransform) {\\n+        cmsHPROFILE inProfile, outProfile;\\n+        inProfile = GetCMSOutputProfile();\\n+        outProfile = cmsCreate_sRGBProfile();\\n+\\n+        if (!inProfile || !outProfile)\\n+            return nsnull;\\n+\\n+        gCMSInverseRGBTransform = cmsCreateTransform(inProfile, TYPE_RGB_8,\\n+                                                     outProfile, TYPE_RGB_8,\\n+                                                     INTENT_PERCEPTUAL, 0);\\n+    }\\n+\\n+    return gCMSInverseRGBTransform;\\n+}\\n+\\n+cmsHTRANSFORM\\n gfxPlatform::GetCMSRGBATransform()\\n {\\n     if (!gCMSRGBATransform) {\\ndiff --git a/widget/src/build/Makefile.in b/widget/src/build/Makefile.in\\nindex c356f59..ec94002 100644\\n--- a/widget/src/build/Makefile.in\\n+++ b/widget/src/build/Makefile.in\\n@@ -96,6 +96,7 @@ EXTRA_DSO_LDOPTS = \\\\\\n \\t\\t$(EXTRA_DSO_LIBS) \\\\\\n \\t\\t$(MOZ_COMPONENT_LIBS) \\\\\\n \\t\\t$(MOZ_UNICHARUTIL_LIBS) \\\\\\n+\\t\\t$(LCMS_LIBS) \\\\\\n \\t\\t$(NULL)\\n \\n include $(topsrcdir)/config/rules.mk\\ndiff --git a/widget/src/cocoa/Makefile.in b/widget/src/cocoa/Makefile.in\\nindex 0a49b39..d05063c 100644\\n--- a/widget/src/cocoa/Makefile.in\\n+++ b/widget/src/cocoa/Makefile.in\\n@@ -136,6 +136,7 @@ EXTRA_DSO_LDOPTS += \\\\\\n \\t\\t$(MOZ_COMPONENT_LIBS) \\\\\\n \\t\\t-lthebes \\\\\\n \\t\\t$(MOZ_FIX_LINK_PATHS) \\\\\\n+\\t\\t$(LCMS_LIBS) \\\\\\n \\t\\t$(NULL)\\n \\n include $(topsrcdir)/config/rules.mk\\ndiff --git a/widget/src/gtk2/Makefile.in b/widget/src/gtk2/Makefile.in\\nindex 88332aa..09f89eb 100644\\n--- a/widget/src/gtk2/Makefile.in\\n+++ b/widget/src/gtk2/Makefile.in\\n@@ -134,6 +134,7 @@ EXTRA_DSO_LDOPTS += \\\\\\n \\t\\t$(XLIBS) \\\\\\n \\t\\t$(MOZ_GTK2_LIBS) \\\\\\n \\t\\t-lthebes \\\\\\n+\\t\\t$(LCMS_LIBS) \\\\\\n \\t\\t$(NULL)\\n \\n EXPORTS\\t\\t= \\\\\\ndiff --git a/widget/src/xpwidgets/Makefile.in b/widget/src/xpwidgets/Makefile.in\\nindex 73d644b..d10b630 100644\\n--- a/widget/src/xpwidgets/Makefile.in\\n+++ b/widget/src/xpwidgets/Makefile.in\\n@@ -61,6 +61,7 @@ REQUIRES\\t= xpcom \\\\\\n \\t\\t  unicharutil \\\\\\n \\t\\t  view \\\\\\n \\t\\t  windowwatcher \\\\\\n+\\t\\t  lcms \\\\\\n \\t\\t  $(NULL)\\n \\n ifeq ($(MOZ_ENABLE_CAIRO_GFX),1)\\ndiff --git a/widget/src/xpwidgets/nsXPLookAndFeel.cpp b/widget/src/xpwidgets/nsXPLookAndFeel.cpp\\nindex b196830..4b2f07d 100644\\n--- a/widget/src/xpwidgets/nsXPLookAndFeel.cpp\\n+++ b/widget/src/xpwidgets/nsXPLookAndFeel.cpp\\n@@ -46,6 +46,9 @@\\n #include \\\"nsCRT.h\\\"\\n #include \\\"nsFont.h\\\"\\n \\n+#include \\\"gfxPlatform.h\\\"\\n+#include \\\"lcms.h\\\"\\n+\\n #ifdef DEBUG\\n #include \\\"nsSize.h\\\"\\n #endif\\n@@ -542,6 +545,18 @@ nsXPLookAndFeel::GetColor(const nsColorID aID, nscolor &aColor)\\n   }\\n \\n   if (NS_SUCCEEDED(NativeGetColor(aID, aColor))) {\\n+    if (gfxPlatform::IsCMSEnabled()) {\\n+      cmsHTRANSFORM transform = gfxPlatform::GetCMSInverseRGBTransform();\\n+      if (transform) {\\n+        PRUint8 color[3];\\n+        color[0] = NS_GET_R(aColor);\\n+        color[1] = NS_GET_G(aColor);\\n+        color[2] = NS_GET_B(aColor);\\n+        cmsDoTransform(transform, color, color, 1);\\n+        aColor = NS_RGB(color[0], color[1], color[2]);\\n+      }\\n+    }\\n+\\n     CACHE_COLOR(aID, aColor);\\n     return NS_OK;\\n   }\\n\""}