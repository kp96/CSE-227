{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas9513b53\""},"diff":"\"9513b53 Restore the right caret in all cases. bug 395888, r+sr+a=roc\\ndiff --git a/editor/libeditor/text/nsEditorEventListeners.cpp b/editor/libeditor/text/nsEditorEventListeners.cpp\\nindex b9bfdee..681bf85 100644\\n--- a/editor/libeditor/text/nsEditorEventListeners.cpp\\n+++ b/editor/libeditor/text/nsEditorEventListeners.cpp\\n@@ -524,25 +524,21 @@ nsresult\\n nsTextEditorDragListener::DragEnter(nsIDOMEvent* aDragEvent)\\n {\\n   nsCOMPtr<nsIPresShell> presShell = do_QueryReferent(mPresShell);\\n+  if (!presShell)\\n+    return NS_OK;\\n+\\n   if (!mCaret)\\n   {\\n-    if (presShell)\\n+    mCaret = do_CreateInstance(\\\"@mozilla.org/layout/caret;1\\\");\\n+    if (mCaret)\\n     {\\n-      mCaret = do_CreateInstance(\\\"@mozilla.org/layout/caret;1\\\");\\n-      if (mCaret)\\n-      {\\n-        mCaret->Init(presShell);\\n-        mCaret->SetCaretReadOnly(PR_TRUE);\\n-\\n-        mOtherCaret = presShell->SetCaret(mCaret);\\n-      }\\n-      mCaretDrawn = PR_FALSE;\\n+      mCaret->Init(presShell);\\n+      mCaret->SetCaretReadOnly(PR_TRUE);\\n     }\\n+    mCaretDrawn = PR_FALSE;\\n   }\\n-  else if (presShell)\\n-  {\\n-    presShell->SetCaret(mCaret);\\n-  }\\n+\\n+  presShell->SetCaret(mCaret);\\n \\n   return DragOver(aDragEvent);\\n }\\n@@ -644,11 +640,8 @@ nsTextEditorDragListener::DragDrop(nsIDOMEvent* aMouseEvent)\\n     nsCOMPtr<nsIPresShell> presShell = do_QueryReferent(mPresShell);\\n     if (presShell)\\n     {\\n-      NS_ASSERTION(mOtherCaret, \\\"Where'd my other caret go?\\\");\\n-      mCaret = presShell->SetCaret(mOtherCaret);\\n+      presShell->RestoreCaret();\\n     }\\n-\\n-    mOtherCaret = mCaret = nsnull;\\n   }\\n \\n   if (!mEditor)\\ndiff --git a/editor/libeditor/text/nsEditorEventListeners.h b/editor/libeditor/text/nsEditorEventListeners.h\\nindex 63accc6..8b4c1d9 100644\\n--- a/editor/libeditor/text/nsEditorEventListeners.h\\n+++ b/editor/libeditor/text/nsEditorEventListeners.h\\n@@ -237,7 +237,6 @@ protected:\\n   nsWeakPtr  mPresShell;\\n   \\n   nsCOMPtr<nsICaret> mCaret;\\n-  nsCOMPtr<nsICaret> mOtherCaret;\\n   PRBool             mCaretDrawn;\\n };\\n \\ndiff --git a/layout/base/nsIPresShell.h b/layout/base/nsIPresShell.h\\nindex 2068157..72011ea 100644\\n--- a/layout/base/nsIPresShell.h\\n+++ b/layout/base/nsIPresShell.h\\n@@ -102,10 +102,10 @@ class gfxContext;\\n typedef short SelectionType;\\n typedef PRUint32 nsFrameState;\\n \\n-// D93B931B-D5EF-4D3C-AB99-444176963464\\n+// 4BE324F2-FB22-47CD-A653-19C70EE55E3F\\n #define NS_IPRESSHELL_IID \\\\\\n-{ 0xd93b931b, 0xd5ef, 0x4d3c, \\\\\\n-  { 0xab, 0x99, 0x44, 0x41, 0x76, 0x96, 0x34, 0x64 } }\\n+{ 0x4BE324F2, 0xFB22, 0x47CD, \\\\\\n+  { 0xA6, 0x53, 0x19, 0xC7, 0x0E, 0xE5, 0x5E, 0x3F } }\\n \\n // Constants for ScrollContentIntoView() function\\n #define NS_PRESSHELL_SCROLL_TOP      0\\n@@ -495,9 +495,15 @@ public:\\n   NS_IMETHOD_(void) MaybeInvalidateCaretPosition() = 0;\\n \\n   /**\\n-   * Set the current caret to a new caret. Returns the old caret.\\n+   * Set the current caret to a new caret. To undo this, call RestoreCaret.\\n    */\\n-  virtual already_AddRefed<nsICaret> SetCaret(nsICaret *aNewCaret) = 0;\\n+  virtual void SetCaret(nsICaret *aNewCaret) = 0;\\n+\\n+  /**\\n+   * Restore the caret to the original caret that this pres shell was created\\n+   * with.\\n+   */\\n+  virtual void RestoreCaret() = 0;\\n \\n   /**\\n    * Should the images have borders etc.  Actual visual effects are determined\\ndiff --git a/layout/base/nsPresShell.cpp b/layout/base/nsPresShell.cpp\\nindex a54235c..28ffbc7 100644\\n--- a/layout/base/nsPresShell.cpp\\n+++ b/layout/base/nsPresShell.cpp\\n@@ -917,7 +917,8 @@ public:\\n   NS_IMETHOD SetCaretReadOnly(PRBool aReadOnly);\\n   NS_IMETHOD GetCaretEnabled(PRBool *aOutEnabled);\\n   NS_IMETHOD SetCaretVisibilityDuringSelection(PRBool aVisibility);\\n-  virtual already_AddRefed<nsICaret> SetCaret(nsICaret *aNewCaret);\\n+  virtual void SetCaret(nsICaret *aNewCaret);\\n+  virtual void RestoreCaret();\\n \\n   NS_IMETHOD SetSelectionFlags(PRInt16 aInEnable);\\n   NS_IMETHOD GetSelectionFlags(PRInt16 *aOutEnable);\\n@@ -1130,6 +1131,7 @@ protected:\\n   nsCOMArray<nsIContent> mCurrentEventContentStack;\\n \\n   nsCOMPtr<nsICaret>            mCaret;\\n+  nsCOMPtr<nsICaret>            mOriginalCaret;\\n   PRInt16                       mSelectionFlags;\\n   FrameArena                    mFrameArena;\\n   StackArena                    mStackArena;\\n@@ -1498,6 +1500,7 @@ PresShell::Init(nsIDocument* aDocument,\\n   if (NS_SUCCEEDED(err))\\n   {\\n     mCaret->Init(this);\\n+    mOriginalCaret = mCaret;\\n   }\\n \\n   //SetCaretEnabled(PR_TRUE);       // make it show in browser windows\\n@@ -2616,12 +2619,14 @@ NS_IMETHODIMP_(void) PresShell::MaybeInvalidateCaretPosition()\\n   }\\n }\\n \\n-already_AddRefed<nsICaret> PresShell::SetCaret(nsICaret *aNewCaret)\\n+void PresShell::SetCaret(nsICaret *aNewCaret)\\n {\\n-  nsICaret *oldCaret = nsnull;\\n-  mCaret.swap(oldCaret);\\n   mCaret = aNewCaret;\\n-  return oldCaret;\\n+}\\n+\\n+void PresShell::RestoreCaret()\\n+{\\n+  mCaret = mOriginalCaret;\\n }\\n \\n NS_IMETHODIMP PresShell::SetCaretEnabled(PRBool aInEnable)\\n\""}