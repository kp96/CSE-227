{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas9221605\""},"diff":"\"9221605 Bug 389865 - Improve filter architecture. r=tor,sr=roc,a=pavlov\\ndiff --git a/content/svg/content/src/nsSVGFilters.cpp b/content/svg/content/src/nsSVGFilters.cpp\\nindex 4815bf7..0aa2e39 100644\\n--- a/content/svg/content/src/nsSVGFilters.cpp\\n+++ b/content/svg/content/src/nsSVGFilters.cpp\\n@@ -73,26 +73,18 @@\\n class nsSVGFilterResource\\n {\\n public:\\n-  enum DefaultSubregionType {UNION, ALL};\\n-\\n-  nsSVGFilterResource(nsSVGFilterInstance* aInstance,\\n-      const nsSVGFilterInstance::ColorModel &aColorModel);\\n+  nsSVGFilterResource(nsSVGFE *aFilter, nsSVGFilterInstance* aInstance);\\n   ~nsSVGFilterResource();\\n \\n   /*\\n    * Acquires a source image for reading\\n    * aIn:         the name of the filter primitive to use as the source\\n-   * aFilter:     the filter that is calling AcquireImage\\n-   * aDefaultSubregionType: whether the default subregion is the union\\n-   *              of the referenced nodes or the entire area\\n    * aSourceData: out parameter - the image data of the filter primitive\\n    *              specified by aIn\\n    * aSurface:    optional out parameter - the surface of the filter\\n    *              primitive image specified by aIn\\n    */\\n   nsresult AcquireSourceImage(nsIDOMSVGAnimatedString* aIn,\\n-                              nsSVGFE* aFilter,\\n-                              DefaultSubregionType aDefaultSubregionType,\\n                               PRUint8** aSourceData,\\n                               gfxImageSurface** aSurface = 0);\\n \\n@@ -109,7 +101,6 @@ public:\\n                               PRUint8** aTargetData,\\n                               gfxImageSurface** aSurface = 0);\\n \\n-\\n   /*\\n    * The source region\\n    */\\n@@ -163,23 +154,23 @@ private:\\n   nsAutoString mInput, mResult;\\n   nsRect mSourceRegion, mFilterSubregion;\\n   nsRefPtr<gfxImageSurface> mTargetImage;\\n+  nsSVGFE *mFilter;\\n   nsSVGFilterInstance* mInstance;\\n   PRUint8 *mSourceData, *mTargetData;\\n   PRUint32 mWidth, mHeight;\\n   PRInt32 mStride;\\n-  nsSVGFilterInstance::ColorModel mColorModel;\\n };\\n \\n-nsSVGFilterResource::nsSVGFilterResource(nsSVGFilterInstance* aInstance,\\n-                                         const nsSVGFilterInstance::ColorModel &aColorModel) :\\n+nsSVGFilterResource::nsSVGFilterResource(nsSVGFE *aFilter,\\n+                                         nsSVGFilterInstance* aInstance) :\\n   mTargetImage(nsnull),\\n+  mFilter(aFilter),\\n   mInstance(aInstance),\\n   mSourceData(nsnull),\\n   mTargetData(nsnull),\\n   mWidth(0),\\n   mHeight(0),\\n-  mStride(0),\\n-  mColorModel(aColorModel)\\n+  mStride(0)\\n {\\n }\\n \\n@@ -190,8 +181,6 @@ nsSVGFilterResource::~nsSVGFilterResource()\\n \\n nsresult\\n nsSVGFilterResource::AcquireSourceImage(nsIDOMSVGAnimatedString* aIn,\\n-                                        nsSVGFE* aFilter,\\n-                                        DefaultSubregionType defaultSubregionType,\\n                                         PRUint8** aSourceData,\\n                                         gfxImageSurface** aSurface)\\n {\\n@@ -199,7 +188,8 @@ nsSVGFilterResource::AcquireSourceImage(nsIDOMSVGAnimatedString* aIn,\\n \\n   nsRefPtr<gfxImageSurface> surface;\\n   mInstance->LookupImage(mInput, getter_AddRefs(surface),\\n-                         &mSourceRegion, mColorModel);\\n+                         &mSourceRegion,\\n+                         mFilter->GetColorModel(aIn));\\n   if (!surface) {\\n     return NS_ERROR_FAILURE;\\n   }\\n@@ -210,9 +200,9 @@ nsSVGFilterResource::AcquireSourceImage(nsIDOMSVGAnimatedString* aIn,\\n   mHeight = size.height;\\n   mStride = surface->Stride();\\n \\n-  mInstance->GetFilterSubregion(aFilter, \\n-                                (defaultSubregionType == ALL) ? \\n-                                  nsRect(0, 0, mWidth, mHeight) : mSourceRegion,\\n+  mInstance->GetFilterSubregion(mFilter, \\n+                                mFilter->SubregionIsUnionOfRegions() ?\\n+                                  mSourceRegion : nsRect(0, 0, mWidth, mHeight),\\n                                 &mFilterSubregion);\\n \\n   *aSourceData = mSourceData;\\n@@ -250,7 +240,10 @@ nsSVGFilterResource::ReleaseTarget()\\n   if (!mTargetImage) {\\n     return;\\n   }\\n-  mInstance->DefineImage(mResult, mTargetImage, mFilterSubregion, mColorModel);\\n+  mInstance->DefineImage(mResult,\\n+                         mTargetImage,\\n+                         mFilterSubregion,\\n+                         mFilter->GetColorModel(nsnull));\\n \\n   mTargetImage = nsnull;\\n }\\n@@ -290,10 +283,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFEBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFE::nsSVGFE(nsINodeInfo* aNodeInfo) : nsSVGFEBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFE::Init()\\n {\\n@@ -353,25 +342,6 @@ nsSVGFE::ScanDualValueAttribute(const nsAString& aValue, nsIAtom* aAttribute,\\n   return PR_TRUE;\\n }\\n \\n-nsSVGFilterInstance::ColorModel\\n-nsSVGFE::GetColorModel(nsSVGFilterInstance::ColorModel::AlphaChannel aAlphaChannel)\\n-{\\n-  nsSVGFilterInstance::ColorModel \\n-    colorModel(nsSVGFilterInstance::ColorModel::LINEAR_RGB,\\n-               aAlphaChannel);\\n-\\n-  nsIFrame* frame = GetPrimaryFrame();\\n-  if (!frame)\\n-    return colorModel;\\n-\\n-  nsStyleContext* style = frame->GetStyleContext();\\n-  if (style->GetStyleSVG()->mColorInterpolationFilters ==\\n-      NS_STYLE_COLOR_INTERPOLATION_SRGB)\\n-    colorModel.mColorSpace = nsSVGFilterInstance::ColorModel::SRGB;\\n-\\n-  return colorModel;\\n-}\\n-\\n nsresult\\n nsSVGFE::SetupScalingFilter(nsSVGFilterInstance *aInstance,\\n                             nsSVGFilterResource *aResource,\\n@@ -384,9 +354,7 @@ nsSVGFE::SetupScalingFilter(nsSVGFilterInstance *aInstance,\\n   // the filter resource.\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n-  rv = aResource->AcquireSourceImage(aIn, this,\\n-                                     nsSVGFilterResource::UNION,\\n-                                     &sourceData,\\n+  rv = aResource->AcquireSourceImage(aIn, &sourceData,\\n                                      getter_AddRefs(aScaleInfo->mRealSource));\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = aResource->AcquireTargetImage(mResult, &targetData,\\n@@ -527,10 +495,11 @@ class nsSVGFEGaussianBlurElement : public nsSVGFEGaussianBlurElementBase,\\n                                    public nsIDOMSVGFEGaussianBlurElement,\\n                                    public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEGaussianBlurElement(nsIContent **aResult,\\n                                                  nsINodeInfo *aNodeInfo);\\n-  nsSVGFEGaussianBlurElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEGaussianBlurElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEGaussianBlurElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -609,11 +578,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFEGaussianBlurElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFEGaussianBlurElement::nsSVGFEGaussianBlurElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEGaussianBlurElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFEGaussianBlurElement::Init()\\n {\\n@@ -834,10 +798,9 @@ nsSVGFEGaussianBlurElement::Filter(nsSVGFilterInstance *instance)\\n {\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n-  nsSVGFilterResource fr(instance,\\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::PREMULTIPLIED));\\n+  nsSVGFilterResource fr(this, instance);\\n \\n-  rv = fr.AcquireSourceImage(mIn1, this, nsSVGFilterResource::UNION, &sourceData);\\n+  rv = fr.AcquireSourceImage(mIn1, &sourceData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = fr.AcquireTargetImage(mResult, &targetData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -901,10 +864,11 @@ class nsSVGFEBlendElement : public nsSVGFEBlendElementBase,\\n                             public nsIDOMSVGFEBlendElement,\\n                             public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEBlendElement(nsIContent **aResult,\\n                                           nsINodeInfo *aNodeInfo);\\n-  nsSVGFEBlendElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEBlendElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEBlendElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -979,11 +943,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFEBlendElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFEBlendElement::nsSVGFEBlendElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEBlendElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFEBlendElement::Init()\\n {\\n@@ -1047,10 +1006,9 @@ nsSVGFEBlendElement::Filter(nsSVGFilterInstance *instance)\\n {\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n-  nsSVGFilterResource fr(instance,\\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::PREMULTIPLIED));\\n+  nsSVGFilterResource fr(this, instance);\\n \\n-  rv = fr.AcquireSourceImage(mIn1, this, nsSVGFilterResource::UNION, &sourceData);\\n+  rv = fr.AcquireSourceImage(mIn1, &sourceData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = fr.AcquireTargetImage(mResult, &targetData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -1065,7 +1023,7 @@ nsSVGFEBlendElement::Filter(nsSVGFilterInstance *instance)\\n \\n   fr.CopySourceImage();\\n \\n-  rv = fr.AcquireSourceImage(mIn2, this, nsSVGFilterResource::UNION, &sourceData);\\n+  rv = fr.AcquireSourceImage(mIn2, &sourceData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rect = fr.GetFilterSubregion();\\n \\n@@ -1135,10 +1093,11 @@ class nsSVGFEColorMatrixElement : public nsSVGFEColorMatrixElementBase,\\n                                   public nsIDOMSVGFEColorMatrixElement,\\n                                   public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEColorMatrixElement(nsIContent **aResult,\\n                                                 nsINodeInfo *aNodeInfo);\\n-  nsSVGFEColorMatrixElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEColorMatrixElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEColorMatrixElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -1163,6 +1122,8 @@ public:\\n   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;\\n \\n protected:\\n+  virtual PRBool OperatesOnPremultipledAlpha() { return PR_FALSE; }\\n+\\n   virtual EnumAttributesInfo GetEnumInfo();\\n \\n   enum { TYPE };\\n@@ -1211,11 +1172,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFEColorMatrixElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFEColorMatrixElement::nsSVGFEColorMatrixElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEColorMatrixElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFEColorMatrixElement::Init()\\n {\\n@@ -1300,10 +1256,9 @@ nsSVGFEColorMatrixElement::Filter(nsSVGFilterInstance *instance)\\n {\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n-  nsSVGFilterResource fr(instance,\\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::UNPREMULTIPLIED));\\n+  nsSVGFilterResource fr(this, instance);\\n \\n-  rv = fr.AcquireSourceImage(mIn1, this, nsSVGFilterResource::UNION, &sourceData);\\n+  rv = fr.AcquireSourceImage(mIn1, &sourceData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = fr.AcquireTargetImage(mResult, &targetData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -1462,10 +1417,11 @@ class nsSVGFECompositeElement : public nsSVGFECompositeElementBase,\\n                                 public nsIDOMSVGFECompositeElement,\\n                                 public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFECompositeElement(nsIContent **aResult,\\n                                               nsINodeInfo *aNodeInfo);\\n-  nsSVGFECompositeElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFECompositeElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFECompositeElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -1553,11 +1509,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFECompositeElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFECompositeElement::nsSVGFECompositeElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFECompositeElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFECompositeElement::Init()\\n {\\n@@ -1656,11 +1607,9 @@ nsSVGFECompositeElement::Filter(nsSVGFilterInstance *instance)\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n   nsRefPtr<gfxImageSurface> sourceSurface, targetSurface;\\n+  nsSVGFilterResource fr(this, instance);\\n \\n-  nsSVGFilterResource fr(instance,\\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::PREMULTIPLIED));\\n-  rv = fr.AcquireSourceImage(mIn2, this, nsSVGFilterResource::UNION, &sourceData,\\n-                             getter_AddRefs(sourceSurface));\\n+  rv = fr.AcquireSourceImage(mIn2, &sourceData, getter_AddRefs(sourceSurface));\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = fr.AcquireTargetImage(mResult, &targetData,\\n                              getter_AddRefs(targetSurface));\\n@@ -1694,7 +1643,7 @@ nsSVGFECompositeElement::Filter(nsSVGFilterInstance *instance)\\n     fr.CopySourceImage();\\n \\n     // Blend in the second source image\\n-    rv = fr.AcquireSourceImage(mIn1, this, nsSVGFilterResource::UNION, &sourceData);\\n+    rv = fr.AcquireSourceImage(mIn1, &sourceData);\\n     NS_ENSURE_SUCCESS(rv, rv);\\n     float k1Scaled = k1 / 255.0f;\\n     float k4Scaled = k4 / 255.0f;\\n@@ -1730,7 +1679,7 @@ nsSVGFECompositeElement::Filter(nsSVGFilterInstance *instance)\\n                                            gfxContext::OPERATOR_XOR };\\n   ctx.SetOperator(opMap[op]);\\n \\n-  rv = fr.AcquireSourceImage(mIn1, this, nsSVGFilterResource::UNION, &sourceData,\\n+  rv = fr.AcquireSourceImage(mIn1, &sourceData,\\n                              getter_AddRefs(sourceSurface));\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   ctx.SetSource(sourceSurface);\\n@@ -1770,10 +1719,11 @@ class nsSVGFEComponentTransferElement : public nsSVGFEComponentTransferElementBa\\n                                         public nsIDOMSVGFEComponentTransferElement,\\n                                         public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEComponentTransferElement(nsIContent **aResult,\\n                                                       nsINodeInfo *aNodeInfo);\\n-  nsSVGFEComponentTransferElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEComponentTransferElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEComponentTransferElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -1799,6 +1749,7 @@ public:\\n   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;\\n \\n protected:\\n+  virtual PRBool OperatesOnPremultipledAlpha() { return PR_FALSE; }\\n \\n   nsCOMPtr<nsIDOMSVGAnimatedString> mIn1;\\n };\\n@@ -1824,11 +1775,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFEComponentTransferElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFEComponentTransferElement::nsSVGFEComponentTransferElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEComponentTransferElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFEComponentTransferElement::Init()\\n {\\n@@ -1868,10 +1814,9 @@ nsSVGFEComponentTransferElement::Filter(nsSVGFilterInstance *instance)\\n {\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n-  nsSVGFilterResource fr(instance, \\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::UNPREMULTIPLIED));\\n+  nsSVGFilterResource fr(this, instance);\\n \\n-  rv = fr.AcquireSourceImage(mIn1, this, nsSVGFilterResource::UNION, &sourceData);\\n+  rv = fr.AcquireSourceImage(mIn1, &sourceData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = fr.AcquireTargetImage(mResult, &targetData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -1931,10 +1876,11 @@ typedef nsSVGElement nsSVGComponentTransferFunctionElementBase;\\n \\n class nsSVGComponentTransferFunctionElement : public nsSVGComponentTransferFunctionElementBase\\n {\\n-protected:\\n   friend nsresult NS_NewSVGComponentTransferFunctionElement(nsIContent **aResult,\\n-                                       nsINodeInfo *aNodeInfo);\\n-  nsSVGComponentTransferFunctionElement(nsINodeInfo* aNodeInfo);\\n+                                                            nsINodeInfo *aNodeInfo);\\n+protected:\\n+  nsSVGComponentTransferFunctionElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGComponentTransferFunctionElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -2003,11 +1949,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGComponentTransferFunctionElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGComponentTransferFunctionElement::nsSVGComponentTransferFunctionElement(nsINodeInfo* aNodeInfo)\\n-  : nsSVGComponentTransferFunctionElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGComponentTransferFunctionElement::Init()\\n {\\n@@ -2191,9 +2132,9 @@ nsSVGComponentTransferFunctionElement::GetNumberInfo()\\n class nsSVGFEFuncRElement : public nsSVGComponentTransferFunctionElement,\\n                             public nsIDOMSVGFEFuncRElement\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEFuncRElement(nsIContent **aResult,\\n                                           nsINodeInfo *aNodeInfo);\\n+protected:\\n   nsSVGFEFuncRElement(nsINodeInfo* aNodeInfo) \\n     : nsSVGComponentTransferFunctionElement(aNodeInfo) {}\\n \\n@@ -2231,9 +2172,9 @@ NS_IMPL_ELEMENT_CLONE_WITH_INIT(nsSVGFEFuncRElement)\\n class nsSVGFEFuncGElement : public nsSVGComponentTransferFunctionElement,\\n                             public nsIDOMSVGFEFuncGElement\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEFuncGElement(nsIContent **aResult,\\n                                           nsINodeInfo *aNodeInfo);\\n+protected:\\n   nsSVGFEFuncGElement(nsINodeInfo* aNodeInfo) \\n     : nsSVGComponentTransferFunctionElement(aNodeInfo) {}\\n \\n@@ -2271,9 +2212,9 @@ NS_IMPL_ELEMENT_CLONE_WITH_INIT(nsSVGFEFuncGElement)\\n class nsSVGFEFuncBElement : public nsSVGComponentTransferFunctionElement,\\n                             public nsIDOMSVGFEFuncBElement\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEFuncBElement(nsIContent **aResult,\\n                                           nsINodeInfo *aNodeInfo);\\n+protected:\\n   nsSVGFEFuncBElement(nsINodeInfo* aNodeInfo) \\n     : nsSVGComponentTransferFunctionElement(aNodeInfo) {}\\n \\n@@ -2311,9 +2252,9 @@ NS_IMPL_ELEMENT_CLONE_WITH_INIT(nsSVGFEFuncBElement)\\n class nsSVGFEFuncAElement : public nsSVGComponentTransferFunctionElement,\\n                             public nsIDOMSVGFEFuncAElement\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEFuncAElement(nsIContent **aResult,\\n                                           nsINodeInfo *aNodeInfo);\\n+protected:\\n   nsSVGFEFuncAElement(nsINodeInfo* aNodeInfo) \\n     : nsSVGComponentTransferFunctionElement(aNodeInfo) {}\\n \\n@@ -2355,10 +2296,11 @@ class nsSVGFEMergeElement : public nsSVGFEMergeElementBase,\\n                             public nsIDOMSVGFEMergeElement,\\n                             public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEMergeElement(nsIContent **aResult,\\n                                           nsINodeInfo *aNodeInfo);\\n-  nsSVGFEMergeElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEMergeElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEMergeElementBase(aNodeInfo) {}\\n \\n public:\\n   // interfaces:\\n@@ -2403,14 +2345,6 @@ NS_INTERFACE_MAP_BEGIN(nsSVGFEMergeElement)\\n NS_INTERFACE_MAP_END_INHERITING(nsSVGFEMergeElementBase)\\n \\n //----------------------------------------------------------------------\\n-// Implementation\\n-\\n-nsSVGFEMergeElement::nsSVGFEMergeElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEMergeElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n-//----------------------------------------------------------------------\\n // nsIDOMNode methods\\n \\n NS_IMPL_ELEMENT_CLONE_WITH_INIT(nsSVGFEMergeElement)\\n@@ -2421,9 +2355,8 @@ nsSVGFEMergeElement::Filter(nsSVGFilterInstance *instance)\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n   nsRefPtr<gfxImageSurface> sourceSurface, targetSurface;\\n+  nsSVGFilterResource fr(this, instance);\\n \\n-  nsSVGFilterResource fr(instance,\\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::PREMULTIPLIED));\\n   rv = fr.AcquireTargetImage(mResult, &targetData,\\n                              getter_AddRefs(targetSurface));\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -2439,8 +2372,7 @@ nsSVGFEMergeElement::Filter(nsSVGFilterInstance *instance)\\n     nsCOMPtr<nsIDOMSVGAnimatedString> str;\\n     node->GetIn1(getter_AddRefs(str));\\n \\n-    rv = fr.AcquireSourceImage(str, this, nsSVGFilterResource::UNION,\\n-                               &sourceData, getter_AddRefs(sourceSurface));\\n+    rv = fr.AcquireSourceImage(str, &sourceData, getter_AddRefs(sourceSurface));\\n     NS_ENSURE_SUCCESS(rv, rv);\\n \\n     ctx.SetSource(sourceSurface);\\n@@ -2476,10 +2408,11 @@ typedef nsSVGStylableElement nsSVGFEMergeNodeElementBase;\\n class nsSVGFEMergeNodeElement : public nsSVGFEMergeNodeElementBase,\\n                                 public nsIDOMSVGFEMergeNodeElement\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEMergeNodeElement(nsIContent **aResult,\\n                                           nsINodeInfo *aNodeInfo);\\n-  nsSVGFEMergeNodeElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEMergeNodeElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEMergeNodeElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -2518,11 +2451,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFEMergeNodeElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFEMergeNodeElement::nsSVGFEMergeNodeElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEMergeNodeElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFEMergeNodeElement::Init()\\n {\\n@@ -2565,10 +2493,11 @@ class nsSVGFEOffsetElement : public nsSVGFEOffsetElementBase,\\n                              public nsIDOMSVGFEOffsetElement,\\n                              public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEOffsetElement(nsIContent **aResult,\\n                                            nsINodeInfo *aNodeInfo);\\n-  nsSVGFEOffsetElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEOffsetElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEOffsetElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -2628,11 +2557,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFEOffsetElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFEOffsetElement::nsSVGFEOffsetElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEOffsetElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFEOffsetElement::Init()\\n {\\n@@ -2685,10 +2609,9 @@ nsSVGFEOffsetElement::Filter(nsSVGFilterInstance *instance)\\n {\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n-  nsSVGFilterResource fr(instance,\\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::PREMULTIPLIED));\\n+  nsSVGFilterResource fr(this, instance);\\n \\n-  rv = fr.AcquireSourceImage(mIn1, this, nsSVGFilterResource::UNION, &sourceData);\\n+  rv = fr.AcquireSourceImage(mIn1, &sourceData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = fr.AcquireTargetImage(mResult, &targetData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -2757,10 +2680,11 @@ class nsSVGFEFloodElement : public nsSVGFEFloodElementBase,\\n                             public nsIDOMSVGFEFloodElement,\\n                             public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEFloodElement(nsIContent **aResult,\\n                                           nsINodeInfo *aNodeInfo);\\n-  nsSVGFEFloodElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEFloodElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEFloodElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -2788,6 +2712,8 @@ public:\\n   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;\\n \\n protected:\\n+  virtual PRBool OperatesOnSRGB(nsIDOMSVGAnimatedString*) { return PR_TRUE; }\\n+\\n   nsCOMPtr<nsIDOMSVGAnimatedString> mIn1;\\n };\\n \\n@@ -2812,11 +2738,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFEFloodElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFEFloodElement::nsSVGFEFloodElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEFloodElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFEFloodElement::Init()\\n {\\n@@ -2857,13 +2778,9 @@ nsSVGFEFloodElement::Filter(nsSVGFilterInstance *instance)\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n   nsRefPtr<gfxImageSurface> targetSurface;\\n-  // flood colour is sRGB\\n-  nsSVGFilterInstance::ColorModel\\n-    colorModel(nsSVGFilterInstance::ColorModel::SRGB, \\n-               nsSVGFilterInstance::ColorModel::PREMULTIPLIED);\\n-  nsSVGFilterResource fr(instance, colorModel);\\n+  nsSVGFilterResource fr(this, instance);\\n \\n-  rv = fr.AcquireSourceImage(mIn1, this, nsSVGFilterResource::UNION, &sourceData);\\n+  rv = fr.AcquireSourceImage(mIn1, &sourceData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = fr.AcquireTargetImage(mResult, &targetData,\\n                              getter_AddRefs(targetSurface));\\n@@ -2917,13 +2834,16 @@ class nsSVGFETileElement : public nsSVGFETileElementBase,\\n                            public nsIDOMSVGFETileElement,\\n                            public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFETileElement(nsIContent **aResult,\\n                                          nsINodeInfo *aNodeInfo);\\n-  nsSVGFETileElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFETileElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFETileElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n+  virtual PRBool SubregionIsUnionOfRegions() { return PR_FALSE; }\\n+\\n   // interfaces:\\n   NS_DECL_ISUPPORTS_INHERITED\\n \\n@@ -2971,11 +2891,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFETileElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFETileElement::nsSVGFETileElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFETileElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFETileElement::Init()\\n {\\n@@ -3026,10 +2941,9 @@ nsSVGFETileElement::Filter(nsSVGFilterInstance *instance)\\n {\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n-  nsSVGFilterResource fr(instance,\\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::PREMULTIPLIED));\\n+  nsSVGFilterResource fr(this, instance);\\n \\n-  rv = fr.AcquireSourceImage(mIn1, this, nsSVGFilterResource::ALL, &sourceData);\\n+  rv = fr.AcquireSourceImage(mIn1, &sourceData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = fr.AcquireTargetImage(mResult, &targetData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -3064,13 +2978,16 @@ class nsSVGFETurbulenceElement : public nsSVGFETurbulenceElementBase,\\n                                  public nsIDOMSVGFETurbulenceElement,\\n                                  public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFETurbulenceElement(nsIContent **aResult,\\n                                                nsINodeInfo *aNodeInfo);\\n-  nsSVGFETurbulenceElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFETurbulenceElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFETurbulenceElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n+  virtual PRBool SubregionIsUnionOfRegions() { return PR_FALSE; }\\n+\\n   // interfaces:\\n   NS_DECL_ISUPPORTS_INHERITED\\n \\n@@ -3228,11 +3145,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFETurbulenceElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFETurbulenceElement::nsSVGFETurbulenceElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFETurbulenceElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFETurbulenceElement::Init()\\n {\\n@@ -3327,14 +3239,13 @@ nsSVGFETurbulenceElement::Filter(nsSVGFilterInstance *instance)\\n {\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n-  nsSVGFilterResource fr(instance,\\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::PREMULTIPLIED));\\n+  nsSVGFilterResource fr(this, instance);\\n \\n   nsIDOMSVGAnimatedString* sourceGraphic = nsnull;\\n   rv = NS_NewSVGAnimatedString(&sourceGraphic);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n-  rv = fr.AcquireSourceImage(sourceGraphic, this, nsSVGFilterResource::UNION, &sourceData);\\n+  rv = fr.AcquireSourceImage(sourceGraphic, &sourceData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = fr.AcquireTargetImage(mResult, &targetData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -3597,10 +3508,11 @@ class nsSVGFEMorphologyElement : public nsSVGFEMorphologyElementBase,\\n                                  public nsIDOMSVGFEMorphologyElement,\\n                                  public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEMorphologyElement(nsIContent **aResult,\\n                                                nsINodeInfo *aNodeInfo);\\n-  nsSVGFEMorphologyElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEMorphologyElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEMorphologyElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -3684,11 +3596,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFEMorphologyElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFEMorphologyElement::nsSVGFEMorphologyElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEMorphologyElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFEMorphologyElement::Init()\\n {\\n@@ -3798,10 +3705,9 @@ nsSVGFEMorphologyElement::Filter(nsSVGFilterInstance *instance)\\n {\\n   nsresult rv;\\n   PRUint8 *sourceData, *targetData;\\n-  nsSVGFilterResource fr(instance,\\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::PREMULTIPLIED));\\n+  nsSVGFilterResource fr(this, instance);\\n \\n-  rv = fr.AcquireSourceImage(mIn1, this, nsSVGFilterResource::UNION, &sourceData);\\n+  rv = fr.AcquireSourceImage(mIn1, &sourceData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n   rv = fr.AcquireTargetImage(mResult, &targetData);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -3899,10 +3805,11 @@ class nsSVGFEConvolveMatrixElement : public nsSVGFEConvolveMatrixElementBase,\\n                                      public nsIDOMSVGFEConvolveMatrixElement,\\n                                      public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEConvolveMatrixElement(nsIContent **aResult,\\n-                                                nsINodeInfo *aNodeInfo);\\n-  nsSVGFEConvolveMatrixElement(nsINodeInfo* aNodeInfo);\\n+                                                   nsINodeInfo *aNodeInfo);\\n+protected:\\n+  nsSVGFEConvolveMatrixElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEConvolveMatrixElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -3930,6 +3837,12 @@ public:\\n   virtual nsresult Clone(nsINodeInfo *aNodeInfo, nsINode **aResult) const;\\n \\n protected:\\n+  virtual PRBool OperatesOnPremultipledAlpha() {\\n+    PRBool preserveAlpha;\\n+    mPreserveAlpha->GetAnimVal(&preserveAlpha);\\n+    return !preserveAlpha;\\n+  }\\n+\\n   virtual NumberAttributesInfo GetNumberInfo();\\n   virtual EnumAttributesInfo GetEnumInfo();\\n \\n@@ -3996,11 +3909,6 @@ NS_INTERFACE_MAP_END_INHERITING(nsSVGFEConvolveMatrixElementBase)\\n //----------------------------------------------------------------------\\n // Implementation\\n \\n-nsSVGFEConvolveMatrixElement::nsSVGFEConvolveMatrixElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEConvolveMatrixElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n nsresult\\n nsSVGFEConvolveMatrixElement::Init()\\n {\\n@@ -4343,11 +4251,7 @@ nsSVGFEConvolveMatrixElement::Filter(nsSVGFilterInstance *instance)\\n       divisor = 1;\\n   }\\n \\n-  nsSVGFilterResource\\n-    fr(instance, GetColorModel(preserveAlpha\\n-                               ? nsSVGFilterInstance::ColorModel::UNPREMULTIPLIED\\n-                               : nsSVGFilterInstance::ColorModel::PREMULTIPLIED));\\n-\\n+  nsSVGFilterResource fr(this, instance);\\n \\n   ScaleInfo info;\\n   nsresult rv = SetupScalingFilter(instance, &fr, mIn1,\\n@@ -4420,10 +4324,11 @@ typedef nsSVGElement nsSVGFEDistantLightElementBase;\\n class nsSVGFEDistantLightElement : public nsSVGFEDistantLightElementBase,\\n                                    public nsIDOMSVGFEDistantLightElement\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEDistantLightElement(nsIContent **aResult,\\n                                                  nsINodeInfo *aNodeInfo);\\n-  nsSVGFEDistantLightElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEDistantLightElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEDistantLightElementBase(aNodeInfo) {}\\n \\n public:\\n   // interfaces:\\n@@ -4467,14 +4372,6 @@ NS_INTERFACE_MAP_BEGIN(nsSVGFEDistantLightElement)\\n NS_INTERFACE_MAP_END_INHERITING(nsSVGFEDistantLightElementBase)\\n \\n //----------------------------------------------------------------------\\n-// Implementation\\n-\\n-nsSVGFEDistantLightElement::nsSVGFEDistantLightElement(nsINodeInfo* aNodeInfo)\\n-  : nsSVGFEDistantLightElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n-//----------------------------------------------------------------------\\n // nsIDOMNode methods\\n \\n NS_IMPL_ELEMENT_CLONE_WITH_INIT(nsSVGFEDistantLightElement)\\n@@ -4513,10 +4410,11 @@ typedef nsSVGElement nsSVGFEPointLightElementBase;\\n class nsSVGFEPointLightElement : public nsSVGFEPointLightElementBase,\\n                                  public nsIDOMSVGFEPointLightElement\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEPointLightElement(nsIContent **aResult,\\n                                                  nsINodeInfo *aNodeInfo);\\n-  nsSVGFEPointLightElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFEPointLightElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEPointLightElementBase(aNodeInfo) {}\\n \\n public:\\n   // interfaces:\\n@@ -4561,14 +4459,6 @@ NS_INTERFACE_MAP_BEGIN(nsSVGFEPointLightElement)\\n NS_INTERFACE_MAP_END_INHERITING(nsSVGFEPointLightElementBase)\\n \\n //----------------------------------------------------------------------\\n-// Implementation\\n-\\n-nsSVGFEPointLightElement::nsSVGFEPointLightElement(nsINodeInfo* aNodeInfo)\\n-  : nsSVGFEPointLightElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n-//----------------------------------------------------------------------\\n // nsIDOMNode methods\\n \\n NS_IMPL_ELEMENT_CLONE_WITH_INIT(nsSVGFEPointLightElement)\\n@@ -4611,10 +4501,11 @@ typedef nsSVGElement nsSVGFESpotLightElementBase;\\n class nsSVGFESpotLightElement : public nsSVGFESpotLightElementBase,\\n                                 public nsIDOMSVGFESpotLightElement\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFESpotLightElement(nsIContent **aResult,\\n                                                  nsINodeInfo *aNodeInfo);\\n-  nsSVGFESpotLightElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFESpotLightElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFESpotLightElementBase(aNodeInfo) {}\\n \\n public:\\n   // interfaces:\\n@@ -4665,14 +4556,6 @@ NS_INTERFACE_MAP_BEGIN(nsSVGFESpotLightElement)\\n NS_INTERFACE_MAP_END_INHERITING(nsSVGFESpotLightElementBase)\\n \\n //----------------------------------------------------------------------\\n-// Implementation\\n-\\n-nsSVGFESpotLightElement::nsSVGFESpotLightElement(nsINodeInfo* aNodeInfo)\\n-  : nsSVGFESpotLightElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n-//----------------------------------------------------------------------\\n // nsIDOMNode methods\\n \\n NS_IMPL_ELEMENT_CLONE_WITH_INIT(nsSVGFESpotLightElement)\\n@@ -4748,7 +4631,8 @@ class nsSVGFELightingElement : public nsSVGFELightingElementBase,\\n                                public nsISVGFilter\\n {\\n protected:\\n-  nsSVGFELightingElement(nsINodeInfo* aNodeInfo);\\n+  nsSVGFELightingElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFELightingElementBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n public:\\n@@ -4786,16 +4670,6 @@ protected:\\n   nsCOMPtr<nsIDOMSVGAnimatedString> mIn1;\\n };\\n \\n-//----------------------------------------------------------------------\\n-// nsISupports methods\\n-\\n-NS_IMPL_ADDREF_INHERITED(nsSVGFELightingElement,nsSVGFELightingElementBase)\\n-NS_IMPL_RELEASE_INHERITED(nsSVGFELightingElement,nsSVGFELightingElementBase)\\n-\\n-NS_INTERFACE_MAP_BEGIN(nsSVGFELightingElement)\\n-  NS_INTERFACE_MAP_ENTRY(nsISVGFilter)\\n-NS_INTERFACE_MAP_END_INHERITING(nsSVGFELightingElementBase)\\n-\\n nsSVGElement::NumberInfo nsSVGFELightingElement::sNumberInfo[6] =\\n {\\n   { &nsGkAtoms::surfaceScale, 1 },\\n@@ -4806,10 +4680,18 @@ nsSVGElement::NumberInfo nsSVGFELightingElement::sNumberInfo[6] =\\n   { &nsGkAtoms::kernelUnitLength, 0 }\\n };\\n \\n-nsSVGFELightingElement::nsSVGFELightingElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFELightingElementBase(aNodeInfo)\\n-{\\n-}\\n+//----------------------------------------------------------------------\\n+// nsISupports methods\\n+\\n+NS_IMPL_ADDREF_INHERITED(nsSVGFELightingElement,nsSVGFELightingElementBase)\\n+NS_IMPL_RELEASE_INHERITED(nsSVGFELightingElement,nsSVGFELightingElementBase)\\n+\\n+NS_INTERFACE_MAP_BEGIN(nsSVGFELightingElement)\\n+  NS_INTERFACE_MAP_ENTRY(nsISVGFilter)\\n+NS_INTERFACE_MAP_END_INHERITING(nsSVGFELightingElementBase)\\n+\\n+//----------------------------------------------------------------------\\n+// Implementation\\n \\n nsresult\\n nsSVGFELightingElement::Init()\\n@@ -4958,8 +4840,7 @@ GenerateNormal(float *N, const PRUint8 *data, PRInt32 stride, nsRect rect,\\n NS_IMETHODIMP\\n nsSVGFELightingElement::Filter(nsSVGFilterInstance *instance)\\n {\\n-  nsSVGFilterResource fr(instance,\\n-                         GetColorModel(nsSVGFilterInstance::ColorModel::PREMULTIPLIED));\\n+  nsSVGFilterResource fr(this, instance);\\n \\n   ScaleInfo info;\\n   nsresult rv = SetupScalingFilter(instance, &fr, mIn1,\\n@@ -5103,10 +4984,11 @@ typedef nsSVGFELightingElement nsSVGFEDiffuseLightingElementBase;\\n class nsSVGFEDiffuseLightingElement : public nsSVGFEDiffuseLightingElementBase,\\n                                       public nsIDOMSVGFEDiffuseLightingElement\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEDiffuseLightingElement(nsIContent **aResult,\\n-                                               nsINodeInfo *aNodeInfo);\\n-  nsSVGFEDiffuseLightingElement(nsINodeInfo* aNodeInfo);\\n+                                                    nsINodeInfo *aNodeInfo);\\n+protected:\\n+  nsSVGFEDiffuseLightingElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEDiffuseLightingElementBase(aNodeInfo) {}\\n \\n public:\\n   // interfaces:\\n@@ -5147,14 +5029,6 @@ NS_INTERFACE_MAP_BEGIN(nsSVGFEDiffuseLightingElement)\\n NS_INTERFACE_MAP_END_INHERITING(nsSVGFEDiffuseLightingElementBase)\\n \\n //----------------------------------------------------------------------\\n-// Implementation\\n-\\n-nsSVGFEDiffuseLightingElement::nsSVGFEDiffuseLightingElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEDiffuseLightingElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n-//----------------------------------------------------------------------\\n // nsIDOMNode methods\\n \\n NS_IMPL_ELEMENT_CLONE_WITH_INIT(nsSVGFEDiffuseLightingElement)\\n@@ -5231,10 +5105,11 @@ typedef nsSVGFELightingElement nsSVGFESpecularLightingElementBase;\\n class nsSVGFESpecularLightingElement : public nsSVGFESpecularLightingElementBase,\\n                                        public nsIDOMSVGFESpecularLightingElement\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFESpecularLightingElement(nsIContent **aResult,\\n                                                nsINodeInfo *aNodeInfo);\\n-  nsSVGFESpecularLightingElement(nsINodeInfo* aNodeInfo);\\n+protected:\\n+  nsSVGFESpecularLightingElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFESpecularLightingElementBase(aNodeInfo) {}\\n \\n public:\\n   // interfaces:\\n@@ -5278,14 +5153,6 @@ NS_INTERFACE_MAP_BEGIN(nsSVGFESpecularLightingElement)\\n NS_INTERFACE_MAP_END_INHERITING(nsSVGFESpecularLightingElementBase)\\n \\n //----------------------------------------------------------------------\\n-// Implementation\\n-\\n-nsSVGFESpecularLightingElement::nsSVGFESpecularLightingElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFESpecularLightingElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n-//----------------------------------------------------------------------\\n // nsIDOMNode methods\\n \\n NS_IMPL_ELEMENT_CLONE_WITH_INIT(nsSVGFESpecularLightingElement)\\n@@ -5396,10 +5263,11 @@ class nsSVGFEUnimplementedMOZElement : public nsSVGFEUnimplementedMOZElementBase\\n                                        public nsIDOMSVGFEUnimplementedMOZElement,\\n                                        public nsISVGFilter\\n {\\n-protected:\\n   friend nsresult NS_NewSVGFEUnimplementedMOZElement(nsIContent **aResult,\\n-                                          nsINodeInfo *aNodeInfo);\\n-  nsSVGFEUnimplementedMOZElement(nsINodeInfo* aNodeInfo);\\n+                                                     nsINodeInfo *aNodeInfo);\\n+protected:\\n+  nsSVGFEUnimplementedMOZElement(nsINodeInfo* aNodeInfo)\\n+    : nsSVGFEUnimplementedMOZElementBase(aNodeInfo) {}\\n \\n public:\\n   // interfaces:\\n@@ -5442,14 +5310,6 @@ NS_INTERFACE_MAP_BEGIN(nsSVGFEUnimplementedMOZElement)\\n NS_INTERFACE_MAP_END_INHERITING(nsSVGFEUnimplementedMOZElementBase)\\n \\n //----------------------------------------------------------------------\\n-// Implementation\\n-\\n-nsSVGFEUnimplementedMOZElement::nsSVGFEUnimplementedMOZElement(nsINodeInfo *aNodeInfo)\\n-  : nsSVGFEUnimplementedMOZElementBase(aNodeInfo)\\n-{\\n-}\\n-\\n-//----------------------------------------------------------------------\\n // nsIDOMNode methods\\n \\n NS_IMPL_ELEMENT_CLONE_WITH_INIT(nsSVGFEUnimplementedMOZElement)\\ndiff --git a/content/svg/content/src/nsSVGFilters.h b/content/svg/content/src/nsSVGFilters.h\\nindex 5210b48..cb08d64 100644\\n--- a/content/svg/content/src/nsSVGFilters.h\\n+++ b/content/svg/content/src/nsSVGFilters.h\\n@@ -39,6 +39,7 @@\\n \\n #include \\\"nsSVGStylableElement.h\\\"\\n #include \\\"nsSVGLength2.h\\\"\\n+#include \\\"nsIFrame.h\\\"\\n \\n class nsSVGFilterResource;\\n class nsIDOMSVGAnimatedString;\\n@@ -51,7 +52,7 @@ class nsSVGFE : public nsSVGFEBase\\n   friend class nsSVGFilterInstance;\\n \\n protected:\\n-  nsSVGFE(nsINodeInfo *aNodeInfo);\\n+  nsSVGFE(nsINodeInfo *aNodeInfo) : nsSVGFEBase(aNodeInfo) {}\\n   nsresult Init();\\n \\n   PRBool ScanDualValueAttribute(const nsAString& aValue, nsIAtom* aAttribute,\\n@@ -59,9 +60,6 @@ protected:\\n                                 NumberInfo* aInfo1, NumberInfo* aInfo2,\\n                                 nsAttrValue& aResult);\\n \\n-  nsSVGFilterInstance::ColorModel\\n-  GetColorModel(nsSVGFilterInstance::ColorModel::AlphaChannel aAlphaChannel);\\n-\\n   struct ScaleInfo {\\n     nsRefPtr<gfxImageSurface> mRealSource;\\n     nsRefPtr<gfxImageSurface> mRealTarget;\\n@@ -82,11 +80,35 @@ protected:\\n \\n \\n public:\\n+  nsSVGFilterInstance::ColorModel\\n+  GetColorModel(nsIDOMSVGAnimatedString* aIn) {\\n+    return nsSVGFilterInstance::ColorModel (\\n+          (OperatesOnSRGB(aIn) ?\\n+             nsSVGFilterInstance::ColorModel::SRGB :\\n+             nsSVGFilterInstance::ColorModel::LINEAR_RGB),\\n+          (OperatesOnPremultipledAlpha() ?\\n+             nsSVGFilterInstance::ColorModel::PREMULTIPLIED :\\n+             nsSVGFilterInstance::ColorModel::UNPREMULTIPLIED));\\n+  }\\n+\\n+  // See http://www.w3.org/TR/SVG/filters.html#FilterPrimitiveSubRegion\\n+  virtual PRBool SubregionIsUnionOfRegions() { return PR_TRUE; }\\n+\\n   // interfaces:\\n   NS_DECL_ISUPPORTS_INHERITED\\n   NS_DECL_NSIDOMSVGFILTERPRIMITIVESTANDARDATTRIBUTES\\n \\n protected:\\n+  virtual PRBool OperatesOnPremultipledAlpha() { return PR_TRUE; }\\n+\\n+  virtual PRBool OperatesOnSRGB(nsIDOMSVGAnimatedString*) {\\n+    nsIFrame* frame = GetPrimaryFrame();\\n+    if (!frame) return PR_FALSE;\\n+\\n+    nsStyleContext* style = frame->GetStyleContext();\\n+    return style->GetStyleSVG()->mColorInterpolationFilters ==\\n+             NS_STYLE_COLOR_INTERPOLATION_SRGB;\\n+  }\\n \\n   // nsSVGElement specializations:\\n   virtual LengthAttributesInfo GetLengthInfo();\\n\""}