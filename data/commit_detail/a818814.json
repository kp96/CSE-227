{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basa818814\""},"diff":"\"a818814 Bug 383685 - Reject invalid enumeration values. r=tor,sr=roc,a=roc\\ndiff --git a/content/svg/content/src/nsSVGEnum.cpp b/content/svg/content/src/nsSVGEnum.cpp\\nindex 1ea3494..5b164e3 100644\\n--- a/content/svg/content/src/nsSVGEnum.cpp\\n+++ b/content/svg/content/src/nsSVGEnum.cpp\\n@@ -95,13 +95,22 @@ nsSVGEnum::GetBaseValueString(nsAString& aValue, nsSVGElement *aSVGElement)\\n   NS_ERROR(\\\"unknown enumeration value\\\");\\n }\\n \\n-void\\n+nsresult\\n nsSVGEnum::SetBaseValue(PRUint16 aValue,\\n                         nsSVGElement *aSVGElement,\\n                         PRBool aDoSetAttr)\\n {\\n-  mAnimVal = mBaseVal = static_cast<PRUint8>(aValue);\\n-  aSVGElement->DidChangeEnum(mAttrEnum, aDoSetAttr);\\n+  nsSVGEnumMapping *tmp = GetMapping(aSVGElement);\\n+\\n+  while (tmp && tmp->mKey) {\\n+    if (tmp->mVal == aValue) {\\n+      mAnimVal = mBaseVal = static_cast<PRUint8>(aValue);\\n+      aSVGElement->DidChangeEnum(mAttrEnum, aDoSetAttr);\\n+      return NS_OK;\\n+    }\\n+    tmp++;\\n+  }\\n+  return NS_ERROR_FAILURE;\\n }\\n \\n nsresult\\ndiff --git a/content/svg/content/src/nsSVGEnum.h b/content/svg/content/src/nsSVGEnum.h\\nindex 185656c..c2fab40 100644\\n--- a/content/svg/content/src/nsSVGEnum.h\\n+++ b/content/svg/content/src/nsSVGEnum.h\\n@@ -62,9 +62,9 @@ public:\\n   void GetBaseValueString(nsAString& aValue,\\n                           nsSVGElement *aSVGElement);\\n \\n-  void SetBaseValue(PRUint16 aValue,\\n-                    nsSVGElement *aSVGElement,\\n-                    PRBool aDoSetAttr);\\n+  nsresult SetBaseValue(PRUint16 aValue,\\n+                        nsSVGElement *aSVGElement,\\n+                        PRBool aDoSetAttr);\\n \\n   PRUint16 GetBaseValue() const\\n     { return mBaseVal; }\\n@@ -94,7 +94,7 @@ private:\\n     NS_IMETHOD GetBaseVal(PRUint16* aResult)\\n       { *aResult = mVal->GetBaseValue(); return NS_OK; }\\n     NS_IMETHOD SetBaseVal(PRUint16 aValue)\\n-      { mVal->SetBaseValue(aValue, mSVGElement, PR_TRUE); return NS_OK; }\\n+      { return mVal->SetBaseValue(aValue, mSVGElement, PR_TRUE); }\\n     NS_IMETHOD GetAnimVal(PRUint16* aResult)\\n       { *aResult = mVal->GetAnimValue(); return NS_OK; }\\n   };\\n\""}