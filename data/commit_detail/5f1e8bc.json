{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5f1e8bc\""},"diff":"\"5f1e8bc Bug 394717 - NS_ERROR_ILLEGAL_VALUE calling nsIExtensionManager.update when profile updates. patch=ajvincent, r=rstrong\\ndiff --git a/toolkit/mozapps/extensions/public/nsIExtensionManager.idl b/toolkit/mozapps/extensions/public/nsIExtensionManager.idl\\nindex 6de6b65..7085d86 100644\\n--- a/toolkit/mozapps/extensions/public/nsIExtensionManager.idl\\n+++ b/toolkit/mozapps/extensions/public/nsIExtensionManager.idl\\n@@ -301,9 +301,11 @@ interface nsIExtensionManager : nsISupports\\n    *          installed version and synchronize the values.\\n    * @param   listener\\n    *          An nsIAddonUpdateCheckListener object which will be notified during\\n-   *          the update check process.\\n+   *          the update check process.  If not null, the object's\\n+   *          onUpdateStarted() and onUpdateEnded() methods will be called even\\n+   *          if there are no items to update.\\n    *\\n-   * @throws  NS_ERROR_ILLEGAL_VALUE if any item is invalid, or if itemCount == 0.\\n+   * @throws  NS_ERROR_ILLEGAL_VALUE if any item is invalid.\\n    */\\n    void update([array, size_is(itemCount)] in nsIUpdateItem items,\\n                in unsigned long itemCount,\\ndiff --git a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\nindex 4c9bfc5..eba7114 100644\\n--- a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\n+++ b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\n@@ -5103,9 +5103,6 @@ ExtensionManager.prototype = {\\n    * See nsIExtensionManager.idl\\n    */\\n   update: function(items, itemCount, updateCheckType, listener) {\\n-    if (itemCount == 0)\\n-      throw Cr.NS_ERROR_ILLEGAL_VALUE;\\n-\\n     for (i = 0; i < itemCount; ++i) {\\n       var currItem = items[i];\\n       if (!currItem)\\n@@ -5850,6 +5847,9 @@ ExtensionItemUpdater.prototype = {\\n         this._listener.onAddonUpdateStarted(e);\\n       (new RDFItemUpdater(this)).checkForUpdates(e, aUpdateCheckType);\\n     }\\n+\\n+    if (this._listener && aItemCount == 0)\\n+      this._listener.onUpdateEnded();\\n   },\\n \\n   /////////////////////////////////////////////////////////////////////////////\\ndiff --git a/toolkit/mozapps/extensions/test/unit/test_bug394717.js b/toolkit/mozapps/extensions/test/unit/test_bug394717.js\\nnew file mode 100644\\nindex 0000000..43138f4\\n--- /dev/null\\n+++ b/toolkit/mozapps/extensions/test/unit/test_bug394717.js\\n@@ -0,0 +1,82 @@\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is mozilla.org code.\\n+ *\\n+ * The Initial Developer of the Original Code is\\n+ * Alexander J. Vincent <ajvincent@gmail.com>.\\n+ *\\n+ * Portions created by the Initial Developer are Copyright (C) 2007\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n+ * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by deleting the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not delete\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL\\n+ *\\n+ * ***** END LICENSE BLOCK *****\\n+ */\\n+\\n+const checkListener = {\\n+  _onUpdateStartedCalled: false,\\n+  _onUpdateEndedCalled: false,\\n+\\n+  // nsIAddonUpdateCheckListener\\n+  onUpdateStarted: function onUpdateStarted() {\\n+    this._onUpdateStartedCalled = true;\\n+  },\\n+\\n+  // nsIAddonUpdateCheckListener\\n+  onUpdateEnded: function onUpdateEnded() {\\n+    this._onUpdateEndedCalled = true;\\n+  },\\n+\\n+  // nsIAddonUpdateCheckListener\\n+  onAddonUpdateStarted: function onAddonUpdateStarted(aAddon) {\\n+    do_throw(\\\"Unexpected call to onAddonUpdateStarted!\\\");\\n+  },\\n+\\n+  // nsIAddonUpdateCheckListener\\n+  onAddonUpdateEnded: function onAddonUpdateEnded(aAddon, aStatus) {\\n+    do_throw(\\\"Unexpected call to onAddonUpdateEnded!\\\");\\n+  }\\n+}\\n+\\n+/**\\n+ * Run the test.\\n+ */\\n+function run_test() {\\n+  createAppInfo(\\\"xpcshell@tests.mozilla.org\\\", \\\"XPCShell\\\", \\\"5\\\", \\\"1.9\\\");\\n+  startupEM();\\n+  const Ci = Components.interfaces;\\n+  gEM.update([], 0, Ci.nsIExtensionManager.UPDATE_SYNC_COMPATIBILITY, checkListener);\\n+  do_test_pending();\\n+  do_timeout(5000, \\\"run_test_pt2()\\\");\\n+}\\n+\\n+function run_test_pt2() {\\n+  dump(\\\"Checking onUpdateStarted\\\\n\\\");\\n+  do_check_true(checkListener._onUpdateStartedCalled);\\n+  dump(\\\"Checking onUpdateEnded\\\\n\\\");\\n+  do_check_true(checkListener._onUpdateEndedCalled);\\n+  do_test_finished();\\n+}\\n\""}