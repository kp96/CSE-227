{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas8d8f9a0\""},"diff":"\"8d8f9a0 bug 395644: postface plugin names with '(in Firefox)' in Applications prefpane actions dropdown menu; r=gavin, a=mconnor\\ndiff --git a/browser/components/preferences/applications.js b/browser/components/preferences/applications.js\\nindex d63124c..6754b08 100755\\n--- a/browser/components/preferences/applications.js\\n+++ b/browser/components/preferences/applications.js\\n@@ -223,9 +223,9 @@ HandlerInfoWrapper.prototype = {\\n       return this.wrappedHandlerInfo.description;\\n \\n     if (this.primaryExtension) {\\n-      let bundle = this.element(\\\"bundlePreferences\\\");\\n       var extension = this.primaryExtension.toUpperCase();\\n-      return bundle.getFormattedString(\\\"fileEnding\\\", [extension]);\\n+      return this.element(\\\"bundlePreferences\\\").getFormattedString(\\\"fileEnding\\\",\\n+                                                                  [extension]);\\n     }\\n \\n     return this.type;\\n@@ -479,7 +479,7 @@ var feedHandlerInfo = {\\n   // nsIHandlerInfo\\n \\n   get description() {\\n-    return gApplicationsPane._bundle.getString(\\\"webFeed\\\");\\n+    return this.element(\\\"bundlePreferences\\\").getString(\\\"webFeed\\\");\\n   },\\n \\n   get preferredApplicationHandler() {\\n@@ -712,7 +712,8 @@ var gApplicationsPane = {\\n   // objects, indexed by type.\\n   _handledTypes: {},\\n \\n-  _bundle       : null,\\n+  _brandBundle  : null,\\n+  _prefsBundle  : null,\\n   _list         : null,\\n   _filter       : null,\\n \\n@@ -740,7 +741,8 @@ var gApplicationsPane = {\\n \\n   init: function() {\\n     // Initialize shortcuts to some commonly accessed elements.\\n-    this._bundle = document.getElementById(\\\"bundlePreferences\\\");\\n+    this._brandBundle = document.getElementById(\\\"bundleBrand\\\");\\n+    this._prefsBundle = document.getElementById(\\\"bundlePreferences\\\");\\n     this._list = document.getElementById(\\\"handlersView\\\");\\n     this._filter = document.getElementById(\\\"filter\\\");\\n \\n@@ -1003,11 +1005,11 @@ var gApplicationsPane = {\\n     // with alwaysAskBeforeHandling except for the feed type, so here we use\\n     // a feed-specific message to describe the behavior.\\n     if (aHandlerInfo.alwaysAskBeforeHandling)\\n-      return this._bundle.getString(\\\"alwaysAskAboutFeed\\\");\\n+      return this._prefsBundle.getString(\\\"alwaysAskAboutFeed\\\");\\n \\n     switch (aHandlerInfo.preferredAction) {\\n       case Ci.nsIHandlerInfo.saveToDisk:\\n-        return this._bundle.getString(\\\"saveToDisk\\\");\\n+        return this._prefsBundle.getString(\\\"saveToDisk\\\");\\n \\n       case Ci.nsIHandlerInfo.useHelperApp:\\n         return aHandlerInfo.preferredApplicationHandler.name;\\n@@ -1015,7 +1017,7 @@ var gApplicationsPane = {\\n       case Ci.nsIHandlerInfo.handleInternally:\\n         // For the feed type, handleInternally means live bookmarks.\\n         if (aHandlerInfo.type == TYPE_MAYBE_FEED)\\n-          return this._bundle.getString(\\\"liveBookmarks\\\");\\n+          return this._prefsBundle.getString(\\\"liveBookmarks\\\");\\n \\n         // For other types, handleInternally looks like either useHelperApp\\n         // or useSystemDefault depending on whether or not there's a preferred\\n@@ -1034,7 +1036,10 @@ var gApplicationsPane = {\\n         return aHandlerInfo.defaultDescription;\\n \\n       case kActionUsePlugin:\\n-        return aHandlerInfo.plugin.name;\\n+        let brandShortName = this._brandBundle.getString(\\\"brandShortName\\\");\\n+        return this._prefsBundle.getFormattedString(\\\"pluginName\\\",\\n+                                                    [aHandlerInfo.plugin.name,\\n+                                                     brandShortName]);\\n     }\\n   },\\n \\n@@ -1082,14 +1087,15 @@ var gApplicationsPane = {\\n     if (handlerInfo.type == TYPE_MAYBE_FEED) {\\n       let menuItem = document.createElementNS(kXULNS, \\\"menuitem\\\");\\n       menuItem.setAttribute(\\\"alwaysAsk\\\", \\\"true\\\");\\n-      menuItem.setAttribute(\\\"label\\\", this._bundle.getString(\\\"alwaysAskAboutFeed\\\"));\\n+      menuItem.setAttribute(\\\"label\\\",\\n+                            this._prefsBundle.getString(\\\"alwaysAskAboutFeed\\\"));\\n       menuPopup.appendChild(menuItem);\\n       if (handlerInfo.alwaysAskBeforeHandling)\\n         menu.selectedItem = menuItem;\\n \\n       menuItem = document.createElementNS(kXULNS, \\\"menuitem\\\");\\n       menuItem.setAttribute(\\\"action\\\", Ci.nsIHandlerInfo.handleInternally);\\n-      menuItem.setAttribute(\\\"label\\\", this._bundle.getString(\\\"liveBookmarks\\\"));\\n+      menuItem.setAttribute(\\\"label\\\", this._prefsBundle.getString(\\\"liveBookmarks\\\"));\\n       menuItem.setAttribute(\\\"image\\\", \\\"chrome://browser/skin/page-livemarks.png\\\");\\n       menuPopup.appendChild(menuItem);\\n       if (handlerInfo.preferredAction == Ci.nsIHandlerInfo.handleInternally)\\n@@ -1149,7 +1155,11 @@ var gApplicationsPane = {\\n     if (handlerInfo.plugin) {\\n       let menuItem = document.createElementNS(kXULNS, \\\"menuitem\\\");\\n       menuItem.setAttribute(\\\"action\\\", kActionUsePlugin);\\n-      menuItem.setAttribute(\\\"label\\\", handlerInfo.plugin.name);\\n+      let brandShortName = this._brandBundle.getString(\\\"brandShortName\\\");\\n+      let label = this._prefsBundle.getFormattedString(\\\"pluginName\\\",\\n+                                                       [handlerInfo.plugin.name,\\n+                                                        brandShortName]);\\n+      menuItem.setAttribute(\\\"label\\\", label);\\n       menuPopup.appendChild(menuItem);\\n       if (handlerInfo.preferredAction == kActionUsePlugin)\\n         menu.selectedItem = menuItem;\\n@@ -1167,7 +1177,7 @@ var gApplicationsPane = {\\n         !handlerInfo.handledOnlyByPlugin) {\\n       let menuItem = document.createElementNS(kXULNS, \\\"menuitem\\\");\\n       menuItem.setAttribute(\\\"action\\\", Ci.nsIHandlerInfo.saveToDisk);\\n-      menuItem.setAttribute(\\\"label\\\", this._bundle.getString(\\\"saveToDisk\\\"));\\n+      menuItem.setAttribute(\\\"label\\\", this._prefsBundle.getString(\\\"saveToDisk\\\"));\\n       menuPopup.appendChild(menuItem);\\n       if (handlerInfo.preferredAction == Ci.nsIHandlerInfo.saveToDisk)\\n         menu.selectedItem = menuItem;\\n@@ -1177,7 +1187,7 @@ var gApplicationsPane = {\\n     {\\n       let menuItem = document.createElementNS(kXULNS, \\\"menuitem\\\");\\n       menuItem.setAttribute(\\\"oncommand\\\", \\\"gApplicationsPane.chooseApp(event)\\\");\\n-      menuItem.setAttribute(\\\"label\\\", this._bundle.getString(\\\"chooseApp\\\"));\\n+      menuItem.setAttribute(\\\"label\\\", this._prefsBundle.getString(\\\"chooseApp\\\"));\\n       menuPopup.appendChild(menuItem);\\n     }\\n   },\\n@@ -1336,7 +1346,7 @@ var gApplicationsPane = {\\n     aEvent.stopPropagation();\\n \\n     var fp = Cc[\\\"@mozilla.org/filepicker;1\\\"].createInstance(Ci.nsIFilePicker);\\n-    var winTitle = this._bundle.getString(\\\"fpTitleChooseApp\\\");\\n+    var winTitle = this._prefsBundle.getString(\\\"fpTitleChooseApp\\\");\\n     fp.init(window, winTitle, Ci.nsIFilePicker.modeOpen);\\n     fp.appendFilters(Ci.nsIFilePicker.filterApps);\\n \\ndiff --git a/browser/components/preferences/preferences.xul b/browser/components/preferences/preferences.xul\\nindex f4711f7..2f5675e 100644\\n--- a/browser/components/preferences/preferences.xul\\n+++ b/browser/components/preferences/preferences.xul\\n@@ -90,7 +90,8 @@\\n             style=\\\"&prefWin.styleGNOME;\\\">\\n #endif\\n #endif\\n-  \\n+\\n+    <stringbundle id=\\\"bundleBrand\\\" src=\\\"chrome://branding/locale/brand.properties\\\"/>\\n     <stringbundle id=\\\"bundlePreferences\\\"\\n                   src=\\\"chrome://browser/locale/preferences/preferences.properties\\\"/>\\n \\ndiff --git a/browser/locales/en-US/chrome/browser/preferences/preferences.properties b/browser/locales/en-US/chrome/browser/preferences/preferences.properties\\nindex 395af4f..3351a7f 100644\\n--- a/browser/locales/en-US/chrome/browser/preferences/preferences.properties\\n+++ b/browser/locales/en-US/chrome/browser/preferences/preferences.properties\\n@@ -52,6 +52,10 @@ fpTitleChooseApp=Select Helper Application\\n webFeed=Web Feed\\n alwaysAskAboutFeed=Show me a preview and ask me which Feed Reader to use\\n liveBookmarks=Live Bookmarks\\n+# LOCALIZATION NOTE (pluginName):\\n+# %1$S = plugin name (for example \\\"QuickTime Plugin-in 7.2\\\")\\n+# %2$S = brandShortName from brand.properties (for example \\\"Minefield\\\")\\n+pluginName=%S (in %S)\\n \\n #### Cookie Viewer\\n \\n\""}