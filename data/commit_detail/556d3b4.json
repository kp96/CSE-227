{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas556d3b4\""},"diff":"\"556d3b4 Bug 395866 font fallback does not respect stylesheet font list r=vlad, b1.9=stuart\\ndiff --git a/gfx/thebes/public/gfxAtsuiFonts.h b/gfx/thebes/public/gfxAtsuiFonts.h\\nindex 31e70f3..ba1e09a 100644\\n--- a/gfx/thebes/public/gfxAtsuiFonts.h\\n+++ b/gfx/thebes/public/gfxAtsuiFonts.h\\n@@ -128,6 +128,8 @@ public:\\n \\n     gfxAtsuiFont* FindFontFor(ATSUFontID fid);\\n \\n+    PRBool HasFont(ATSUFontID fid);\\n+\\n protected:\\n     static PRBool FindATSUFont(const nsAString& aName,\\n                                const nsACString& aGenericName,\\ndiff --git a/gfx/thebes/src/gfxAtsuiFonts.cpp b/gfx/thebes/src/gfxAtsuiFonts.cpp\\nindex c4e4fc2..2a7dde5 100644\\n--- a/gfx/thebes/src/gfxAtsuiFonts.cpp\\n+++ b/gfx/thebes/src/gfxAtsuiFonts.cpp\\n@@ -429,7 +429,7 @@ gfxAtsuiFontGroup::gfxAtsuiFontGroup(const nsAString& families,\\n         GetOrMakeFont(fontID, aStyle, &mFonts);\\n     }\\n \\n-    CreateFontFallbacksFromFontList(&mFonts, &mFallbacks, kATSULastResortOnlyFallback);\\n+    CreateFontFallbacksFromFontList(&mFonts, &mFallbacks, kATSUSequentialFallbacksExclusive);\\n }\\n \\n PRBool\\n@@ -443,7 +443,7 @@ gfxAtsuiFontGroup::FindATSUFont(const nsAString& aName,\\n     gfxQuartzFontCache *fc = gfxQuartzFontCache::SharedFontCache();\\n     ATSUFontID fontID = fc->FindATSUFontIDForFamilyAndStyle (aName, fontStyle);\\n \\n-    if (fontID != kATSUInvalidFontID) {\\n+    if (fontID != kATSUInvalidFontID && !fontGroup->HasFont(fontID)) {\\n         //fprintf (stderr, \\\"..FindATSUFont: %s\\\\n\\\", NS_ConvertUTF16toUTF8(aName).get());\\n         GetOrMakeFont(fontID, fontStyle, &fontGroup->mFonts);\\n     }\\n@@ -673,6 +673,16 @@ gfxAtsuiFontGroup::FindFontFor(ATSUFontID fid)\\n     return GetOrMakeFont(fid, GetStyle(), &mFonts);\\n }\\n \\n+PRBool\\n+gfxAtsuiFontGroup::HasFont(ATSUFontID fid)\\n+{\\n+    for (PRUint32 i = 0; i < mFonts.Length(); ++i) {\\n+        if (fid == static_cast<gfxAtsuiFont *>(mFonts.ElementAt(i).get())->GetATSUFontID())\\n+            return PR_TRUE;\\n+    }\\n+    return PR_FALSE;\\n+}\\n+\\n /**\\n  * Simple wrapper for ATSU \\\"direct data arrays\\\"\\n  */\\n@@ -1519,6 +1529,12 @@ gfxAtsuiFontGroup::InitTextRun(gfxTextRun *aRun,\\n                     break;\\n             }\\n \\n+            if (firstTime && !HasFont(substituteFontID)) {\\n+                // XXX We are using kATSUSequentialFallbacksExclusive at first time.\\n+                // But the method uses non-listed font in font fallbacks on 10.4. (ATSUI Reference does not say so...)\\n+                status = kATSUFontsNotMatched;\\n+            }\\n+\\n             // then, handle any chars that were found in the fallback list\\n             if (status == kATSUFontsMatched) {\\n                 // substitute font will be used in [changedOffset, changedOffset + changedLength)\\n\""}