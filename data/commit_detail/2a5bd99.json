{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas2a5bd99\""},"diff":"\"2a5bd99 b=391557. p=johnmarsh. r=mfinkle, dietrich. a=mconnor. change Annotation.get to return null instead of throwing exceptions (whitespace cleanup too)\\ndiff --git a/browser/fuel/src/fuelApplication.js b/browser/fuel/src/fuelApplication.js\\nindex fbdc8cd..8656851 100644\\n--- a/browser/fuel/src/fuelApplication.js\\n+++ b/browser/fuel/src/fuelApplication.js\\n@@ -58,7 +58,7 @@ Console.prototype = {\\n   log : function cs_log(aMsg) {\\n     this._console.logStringMessage(aMsg);\\n   },\\n-  \\n+\\n   open : function cs_open() {\\n     var wMediator = Components.classes[\\\"@mozilla.org/appshell/window-mediator;1\\\"]\\n                               .getService(Ci.nsIWindowMediator);\\n@@ -73,7 +73,7 @@ Console.prototype = {\\n       console.focus();\\n     }\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIConsole])\\n };\\n \\n@@ -89,19 +89,19 @@ function EventItem(aType, aData) {\\n // EventItem implementation\\n EventItem.prototype = {\\n   _cancel : false,\\n-  \\n+\\n   get type() {\\n     return this._type;\\n   },\\n-  \\n+\\n   get data() {\\n     return this._data;\\n   },\\n-  \\n+\\n   preventDefault : function ei_pd() {\\n     this._cancel = true;\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIEventItem])\\n };\\n \\n@@ -123,21 +123,21 @@ Events.prototype = {\\n       event: aEvent,\\n       listener: aListener\\n     });\\n-    \\n+\\n     function hasFilter(element) {\\n       return element.event == aEvent && element.listener == aListener;\\n     }\\n   },\\n-  \\n+\\n   removeListener : function evts_rl(aEvent, aListener) {\\n     this._listeners = this._listeners.filter(function(element){\\n       return element.event != aEvent && element.listener != aListener;\\n     });\\n   },\\n-  \\n+\\n   dispatch : function evts_dispatch(aEvent, aEventItem) {\\n     eventItem = new EventItem(aEvent, aEventItem);\\n-    \\n+\\n     this._listeners.forEach(function(key){\\n       if (key.event == aEvent) {\\n         key.listener.handleEvent ?\\n@@ -145,10 +145,10 @@ Events.prototype = {\\n           key.listener(eventItem);\\n       }\\n     });\\n-    \\n+\\n     return !eventItem._cancel;\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIEvents])\\n };\\n \\n@@ -158,21 +158,21 @@ Events.prototype = {\\n function PreferenceBranch(aBranch) {\\n   if (!aBranch)\\n     aBranch = \\\"\\\";\\n-  \\n+\\n   this._root = aBranch;\\n   this._prefs = Components.classes[\\\"@mozilla.org/preferences-service;1\\\"]\\n                           .getService(Ci.nsIPrefService);\\n \\n   if (aBranch)\\n     this._prefs = this._prefs.getBranch(aBranch);\\n-    \\n+\\n   this._prefs.QueryInterface(Ci.nsIPrefBranch);\\n   this._prefs.QueryInterface(Ci.nsIPrefBranch2);\\n-  \\n+\\n   // we want to listen to \\\"all\\\" changes for this branch, so pass in a blank domain\\n   this._prefs.addObserver(\\\"\\\", this, true);\\n   this._events = new Events();\\n-  \\n+\\n   var self = this;\\n   gShutdown.push(function() { self._shutdown(); });\\n }\\n@@ -187,7 +187,7 @@ PreferenceBranch.prototype = {\\n     this._prefs = null;\\n     this._events = null;\\n   },\\n-  \\n+\\n   // for nsIObserver\\n   observe: function prefs_observe(aSubject, aTopic, aData) {\\n     if (aTopic == \\\"nsPref:changed\\\")\\n@@ -197,15 +197,15 @@ PreferenceBranch.prototype = {\\n   get root() {\\n     return this._root;\\n   },\\n-  \\n+\\n   get all() {\\n     return this.find({});\\n   },\\n-  \\n+\\n   get events() {\\n     return this._events;\\n   },\\n-  \\n+\\n   // XXX: Disabled until we can figure out the wrapped object issues\\n   // name: \\\"name\\\" or /name/\\n   // path: \\\"foo.bar.\\\" or \\\"\\\" or /fo+\\\\.bar/\\n@@ -215,25 +215,25 @@ PreferenceBranch.prototype = {\\n   find : function prefs_find(aOptions) {\\n     var retVal = [];\\n     var items = this._prefs.getChildList(\\\"\\\", []);\\n-    \\n+\\n     for (var i = 0; i < items.length; i++) {\\n       retVal.push(new Preference(items[i], this));\\n     }\\n \\n     return retVal;\\n   },\\n-  \\n+\\n   has : function prefs_has(aName) {\\n     return (this._prefs.getPrefType(aName) != Ci.nsIPrefBranch.PREF_INVALID);\\n   },\\n-  \\n+\\n   get : function prefs_get(aName) {\\n     return this.has(aName) ? new Preference(aName, this) : null;\\n   },\\n \\n   getValue : function prefs_gv(aName, aValue) {\\n     var type = this._prefs.getPrefType(aName);\\n-    \\n+\\n     switch (type) {\\n       case Ci.nsIPrefBranch2.PREF_STRING:\\n         aValue = this._prefs.getComplexValue(aName, Ci.nsISupportsString).data;\\n@@ -245,13 +245,13 @@ PreferenceBranch.prototype = {\\n         aValue = this._prefs.getIntPref(aName);\\n         break;\\n     }\\n-    \\n+\\n     return aValue;\\n   },\\n-  \\n+\\n   setValue : function prefs_sv(aName, aValue) {\\n     var type = aValue != null ? aValue.constructor.name : \\\"\\\";\\n-    \\n+\\n     switch (type) {\\n       case \\\"String\\\":\\n         var str = Components.classes[\\\"@mozilla.org/supports-string;1\\\"]\\n@@ -269,11 +269,11 @@ PreferenceBranch.prototype = {\\n         throw(\\\"Unknown preference value specified.\\\");\\n     }\\n   },\\n-  \\n+\\n   reset : function prefs_reset() {\\n     this._prefs.resetBranch(\\\"\\\");\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIPreferenceBranch, Ci.nsISupportsWeakReference])\\n };\\n \\n@@ -284,9 +284,9 @@ function Preference(aName, aBranch) {\\n   this._name = aName;\\n   this._branch = aBranch;\\n   this._events = new Events();\\n-  \\n+\\n   var self = this;\\n-  \\n+\\n   this.branch.events.addListener(\\\"change\\\", function(aEvent){\\n     if (aEvent.data == self.name)\\n       self.events.dispatch(aEvent.type, aEvent.data);\\n@@ -299,11 +299,11 @@ Preference.prototype = {\\n   get name() {\\n     return this._name;\\n   },\\n-  \\n+\\n   get type() {\\n     var value = \\\"\\\";\\n     var type = this._prefs.getPrefType(name);\\n-    \\n+\\n     switch (type) {\\n       case Ci.nsIPrefBranch2.PREF_STRING:\\n         value = \\\"String\\\";\\n@@ -315,42 +315,42 @@ Preference.prototype = {\\n         value = \\\"Number\\\";\\n         break;\\n     }\\n-    \\n+\\n     return value;\\n   },\\n-  \\n+\\n   get value() {\\n     return this.branch.getValue(this._name, null);\\n   },\\n-  \\n+\\n   set value(aValue) {\\n     return this.branch.setValue(this._name, aValue);\\n   },\\n-  \\n+\\n   get locked() {\\n     return this.branch._prefs.prefIsLocked(this.name);\\n   },\\n-  \\n+\\n   set locked(aValue) {\\n     this.branch._prefs[ aValue ? \\\"lockPref\\\" : \\\"unlockPref\\\" ](this.name);\\n   },\\n-  \\n+\\n   get modified() {\\n     return this.branch._prefs.prefHasUserValue(this.name);\\n   },\\n-  \\n+\\n   get branch() {\\n     return this._branch;\\n   },\\n-  \\n+\\n   get events() {\\n     return this._events;\\n   },\\n-  \\n+\\n   reset : function pref_reset() {\\n     this.branch._prefs.clearUserPref(this.name);\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIPreference])\\n };\\n \\n@@ -368,20 +368,20 @@ SessionStorage.prototype = {\\n   get events() {\\n     return this._events;\\n   },\\n-  \\n+\\n   has : function ss_has(aName) {\\n     return this._storage.hasOwnProperty(aName);\\n   },\\n-  \\n+\\n   set : function ss_set(aName, aValue) {\\n     this._storage[aName] = aValue;\\n     this._events.dispatch(\\\"change\\\", aName);\\n   },\\n-  \\n+\\n   get : function ss_get(aName, aDefaultValue) {\\n     return this.has(aName) ? this._storage[aName] : aDefaultValue;\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelISessionStorage])\\n };\\n \\n@@ -394,7 +394,7 @@ function Extension(aItem) {\\n   this._prefs = new PreferenceBranch(\\\"extensions.\\\" + this._item.id + \\\".\\\");\\n   this._storage = new SessionStorage();\\n   this._events = new Events();\\n-  \\n+\\n   var installPref = \\\"install-event-fired\\\";\\n   if (!this._prefs.has(installPref)) {\\n     this._prefs.setValue(installPref, true);\\n@@ -404,7 +404,7 @@ function Extension(aItem) {\\n   var os = Components.classes[\\\"@mozilla.org/observer-service;1\\\"]\\n                      .getService(Ci.nsIObserverService);\\n   os.addObserver(this, \\\"em-action-requested\\\", false);\\n-  \\n+\\n   var self = this;\\n   gShutdown.push(function(){ self._shutdown(); });\\n }\\n@@ -422,8 +422,8 @@ Extension.prototype = {\\n     this._storage = null;\\n     this._events = null;\\n   },\\n-  \\n-  // for nsIObserver  \\n+\\n+  // for nsIObserver\\n   observe: function ext_observe(aSubject, aTopic, aData)\\n   {\\n     if ((aSubject instanceof Ci.nsIUpdateItem) && (aSubject.id == this._item.id))\\n@@ -444,31 +444,31 @@ Extension.prototype = {\\n   get id() {\\n     return this._item.id;\\n   },\\n-  \\n+\\n   get name() {\\n     return this._item.name;\\n   },\\n-  \\n+\\n   get version() {\\n     return this._item.version;\\n   },\\n-  \\n+\\n   get firstRun() {\\n     return this._firstRun;\\n   },\\n-  \\n+\\n   get storage() {\\n     return this._storage;\\n   },\\n-  \\n+\\n   get prefs() {\\n     return this._prefs;\\n   },\\n-  \\n+\\n   get events() {\\n     return this._events;\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIExtension])\\n };\\n \\n@@ -478,9 +478,9 @@ Extension.prototype = {\\n function Extensions() {\\n   this._extmgr = Components.classes[\\\"@mozilla.org/extensions/manager;1\\\"]\\n                            .getService(Ci.nsIExtensionManager);\\n-                           \\n+\\n   this._cache = {};\\n-  \\n+\\n   var self = this;\\n   gShutdown.push(function() { self._shutdown(); });\\n }\\n@@ -492,23 +492,23 @@ Extensions.prototype = {\\n     this._extmgr = null;\\n     this._cache = null;\\n   },\\n-  \\n+\\n   /*\\n    * Helper method to check cache before creating a new extension\\n    */\\n   _get : function exts_get(aId) {\\n     if (this._cache.hasOwnProperty(aId))\\n       return this._cache[aId];\\n-      \\n+\\n     var newExt = new Extension(this._extmgr.getItemForID(aId));\\n     this._cache[aId] = newExt;\\n     return newExt;\\n   },\\n-  \\n+\\n   get all() {\\n     return this.find({});\\n   },\\n-  \\n+\\n   // XXX: Disabled until we can figure out the wrapped object issues\\n   // id: \\\"some@id\\\" or /id/\\n   // name: \\\"name\\\" or /name/\\n@@ -518,22 +518,22 @@ Extensions.prototype = {\\n   find : function exts_find(aOptions) {\\n     var retVal = [];\\n     var items = this._extmgr.getItemList(Ci.nsIUpdateItem.TYPE_EXTENSION, {});\\n-    \\n+\\n     for (var i = 0; i < items.length; i++) {\\n       retVal.push(this._get(items[i].id));\\n     }\\n \\n     return retVal;\\n   },\\n-  \\n+\\n   has : function exts_has(aId) {\\n     return this._extmgr.getItemForID(aId) != null;\\n   },\\n-  \\n+\\n   get : function exts_get(aId) {\\n     return this.has(aId) ? this._get(aId) : null;\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIExtensions])\\n };\\n \\n@@ -566,7 +566,7 @@ var Utilities = {\\n     }\\n     return this._annotations;\\n   },\\n-  \\n+\\n   _history : null,\\n   get history() {\\n     if (!this._history) {\\n@@ -575,7 +575,7 @@ var Utilities = {\\n     }\\n     return this._history;\\n   },\\n-  \\n+\\n   _windowMediator : null,\\n   get windowMediator() {\\n     if (!this._windowMediator) {\\n@@ -584,14 +584,14 @@ var Utilities = {\\n     }\\n     return this._windowMediator;\\n   },\\n-  \\n+\\n   makeURI : function(aSpec) {\\n     if (!aSpec)\\n       return null;\\n     var ios = Cc[\\\"@mozilla.org/network/io-service;1\\\"].getService(Ci.nsIIOService);\\n     return ios.newURI(aSpec, null, null);\\n   },\\n-  \\n+\\n   free : function() {\\n     this._bookmarks = null;\\n     this._livemarks = null;\\n@@ -609,12 +609,12 @@ function Window(aWindow) {\\n   this._tabbrowser = aWindow.getBrowser();\\n   this._events = new Events();\\n   this._cleanup = {};\\n-  \\n+\\n   this._watch(\\\"TabOpen\\\");\\n   this._watch(\\\"TabMove\\\");\\n   this._watch(\\\"TabClose\\\");\\n   this._watch(\\\"TabSelect\\\");\\n-                                 \\n+\\n   var self = this;\\n   gShutdown.push(function() { self._shutdown(); });\\n }\\n@@ -630,36 +630,36 @@ Window.prototype = {\\n    */\\n   _watch : function win_watch(aType) {\\n     var self = this;\\n-    this._tabbrowser.addEventListener(aType, \\n+    this._tabbrowser.addEventListener(aType,\\n       this._cleanup[aType] = function(e){ self._event(e); },\\n       true);\\n   },\\n-  \\n+\\n   /*\\n    * Helper event callback used to redirect events made on the XBL element\\n    */\\n   _event : function win_event(aEvent) {\\n     this._events.dispatch(aEvent.type, \\\"\\\");\\n   },\\n-  \\n+\\n   get tabs() {\\n     var tabs = [];\\n     var browsers = this._tabbrowser.browsers;\\n-    \\n+\\n     for (var i=0; i<browsers.length; i++)\\n       tabs.push(new BrowserTab(this._window, browsers[i]));\\n-    \\n+\\n     return tabs;\\n   },\\n-  \\n+\\n   get activeTab() {\\n     return new BrowserTab(this._window, this._tabbrowser.selectedBrowser);\\n   },\\n-  \\n+\\n   open : function win_open(aURI) {\\n     return new BrowserTab(this._window, this._tabbrowser.addTab(aURI.spec).linkedBrowser);\\n   },\\n-  \\n+\\n   _shutdown : function win_shutdown() {\\n     for (var type in this._cleanup)\\n       this._tabbrowser.removeEventListener(type, this._cleanup[type], true);\\n@@ -669,7 +669,7 @@ Window.prototype = {\\n     this._tabbrowser = null;\\n     this._events = null;\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIWindow])\\n };\\n \\n@@ -682,9 +682,9 @@ function BrowserTab(aWindow, aBrowser) {\\n   this._browser = aBrowser;\\n   this._events = new Events();\\n   this._cleanup = {};\\n-  \\n+\\n   this._watch(\\\"load\\\");\\n-                                 \\n+\\n   var self = this;\\n   gShutdown.push(function() { self._shutdown(); });\\n }\\n@@ -693,7 +693,7 @@ BrowserTab.prototype = {\\n   get uri() {\\n     return this._browser.currentURI;\\n   },\\n-  \\n+\\n   get index() {\\n     var tabs = this._tabbrowser.mTabs;\\n     for (var i=0; i<tabs.length; i++) {\\n@@ -706,15 +706,15 @@ BrowserTab.prototype = {\\n   get events() {\\n     return this._events;\\n   },\\n-  \\n+\\n   get window() {\\n     return this._window;\\n   },\\n-  \\n+\\n   get document() {\\n     return this._browser.contentDocument;\\n   },\\n-  \\n+\\n   /*\\n    * Helper used to setup event handlers on the XBL element\\n    */\\n@@ -724,7 +724,7 @@ BrowserTab.prototype = {\\n       this._cleanup[aType] = function(e){ self._event(e); },\\n       true);\\n   },\\n-  \\n+\\n   /*\\n    * Helper event callback used to redirect events made on the XBL element\\n    */\\n@@ -732,15 +732,15 @@ BrowserTab.prototype = {\\n     if (aEvent.type == \\\"load\\\") {\\n       if (!(aEvent.originalTarget instanceof Ci.nsIDOMHTMLDocument))\\n         return;\\n-        \\n+\\n       if (aEvent.originalTarget.defaultView instanceof Ci.nsIDOMWindowInternal &&\\n           aEvent.originalTarget.defaultView.frameElement)\\n         return;\\n     }\\n-      \\n+\\n     this._events.dispatch(aEvent.type, \\\"\\\");\\n   },\\n-  \\n+\\n   /*\\n    * Helper used to determine the index offset of the browsertab\\n    */\\n@@ -748,39 +748,39 @@ BrowserTab.prototype = {\\n     var tabs = this._tabbrowser.mTabs;\\n     return tabs[this.index] || null;\\n   },\\n-  \\n+\\n   load : function bt_load(aURI) {\\n     this._browser.loadURI(aURI.spec, null, null);\\n   },\\n-  \\n+\\n   focus : function bt_focus() {\\n     this._tabbrowser.selectedTab = this._getTab();\\n     this._tabbrowser.focus();\\n   },\\n-  \\n+\\n   close : function bt_close() {\\n     this._tabbrowser.removeTab(this._getTab());\\n   },\\n-  \\n+\\n   moveBefore : function bt_movebefore(aBefore) {\\n     this._tabbrowser.moveTabTo(this._getTab(), aBefore.index);\\n   },\\n-  \\n+\\n   moveToEnd : function bt_moveend() {\\n     this._tabbrowser.moveTabTo(this._getTab(), this._tabbrowser.browsers.length);\\n   },\\n-  \\n+\\n   _shutdown : function bt_shutdown() {\\n     for (var type in this._cleanup)\\n       this._browser.removeEventListener(type, this._cleanup[type], true);\\n     this._cleanup = null;\\n-    \\n+\\n     this._window = null;\\n     this._tabbrowser = null;\\n     this._browser = null;\\n     this._events = null;\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIBrowserTab])\\n };\\n \\n@@ -795,24 +795,26 @@ Annotations.prototype = {\\n   get names() {\\n     return Utilities.annotations.getItemAnnotationNames(this._id, {});\\n   },\\n-  \\n+\\n   has : function ann_has(aName) {\\n     return Utilities.annotations.itemHasAnnotation(this._id, aName);\\n   },\\n-  \\n+\\n   get : function(aName) {\\n-    return Utilities.annotations.getItemAnnotation(this._id, aName);\\n+    if (this.has(aName))\\n+      return Utilities.annotations.getItemAnnotation(this._id, aName);\\n+    return null;\\n   },\\n-  \\n+\\n   set : function(aName, aValue, aExpiration) {\\n     Utilities.annotations.setItemAnnotation(this._id, aName, aValue, 0, aExpiration);\\n   },\\n-    \\n+\\n   remove : function ann_remove(aName) {\\n     if (aName)\\n       Utilities.annotations.removeItemAnnotation(this._id, aName);\\n   },\\n-  \\n+\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIAnnotations])\\n };\\n \\n@@ -826,8 +828,8 @@ function Bookmark(aId, aParent, aType) {\\n   this._annotations = new Annotations(this._id);\\n   this._events = new Events();\\n \\n-  Utilities.bookmarks.addObserver(this, false);  \\n-                                 \\n+  Utilities.bookmarks.addObserver(this, false);\\n+\\n   var self = this;\\n   gShutdown.push(function() { self._shutdown(); });\\n }\\n@@ -836,14 +838,14 @@ Bookmark.prototype = {\\n   _shutdown : function bm_shutdown() {\\n     this._annotations = null;\\n     this._events = null;\\n-    \\n-    Utilities.bookmarks.removeObserver(this);  \\n+\\n+    Utilities.bookmarks.removeObserver(this);\\n   },\\n-  \\n+\\n   get id() {\\n     return this._id;\\n   },\\n-  \\n+\\n   get title() {\\n     return Utilities.bookmarks.getItemTitle(this._id);\\n   },\\n@@ -883,24 +885,24 @@ Bookmark.prototype = {\\n   get parent() {\\n     return this._parent;\\n   },\\n-  \\n+\\n   set parent(aFolder) {\\n     Utilities.bookmarks.moveItem(this._id, aFolder.id, Utilities.bookmarks.DEFAULT_INDEX);\\n     // this._parent is updated in onItemMoved\\n   },\\n-  \\n+\\n   get annotations() {\\n     return this._annotations;\\n   },\\n-  \\n+\\n   get events() {\\n     return this._events;\\n   },\\n-  \\n+\\n   remove : function bm_remove() {\\n     Utilities.bookmarks.removeItem(this._id);\\n   },\\n-  \\n+\\n   // observer\\n   onBeginUpdateBatch : function bm_obub() {\\n   },\\n@@ -927,13 +929,13 @@ Bookmark.prototype = {\\n \\n   onItemMoved: function bm_oim(aId, aOldParent, aOldIndex, aNewParent, aNewIndex) {\\n     if (this._id == aId) {\\n-      this._parent = new BookmarkFolder(aNewParent, Utilities.bookmarks.getFolderIdForItem(aNewParent));    \\n+      this._parent = new BookmarkFolder(aNewParent, Utilities.bookmarks.getFolderIdForItem(aNewParent));\\n       this._events.dispatch(\\\"move\\\", aId);\\n     }\\n   },\\n \\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIBookmark, Ci.nsINavBookmarkObserver])\\n-}; \\n+};\\n \\n \\n //=================================================\\n@@ -942,13 +944,13 @@ function BookmarkFolder(aId, aParent) {\\n   this._id = aId;\\n   if (this._id == null)\\n     this._id = Utilities.bookmarks.bookmarksRoot;\\n-  \\n+\\n   this._parent = aParent;\\n-                                 \\n+\\n   this._annotations = new Annotations(this._id);\\n   this._events = new Events();\\n \\n-  Utilities.bookmarks.addObserver(this, false);  \\n+  Utilities.bookmarks.addObserver(this, false);\\n \\n   var self = this;\\n   gShutdown.push(function() { self._shutdown(); });\\n@@ -958,14 +960,14 @@ BookmarkFolder.prototype = {\\n   _shutdown : function bmf_shutdown() {\\n     this._annotations = null;\\n     this._events = null;\\n-    \\n-    Utilities.bookmarks.removeObserver(this);  \\n+\\n+    Utilities.bookmarks.removeObserver(this);\\n   },\\n-  \\n+\\n   get id() {\\n     return this._id;\\n   },\\n-  \\n+\\n   get title() {\\n     return Utilities.bookmarks.getItemTitle(this._id);\\n   },\\n@@ -989,7 +991,7 @@ BookmarkFolder.prototype = {\\n   get parent() {\\n     return this._parent;\\n   },\\n-  \\n+\\n   set parent(aFolder) {\\n     Utilities.bookmarks.moveItem(this._id, aFolder.id, Utilities.bookmarks.DEFAULT_INDEX);\\n     // this._parent is updated in onItemMoved\\n@@ -998,14 +1000,14 @@ BookmarkFolder.prototype = {\\n   get annotations() {\\n     return this._annotations;\\n   },\\n-  \\n+\\n   get events() {\\n     return this._events;\\n   },\\n-  \\n+\\n   get children() {\\n     var items = [];\\n-    \\n+\\n     var options = Utilities.history.getNewQueryOptions();\\n     var query = Utilities.history.getNewQuery();\\n     query.setFolders([this._id], 1);\\n@@ -1032,29 +1034,29 @@ BookmarkFolder.prototype = {\\n \\n     return items;\\n   },\\n-  \\n+\\n   addBookmark : function bmf_addbm(aTitle, aUri) {\\n     var newBookmarkID = Utilities.bookmarks.insertBookmark(this._id, aUri, Utilities.bookmarks.DEFAULT_INDEX, aTitle);\\n     var newBookmark = new Bookmark(newBookmarkID, this, \\\"bookmark\\\");\\n     return newBookmark;\\n   },\\n-  \\n+\\n   addSeparator : function bmf_addsep() {\\n     var newBookmarkID = Utilities.bookmarks.insertSeparator(this._id, Utilities.bookmarks.DEFAULT_INDEX);\\n     var newBookmark = new Bookmark(newBookmarkID, this, \\\"separator\\\");\\n     return newBookmark;\\n   },\\n-  \\n+\\n   addFolder : function bmf_addfolder(aTitle) {\\n     var newFolderID = Utilities.bookmarks.createFolder(this._id, aTitle, Utilities.bookmarks.DEFAULT_INDEX);\\n     var newFolder = new BookmarkFolder(newFolderID, this);\\n     return newFolder;\\n   },\\n-  \\n+\\n   remove : function bmf_remove() {\\n     Utilities.bookmarks.removeFolder(this._id);\\n   },\\n-  \\n+\\n   // observer\\n   onBeginUpdateBatch : function bmf_obub() {\\n   },\\n@@ -1066,8 +1068,8 @@ BookmarkFolder.prototype = {\\n     // handle root folder events\\n     if (!this._parent)\\n       this._events.dispatch(\\\"add\\\", aId);\\n-    \\n-    // handle this folder events  \\n+\\n+    // handle this folder events\\n     if (this._id == aFolder)\\n       this._events.dispatch(\\\"addchild\\\", aId);\\n   },\\n@@ -1077,7 +1079,7 @@ BookmarkFolder.prototype = {\\n     if (!this._parent || this._id == aId)\\n       this._events.dispatch(\\\"remove\\\", aId);\\n \\n-    // handle this folder events      \\n+    // handle this folder events\\n     if (this._id == aFolder)\\n       this._events.dispatch(\\\"removechild\\\", aId);\\n   },\\n@@ -1094,7 +1096,7 @@ BookmarkFolder.prototype = {\\n   onItemMoved: function bmf_oim(aId, aOldParent, aOldIndex, aNewParent, aNewIndex) {\\n     // handle this folder event, root folder cannot be moved\\n     if (this._id == aId) {\\n-      this._parent = new BookmarkFolder(aNewParent, Utilities.bookmarks.getFolderIdForItem(aNewParent));    \\n+      this._parent = new BookmarkFolder(aNewParent, Utilities.bookmarks.getFolderIdForItem(aNewParent));\\n       this._events.dispatch(\\\"move\\\", aId);\\n     }\\n   },\\n@@ -1129,10 +1131,10 @@ function Application() {\\n   this._storage = null;\\n   this._events = null;\\n   this._bookmarks = null;\\n-  \\n+\\n   this._info = Components.classes[\\\"@mozilla.org/xre/app-info;1\\\"]\\n                      .getService(Ci.nsIXULAppInfo);\\n-    \\n+\\n   var os = Components.classes[\\\"@mozilla.org/observer-service;1\\\"]\\n                      .getService(Ci.nsIObserverService);\\n \\n@@ -1166,15 +1168,15 @@ Application.prototype = {\\n   get id() {\\n     return this._info.ID;\\n   },\\n-  \\n+\\n   get name() {\\n     return this._info.name;\\n   },\\n-  \\n+\\n   get version() {\\n     return this._info.version;\\n   },\\n-  \\n+\\n   // for nsIObserver\\n   observe: function app_observe(aSubject, aTopic, aData) {\\n     if (aTopic == \\\"app-startup\\\") {\\n@@ -1197,7 +1199,7 @@ Application.prototype = {\\n         gShutdown.shift()();\\n       }\\n \\n-      // release our observers      \\n+      // release our observers\\n       var os = Components.classes[\\\"@mozilla.org/observer-service;1\\\"]\\n                          .getService(Ci.nsIObserverService);\\n \\n@@ -1206,7 +1208,7 @@ Application.prototype = {\\n       os.removeObserver(this, \\\"quit-application-requested\\\");\\n       os.removeObserver(this, \\\"quit-application-granted\\\");\\n       os.removeObserver(this, \\\"quit-application\\\");\\n-      \\n+\\n       os.removeObserver(this, \\\"xpcom-shutdown\\\");\\n \\n       this._info = null;\\n@@ -1216,7 +1218,7 @@ Application.prototype = {\\n       this._events = null;\\n       this._extensions = null;\\n       this._bookmarks = null;\\n-      \\n+\\n       Utilities.free();\\n     }\\n   },\\n@@ -1234,31 +1236,31 @@ Application.prototype = {\\n   getHelperForLanguage : function app_ghfl(aCount) {\\n     return null;\\n   },\\n-  \\n+\\n   // for nsISupports\\n   QueryInterface : XPCOMUtils.generateQI([Ci.fuelIApplication, Ci.nsIObserver, Ci.nsIClassInfo]),\\n-  \\n+\\n   get console() {\\n     if (this._console == null)\\n         this._console = new Console();\\n \\n     return this._console;\\n   },\\n-  \\n+\\n   get storage() {\\n     if (this._storage == null)\\n         this._storage = new SessionStorage();\\n \\n     return this._storage;\\n   },\\n-  \\n+\\n   get prefs() {\\n     if (this._prefs == null)\\n         this._prefs = new PreferenceBranch(\\\"\\\");\\n \\n     return this._prefs;\\n   },\\n-  \\n+\\n   get extensions() {\\n     return this._extensions;\\n   },\\n@@ -1276,17 +1278,17 @@ Application.prototype = {\\n \\n     return this._bookmarks;\\n   },\\n-  \\n+\\n   get windows() {\\n     var win = [];\\n     var enum = Utilities.windowMediator.getEnumerator(\\\"navigator:browser\\\");\\n-    \\n+\\n     while (enum.hasMoreElements())\\n       win.push(new Window(enum.getNext()));\\n \\n     return win;\\n   },\\n-  \\n+\\n   get activeWindow() {\\n     return new Window(Utilities.windowMediator.getMostRecentWindow(\\\"navigator:browser\\\"));\\n   }\\ndiff --git a/browser/fuel/test/browser_Bookmarks.js b/browser/fuel/test/browser_Bookmarks.js\\nindex ab74f27..0ca573e 100644\\n--- a/browser/fuel/test/browser_Bookmarks.js\\n+++ b/browser/fuel/test/browser_Bookmarks.js\\n@@ -15,7 +15,7 @@ function test() {\\n   ok(!root.parent, \\\"Check root parent (should be null)\\\");\\n \\n   var rootKidCount = root.children.length;\\n-  \\n+\\n   // test adding folders\\n   var testFolder = root.addFolder(\\\"FUEL\\\");\\n   ok(testFolder, \\\"Check folder creation\\\");\\n@@ -43,7 +43,7 @@ function test() {\\n   testFolder.annotations.remove(\\\"testing/folder\\\");\\n   ok(!testFolder.annotations.has(\\\"testing/folder\\\"), \\\"Checking existence of removed annotation\\\");\\n   is(gLastFolderAction, \\\"testing/folder\\\", \\\"Check event handler for removing annotation\\\");\\n-  \\n+\\n   testFolder.events.addListener(\\\"addchild\\\", onFolderAddChild);\\n   testFolder.events.addListener(\\\"removechild\\\", onFolderRemoveChild);\\n \\n@@ -55,7 +55,7 @@ function test() {\\n   is(testBookmark.type, \\\"bookmark\\\", \\\"Check 'bookmark.type' after creation\\\");\\n   is(testBookmark.title, \\\"Mozilla\\\", \\\"Check 'bookmark.title' after creation\\\");\\n   is(testBookmark.uri.spec, \\\"http://www.mozilla.com/\\\", \\\"Check 'bookmark.uri' after creation\\\");\\n-  \\n+\\n   is(testFolder.children.length, 1, \\\"Check test folder child count after adding a child bookmark\\\");\\n \\n   // test modifying a bookmark\\n@@ -67,7 +67,7 @@ function test() {\\n   testBookmark.keyword = \\\"moz\\\"\\n   is(testBookmark.keyword, \\\"moz\\\", \\\"Check setting 'bookmark.keyword'\\\");\\n   is(gLastBookmarkAction, \\\"keyword\\\", \\\"Check event handler for setting 'bookmark.keyword'\\\");\\n-  \\n+\\n   testBookmark.title = \\\"MozCorp\\\"\\n   is(testBookmark.title, \\\"MozCorp\\\", \\\"Check setting 'bookmark.title'\\\");\\n   is(gLastBookmarkAction, \\\"title\\\", \\\"Check event handler for setting 'bookmark.title'\\\");\\n@@ -85,6 +85,7 @@ function test() {\\n   testBookmark.annotations.remove(\\\"testing/bookmark\\\");\\n   ok(!testBookmark.annotations.has(\\\"testing/bookmark\\\"), \\\"Checking existence of removed annotation\\\");\\n   is(gLastBookmarkAction, \\\"testing/bookmark\\\", \\\"Check event handler for removing annotation\\\");\\n+  is(testBookmark.annotations.get(\\\"testing/bookmark\\\"), null, \\\"Check existence of a missing annotation\\\");\\n \\n   // quick annotation type tests\\n   testBookmark.annotations.set(\\\"testing/bookmark/string\\\", \\\"annotate-this\\\", 0);\\n@@ -102,7 +103,7 @@ function test() {\\n   is(testBookmark.annotations.get(\\\"testing/bookmark/double\\\"), 3.333, \\\"Checking value of added double annotation\\\");\\n   is(gLastBookmarkAction, \\\"testing/bookmark/double\\\", \\\"Check event handler for setting annotation\\\");\\n   gLastBookmarkAction = \\\"\\\";\\n-  \\n+\\n   // test names array - NOTE: \\\"bookmarkProperties/description\\\" is an annotation too\\n   var names = testBookmark.annotations.names;\\n   is(names[1], \\\"testing/bookmark/string\\\", \\\"Checking contents of annotation names array\\\");\\n@@ -130,18 +131,18 @@ function test() {\\n   is(gLastBookmarkAction, \\\"remove\\\", \\\"Check event handler for removing bookmark\\\");\\n   is(gLastFolderAction, \\\"removechild\\\", \\\"Check event handler for removing a child from a folder\\\");\\n   is(testFolder.children.length, 0, \\\"Check test folder child count after removing a child bookmark\\\");\\n-  \\n+\\n   // test removing a folder\\n   testFolder.events.addListener(\\\"remove\\\", onFolderRemove);\\n   testFolder.remove();\\n   is(gLastFolderAction, \\\"remove\\\", \\\"Check event handler for removing child folder\\\");\\n   rootKidCount--;\\n   is(root.children.length, rootKidCount, \\\"Check root folder child count after removing a child folder\\\");\\n-  \\n+\\n   // test moving between folders\\n   var testFolderA = root.addFolder(\\\"folder-a\\\");\\n   var testFolderB = root.addFolder(\\\"folder-b\\\");\\n-  \\n+\\n   var testMove = testFolderA.addBookmark(\\\"Mozilla\\\", url(\\\"http://www.mozilla.com/\\\"));\\n   testMove.events.addListener(\\\"move\\\", onBookmarkMove);\\n   is(testMove.parent.title, \\\"folder-a\\\", \\\"Checking for new parent before moving bookmark\\\");\\n\""}