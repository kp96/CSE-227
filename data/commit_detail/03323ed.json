{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas03323ed\""},"diff":"\"03323ed Bug 343628 - Double-clicking a close button of a tab shouldn't open a new tab. r=robert.\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex cc9405a..23e761e 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -25,6 +25,7 @@\\n    -   Mike Connor <mconnor@steelgryphon.com>\\n    -   Peter Parente <parente@cs.unc.edu>\\n    -   Giorgio Maone <g.maone@informaction.com>\\n+   -   Asaf Romano <mozilla.mano@sent.com>\\n    -\\n    - Alternatively, the contents of this file may be used under the terms of\\n    - either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n@@ -194,6 +195,10 @@\\n         null\\n       </field>\\n \\n+      <field name=\\\"_blockDblClick\\\">\\n+        false\\n+      </field>\\n+\\n       <method name=\\\"getBrowserAtIndex\\\">\\n         <parameter name=\\\"aIndex\\\"/>\\n         <body>\\n@@ -1456,7 +1461,8 @@\\n         <parameter name=\\\"aEvent\\\"/>\\n         <body>\\n           <![CDATA[\\n-            if (aEvent.button == 0 &&\\n+            // See hack note in the tabbrowser-close-button binding\\n+            if (!this._blockDblClick && aEvent.button == 0 &&\\n                 aEvent.originalTarget.localName == \\\"box\\\") {\\n               // xxx this needs to check that we're in the empty area of the tabstrip\\n               var e = document.createEvent(\\\"Events\\\");\\n@@ -2392,9 +2398,7 @@\\n         <children includes=\\\"tab\\\"/>\\n       </xul:arrowscrollbox>\\n       <xul:hbox class=\\\"tabs-closebutton-box\\\" align=\\\"center\\\" pack=\\\"end\\\" anonid=\\\"tabstrip-closebutton\\\">\\n-        <xul:toolbarbutton ondblclick=\\\"event.stopPropagation();\\\"\\n-                           class=\\\"close-button tabs-closebutton\\\"\\n-                           oncommand=\\\"this.parentNode.parentNode.parentNode.parentNode.parentNode.removeCurrentTab()\\\"/>\\n+        <xul:toolbarbutton class=\\\"close-button tabs-closebutton\\\"/>\\n       </xul:hbox>\\n     </content>\\n     <implementation>\\n@@ -2580,6 +2584,51 @@\\n     </handlers>\\n   </binding>\\n \\n+  <!-- close-tab-button binding\\n+       This binding relies on the structure of the tabbrowser binding.\\n+       Therefor it should only be used as a child of the tab or the tabs\\n+       element (in both cases, when they are anonymous nodes of <tabbrowser>).\\n+       This binding is exposed as a pseudo-public-API so themes can customize\\n+       the tabbar appearance without having to be scriptable\\n+       (see globalBindings.xml in Pinstripe for example).\\n+  -->\\n+  <binding id=\\\"tabbrowser-close-tab-button\\\"\\n+           extends=\\\"chrome://global/content/bindings/toolbarbutton.xml#toolbarbutton\\\">\\n+    <handlers>\\n+      <handler event=\\\"command\\\"><![CDATA[\\n+        var bindingParent = document.getBindingParent(this);\\n+        if (bindingParent) {\\n+          var tabbedBrowser = document.getBindingParent(bindingParent);\\n+          if (bindingParent.localName == \\\"tab\\\") {\\n+            tabbedBrowser.removeTab(bindingParent);\\n+            tabbedBrowser._blockDblClick = true;\\n+\\n+            /* XXXmano hack (see bug 343628):\\n+             * Since we're removing the event target, if the user\\n+             * double-clicks this button, the dblclick event will be dispatched\\n+             * with the tabbar as its event target (and explicit/originalTarget),\\n+             * which treats that as a mouse gesture for opening a new tab.\\n+             * In this context, there is no way to prevent the dispatching\\n+             * of the dblclick event, so we're manually blocking it (see\\n+             * onTabBarDblClick) until the mouse is moved.\\n+             */\\n+            function mouseMoveHandler() {\\n+              tabbedBrowser._blockDblClick = false;\\n+              tabbedBrowser.removeEventListener(\\\"mousemove\\\", mouseMoveHandler, false);\\n+            }\\n+            tabbedBrowser.addEventListener(\\\"mousemove\\\",  mouseMoveHandler, false);\\n+          }\\n+          else // \\\"tabs\\\"\\n+            tabbedBrowser.removeCurrentTab();\\n+        }\\n+      ]]></handler>\\n+      <handler event=\\\"dblclick\\\" phase=\\\"capturing\\\">\\n+        // for the one-close-button case\\n+        event.stopPropagation();\\n+      </handler>\\n+    </handlers>\\n+  </binding>\\n+\\n   <binding id=\\\"tabbrowser-tab\\\" display=\\\"xul:box\\\"\\n            extends=\\\"chrome://global/content/bindings/tabbox.xml#tab\\\">\\n     <content chromedir=\\\"&locale.dir;\\\"\\n@@ -2607,13 +2656,6 @@\\n         if (anonid == \\\"close-button\\\")\\n           this.mOverCloseButton = false;\\n       </handler>\\n-      <handler event=\\\"command\\\">\\n-      <![CDATA[\\n-        var anonid = event.originalTarget.getAttribute(\\\"anonid\\\");\\n-        if (anonid == \\\"close-button\\\")\\n-          this.parentNode.parentNode.parentNode.parentNode.removeTab(this);\\n-      ]]>\\n-      </handler>\\n       <handler event=\\\"mousedown\\\" button=\\\"0\\\" phase=\\\"capturing\\\">\\n       <![CDATA[\\n         if (this.mOverCloseButton)\\ndiff --git a/browser/themes/pinstripe/browser/tabbrowser/tabbrowserBindings.xml b/browser/themes/pinstripe/browser/tabbrowser/tabbrowserBindings.xml\\nindex 4d7a60c..0833cd6 100644\\n--- a/browser/themes/pinstripe/browser/tabbrowser/tabbrowserBindings.xml\\n+++ b/browser/themes/pinstripe/browser/tabbrowser/tabbrowserBindings.xml\\n@@ -63,9 +63,7 @@\\n               <children/>\\n             </xul:arrowscrollbox>\\n             <xul:hbox class=\\\"tabs-closebutton-box\\\" align=\\\"center\\\" pack=\\\"end\\\" anonid=\\\"tabstrip-closebutton\\\">\\n-              <xul:toolbarbutton ondblclick=\\\"event.stopPropagation();\\\"\\n-                           class=\\\"close-button tabs-closebutton\\\"\\n-                           oncommand=\\\"this.parentNode.parentNode.parentNode.parentNode.parentNode.removeCurrentTab()\\\"/>\\n+              <xul:toolbarbutton class=\\\"close-button tabs-closebutton\\\"/>\\n             </xul:hbox>\\n           </xul:hbox>\\n           <xul:spacer class=\\\"tabs-bottom-spacer\\\"/>\\n\""}