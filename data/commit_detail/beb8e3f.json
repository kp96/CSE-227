{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basbeb8e3f\""},"diff":"\"beb8e3f Bug 392840: Get rid of nsCSSScanner::Unread. r+sr=bzbarsky, r+a=dbaron\\ndiff --git a/layout/style/nsCSSScanner.cpp b/layout/style/nsCSSScanner.cpp\\nindex 1b624d6..d0dec73 100644\\n--- a/layout/style/nsCSSScanner.cpp\\n+++ b/layout/style/nsCSSScanner.cpp\\n@@ -527,13 +527,6 @@ PRInt32 nsCSSScanner::Peek(nsresult& aErrorCode)\\n   return PRInt32(mPushback[mPushbackCount - 1]);\\n }\\n \\n-void nsCSSScanner::Unread()\\n-{\\n-  NS_PRECONDITION((mLastRead >= 0), \\\"double pushback\\\");\\n-  Pushback(PRUnichar(mLastRead));\\n-  mLastRead = -1;\\n-}\\n-\\n void nsCSSScanner::Pushback(PRUnichar aChar)\\n {\\n   if (mPushbackCount == mPushbackSize) { // grow buffer\\n@@ -560,7 +553,7 @@ PRBool nsCSSScanner::LookAhead(nsresult& aErrorCode, PRUnichar aChar)\\n   if (ch == aChar) {\\n     return PR_TRUE;\\n   }\\n-  Unread();\\n+  Pushback(ch);\\n   return PR_FALSE;\\n }\\n \\n@@ -576,7 +569,7 @@ PRBool nsCSSScanner::EatWhiteSpace(nsresult& aErrorCode)\\n       eaten = PR_TRUE;\\n       continue;\\n     }\\n-    Unread();\\n+    Pushback(ch);\\n     break;\\n   }\\n   return eaten;\\n@@ -598,7 +591,7 @@ PRBool nsCSSScanner::EatNewline(nsresult& aErrorCode)\\n   } else if (ch == '\\\\n') {\\n     eaten = PR_TRUE;\\n   } else {\\n-    Unread();\\n+    Pushback(ch);\\n   }\\n   return eaten;\\n }\\n@@ -820,7 +813,7 @@ PRBool nsCSSScanner::NextURL(nsresult& aErrorCode, nsCSSToken& aToken)\\n         // \\\")\\\". This is an invalid url spec.\\n         ok = PR_FALSE;\\n       } else if (ch == ')') {\\n-        Unread();\\n+        Pushback(ch);\\n         // All done\\n         break;\\n       } else {\\n@@ -858,7 +851,7 @@ nsCSSScanner::ParseAndAppendEscape(nsresult& aErrorCode, nsString& aOutput)\\n         break;\\n       }\\n       if (ch >= 256 || (lexTable[ch] & (IS_HEX_DIGIT | IS_WHITESPACE)) == 0) {\\n-        Unread();\\n+        Pushback(ch);\\n         break;\\n       } else if ((lexTable[ch] & IS_HEX_DIGIT) != 0) {\\n         if ((lexTable[ch] & IS_DIGIT) != 0) {\\n@@ -936,7 +929,7 @@ PRBool nsCSSScanner::GatherIdent(nsresult& aErrorCode, PRInt32 aChar,\\n     } else if ((aChar > 255) || ((gLexTable[aChar] & IS_IDENT) != 0)) {\\n       aIdent.Append(PRUnichar(aChar));\\n     } else {\\n-      Unread();\\n+      Pushback(aChar);\\n       break;\\n     }\\n   }\\n@@ -963,7 +956,7 @@ PRBool nsCSSScanner::ParseRef(nsresult& aErrorCode,\\n   }\\n \\n   // No ident chars after the '#'.  Just unread |ch| and get out of here.\\n-  Unread();\\n+  Pushback(ch);\\n   return PR_TRUE;\\n }\\n \\n@@ -1039,7 +1032,7 @@ PRBool nsCSSScanner::ParseNumber(nsresult& aErrorCode, PRInt32 c,\\n       ident.SetLength(0);\\n     } else {\\n       // Put back character that stopped numeric scan\\n-      Unread();\\n+      Pushback(c);\\n       if (!gotDot) {\\n         aToken.mInteger = ident.ToInteger(&ec);\\n         aToken.mIntegerValid = PR_TRUE;\\ndiff --git a/layout/style/nsCSSScanner.h b/layout/style/nsCSSScanner.h\\nindex 1efe2b7..12fb1b7 100644\\n--- a/layout/style/nsCSSScanner.h\\n+++ b/layout/style/nsCSSScanner.h\\n@@ -200,7 +200,6 @@ class nsCSSScanner {\\n protected:\\n   PRInt32 Read(nsresult& aErrorCode);\\n   PRInt32 Peek(nsresult& aErrorCode);\\n-  void Unread();\\n   void Pushback(PRUnichar aChar);\\n   PRBool LookAhead(nsresult& aErrorCode, PRUnichar aChar);\\n   PRBool EatWhiteSpace(nsresult& aErrorCode);\\n\""}