{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basbd6f8f1\""},"diff":"\"bd6f8f1 Because of interactions between the XPCOM dirserviceprovider and the nsXREDirserviceProvider we were loading/registering components in appdir/components twice. Stop that. Followup from bug 392251\\ndiff --git a/toolkit/xre/nsXREDirProvider.cpp b/toolkit/xre/nsXREDirProvider.cpp\\nindex 50653d2..b2255b0 100644\\n--- a/toolkit/xre/nsXREDirProvider.cpp\\n+++ b/toolkit/xre/nsXREDirProvider.cpp\\n@@ -424,6 +424,27 @@ LoadPlatformDirectory(nsIFile* aBundleDirectory,\\n }\\n \\n static void\\n+LoadAppDirIntoArray(nsIFile* aXULAppDir,\\n+                    const char *const *aAppendList,\\n+                    nsCOMArray<nsIFile>& aDirectories)\\n+{\\n+  if (!aXULAppDir)\\n+    return;\\n+\\n+  nsCOMPtr<nsIFile> subdir;\\n+  aXULAppDir->Clone(getter_AddRefs(subdir));\\n+  if (!subdir)\\n+    return;\\n+\\n+  for (; *aAppendList; ++aAppendList)\\n+    subdir->AppendNative(nsDependentCString(*aAppendList));\\n+\\n+  PRBool exists;\\n+  if (NS_SUCCEEDED(subdir->Exists(&exists)) && exists)\\n+    aDirectories.AppendObject(subdir);\\n+}\\n+\\n+static void\\n LoadDirsIntoArray(nsCOMArray<nsIFile>& aSourceDirs,\\n                   const char *const* aAppendList,\\n                   nsCOMArray<nsIFile>& aDirectories)\\n@@ -524,7 +545,6 @@ nsXREDirProvider::LoadBundleDirectories()\\n \\n   // first load distribution/bundles\\n   if (mXULAppDir) {\\n-    mAppBundleDirectories.AppendObject(mXULAppDir);\\n     LoadPlatformDirectory(mXULAppDir, mAppBundleDirectories);\\n \\n #ifdef LOAD_DISTRO_BUNDLES\\n@@ -593,6 +613,21 @@ nsXREDirProvider::LoadAppBundleDirs()\\n \\n static const char *const kAppendPrefDir[] = { \\\"defaults\\\", \\\"preferences\\\", nsnull };\\n \\n+#ifdef DEBUG_bsmedberg\\n+static void\\n+DumpFileArray(const char *key,\\n+              nsCOMArray<nsIFile> dirs)\\n+{\\n+  fprintf(stderr, \\\"nsXREDirProvider::GetFilesInternal(%s)\\\\n\\\", key);\\n+\\n+  nsCAutoString path;\\n+  for (PRInt32 i = 0; i < dirs.Count(); ++i) {\\n+    dirs[i]->GetNativePath(path);\\n+    fprintf(stderr, \\\"  %s\\\\n\\\", path.get());\\n+  }\\n+}\\n+#endif // DEBUG_bsmedberg\\n+\\n nsresult\\n nsXREDirProvider::GetFilesInternal(const char* aProperty,\\n                                    nsISimpleEnumerator** aResult)\\n@@ -629,6 +664,8 @@ nsXREDirProvider::GetFilesInternal(const char* aProperty,\\n     nsCOMArray<nsIFile> directories;\\n \\n     LoadBundleDirectories();\\n+\\n+    LoadAppDirIntoArray(mXULAppDir, kAppendPrefDir, directories);\\n     LoadDirsIntoArray(mAppBundleDirectories,\\n                       kAppendPrefDir, directories);\\n \\n@@ -696,6 +733,9 @@ nsXREDirProvider::GetFilesInternal(const char* aProperty,\\n     static const char *const kAppendChromeDir[] = { \\\"chrome\\\", nsnull };\\n     nsCOMArray<nsIFile> directories;\\n     LoadBundleDirectories();\\n+    LoadAppDirIntoArray(mXULAppDir,\\n+                        kAppendChromeDir,\\n+                        directories);\\n     LoadDirsIntoArray(mAppBundleDirectories,\\n                       kAppendChromeDir,\\n                       directories);\\n\""}