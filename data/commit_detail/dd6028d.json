{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basdd6028d\""},"diff":"\"dd6028d Yield to main loop during reconciliation, so as to not block the UI.  Fix a broken check when changing the guid of an item.\\ndiff --git a/services/sync/nsBookmarksSyncService.js b/services/sync/nsBookmarksSyncService.js\\nindex 1d6d8d7..e768d4a 100644\\n--- a/services/sync/nsBookmarksSyncService.js\\n+++ b/services/sync/nsBookmarksSyncService.js\\n@@ -76,6 +76,9 @@ BookmarksSyncService.prototype = {\\n     return this.__os;\\n   },\\n \\n+  // Timer object for yielding to the main loop\\n+  _timer: null,\\n+\\n   // DAVCollection object\\n   _dav: null,\\n \\n@@ -89,7 +92,6 @@ BookmarksSyncService.prototype = {\\n   },\\n \\n   _init: function BSS__init() {\\n-\\n     var serverUrl = \\\"http://sync.server.url/\\\";\\n     try {\\n       var branch = Cc[\\\"@mozilla.org/preferences-service;1\\\"].\\n@@ -209,7 +211,7 @@ BookmarksSyncService.prototype = {\\n         (b.parents.indexOf(a.guid) >= 0) &&\\n         a.action == \\\"remove\\\")\\n       return true;\\n-    if ((a.guid == b.guid) && a != b)\\n+    if ((a.guid == b.guid) && !this._deepEquals(a, b))\\n       return true;\\n // FIXME - how else can two commands conflict?\\n     return false;\\n@@ -274,6 +276,9 @@ BookmarksSyncService.prototype = {\\n     return true;\\n   },\\n \\n+  // When we change the guid of a local item (because we detect it as\\n+  // being the same item as a remote one), we need to fix any other\\n+  // local items that have it as their parent\\n   _fixParents: function BSS__fixParents(list, oldGuid, newGuid) {\\n     for (let i = 0; i < list.length; i++) {\\n       if (!list[i])\\n@@ -287,11 +292,23 @@ BookmarksSyncService.prototype = {\\n     }\\n   },\\n \\n-  _reconcile: function BSS__reconcile(listA, listB) {\\n+  _reconcile: function BSS__reconcile(onComplete, commandLists) {\\n+    let generator = yield;\\n+    this._timer = Cc[\\\"@mozilla.org/timer;1\\\"].createInstance(Ci.nsITimer);\\n+    let callback = bind2(this,\\n+                         function(event) { handleEvent(generator, event); });\\n+    let listener = new EventListener(callback);\\n+\\n+    let [listA, listB] = commandLists;\\n     let propagations = [[], []];\\n     let conflicts = [[], []];\\n \\n     for (let i = 0; i < listA.length; i++) {\\n+\\n+      // Yield to main loop\\n+      this._timer.initWithCallback(listener, 0, this._timer.TYPE_ONE_SHOT);\\n+      yield;\\n+\\n       for (let j = 0; j < listB.length; j++) {\\n         if (this._deepEquals(listA[i], listB[j])) {\\n           delete listA[i];\\n@@ -310,6 +327,11 @@ BookmarksSyncService.prototype = {\\n     listB = listB.filter(function(elt) { return elt });\\n \\n     for (let i = 0; i < listA.length; i++) {\\n+\\n+      // Yield to main loop\\n+      this._timer.initWithCallback(listener, 0, this._timer.TYPE_ONE_SHOT);\\n+      yield;\\n+\\n       for (let j = 0; j < listB.length; j++) {\\n         if (this._conflicts(listA[i], listB[j]) ||\\n             this._conflicts(listB[j], listA[i])) {\\n@@ -334,7 +356,9 @@ BookmarksSyncService.prototype = {\\n         function(elt) { return elt.guid == listB[j].guid }))\\n         propagations[0].push(listB[j]);\\n     }\\n-    return {propagations: propagations, conflicts: conflicts};\\n+\\n+    this._timer = null;\\n+    onComplete({propagations: propagations, conflicts: conflicts});\\n   },\\n \\n   _applyCommandsToObj: function BSS__applyCommandsToObj(commands, obj) {\\n@@ -449,7 +473,7 @@ BookmarksSyncService.prototype = {\\n     for (let key in command.data) {\\n       switch (key) {\\n       case \\\"guid\\\":\\n-        var existing = this._bms.getItemIdForGUID(command.guid);\\n+        var existing = this._bms.getItemIdForGUID(command.data.guid);\\n         if (existing == -1)\\n           this._bms.setItemGUID(itemId, command.data.guid);\\n         else\\n@@ -544,7 +568,9 @@ BookmarksSyncService.prototype = {\\n       //}\\n \\n       LOG(\\\"Reconciling updates\\\");\\n-      var ret = this._reconcile(localUpdates, server['updates']);\\n+      asyncRun(bind2(this, this._reconcile),\\n+               handlers['complete'], [localUpdates, server.updates]);\\n+      let ret = yield;\\n       propagations = ret.propagations;\\n       conflicts = ret.conflicts;\\n \\n@@ -828,8 +854,23 @@ function EventListener(handler) {\\n   this._handler = handler;\\n }\\n EventListener.prototype = {\\n+  QueryInterface: function(iid) {\\n+    if (iid.Equals(Components.interfaces.nsITimerCallback) ||\\n+        iid.Equals(Components.interfaces.nsISupports))\\n+      return this;\\n+    throw Components.results.NS_ERROR_NO_INTERFACE;\\n+  },\\n+\\n+  // DOM event listener\\n+\\n   handleEvent: function EL_handleEvent(event) {\\n     this._handler(event);\\n+  },\\n+\\n+  // nsITimerCallback\\n+\\n+  notify: function EL_notify(timer) {\\n+    this._handler(timer);\\n   }\\n };\\n \\n@@ -1003,7 +1044,7 @@ DAVCollection.prototype = {\\n     LOG(\\\"unlock failed (\\\" + event.target.status + \\\"):\\\\n\\\" + event.target.responseText + \\\"\\\\n\\\");\\n     if (this._lockHandlers && this._lockHandlers.error)\\n       this._lockHandlers.error(event);\\n-  },\\n+  }\\n };\\n \\n function makeFile(path) {\\n\""}