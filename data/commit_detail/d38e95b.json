{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basd38e95b\""},"diff":"\"d38e95b Bug 397597. Enable native platform linebreaking for Tibetan and Lao. r=masayuki,a=dbaron\\ndiff --git a/content/base/public/nsLineBreaker.h b/content/base/public/nsLineBreaker.h\\nindex a9503a5..af2aa36 100644\\n--- a/content/base/public/nsLineBreaker.h\\n+++ b/content/base/public/nsLineBreaker.h\\n@@ -94,7 +94,7 @@ public:\\n   static inline PRBool IsComplexChar(PRUnichar u)\\n   {\\n     return IsComplexASCIIChar(u) ||\\n-           (0x0e01 <= u && u <= 0x0edf) || // Thai & Lao\\n+           NS_NeedsPlatformNativeHandling(u) ||\\n            (0x1100 <= u && u <= 0x11ff) || // Hangul Jamo\\n            (0x2000 <= u && u <= 0x21ff) || // Punctuations and Symbols\\n            (0x2e80 <= u && u <= 0xd7ff) || // several CJK blocks\\ndiff --git a/intl/lwbrk/public/nsILineBreaker.h b/intl/lwbrk/public/nsILineBreaker.h\\nindex 5430962..db4696c 100644\\n--- a/intl/lwbrk/public/nsILineBreaker.h\\n+++ b/intl/lwbrk/public/nsILineBreaker.h\\n@@ -86,4 +86,10 @@ NS_IsSpace(PRUnichar u)\\n          u == 0x3000;                    // IDEOGRAPHIC SPACE\\n }\\n \\n+static inline PRBool\\n+NS_NeedsPlatformNativeHandling(PRUnichar aChar)\\n+{\\n+  return (0x0e01 <= aChar && aChar <= 0x0fff); // Thai, Lao, Tibetan\\n+}\\n+\\n #endif  /* nsILineBreaker_h__ */\\ndiff --git a/intl/lwbrk/src/nsJISx4501LineBreaker.cpp b/intl/lwbrk/src/nsJISx4501LineBreaker.cpp\\nindex 1e279da..7ef2cad 100644\\n--- a/intl/lwbrk/src/nsJISx4501LineBreaker.cpp\\n+++ b/intl/lwbrk/src/nsJISx4501LineBreaker.cpp\\n@@ -415,12 +415,6 @@ IS_CJK_CHAR(PRUnichar u)\\n           (0xff00 <= (u) && (u) <= 0xffef) );\\n }\\n \\n-static inline int\\n-IS_COMPLEX(PRUnichar u)\\n-{\\n-  return (0x0e01 <= (u) && (u) <= 0x0e5b);\\n-}\\n-\\n static inline PRBool\\n IS_NONBREAKABLE_SPACE(PRUnichar u)\\n {\\n@@ -447,6 +441,8 @@ GetClass(PRUnichar u)\\n    // Handle 3 range table first\\n    if (0x0000 == h) {\\n      c = GETCLASSFROMTABLE(gLBClass00, l);\\n+   } else if (NS_NeedsPlatformNativeHandling(u)) {\\n+     c = CLASS_COMPLEX;\\n    } else if (0x0E00 == h) {\\n      c = GETCLASSFROMTABLE(gLBClass0E, l);\\n    } else if (0x2000 == h) {\\n@@ -738,12 +734,12 @@ nsJISx4051LineBreaker::WordMove(const PRUnichar* aText, PRUint32 aLen,\\n   PRInt32 begin, end;\\n \\n   for (begin = aPos; begin > 0 && !NS_IsSpace(aText[begin - 1]); --begin) {\\n-    if (IS_CJK_CHAR(aText[begin]) || IS_COMPLEX(aText[begin])) {\\n+    if (IS_CJK_CHAR(aText[begin]) || NS_NeedsPlatformNativeHandling(aText[begin])) {\\n       textNeedsJISx4051 = PR_TRUE;\\n     }\\n   }\\n   for (end = aPos + 1; end < PRInt32(aLen) && !NS_IsSpace(aText[end]); ++end) {\\n-    if (IS_CJK_CHAR(aText[end]) || IS_COMPLEX(aText[end])) {\\n+    if (IS_CJK_CHAR(aText[end]) || NS_NeedsPlatformNativeHandling(aText[end])) {\\n       textNeedsJISx4051 = PR_TRUE;\\n     }\\n   }\\n\""}