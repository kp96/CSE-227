{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5083add\""},"diff":"\"5083add Bug 175124 - improve open in tabs behaviour (see comment 26), this also enables 'Open All in Tabs' for host nodes in the history sidebar (bug 369919) and for saved searches (queries), patch by mconnor and me.\\ndiff --git a/browser/base/content/browser-places.js b/browser/base/content/browser-places.js\\nindex a7fd4bd..3e44474 100644\\n--- a/browser/base/content/browser-places.js\\n+++ b/browser/base/content/browser-places.js\\n@@ -387,10 +387,10 @@ var BookmarksEventHandler = {\\n     var view = PlacesUtils.getViewForNode(target);\\n     if (PlacesUtils.nodeIsFolder(view.selectedNode)) {\\n       // Don't open the root folder in tabs when the empty area on the toolbar\\n-      // is middle-clicked or when a non-bookmark item in a bookmarks menupopup\\n-      // middle-clicked.\\n+      // is middle-clicked or when a non-bookmark item except for Open in Tabs)\\n+      // in a bookmarks menupopup is middle-clicked.\\n       if (!view.controller.rootNodeIsSelected())\\n-        view.controller.openLinksInTabs();\\n+        view.controller.openSelectionInTabs(aEvent);\\n     }\\n     else\\n       this.onCommand(aEvent);\\n@@ -430,12 +430,10 @@ var BookmarksEventHandler = {\\n     // load all the menuitems in tabs.\\n \\n     var target = aEvent.originalTarget;\\n-    if (target.hasAttribute(\\\"openInTabs\\\"))\\n-      PlacesUtils.getViewForNode(target).controller.openLinksInTabs();\\n-    else if (target.hasAttribute(\\\"siteURI\\\"))\\n+    if (target.hasAttribute(\\\"siteURI\\\"))\\n       openUILink(target.getAttribute(\\\"siteURI\\\"), aEvent);\\n     // If this is a normal bookmark, just load the bookmark's URI.\\n-    else\\n+    else if (!target.hasAttribute(\\\"openInTabs\\\"))\\n       PlacesUtils.getViewForNode(target)\\n                  .controller\\n                  .openSelectedNodeWithEvent(aEvent);\\n@@ -498,6 +496,9 @@ var BookmarksEventHandler = {\\n         if (hasMultipleEntries) {\\n           var openInTabs = document.createElement(\\\"menuitem\\\");\\n           openInTabs.setAttribute(\\\"openInTabs\\\", \\\"true\\\");\\n+          openInTabs.setAttribute(\\\"onclick\\\", \\\"checkForMiddleClick(this, event)\\\");\\n+          openInTabs.setAttribute(\\\"oncommand\\\",\\n+                                  \\\"PlacesUtils.openContainerNodeInTabs(this.parentNode.getResultNode(), event);\\\");\\n           openInTabs.setAttribute(\\\"label\\\",\\n                      gNavigatorBundle.getString(\\\"menuOpenAllInTabs.label\\\"));\\n           target.appendChild(openInTabs);\\ndiff --git a/browser/components/places/content/controller.js b/browser/components/places/content/controller.js\\nindex d422277..a4e35fa 100755\\n--- a/browser/components/places/content/controller.js\\n+++ b/browser/components/places/content/controller.js\\n@@ -119,34 +119,6 @@ PlacesController.prototype = {\\n     case \\\"placesCmd_open:window\\\":\\n     case \\\"placesCmd_open:tab\\\":\\n       return this._view.selectedURINode;\\n-    case \\\"placesCmd_open:tabs\\\":\\n-      // We can open multiple links if the current selection is either:\\n-      //  a) a single folder which contains at least one link\\n-      //  b) multiple links\\n-      var node = this._view.selectedNode;\\n-      if (!node)\\n-        return false;\\n-\\n-      if (this._view.hasSingleSelection && PlacesUtils.nodeIsFolder(node)) {\\n-        var contents = PlacesUtils.getFolderContents(node.itemId, false, false).root;\\n-        for (var i = 0; i < contents.childCount; ++i) {\\n-          var child = contents.getChild(i);\\n-          if (PlacesUtils.nodeIsURI(child))\\n-            return true;\\n-        }\\n-      }\\n-      else {\\n-        var oneLinkIsSelected = false;\\n-        var nodes = this._view.getSelectionNodes();\\n-        for (var i = 0; i < nodes.length; ++i) {\\n-          if (PlacesUtils.nodeIsURI(nodes[i])) {\\n-            if (oneLinkIsSelected)\\n-              return true;\\n-            oneLinkIsSelected = true;\\n-          }\\n-        }\\n-      }\\n-      return false;\\n     case \\\"placesCmd_new:folder\\\":\\n     case \\\"placesCmd_new:livemark\\\":\\n       return this._canInsert() &&\\n@@ -275,9 +247,6 @@ PlacesController.prototype = {\\n     case \\\"placesCmd_open:tab\\\":\\n       this.openSelectedNodeIn(\\\"tab\\\");\\n       break;\\n-    case \\\"placesCmd_open:tabs\\\":\\n-      this.openLinksInTabs();\\n-      break;\\n     case \\\"placesCmd_new:folder\\\":\\n       this.newItem(\\\"folder\\\");\\n       break;\\n@@ -670,6 +639,21 @@ PlacesController.prototype = {\\n       }\\n     }\\n \\n+    // Set Open Folder/Links In Tabs items enabled state if they're visible\\n+    if (anyVisible) {\\n+      var openContainerInTabsItem = document.getElementById(\\\"placesContext_openContainer:tabs\\\");\\n+      if (!openContainerInTabsItem.hidden) {\\n+        openContainerInTabsItem.disabled =\\n+          PlacesUtils.getURLsForContainerNode(this._view.selectedNode)\\n+                     .length == 0;\\n+      }\\n+      else {\\n+        // see selectiontype rule in the overlay\\n+        var openLinksInTabsItem = document.getElementById(\\\"placesContext_openLinks:tabs\\\");\\n+        openLinksInTabsItem.disabled = openLinksInTabsItem.hidden;\\n+      }\\n+    }\\n+\\n     return anyVisible;\\n   },\\n \\n@@ -829,103 +813,13 @@ PlacesController.prototype = {\\n \\n   /**\\n    * Opens the links in the selected folder, or the selected links in new tabs. \\n-   * XXXben this needs to handle the case when there are no open browser windows\\n-   * XXXben this function is really long, should be split apart. The codepaths \\n-   *        seem different between load folder in tabs and load selection in\\n-   *        tabs, too. \\n-   * See: https://bugzilla.mozilla.org/show_bug.cgi?id=331908\\n    */\\n-  openLinksInTabs: function PC_openLinksInTabs() {\\n+  openSelectionInTabs: function PC_openLinksInTabs(aEvent) {\\n     var node = this._view.selectedNode;\\n-    if (this._view.hasSingleSelection && PlacesUtils.nodeIsFolder(node)) {\\n-      // Check prefs to see whether to open over existing tabs.\\n-      var doReplace = getBoolPref(\\\"browser.tabs.loadFolderAndReplace\\\");\\n-      var loadInBackground = getBoolPref(\\\"browser.tabs.loadBookmarksInBackground\\\");\\n-      // Get the start index to open tabs at\\n-\\n-      // XXX todo: no-browser-window-case\\n-      var browserWindow = getTopWin();\\n-      var browser = browserWindow.getBrowser();\\n-      var tabPanels = browser.browsers;\\n-      var tabCount = tabPanels.length;\\n-      var firstIndex;\\n-      // If browser.tabs.loadFolderAndReplace pref is set, load over all the\\n-      // tabs starting with the first one.\\n-      if (doReplace)\\n-        firstIndex = 0;\\n-      // If the pref is not set, only load over the blank tabs at the end, if any.\\n-      else {\\n-        for (firstIndex = tabCount - 1; firstIndex >= 0; --firstIndex) {\\n-          var br = browser.browsers[firstIndex];\\n-          if (br.currentURI.spec != \\\"about:blank\\\" ||\\n-              br.webProgress.isLoadingDocument)\\n-            break;\\n-        }\\n-        ++firstIndex;\\n-      }\\n-\\n-      // Open each uri in the folder in a tab.\\n-      var index = firstIndex;\\n-      var urlsToOpen = [];\\n-      var contents = PlacesUtils.getFolderContents(node.itemId, false, false).root;\\n-      for (var i = 0; i < contents.childCount; ++i) {\\n-        var child = contents.getChild(i);\\n-        if (PlacesUtils.nodeIsURI(child))\\n-          urlsToOpen.push(child.uri);\\n-      }\\n-\\n-      if (!this._confirmOpenTabs(urlsToOpen.length))\\n-        return;\\n-\\n-      for (var i = 0; i < urlsToOpen.length; ++i) {\\n-        if (index < tabCount)\\n-          tabPanels[index].loadURI(urlsToOpen[i]);\\n-        // Otherwise, create a new tab to load the uri into.\\n-        else\\n-          browser.addTab(urlsToOpen[i]);\\n-        ++index;\\n-      }\\n-\\n-      // If no bookmarks were loaded, just bail.\\n-      if (index == firstIndex)\\n-        return;\\n-\\n-      // focus the first tab if prefs say to\\n-      if (!loadInBackground || doReplace) {\\n-        // Select the first tab in the group.\\n-        // Set newly selected tab after quick timeout, otherwise hideous focus problems\\n-        // can occur because new presshell is not ready to handle events\\n-        function selectNewForegroundTab(browser, tab) {\\n-          browser.selectedTab = tab;\\n-        }\\n-        var tabs = browser.mTabContainer.childNodes;\\n-        setTimeout(selectNewForegroundTab, 0, browser, tabs[firstIndex]);\\n-      }\\n-\\n-      // Close any remaining open tabs that are left over.\\n-      // (Always skipped when we append tabs)\\n-      for (var i = tabCount - 1; i >= index; --i)\\n-        browser.removeTab(tabs[i]);\\n-\\n-      // and focus the content\\n-      browserWindow.content.focus();\\n-    }\\n-    else {\\n-      var urlsToOpen = [];\\n-      var nodes = this._view.getSelectionNodes();\\n-\\n-      for (var i = 0; i < nodes.length; ++i) {\\n-        if (PlacesUtils.nodeIsURI(nodes[i]))\\n-          urlsToOpen.push(nodes[i].uri);\\n-      }\\n-\\n-      if (!this._confirmOpenTabs(urlsToOpen.length))\\n-        return;\\n-\\n-      for (var i = 0; i < urlsToOpen.length; ++i) {\\n-        getTopWin().openNewTabWith(urlsToOpen[i], null, null);\\n-      }\\n-    }\\n+    if (this._view.hasSingleSelection && PlacesUtils.nodeIsContainer(node))\\n+      PlacesUtils.openContainerNodeInTabs(this._view.selectedNode, aEvent);\\n+    else\\n+      PlacesUtils.openURINodesInTabs(this._view.getSelectionNodes(), aEvent);\\n   },\\n \\n   /**\\n@@ -1488,7 +1382,6 @@ function goUpdatePlacesCommands() {\\n   goUpdateCommand(\\\"placesCmd_open\\\");\\n   goUpdateCommand(\\\"placesCmd_open:window\\\");\\n   goUpdateCommand(\\\"placesCmd_open:tab\\\");\\n-  goUpdateCommand(\\\"placesCmd_open:tabs\\\");\\n   goUpdateCommand(\\\"placesCmd_new:folder\\\");\\n   goUpdateCommand(\\\"placesCmd_new:bookmark\\\");\\n   goUpdateCommand(\\\"placesCmd_new:livemark\\\");\\ndiff --git a/browser/components/places/content/placesOverlay.xul b/browser/components/places/content/placesOverlay.xul\\nindex 715dbe7..18c5be4 100644\\n--- a/browser/components/places/content/placesOverlay.xul\\n+++ b/browser/components/places/content/placesOverlay.xul\\n@@ -71,8 +71,7 @@\\n              oncommand=\\\"goDoCommand('placesCmd_open:window');\\\"/>\\n     <command id=\\\"placesCmd_open:tab\\\"\\n              oncommand=\\\"goDoCommand('placesCmd_open:tab');\\\"/>\\n-    <command id=\\\"placesCmd_open:tabs\\\"\\n-             oncommand=\\\"goDoCommand('placesCmd_open:tabs');\\\"/>\\n+\\n     <command id=\\\"placesCmd_new:bookmark\\\"\\n              oncommand=\\\"goDoCommand('placesCmd_new:bookmark');\\\"/>\\n     <command id=\\\"placesCmd_new:livemark\\\"\\n@@ -121,14 +120,18 @@\\n               accesskey=\\\"&cmd.open_tab.accesskey;\\\"\\n               selectiontype=\\\"single\\\"\\n               selection=\\\"link\\\"/>\\n-    <menuitem id=\\\"placesContext_openFolder:tabs\\\"\\n-              command=\\\"placesCmd_open:tabs\\\"\\n+    <menuitem id=\\\"placesContext_openContainer:tabs\\\"\\n+              oncommand=\\\"var view = PlacesUtils.getViewForNode(document.popupNode);\\n+                         view.controller.openSelectionInTabs(event);\\\"\\n+              onclick=\\\"checkForMiddleClick(this, event);\\\"\\n               label=\\\"&cmd.open_all_in_tabs.label;\\\"\\n               accesskey=\\\"&cmd.open_all_in_tabs.accesskey;\\\"\\n               selectiontype=\\\"single\\\"\\n-              selection=\\\"folder\\\"/>\\n+              selection=\\\"folder|host|query\\\"/>\\n     <menuitem id=\\\"placesContext_openLinks:tabs\\\"\\n-              command=\\\"placesCmd_open:tabs\\\"\\n+              oncommand=\\\"var view = PlacesUtils.getViewForNode(document.popupNode);\\n+                         view.controller.openSelectionInTabs(event);\\\"\\n+              onclick=\\\"checkForMiddleClick(this, event);\\\"\\n               label=\\\"&cmd.open_all_in_tabs.label;\\\"\\n               accesskey=\\\"&cmd.open_all_in_tabs.accesskey;\\\"\\n               selectiontype=\\\"multiple\\\"\\ndiff --git a/browser/components/places/content/utils.js b/browser/components/places/content/utils.js\\nindex 0bd948d..91ea449 100644\\n--- a/browser/components/places/content/utils.js\\n+++ b/browser/components/places/content/utils.js\\n@@ -1235,7 +1235,7 @@ var PlacesUtils = {\\n    *        a DOM node\\n    * @return the closet ancestor places view if exists, null otherwsie.\\n    */\\n-  getViewForNode: function(aNode) {\\n+  getViewForNode: function PU_getViewForNode(aNode) {\\n     var node = aNode;\\n     while (node) {\\n       // XXXmano: Use QueryInterface(nsIPlacesView) once we implement it...\\n@@ -1511,6 +1511,107 @@ var PlacesUtils = {\\n         return bk;\\n     }\\n     return -1;\\n+  },\\n+\\n+  getURLsForContainerNode: function PU_getURLsForContainerNode(aNode) {\\n+    let urls = [];\\n+    if (this.nodeIsFolder(aNode) && asQuery(aNode).queryOptions.excludeItems) {\\n+      // grab manually\\n+      let contents = this.getFolderContents(node.itemId, false, false).root;\\n+      for (let i = 0; i < contents.childCount; ++i) {\\n+        let child = contents.getChild(i);\\n+        if (this.nodeIsURI(child))\\n+          urls.push(node.uri);\\n+      }\\n+    }\\n+    else {\\n+      let wasOpen = aNode.containerOpen;\\n+      if (!wasOpen)\\n+        aNode.containerOpen = true;\\n+      for (let i = 0; i < aNode.childCount; ++i) {\\n+        let child = aNode.getChild(i);\\n+        if (this.nodeIsURI(child))\\n+          urls.push(child.uri);\\n+      }\\n+      aNode.containerOpen = wasOpen;\\n+    }\\n+\\n+    return urls;\\n+  },\\n+\\n+  /**\\n+   * Gives the user a chance to cancel loading lots of tabs at once\\n+   */\\n+  _confirmOpenInTabs: function PU__confirmOpenInTabs(numTabsToOpen) {\\n+    var pref = Cc[\\\"@mozilla.org/preferences-service;1\\\"].\\n+               getService(Ci.nsIPrefBranch);\\n+\\n+    const kWarnOnOpenPref = \\\"browser.tabs.warnOnOpen\\\";\\n+    var reallyOpen = true;\\n+    if (pref.getBoolPref(kWarnOnOpenPref)) {\\n+      if (numTabsToOpen >= pref.getIntPref(\\\"browser.tabs.maxOpenBeforeWarn\\\")) {\\n+        var promptService = Cc[\\\"@mozilla.org/embedcomp/prompt-service;1\\\"].\\n+                            getService(Ci.nsIPromptService);\\n+\\n+        // default to true: if it were false, we wouldn't get this far\\n+        var warnOnOpen = { value: true };\\n+\\n+        var messageKey = \\\"tabs.openWarningMultipleBranded\\\";\\n+        var openKey = \\\"tabs.openButtonMultiple\\\";\\n+        const BRANDING_BUNDLE_URI = \\\"chrome://branding/locale/brand.properties\\\";\\n+        var brandShortName = Cc[\\\"@mozilla.org/intl/stringbundle;1\\\"].\\n+                             getService(Ci.nsIStringBundleService).\\n+                             createBundle(BRANDING_BUNDLE_URI).\\n+                             GetStringFromName(\\\"brandShortName\\\");\\n+\\n+        var buttonPressed = promptService.confirmEx(window,\\n+          this.getString(\\\"tabs.openWarningTitle\\\"),\\n+          this.getFormattedString(messageKey, [numTabsToOpen, brandShortName]),\\n+          (promptService.BUTTON_TITLE_IS_STRING * promptService.BUTTON_POS_0)\\n+           + (promptService.BUTTON_TITLE_CANCEL * promptService.BUTTON_POS_1),\\n+          this.getString(openKey), null, null,\\n+          this.getFormattedString(\\\"tabs.openWarningPromptMeBranded\\\",\\n+                                  [brandShortName]), warnOnOpen);\\n+\\n+        reallyOpen = (buttonPressed == 0);\\n+        // don't set the pref unless they press OK and it's false\\n+        if (reallyOpen && !warnOnOpen.value)\\n+          pref.setBoolPref(kWarnOnOpenPref, false);\\n+      }\\n+    }\\n+    return reallyOpen;\\n+  },\\n+\\n+  _openTabset: function PU__openTabset(aURLs, aEvent) {\\n+    var browserWindow = getTopWin();\\n+    var where = browserWindow ?\\n+                whereToOpenLink(aEvent, false, true) : \\\"window\\\";\\n+    if (where == \\\"window\\\") {\\n+      window.openDialog(getBrowserURL(), \\\"_blank\\\",\\n+                        \\\"chrome,all,dialog=no\\\", aURLs.join(\\\"|\\\"));\\n+      return;\\n+    }\\n+\\n+    var loadInBackground = where == \\\"tabshifted\\\" ? true : false;\\n+    var replaceCurrentTab = where == \\\"tab\\\" ? false : true;\\n+    browserWindow.getBrowser().loadTabs(aURLs, loadInBackground,\\n+                                        replaceCurrentTab);\\n+  },\\n+\\n+  openContainerNodeInTabs: function PU_openContainerInTabs(aNode, aEvent) {\\n+    var urlsToOpen = this.getURLsForContainerNode(aNode);\\n+    if (!this._confirmOpenInTabs(urlsToOpen.length))\\n+      return;\\n+    this._openTabset(urlsToOpen, aEvent);\\n+  },\\n+\\n+  openURINodesInTabs: function PU_openURINodesInTabs(aNodes, aEvent) {\\n+    var urlsToOpen = [];\\n+    for (var i=0; i < aNodes.length; i++) {\\n+      if (this.nodeIsURI(aNodes[i]))\\n+        urlsToOpen.push(aNodes[i].uri);\\n+    }\\n+    this._openTabset(urlsToOpen, aEvent);\\n   }\\n };\\n \\n\""}