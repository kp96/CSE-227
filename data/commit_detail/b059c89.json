{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basb059c89\""},"diff":"\"b059c89 bug 388706. cache resolved fonts per language group. r=elif\\ndiff --git a/gfx/thebes/public/gfxWindowsPlatform.h b/gfx/thebes/public/gfxWindowsPlatform.h\\nindex 0783954..f628d8a 100644\\n--- a/gfx/thebes/public/gfxWindowsPlatform.h\\n+++ b/gfx/thebes/public/gfxWindowsPlatform.h\\n@@ -84,6 +84,9 @@ public:\\n     /* Find a FontEntry object that represents a font on your system given a name */\\n     FontEntry *FindFontEntry(const nsAString& aName);\\n \\n+    PRBool GetPrefFontEntries(const char *aLangGroup, nsTArray<nsRefPtr<FontEntry> > *array);\\n+    void SetPrefFontEntries(const char *aLangGroup, nsTArray<nsRefPtr<FontEntry> >& array);\\n+\\n private:\\n     void Init();\\n \\n@@ -109,10 +112,14 @@ private:\\n \\n     virtual cmsHPROFILE GetPlatformCMSOutputProfile();\\n \\n+    static int PR_CALLBACK PrefChangedCallback(const char*, void*);\\n+\\n     nsDataHashtable<nsStringHashKey, nsRefPtr<FontEntry> > mFonts;\\n     nsDataHashtable<nsStringHashKey, nsRefPtr<FontEntry> > mFontAliases;\\n     nsDataHashtable<nsStringHashKey, nsRefPtr<FontEntry> > mFontSubstitutes;\\n     nsStringArray mNonExistingFonts;\\n+\\n+    nsDataHashtable<nsCStringHashKey, nsTArray<nsRefPtr<FontEntry> > > mPrefFonts;\\n };\\n \\n #endif /* GFX_WINDOWS_PLATFORM_H */\\ndiff --git a/gfx/thebes/src/gfxWindowsFonts.cpp b/gfx/thebes/src/gfxWindowsFonts.cpp\\nindex 56e101b..1f6c729 100644\\n--- a/gfx/thebes/src/gfxWindowsFonts.cpp\\n+++ b/gfx/thebes/src/gfxWindowsFonts.cpp\\n@@ -1215,7 +1215,7 @@ public:\\n                 if (langGroup) {\\n                     PR_LOG(gFontLog, PR_LOG_DEBUG, (\\\" - Trying to find fonts for: %s (%s)\\\", langGroup, gScriptToText[primaryId].value));\\n \\n-                    nsTArray<nsRefPtr<FontEntry> > fonts;\\n+                    nsAutoTArray<nsRefPtr<FontEntry>, 5> fonts;\\n                     this->GetPrefFonts(langGroup, fonts);\\n                     selectedFont = WhichFontSupportsChar(fonts, ch);\\n                 }\\n@@ -1227,7 +1227,7 @@ public:\\n                     if (PR_LOG_TEST(gFontLog, PR_LOG_DEBUG))\\n                         PR_LOG(gFontLog, PR_LOG_DEBUG, (\\\" - Trying to find fonts for: CJK\\\"));\\n \\n-                    nsTArray<nsRefPtr<FontEntry> > fonts;\\n+                    nsAutoTArray<nsRefPtr<FontEntry>, 15> fonts;\\n                     this->GetCJKPrefFonts(fonts);\\n                     selectedFont = WhichFontSupportsChar(fonts, ch);\\n                 } else {\\n@@ -1235,7 +1235,7 @@ public:\\n                     if (langGroup) {\\n                         PR_LOG(gFontLog, PR_LOG_DEBUG, (\\\" - Trying to find fonts for: %s\\\", langGroup));\\n \\n-                        nsTArray<nsRefPtr<FontEntry> > fonts;\\n+                        nsAutoTArray<nsRefPtr<FontEntry>, 5> fonts;\\n                         this->GetPrefFonts(langGroup, fonts);\\n                         selectedFont = WhichFontSupportsChar(fonts, ch);\\n                     }\\n@@ -1346,13 +1346,19 @@ private:\\n \\n     void GetPrefFonts(const char *aLangGroup, nsTArray<nsRefPtr<FontEntry> >& array) {\\n         NS_ASSERTION(aLangGroup, \\\"aLangGroup is null\\\");\\n-        gfxPlatform *platform = gfxPlatform::GetPlatform();\\n-        nsString fonts;\\n-        platform->GetPrefFonts(aLangGroup, fonts);\\n-        if (fonts.IsEmpty())\\n-            return;\\n-        gfxFontGroup::ForEachFont(fonts, nsDependentCString(aLangGroup),\\n-                                  AddFontEntryToArray, &array);\\n+        gfxWindowsPlatform *platform = gfxWindowsPlatform::GetPlatform();\\n+        nsAutoTArray<nsRefPtr<FontEntry>, 5> fonts;\\n+        if (!platform->GetPrefFontEntries(aLangGroup, &fonts)) {\\n+            nsString fontString;\\n+            platform->GetPrefFonts(aLangGroup, fontString);\\n+            if (fontString.IsEmpty())\\n+                return;\\n+            gfxFontGroup::ForEachFont(fontString, nsDependentCString(aLangGroup),\\n+                                      AddFontEntryToArray, &fonts);\\n+\\n+            platform->SetPrefFontEntries(aLangGroup, fonts);\\n+        }\\n+        array.AppendElements(fonts);\\n     }\\n \\n     void GetCJKPrefFonts(nsTArray<nsRefPtr<FontEntry> >& array) {\\ndiff --git a/gfx/thebes/src/gfxWindowsPlatform.cpp b/gfx/thebes/src/gfxWindowsPlatform.cpp\\nindex 92ccb61..e9e77e6 100644\\n--- a/gfx/thebes/src/gfxWindowsPlatform.cpp\\n+++ b/gfx/thebes/src/gfxWindowsPlatform.cpp\\n@@ -67,13 +67,27 @@\\n  */\\n //#define UPDATE_RANGES\\n \\n+int PR_CALLBACK\\n+gfxWindowsPlatform::PrefChangedCallback(const char *aPrefName, void *closure)\\n+{\\n+    gfxWindowsPlatform *plat = static_cast<gfxWindowsPlatform *>(closure);\\n+    plat->mPrefFonts.Clear();\\n+    return 0;\\n+}\\n \\n gfxWindowsPlatform::gfxWindowsPlatform()\\n {\\n     mFonts.Init(200);\\n     mFontAliases.Init(20);\\n     mFontSubstitutes.Init(50);\\n+    mPrefFonts.Init(10);\\n+\\n     UpdateFontList();\\n+\\n+    nsCOMPtr<nsIPref> pref = do_GetService(NS_PREF_CONTRACTID);\\n+    pref->RegisterCallback(\\\"font.\\\", PrefChangedCallback, this);\\n+    pref->RegisterCallback(\\\"font.name-list.\\\", PrefChangedCallback, this);\\n+    // don't bother unregistering.  We'll get shutdown after the pref service\\n }\\n \\n gfxWindowsPlatform::~gfxWindowsPlatform()\\n@@ -485,6 +499,7 @@ gfxWindowsPlatform::UpdateFontList()\\n     mFontAliases.Clear();\\n     mNonExistingFonts.Clear();\\n     mFontSubstitutes.Clear();\\n+    mPrefFonts.Clear();\\n \\n     LOGFONTW logFont;\\n     logFont.lfCharSet = DEFAULT_CHARSET;\\n@@ -765,3 +780,17 @@ gfxWindowsPlatform::GetPlatformCMSOutputProfile()\\n #endif\\n     return profile;\\n }\\n+\\n+PRBool\\n+gfxWindowsPlatform::GetPrefFontEntries(const char *aLangGroup, nsTArray<nsRefPtr<FontEntry> > *array)\\n+{\\n+    nsCAutoString keyName(aLangGroup);\\n+    return mPrefFonts.Get(keyName, array);\\n+}\\n+\\n+void\\n+gfxWindowsPlatform::SetPrefFontEntries(const char *aLangGroup, nsTArray<nsRefPtr<FontEntry> >& array)\\n+{\\n+    nsCAutoString keyName(aLangGroup);\\n+    mPrefFonts.Put(keyName, array);\\n+}\\n\""}