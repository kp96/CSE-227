{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas1c931fe\""},"diff":"\"1c931fe Make content policy api (nsIContentPolicy) not suck. bug 191839. Original patch and hard work by Tim <riceman+bmo@mail.rit.edu>, r=bzbarsky (on backend stuff), r=neil (on the tabbrowser stuff), sr=bzbarsky\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 2e6adfa..9d68508 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -528,6 +528,12 @@\\n         <parameter name=\\\"event\\\"/>\\n         <body>\\n           <![CDATA[\\n+            // mechanism for reading properties of the underlying XPCOM object\\n+            // (ignoring potential getters/setters added by malicious content)\\n+            var safeGetProperty = function(obj, propname) {\\n+              return Components.lookupMethod(obj, propname).call(obj);\\n+            };\\n+\\n             var tabBrowser = this.parentNode.parentNode;\\n             if (!tabBrowser.mPrefs.getBoolPref(\\\"browser.chrome.site_icons\\\"))\\n               return;\\n@@ -540,25 +546,54 @@\\n             if (!href)\\n               return;\\n \\n-            // Verify that the load of this icon is legal.  We use the same\\n-            // content policy that is used for a Web page loading images.\\n-            var contentPolicy = Components.classes['@mozilla.org/layout/content-policy;1'].getService(Components.interfaces.nsIContentPolicy);\\n-            if (!contentPolicy)\\n+            try {\\n+              var contentPolicy =\\n+                Components.classes['@mozilla.org/layout/content-policy;1']\\n+                          .getService(Components.interfaces.nsIContentPolicy);\\n+            } catch(e) {\\n               return; // Refuse to load if we can't do a security check.\\n+            }\\n \\n+            // Verify that the load of this icon is legal.\\n+            // We check first with the security manager\\n+            const secMan =\\n+              Components.classes[\\\"@mozilla.org/scriptsecuritymanager;1\\\"]\\n+                        .getService(Components.interfaces.nsIScriptSecurityManager);\\n+\\n+            // Get the IOService so we can make URIs\\n+            const ioService =\\n+              Components.classes[\\\"@mozilla.org/network/io-service;1\\\"]\\n+                        .getService(Components.interfaces.nsIIOService);\\n+\\n+            const targetDoc = safeGetProperty(event.target, \\\"ownerDocument\\\");\\n             // Make a URI out of our href.\\n-            var uri = Components.classes['@mozilla.org/network/standard-url;1'].createInstance();\\n-            uri = uri.QueryInterface(Components.interfaces.nsIURI);\\n+            var docCharset = safeGetProperty(targetDoc, \\\"characterSet\\\");\\n+            var uri = ioService.newURI(href, docCharset, null);\\n+\\n+            var origURIStr = safeGetProperty(targetDoc, \\\"documentURI\\\");\\n+            var origURI = ioService.newURI(origURIStr, docCharset, null);\\n+\\n+            const nsIScriptSecMan =\\n+              Components.interfaces.nsIScriptSecurityManager;\\n+\\n+            try {\\n+              secMan.checkLoadURI(origURI, uri, nsIScriptSecMan.STANDARD);\\n+            } catch(e) {\\n+              return;\\n+            }\\n \\n             var notifyListeners = true;\\n             var i;\\n \\n+            // Security says okay, now ask content policy\\n             if (tabBrowser.mTabbedMode) {\\n               // We need to update a tab.\\n               for (i = 0; i < this.childNodes.length; i++) {\\n                 if (this.childNodes[i].contentDocument == event.target.ownerDocument) {\\n-                  if (!contentPolicy.shouldLoad(Components.interfaces.nsIContentPolicy.IMAGE,\\n-                                                uri, event.target, this.childNodes[i].contentWindow))\\n+                  if (contentPolicy.shouldLoad(Components.interfaces.nsIContentPolicy.TYPE_IMAGE,\\n+                                               uri, origURI, event.target,\\n+                                               safeGetProperty(event.target, \\\"type\\\"),\\n+                                               null) != Components.interfaces.nsIContentPolicy.ACCEPT)\\n                     return;\\n \\n                   var listener = tabBrowser.mTabListeners[i];\\n@@ -569,8 +604,11 @@\\n \\n               notifyListeners = (this.childNodes[i] == tabBrowser.mCurrentBrowser);\\n             }\\n-            else if (!contentPolicy.shouldLoad(Components.interfaces.nsIContentPolicy.IMAGE,\\n-                                               uri, event.target, tabBrowser.mCurrentBrowser.contentWindow))\\n+            else if ((this.contentDocument != safeGetProperty(event.originalTarget, \\\"ownerDocument\\\")) ||\\n+                     (contentPolicy.shouldLoad(Components.interfaces.nsIContentPolicy.TYPE_IMAGE,\\n+                                               uri, origURI, event.target,\\n+                                               safeGetProperty(event.target, \\\"type\\\"),\\n+                                               null) != Components.interfaces.nsIContentPolicy.ACCEPT))\\n               return;\\n \\n             if (notifyListeners && tabBrowser.mProgressListeners) {\\n\""}