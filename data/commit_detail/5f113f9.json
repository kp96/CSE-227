{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5f113f9\""},"diff":"\"5f113f9 Bug 388411 - Rationalise SVG frame construction. r+sr=tor,a=dsicore for m8\\ndiff --git a/layout/svg/base/src/nsSVGClipPathFrame.cpp b/layout/svg/base/src/nsSVGClipPathFrame.cpp\\nindex 6868156..08f16b5 100644\\n--- a/layout/svg/base/src/nsSVGClipPathFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGClipPathFrame.cpp\\n@@ -50,11 +50,9 @@\\n nsIFrame*\\n NS_NewSVGClipPathFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext)\\n {\\n-  nsCOMPtr<nsIDOMSVGTransformable> transformable = do_QueryInterface(aContent);\\n-  if (!transformable) {\\n-#ifdef DEBUG\\n-    printf(\\\"warning: trying to construct an SVGClipPathFrame for a content element that doesn't support the right interfaces\\\\n\\\");\\n-#endif\\n+  nsCOMPtr<nsIDOMSVGClipPathElement> clipPath = do_QueryInterface(aContent);\\n+  if (!clipPath) {\\n+    NS_ERROR(\\\"Can't create frame! Content is not an SVG clipPath!\\\");\\n     return nsnull;\\n   }\\n \\ndiff --git a/layout/svg/base/src/nsSVGClipPathFrame.h b/layout/svg/base/src/nsSVGClipPathFrame.h\\nindex 6c25b1a..f78744c 100644\\n--- a/layout/svg/base/src/nsSVGClipPathFrame.h\\n+++ b/layout/svg/base/src/nsSVGClipPathFrame.h\\n@@ -45,13 +45,13 @@ class nsSVGClipPathFrame : public nsSVGClipPathFrameBase\\n {\\n   friend nsIFrame*\\n   NS_NewSVGClipPathFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext);\\n-\\n+protected:\\n   nsSVGClipPathFrame(nsStyleContext* aContext) :\\n     nsSVGClipPathFrameBase(aContext),\\n     mClipParentMatrix(nsnull),\\n     mInUse(PR_FALSE) {}\\n \\n- public:\\n+public:\\n   // nsSVGClipPathFrame methods:\\n   nsresult ClipPaint(nsSVGRenderState* aContext,\\n                      nsISVGChildFrame* aParent,\\ndiff --git a/layout/svg/base/src/nsSVGContainerFrame.h b/layout/svg/base/src/nsSVGContainerFrame.h\\nindex ad4020d..9813435 100644\\n--- a/layout/svg/base/src/nsSVGContainerFrame.h\\n+++ b/layout/svg/base/src/nsSVGContainerFrame.h\\n@@ -49,17 +49,13 @@ class nsSVGContainerFrame : public nsSVGContainerFrameBase\\n   friend nsIFrame* NS_NewSVGContainerFrame(nsIPresShell* aPresShell,\\n                                            nsIContent* aContent,\\n                                            nsStyleContext* aContext);\\n-\\n protected:\\n-  virtual PRBool IsFrameOfType(PRUint32 aFlags) const\\n-  {\\n-    return nsSVGContainerFrameBase::IsFrameOfType(aFlags & ~(nsIFrame::eSVG));\\n-  }\\n-\\n-public:\\n   nsSVGContainerFrame(nsStyleContext* aContext) :\\n     nsSVGContainerFrameBase(aContext) {}\\n \\n+public:\\n+  virtual already_AddRefed<nsIDOMSVGMatrix> GetCanvasTM() { return nsnull; }\\n+\\n   // nsIFrame:\\n   NS_IMETHOD AppendFrames(nsIAtom*        aListName,\\n                           nsIFrame*       aFrameList);\\n@@ -72,17 +68,21 @@ public:\\n                   nsIFrame*        aParent,\\n                   nsIFrame*        aPrevInFlow);\\n \\n-  virtual already_AddRefed<nsIDOMSVGMatrix> GetCanvasTM() { return nsnull; }\\n+  virtual PRBool IsFrameOfType(PRUint32 aFlags) const\\n+  {\\n+    return nsSVGContainerFrameBase::IsFrameOfType(aFlags & ~(nsIFrame::eSVG));\\n+  }\\n };\\n \\n class nsSVGDisplayContainerFrame : public nsSVGContainerFrame,\\n                                    public nsISVGChildFrame\\n {\\n-public:\\n+protected:\\n   nsSVGDisplayContainerFrame(nsStyleContext* aContext) :\\n     nsSVGContainerFrame(aContext) {}\\n \\n-   // nsISupports interface:\\n+public:\\n+  // nsISupports interface:\\n   NS_IMETHOD QueryInterface(const nsIID& aIID, void** aInstancePtr);\\n private:\\n   NS_IMETHOD_(nsrefcnt) AddRef() { return 1; }\\ndiff --git a/layout/svg/base/src/nsSVGFilterFrame.cpp b/layout/svg/base/src/nsSVGFilterFrame.cpp\\nindex 0026c3f..2661b6c 100644\\n--- a/layout/svg/base/src/nsSVGFilterFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGFilterFrame.cpp\\n@@ -53,6 +53,12 @@\\n nsIFrame*\\n NS_NewSVGFilterFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext)\\n {\\n+  nsCOMPtr<nsIDOMSVGFilterElement> filter = do_QueryInterface(aContent);\\n+  if (!filter) {\\n+    NS_ERROR(\\\"Can't create frame! Content is not an SVG filter\\\");\\n+    return nsnull;\\n+  }\\n+\\n   return new (aPresShell) nsSVGFilterFrame(aContext);\\n }\\n \\ndiff --git a/layout/svg/base/src/nsSVGFilterFrame.h b/layout/svg/base/src/nsSVGFilterFrame.h\\nindex b03fe27..2dd8cb4 100644\\n--- a/layout/svg/base/src/nsSVGFilterFrame.h\\n+++ b/layout/svg/base/src/nsSVGFilterFrame.h\\n@@ -46,10 +46,10 @@ class nsSVGFilterFrame : public nsSVGFilterFrameBase\\n {\\n   friend nsIFrame*\\n   NS_NewSVGFilterFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext);\\n-\\n-public:\\n+protected:\\n   nsSVGFilterFrame(nsStyleContext* aContext) : nsSVGFilterFrameBase(aContext) {}\\n \\n+public:\\n   nsresult FilterPaint(nsSVGRenderState *aContext,\\n                        nsISVGChildFrame *aTarget);\\n   nsRect GetInvalidationRegion(nsIFrame *aTarget);\\ndiff --git a/layout/svg/base/src/nsSVGImageFrame.cpp b/layout/svg/base/src/nsSVGImageFrame.cpp\\nindex 7e6f239..f3fd8ef 100644\\n--- a/layout/svg/base/src/nsSVGImageFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGImageFrame.cpp\\n@@ -164,9 +164,6 @@ nsSVGImageFrame::Init(nsIContent* aContent,\\n   nsresult rv = nsSVGPathGeometryFrame::Init(aContent, aParent, aPrevInFlow);\\n   if (NS_FAILED(rv)) return rv;\\n   \\n-  nsCOMPtr<nsIDOMSVGImageElement> Rect = do_QueryInterface(mContent);\\n-  NS_ASSERTION(Rect,\\\"wrong content element\\\");\\n-\\n   mListener = new nsSVGImageListener(this);\\n   if (!mListener) return NS_ERROR_OUT_OF_MEMORY;\\n   nsCOMPtr<nsIImageLoadingContent> imageLoader = do_QueryInterface(mContent);\\ndiff --git a/layout/svg/base/src/nsSVGMarkerFrame.cpp b/layout/svg/base/src/nsSVGMarkerFrame.cpp\\nindex 7d7f814..1ad476d 100644\\n--- a/layout/svg/base/src/nsSVGMarkerFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGMarkerFrame.cpp\\n@@ -47,6 +47,12 @@\\n nsIFrame*\\n NS_NewSVGMarkerFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext)\\n {\\n+  nsCOMPtr<nsIDOMSVGMarkerElement> marker = do_QueryInterface(aContent);\\n+  if (!marker) {\\n+    NS_ASSERTION(marker, \\\"Can't create frame! Content is not an SVG marker\\\");\\n+    return nsnull;\\n+  }\\n+\\n   return new (aPresShell) nsSVGMarkerFrame(aContext);\\n }\\n \\ndiff --git a/layout/svg/base/src/nsSVGMarkerFrame.h b/layout/svg/base/src/nsSVGMarkerFrame.h\\nindex 0457dad..b59620e 100644\\n--- a/layout/svg/base/src/nsSVGMarkerFrame.h\\n+++ b/layout/svg/base/src/nsSVGMarkerFrame.h\\n@@ -49,17 +49,16 @@ typedef nsSVGContainerFrame nsSVGMarkerFrameBase;\\n \\n class nsSVGMarkerFrame : public nsSVGMarkerFrameBase\\n {\\n-protected:\\n   friend nsIFrame*\\n   NS_NewSVGMarkerFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext);\\n-\\n-public:\\n+protected:\\n   nsSVGMarkerFrame(nsStyleContext* aContext) :\\n     nsSVGMarkerFrameBase(aContext),\\n     mMarkedFrame(nsnull),\\n     mInUse(PR_FALSE),\\n     mInUse2(PR_FALSE) {}\\n \\n+public:\\n   /**\\n    * Get the \\\"type\\\" of the frame\\n    *\\ndiff --git a/layout/svg/base/src/nsSVGMaskFrame.cpp b/layout/svg/base/src/nsSVGMaskFrame.cpp\\nindex 8071a9a..4fcfc62 100644\\n--- a/layout/svg/base/src/nsSVGMaskFrame.cpp\\n+++ b/layout/svg/base/src/nsSVGMaskFrame.cpp\\n@@ -49,6 +49,13 @@\\n nsIFrame*\\n NS_NewSVGMaskFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext)\\n {\\n+  nsCOMPtr<nsIDOMSVGMaskElement> mask = do_QueryInterface(aContent);\\n+\\n+  if (!mask) {\\n+    NS_ERROR(\\\"Can't create frame! Content is not an SVG mask\\\");\\n+    return nsnull;\\n+  }\\n+\\n   return new (aPresShell) nsSVGMaskFrame(aContext);\\n }\\n \\n@@ -146,7 +153,7 @@ nsSVGMaskFrame::ComputeMaskAlpha(nsSVGRenderState *aContext,\\n     nsSVGUtils::SetClipRect(gfx, aMatrix, x, y, width, height);\\n   }\\n \\n-  mMaskParent = aParent,\\n+  mMaskParent = aParent;\\n   mMaskParentMatrix = aMatrix;\\n \\n   for (nsIFrame* kid = mFrames.FirstChild(); kid;\\ndiff --git a/layout/svg/base/src/nsSVGMaskFrame.h b/layout/svg/base/src/nsSVGMaskFrame.h\\nindex ba30288..f989b7e 100644\\n--- a/layout/svg/base/src/nsSVGMaskFrame.h\\n+++ b/layout/svg/base/src/nsSVGMaskFrame.h\\n@@ -48,13 +48,13 @@ class nsSVGMaskFrame : public nsSVGMaskFrameBase\\n {\\n   friend nsIFrame*\\n   NS_NewSVGMaskFrame(nsIPresShell* aPresShell, nsIContent* aContent, nsStyleContext* aContext);\\n-\\n+protected:\\n   nsSVGMaskFrame(nsStyleContext* aContext) :\\n     nsSVGMaskFrameBase(aContext),\\n     mMaskParentMatrix(nsnull),\\n     mInUse(PR_FALSE) {}\\n \\n- public:\\n+public:\\n   // nsSVGMaskFrame method:\\n   already_AddRefed<gfxPattern> ComputeMaskAlpha(nsSVGRenderState *aContext,\\n                                                 nsISVGChildFrame* aParent,\\n@@ -75,7 +75,7 @@ class nsSVGMaskFrame : public nsSVGMaskFrameBase\\n   }\\n #endif\\n \\n- private:\\n+private:\\n   // A helper class to allow us to paint masks safely. The helper\\n   // automatically sets and clears the mInUse flag on the mask frame\\n   // (to prevent nasty reference loops). It's easy to mess this up\\ndiff --git a/layout/svg/base/src/nsSVGPaintServerFrame.h b/layout/svg/base/src/nsSVGPaintServerFrame.h\\nindex 67f772a..e6b7224 100644\\n--- a/layout/svg/base/src/nsSVGPaintServerFrame.h\\n+++ b/layout/svg/base/src/nsSVGPaintServerFrame.h\\n@@ -48,10 +48,11 @@ typedef nsSVGContainerFrame nsSVGPaintServerFrameBase;\\n class nsSVGPaintServerFrame : public nsSVGPaintServerFrameBase,\\n                               public nsSVGValue\\n {\\n-public:\\n+protected:\\n   nsSVGPaintServerFrame(nsStyleContext* aContext) :\\n-      nsSVGPaintServerFrameBase(aContext) {}\\n+    nsSVGPaintServerFrameBase(aContext) {}\\n \\n+public:\\n   /*\\n    * Configure paint server prior to rendering\\n    * @return PR_FALSE to skip rendering\\n\""}