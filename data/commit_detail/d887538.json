{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basd887538\""},"diff":"\"d887538 Bug 298705 - live bookmarks should only refresh when browser is active r=mano@mozilla.com (Asaf Romano) Toolkit only, no approval needed.\\ndiff --git a/toolkit/components/places/src/nsLivemarkService.js b/toolkit/components/places/src/nsLivemarkService.js\\nindex 38df437..30f0edf 100644\\n--- a/toolkit/components/places/src/nsLivemarkService.js\\n+++ b/toolkit/components/places/src/nsLivemarkService.js\\n@@ -78,6 +78,7 @@ const FAV_CONTRACTID = \\\"@mozilla.org/browser/favicon-service;1\\\";\\n const LG_CONTRACTID = \\\"@mozilla.org/network/load-group;1\\\";\\n const FP_CONTRACTID = \\\"@mozilla.org/feed-processor;1\\\";\\n const SEC_CONTRACTID = \\\"@mozilla.org/scriptsecuritymanager;1\\\";\\n+const IS_CONTRACTID = \\\"@mozilla.org/widget/idleservice;1\\\";\\n const SEC_FLAGS = Ci.nsIScriptSecurityManager.DISALLOW_INHERIT_PRINCIPAL;\\n \\n // Check every hour by default\\n@@ -86,6 +87,9 @@ var gExpiration = 3600000;\\n // Check every 10 minutes on error\\n const ERROR_EXPIRATION = 600000;\\n \\n+// Don't check when the user is idle for longer than half an hour:\\n+const IDLE_TIMELIMIT = 1800000;\\n+\\n var gIoService = Cc[IO_CONTRACTID].getService(Ci.nsIIOService);\\n var gStringBundle;\\n function GetString(name)\\n@@ -131,6 +135,9 @@ function LivemarkService() {\\n   new G_Alarm(BindToObject(this._fireTimer, this), LIVEMARK_TIMEOUT, \\n               true /* repeat */);\\n \\n+  if (IS_CONTRACTID in Cc)\\n+    this._idleService = Cc[IS_CONTRACTID].getService(Ci.nsIIdleService);\\n+\\n   // this is giving a reentrant getService warning in XPCShell. bug 194568.\\n   this._ans = Cc[AS_CONTRACTID].getService(Ci.nsIAnnotationService);\\n \\n@@ -220,7 +227,20 @@ LivemarkService.prototype = {\\n         livemark.locked = false;\\n         return;\\n       }\\n-    } \\n+\\n+      // Check the user idle time. If the user isn't using their computer, don't\\n+      // bother updating - save the internet some bandwidth. If we can't\\n+      // get the idle time, assume the user isn't idle.\\n+      var idleTime = 0;\\n+      try {\\n+        idleTime = this._idleService.idleTime;\\n+      } catch (ex) { /* We don't care */ }\\n+      if (idleTime > IDLE_TIMELIMIT)\\n+      {\\n+        livemark.locked = false;\\n+        return;\\n+      }\\n+    }\\n     catch (ex) {\\n       // This livemark has never been loaded, since it has no expire time.\\n       this.insertLivemarkLoadingItem(this._bms, livemark);\\n\""}