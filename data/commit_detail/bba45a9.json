{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basbba45a9\""},"diff":"\"bba45a9 Bug 230870 - Cross-Session resumable downloads (resume after quitting firefox). r=sdwilsh, a=mconnor\\ndiff --git a/toolkit/components/downloads/src/nsDownloadManager.cpp b/toolkit/components/downloads/src/nsDownloadManager.cpp\\nindex 48211a4..a424315 100644\\n--- a/toolkit/components/downloads/src/nsDownloadManager.cpp\\n+++ b/toolkit/components/downloads/src/nsDownloadManager.cpp\\n@@ -24,6 +24,7 @@\\n  *   Ben Goodger <ben@netscape.com> (Original Author)\\n  *   Shawn Wilsher <me@shawnwilsher.com>\\n  *   Srirang G Doddihal <brahmana@doddihal.com>\\n+ *   Edward Lee <edward.lee@engineering.uiuc.edu>\\n  *\\n  * Alternatively, the contents of this file may be used under the terms of\\n  * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n@@ -129,16 +130,21 @@ nsDownloadManager::~nsDownloadManager()\\n }\\n \\n nsresult\\n-nsDownloadManager::CancelAllDownloads()\\n+nsDownloadManager::RemoveAllDownloads()\\n {\\n   nsresult rv = NS_OK;\\n   for (PRInt32 i = mCurrentDownloads.Count() - 1; i >= 0; --i) {\\n     nsRefPtr<nsDownload> dl = mCurrentDownloads[0];\\n \\n-    nsresult result = CancelDownload(dl->mID);\\n-    // We want to try the rest of them because they should be canceled if they\\n-    // can be canceled.\\n-    if (NS_FAILED(result)) rv = result;\\n+    nsresult result;\\n+    if (dl->IsRealPaused())\\n+      result = mCurrentDownloads.RemoveObject(dl);\\n+    else\\n+      result = CancelDownload(dl->mID);\\n+\\n+    // Track the failure, but don't miss out on other downloads\\n+    if (NS_FAILED(result))\\n+      rv = result;\\n   }\\n \\n   return rv;\\n@@ -644,6 +650,33 @@ nsDownloadManager::RestoreDatabaseState()\\n   return NS_OK;\\n }\\n \\n+nsresult\\n+nsDownloadManager::RestoreActiveDownloads()\\n+{\\n+  nsCOMPtr<mozIStorageStatement> stmt;\\n+  nsresult rv = mDBConn->CreateStatement(NS_LITERAL_CSTRING(\\n+    \\\"SELECT id \\\"\\n+    \\\"FROM moz_downloads \\\"\\n+    \\\"WHERE state = ?1 \\\"\\n+      \\\"AND LENGTH(entityID) > 0\\\"), getter_AddRefs(stmt));\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+\\n+  rv = stmt->BindInt32Parameter(0, nsIDownloadManager::DOWNLOAD_PAUSED);\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+\\n+  PRBool hasResults;\\n+  while (NS_SUCCEEDED(stmt->ExecuteStep(&hasResults)) && hasResults) {\\n+    nsRefPtr<nsDownload> dl;\\n+    // Keep trying to add even if we fail one, but make sure to return failure.\\n+    // Additionally, be careful to not call anything that tries to change the\\n+    // database because we're iterating over a live statement.\\n+    if (NS_FAILED(GetDownloadFromDB(stmt->AsInt32(0), getter_AddRefs(dl))) ||\\n+        NS_FAILED(AddToCurrentDownloads(dl)))\\n+      rv = NS_ERROR_FAILURE;\\n+  }\\n+  return rv;\\n+}\\n+\\n PRInt64\\n nsDownloadManager::AddDownloadToDB(const nsAString &aName,\\n                                    const nsACString &aSource,\\n@@ -718,6 +751,9 @@ nsDownloadManager::Init()\\n   rv = RestoreDatabaseState();\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n+  rv = RestoreActiveDownloads();\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+\\n   nsCOMPtr<nsIStringBundleService> bundleService =\\n     do_GetService(NS_STRINGBUNDLE_CONTRACTID, &rv);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n@@ -1412,7 +1448,11 @@ nsDownloadManager::Observe(nsISupports *aSubject,\\n                            const char *aTopic,\\n                            const PRUnichar *aData)\\n {\\n-  PRInt32 currDownloadCount = mCurrentDownloads.Count();\\n+  // Count active downloads that aren't real-paused\\n+  PRInt32 currDownloadCount = 0;\\n+  for (PRInt32 i = mCurrentDownloads.Count() - 1; i >= 0; --i)\\n+    if (!mCurrentDownloads[i]->IsRealPaused())\\n+      currDownloadCount++;\\n \\n   nsresult rv;\\n   if (strcmp(aTopic, \\\"oncancel\\\") == 0) {\\n@@ -1428,7 +1468,7 @@ nsDownloadManager::Observe(nsISupports *aSubject,\\n     gStoppingDownloads = PR_TRUE;\\n \\n     if (currDownloadCount)\\n-      CancelAllDownloads();\\n+      (void)RemoveAllDownloads();\\n \\n     // Now that active downloads have been canceled, remove all downloads if\\n     // the user's retention policy specifies it.\\ndiff --git a/toolkit/components/downloads/src/nsDownloadManager.h b/toolkit/components/downloads/src/nsDownloadManager.h\\nindex 0dcb57d..fb0bccf 100644\\n--- a/toolkit/components/downloads/src/nsDownloadManager.h\\n+++ b/toolkit/components/downloads/src/nsDownloadManager.h\\n@@ -24,6 +24,7 @@\\n  *   Ben Goodger <ben@netscape.com>\\n  *   Shawn Wilsher <me@shawnwilsher.com>\\n  *   Srirang G Doddihal <brahmana@doddihal.com>\\n+ *   Edward Lee <edward.lee@engineering.uiuc.edu>\\n  *\\n  * Alternatively, the contents of this file may be used under the terms of\\n  * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n@@ -99,6 +100,13 @@ protected:\\n   nsresult CreateTable();\\n   nsresult ImportDownloadHistory();\\n   nsresult RestoreDatabaseState();\\n+\\n+  /**\\n+   * Paused downloads that survive across sessions are considered active, so\\n+   * rebuild the list of these downloads.\\n+   */\\n+  nsresult RestoreActiveDownloads();\\n+\\n   nsresult GetDownloadFromDB(PRUint32 aID, nsDownload **retVal);\\n \\n   /**\\n@@ -138,7 +146,14 @@ protected:\\n                                     nsIDownload *aDownload);\\n \\n   nsDownload *FindDownload(PRUint32 aID);\\n-  nsresult CancelAllDownloads();\\n+\\n+  /**\\n+   * Stop tracking the active downloads. Only use this when we're about to quit\\n+   * the download manager because we destroy our list of active downloads to\\n+   * break the dlmgr<->dl cycle. Active downloads that aren't real-paused will\\n+   * be canceled.\\n+   */\\n+  nsresult RemoveAllDownloads();\\n \\n   /**\\n    * Removes download from \\\"current downloads\\\".\\n\""}