{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas7196ff0\""},"diff":"\"7196ff0 Bug 345741 - Improve \\\"All Tabs\\\" menu active/visible tab feedback p=Michael Ventnor <ventnor.bugzilla@yahoo.com.au> r=mano\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 40adfa5..5db0db3 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -2963,9 +2963,6 @@\\n       <method name=\\\"_menuItemOnCommand\\\">\\n         <parameter name=\\\"aEvent\\\"/>\\n         <body><![CDATA[\\n-          // note, the tab may not be valid (if after we built the popup\\n-          // the tab was closed.  but selectedItem setter handles that\\n-          // gracefully.\\n           var tabcontainer = document.getBindingParent(this);\\n           tabcontainer.selectedItem = aEvent.target.tab;\\n         ]]></body>\\n@@ -3020,6 +3017,28 @@\\n             case \\\"TabOpen\\\":\\n               this._createTabMenuItem(aEvent.originalTarget);\\n               break;\\n+            case \\\"scroll\\\":\\n+              this._updateTabsVisibilityStatus();\\n+              break;\\n+          }\\n+        ]]></body>\\n+      </method>\\n+\\n+      <method name=\\\"_updateTabsVisibilityStatus\\\">\\n+        <body><![CDATA[\\n+          var tabContainer = document.getBindingParent(this);\\n+          // We don't want menu item decoration unless there is overflow.\\n+          if (tabContainer.getAttribute(\\\"overflow\\\") != \\\"true\\\")\\n+            return;\\n+\\n+          var tabstripBO = tabContainer.mTabstrip.scrollBoxObject;\\n+          for (var i = 0; i < this.childNodes.length; i++) {\\n+            var curTabBO = this.childNodes[i].tab.boxObject;\\n+            if (curTabBO.screenX >= tabstripBO.screenX &&\\n+                curTabBO.screenX + curTabBO.width <= tabstripBO.screenX + tabstripBO.width)\\n+              this.childNodes[i].setAttribute(\\\"tabIsVisible\\\", \\\"true\\\"); \\n+            else\\n+              this.childNodes[i].removeAttribute(\\\"tabIsVisible\\\");\\n           }\\n         ]]></body>\\n       </method>\\n@@ -3066,6 +3085,7 @@\\n         // Listen for changes in the tab bar.\\n         var tabbrowser = document.getBindingParent(tabcontainer);\\n         tabbrowser.addEventListener(\\\"TabOpen\\\", this, false);\\n+        tabcontainer.mTabstrip.addEventListener(\\\"scroll\\\", this, false);\\n \\n         // if an animation is in progress and the user\\n         // clicks on the \\\"all tabs\\\" button, stop the animation\\n@@ -3074,6 +3094,7 @@\\n         for (var i = 0; i < tabs.length; i++) {\\n           this._createTabMenuItem(tabs[i]);\\n         }\\n+        this._updateTabsVisibilityStatus();\\n       ]]></handler>\\n \\n       <handler event=\\\"popuphiding\\\">\\n@@ -3087,8 +3108,9 @@\\n           menuItem.tab.mCorrespondingMenuitem = null;\\n           this.removeChild(menuItem);\\n         }\\n-        var tabbrowser = document.getBindingParent(document.getBindingParent(this));\\n-        tabbrowser.removeEventListener(\\\"TabOpen\\\", this, false);\\n+        var tabcontainer = document.getBindingParent(this);\\n+        tabcontainer.mTabstrip.removeEventListener(\\\"scroll\\\", this, false);\\n+        document.getBindingParent(tabcontainer).removeEventListener(\\\"TabOpen\\\", this, false);\\n       ]]></handler>\\n \\n       <handler event=\\\"DOMMenuItemActive\\\">\\n\""}