{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basf80c722\""},"diff":"\"f80c722 Bug 302847 : Remove lookupMethod code from toolkit/, patch by Frank Wein <bugzilla@mcsmurf.de>, r=mconnor+Neil, a=bsmedberg\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 344ceea..15a96f5 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -713,7 +713,7 @@\\n \\n             function setFocus(element) {\\n               document.commandDispatcher.suppressFocusScroll = true;\\n-              Components.lookupMethod(element, \\\"focus\\\").call(element);\\n+              element.focus();\\n               document.commandDispatcher.suppressFocusScroll = false;\\n             }\\n \\n@@ -741,12 +741,6 @@\\n         <parameter name=\\\"event\\\"/>\\n         <body>\\n           <![CDATA[\\n-            // mechanism for reading properties of the underlying XPCOM object\\n-            // (ignoring potential getters/setters added by malicious content)\\n-            var safeGetProperty = function(obj, propname) {\\n-              return Components.lookupMethod(obj, propname).call(obj);\\n-            };\\n-\\n             var tabBrowser = this.parentNode.parentNode;\\n             if (!tabBrowser.mPrefs.getBoolPref(\\\"browser.chrome.site_icons\\\"))\\n               return;\\n@@ -779,13 +773,11 @@\\n               Components.classes[\\\"@mozilla.org/network/io-service;1\\\"]\\n                         .getService(Components.interfaces.nsIIOService);\\n \\n-            const targetDoc = safeGetProperty(event.target, \\\"ownerDocument\\\");\\n+            const targetDoc = event.target.ownerDocument;\\n             // Make a URI out of our href.\\n-            var docCharset = safeGetProperty(targetDoc, \\\"characterSet\\\");\\n-            var uri = ioService.newURI(href, docCharset, null);\\n+            var uri = ioService.newURI(href, targetDoc.characterSet, null);\\n \\n-            var origURIStr = safeGetProperty(targetDoc, \\\"documentURI\\\");\\n-            var origURI = ioService.newURI(origURIStr, docCharset, null);\\n+            var origURI = ioService.newURI(targetDoc.documentURI, targetDoc.characterSet, null);\\n \\n             const nsIScriptSecMan =\\n               Components.interfaces.nsIScriptSecurityManager;\\n@@ -800,7 +792,7 @@\\n             // Security says okay, now ask content policy\\n             if (contentPolicy.shouldLoad(nsIContentPolicy.TYPE_IMAGE,\\n                                          uri, origURI, event.target,\\n-                                         safeGetProperty(event.target, \\\"type\\\"),\\n+                                         event.target.type,\\n                                          null) != nsIContentPolicy.ACCEPT)\\n               return;\\n \\n@@ -861,8 +853,7 @@\\n                 // Let's try to unescape it using a character set\\n                 // in case the URI is not ASCII.\\n                 try {\\n-                  var characterSet = Components.lookupMethod(browser.contentDocument, 'characterSet')\\n-                                               .call(browser.contentDocument);\\n+                  var characterSet = browser.contentDocument.characterSet;\\n                   const textToSubURI = Components.classes[\\\"@mozilla.org/intl/texttosuburi;1\\\"]\\n                                                  .getService(Components.interfaces.nsITextToSubURI);\\n                   title = textToSubURI.unEscapeNonAsciiURI(characterSet, title);\\n\""}