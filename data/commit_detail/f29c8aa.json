{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basf29c8aa\""},"diff":"\"f29c8aa make text fields and text areas accept padding. also fix floating scrollbars in unstyled text areas. b=394127 r=cbarrett sr=roc\\ndiff --git a/widget/src/cocoa/nsNativeThemeCocoa.mm b/widget/src/cocoa/nsNativeThemeCocoa.mm\\nindex 0160ed1..c133786 100644\\n--- a/widget/src/cocoa/nsNativeThemeCocoa.mm\\n+++ b/widget/src/cocoa/nsNativeThemeCocoa.mm\\n@@ -922,24 +922,32 @@ nsNativeThemeCocoa::GetWidgetBorder(nsIDeviceContext* aContext,\\n       // the borders need not actually reflect the size of the drawn border.\\n       aResult->SizeTo(kAquaDropdownLeftBorder, 1, kAquaDropdownRightBorder, 1);\\n       break;\\n-    \\n-    case NS_THEME_TEXTFIELD: {\\n+\\n+    case NS_THEME_TEXTFIELD:\\n+    {\\n       SInt32 frameOutset = 0;\\n       ::GetThemeMetric(kThemeMetricEditTextFrameOutset, &frameOutset);\\n+\\n+      SInt32 textPadding = 0;\\n+      ::GetThemeMetric(kThemeMetricEditTextWhitespace, &textPadding);\\n+\\n+      frameOutset += textPadding;\\n+\\n       aResult->SizeTo(frameOutset, frameOutset, frameOutset, frameOutset);\\n-    }\\n       break;\\n+    }\\n \\n     case NS_THEME_TEXTFIELD_MULTILINE:\\n       aResult->SizeTo(1, 1, 1, 1);\\n       break;\\n-      \\n-    case NS_THEME_LISTBOX: {\\n+\\n+    case NS_THEME_LISTBOX:\\n+    {\\n       SInt32 frameOutset = 0;\\n       ::GetThemeMetric(kThemeMetricListBoxFrameOutset, &frameOutset);\\n       aResult->SizeTo(frameOutset, frameOutset, frameOutset, frameOutset);\\n-    }\\n       break;\\n+    }\\n \\n     case NS_THEME_SCROLLBAR_TRACK_HORIZONTAL:\\n     case NS_THEME_SCROLLBAR_TRACK_VERTICAL:\\n@@ -963,33 +971,24 @@ nsNativeThemeCocoa::GetWidgetBorder(nsIDeviceContext* aContext,\\n         else\\n           aResult->SizeTo(0, endcapSize, 0, 0);\\n       }\\n-    }\\n       break;\\n+    }\\n   }\\n-  \\n+\\n   return NS_OK;\\n }\\n \\n \\n-// return false here to indicate that CSS padding values should be used\\n+// Return PR_FALSE here to indicate that CSS padding values should be used. There is\\n+// no reason to make a distinction between padding and border values, just specify\\n+// whatever values you want in GetWidgetBorder and only use this to return PR_TRUE\\n+// if you want to override CSS padding values.\\n PRBool\\n nsNativeThemeCocoa::GetWidgetPadding(nsIDeviceContext* aContext, \\n                                      nsIFrame* aFrame,\\n                                      PRUint8 aWidgetType,\\n                                      nsMargin* aResult)\\n {\\n-  switch (aWidgetType)\\n-  {\\n-    case NS_THEME_TEXTFIELD:\\n-    case NS_THEME_TEXTFIELD_MULTILINE:\\n-    {\\n-      SInt32 nativePadding = 0;\\n-      ::GetThemeMetric(kThemeMetricEditTextWhitespace, &nativePadding);\\n-      aResult->SizeTo(nativePadding, nativePadding, nativePadding, nativePadding);\\n-      return PR_TRUE;\\n-    }\\n-  }\\n-\\n   return PR_FALSE;\\n }\\n \\n\""}