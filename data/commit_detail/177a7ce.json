{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas177a7ce\""},"diff":"\"177a7ce Bug 385266 - New add-bookmark ui, another round of changes, see comment 23 on the bug. r=dietrich.\\ndiff --git a/browser/base/content/browser-places.js b/browser/base/content/browser-places.js\\nindex 690326d..feca1eb 100644\\n--- a/browser/base/content/browser-places.js\\n+++ b/browser/base/content/browser-places.js\\n@@ -58,10 +58,7 @@ var PlacesCommandHook = {\\n     if (aEvent.originalTarget != this.panel)\\n       return;\\n \\n-    // This only happens for auto-hide. When the panel is closed from within\\n-    // itself, doneCallback removes the listener and only then hides the popup\\n-    gAddBookmarksPanel.saveItem();\\n-    gAddBookmarksPanel.uninitPanel();\\n+    gEditItemOverlay.uninitPanel(true);\\n   },\\n \\n   _overlayLoaded: false,\\n@@ -96,23 +93,15 @@ var PlacesCommandHook = {\\n     this._overlayLoading = true;\\n     document.loadOverlay(\\\"chrome://browser/content/places/editBookmarkOverlay.xul\\\",\\n                          loadObserver);\\n+    this.panel.addEventListener(\\\"popuphiding\\\", this, false);\\n   },\\n \\n   _doShowEditBookmarkPanel:\\n   function PCH__doShowEditBookmarkPanel(aItemId, aAnchorElement, aPosition) {\\n-    var panel = this.panel;\\n-    panel.openPopup(aAnchorElement, aPosition, -1, -1);\\n+    this.panel.openPopup(aAnchorElement, aPosition, -1, -1);\\n \\n-    gAddBookmarksPanel.initPanel(aItemId, PlacesUtils.tm, this.doneCallback,\\n-                                 { hiddenRows: \\\"description\\\" });\\n-    panel.addEventListener(\\\"popuphiding\\\", this, false);\\n-  },\\n-\\n-  doneCallback: function PCH_doneCallback(aSavedChanges) {\\n-    var panel = PlacesCommandHook.panel;\\n-    panel.removeEventListener(\\\"popuphiding\\\", PlacesCommandHook, false);\\n-    gAddBookmarksPanel.uninitPanel();\\n-    panel.hidePopup();\\n+    gEditItemOverlay.initPanel(aItemId,\\n+                               { hiddenRows: [\\\"description\\\", \\\"location\\\"] });\\n   },\\n \\n   /**\\n@@ -289,6 +278,19 @@ var PlacesCommandHook = {\\n \\n       organizer.focus();\\n     }\\n+  },\\n+\\n+  doneButtonOnCommand: function PCH_doneButtonOnCommand() {\\n+    this.panel.hidePopup();\\n+  },\\n+\\n+  deleteButtonOnCommand: function PCH_deleteButtonCommand() {\\n+    PlacesUtils.bookmarks.removeItem(gEditItemOverlay.itemId);\\n+\\n+    // remove all tags for the associated url\\n+    PlacesUtils.tagging.untagURI(gEditItemOverlay._uri, null);\\n+\\n+    this.panel.hidePopup();\\n   }\\n };\\n \\ndiff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul\\nindex 8e1544d..753fb91 100644\\n--- a/browser/base/content/browser.xul\\n+++ b/browser/base/content/browser.xul\\n@@ -75,7 +75,7 @@\\n # so that they can be shared by macBrowserOverlay.xul.\\n #include global-scripts.inc\\n <script type=\\\"application/x-javascript\\\" src=\\\"chrome://browser/content/nsContextMenu.js\\\"/>\\n-  \\n+\\n #ifdef MOZ_SAFE_BROWSING\\n <script type=\\\"application/x-javascript\\\" src=\\\"chrome://browser/content/safebrowsing/sb-loader.js\\\"/>\\n #endif\\n@@ -100,8 +100,16 @@\\n \\n     <panel type=\\\"autocomplete\\\" chromedir=\\\"&locale.dir;\\\" id=\\\"PopupAutoComplete\\\" noautofocus=\\\"true\\\"/>\\n \\n-    <panel id=\\\"editBookmarkPanel\\\">\\n+    <panel id=\\\"editBookmarkPanel\\\" orient=\\\"vertical\\\">\\n       <vbox id=\\\"editBookmarkPanelContent\\\" flex=\\\"1\\\"/>\\n+      <hbox flex=\\\"1\\\">\\n+        <spacer flex=\\\"1\\\"/>\\n+        <button label=\\\"&editBookmark.delete.label;\\\"\\n+                oncommand=\\\"PlacesCommandHook.deleteButtonOnCommand();\\\"/>\\n+        <button label=\\\"&editBookmark.done.label;\\\"\\n+                default=\\\"true\\\"\\n+                oncommand=\\\"PlacesCommandHook.doneButtonOnCommand();\\\"/>\\n+      </hbox>\\n     </panel>\\n \\n     <popup id=\\\"toolbar-context-menu\\\"\\ndiff --git a/browser/components/places/content/editBookmarkOverlay.js b/browser/components/places/content/editBookmarkOverlay.js\\nindex 358add1..fc91710 100644\\n--- a/browser/components/places/content/editBookmarkOverlay.js\\n+++ b/browser/components/places/content/editBookmarkOverlay.js\\n@@ -36,9 +36,10 @@\\n  * ***** END LICENSE BLOCK ***** */\\n \\n const LAST_USED_ANNO = \\\"bookmarkPropertiesDialog/lastUsed\\\";\\n+const STATIC_TITLE_ANNO = \\\"bookmarks/staticTitle\\\";\\n const MAX_FOLDER_ITEM_IN_MENU_LIST = 5;\\n \\n-var gAddBookmarksPanel = {\\n+var gEditItemOverlay = {\\n   /**\\n    * The Microsummary Service for displaying microsummaries.\\n    */\\n@@ -55,20 +56,17 @@ var gAddBookmarksPanel = {\\n   _itemType: -1,\\n   _microsummaries: null,\\n   _doneCallback: null,\\n-  _currentTags: [],\\n   _hiddenRows: [],\\n+  _observersAdded: false,\\n+\\n+  get itemId() {\\n+    return this._itemId;\\n+  },\\n \\n   /**\\n    * Determines the initial data for the item edited or added by this dialog\\n    */\\n-  _determineInfo: function ABP__determineInfo(aInfo) {\\n-    const bms = PlacesUtils.bookmarks;\\n-    this._itemType = bms.getItemType(this._itemId);\\n-    if (this._itemType == Ci.nsINavBookmarksService.TYPE_BOOKMARK)\\n-      this._currentTags = PlacesUtils.tagging.getTagsForURI(this._uri);\\n-    else\\n-      this._currentTags.splice(0);\\n-\\n+  _determineInfo: function EIO__determineInfo(aInfo) {\\n     // hidden rows\\n     if (aInfo && aInfo.hiddenRows)\\n       this._hiddenRows = aInfo.hiddenRows;\\n@@ -76,42 +74,56 @@ var gAddBookmarksPanel = {\\n       this._hiddenRows.splice(0);\\n   },\\n \\n-  _showHideRows: function EBP__showHideRows() {\\n+  _showHideRows: function EIO__showHideRows() {\\n+    var isBookmark = this._itemType == Ci.nsINavBookmarksService.TYPE_BOOKMARK;\\n     this._element(\\\"nameRow\\\").hidden = this._hiddenRows.indexOf(\\\"name\\\") != -1;\\n     this._element(\\\"folderRow\\\").hidden =\\n       this._hiddenRows.indexOf(\\\"folderPicker\\\") != -1;\\n-    this._element(\\\"tagsRow\\\").hidden = this._hiddenRows.indexOf(\\\"tags\\\") != -1 ||\\n-      this._itemType != Ci.nsINavBookmarksService.TYPE_BOOKMARK;\\n+    this._element(\\\"tagsRow\\\").hidden =\\n+      this._hiddenRows.indexOf(\\\"tags\\\") != -1 || !isBookmark;\\n     this._element(\\\"descriptionRow\\\").hidden =\\n       this._hiddenRows.indexOf(\\\"description\\\") != -1;\\n+    this._element(\\\"locationRow\\\").hidden =\\n+      this._hiddenRows.indexOf(\\\"location\\\") != -1 || !isBookmark;\\n   },\\n \\n   /**\\n    * Initialize the panel\\n    */\\n-  initPanel: function ABP_initPanel(aItemId, aTm, aDoneCallback, aInfo) {\\n+  initPanel: function EIO_initPanel(aItemId, aInfo) {\\n     this._folderMenuList = this._element(\\\"folderMenuList\\\");\\n     this._folderTree = this._element(\\\"folderTree\\\");\\n-    this._tm = aTm;\\n     this._itemId = aItemId;\\n-    this._uri = PlacesUtils.bookmarks.getBookmarkURI(this._itemId);\\n-    this._doneCallback = aDoneCallback;\\n+    this._itemType = PlacesUtils.bookmarks.getItemType(this._itemId);\\n     this._determineInfo(aInfo);\\n \\n+    if (this._itemType == Ci.nsINavBookmarksService.TYPE_BOOKMARK) {\\n+      this._uri = PlacesUtils.bookmarks.getBookmarkURI(this._itemId);\\n+      // tags field\\n+      this._element(\\\"tagsField\\\").value =\\n+        PlacesUtils.tagging.getTagsForURI(this._uri).join(\\\", \\\");\\n+\\n+      this._element(\\\"locationField\\\").value = this._uri.spec;\\n+    }\\n+\\n     // folder picker\\n     this._initFolderMenuList();\\n-    \\n+\\n     // name picker\\n     this._initNamePicker();\\n \\n-    // tags field\\n-    this._element(\\\"tagsField\\\").value = this._currentTags.join(\\\", \\\");\\n-\\n     // description field\\n     this._element(\\\"descriptionField\\\").value =\\n       PlacesUtils.getItemDescription(this._itemId);\\n \\n     this._showHideRows();\\n+\\n+    // observe changes\\n+    if (!this._observersAdded) {\\n+      PlacesUtils.bookmarks.addObserver(this, false);\\n+      window.addEventListener(\\\"unload\\\", this, false);\\n+      this._observersAdded = true;\\n+    }\\n   },\\n \\n   /**\\n@@ -123,7 +135,7 @@ var gAddBookmarksPanel = {\\n    * @return the new menu item.\\n    */\\n   _appendFolderItemToMenupopup:\\n-  function BPP__appendFolderItemToMenuList(aMenupopup, aFolderId) {\\n+  function EIO__appendFolderItemToMenuList(aMenupopup, aFolderId) {\\n     // First make sure the folders-separator is visible\\n     this._element(\\\"foldersSeparator\\\").hidden = false;\\n \\n@@ -136,7 +148,7 @@ var gAddBookmarksPanel = {\\n     return folderMenuItem;\\n   },\\n \\n-  _initFolderMenuList: function BPP__initFolderMenuList() {\\n+  _initFolderMenuList: function EIO__initFolderMenuList() {\\n     // clean up first\\n     var menupopup = this._folderMenuList.menupopup;\\n     while (menupopup.childNodes.length > 4)\\n@@ -184,21 +196,22 @@ var gAddBookmarksPanel = {\\n     this._element(\\\"foldersSeparator\\\").hidden = (menupopup.childNodes.length <= 4);\\n   },\\n \\n-  QueryInterface: function BPP_QueryInterface(aIID) {\\n+  QueryInterface: function EIO_QueryInterface(aIID) {\\n     if (aIID.equals(Ci.nsIMicrosummaryObserver) ||\\n         aIID.equals(Ci.nsIDOMEventListener) ||\\n+        aIID.equals(Ci.nsINavBookmarkObserver) ||\\n         aIID.eqauls(Ci.nsISupports))\\n       return this;\\n \\n     throw Cr.NS_ERROR_NO_INTERFACE;\\n   },\\n \\n-  _element: function BPP__element(aID) {\\n+  _element: function EIO__element(aID) {\\n     return document.getElementById(\\\"editBMPanel_\\\" + aID);\\n   },\\n \\n   _createMicrosummaryMenuItem:\\n-  function BPP__createMicrosummaryMenuItem(aMicrosummary) {\\n+  function EIO__createMicrosummaryMenuItem(aMicrosummary) {\\n     var menuItem = document.createElement(\\\"menuitem\\\");\\n \\n     // Store a reference to the microsummary in the menu item, so we know\\n@@ -226,22 +239,34 @@ var gAddBookmarksPanel = {\\n     return menuItem;\\n   },\\n \\n-  _initNamePicker: function ABP_initNamePicker() {\\n+  _getItemStaticTitle: function EIO__getItemStaticTitle() {\\n+    const annos = PlacesUtils.annotations;\\n+    if (annos.itemHasAnnotation(this._itemId, STATIC_TITLE_ANNO))\\n+      return annos.getItemAnnotation(this._itemId, STATIC_TITLE_ANNO);\\n+    return PlacesUtils.bookmarks.getItemTitle(this._itemId);\\n+  },\\n+\\n+  _initNamePicker: function EIO_initNamePicker() {\\n     var userEnteredNameField = this._element(\\\"userEnteredName\\\");\\n     var namePicker = this._element(\\\"namePicker\\\");\\n     var droppable = false;\\n \\n-    userEnteredNameField.label =\\n-      PlacesUtils.bookmarks.getItemTitle(this._itemId);\\n+    userEnteredNameField.label = this._getItemStaticTitle();\\n \\n     // clean up old entries\\n     var menupopup = namePicker.menupopup;\\n     while (menupopup.childNodes.length > 2)\\n       menupopup.removeChild(menupopup.lastChild);\\n \\n+    if (this._microsummaries) {\\n+      this._microsummaries.removeObserver(this);\\n+      this._microsummaries = null;\\n+    }\\n+\\n     var itemToSelect = userEnteredNameField;\\n     try {\\n-      this._microsummaries = this._mss.getMicrosummaries(this._uri, -1);\\n+      if (this._itemType == Ci.nsINavBookmarksService.TYPE_BOOKMARK)\\n+        this._microsummaries = this._mss.getMicrosummaries(this._uri, -1);\\n     }\\n     catch(ex) {\\n       // getMicrosummaries will throw an exception in at least two cases:\\n@@ -262,6 +287,9 @@ var gAddBookmarksPanel = {\\n           var microsummary = enumerator.getNext()\\n                                        .QueryInterface(Ci.nsIMicrosummary);\\n           var menuItem = this._createMicrosummaryMenuItem(microsummary);\\n+          if (this._mss.isMicrosummary(this._itemId, microsummary))\\n+            itemToSelect = menuItem;\\n+\\n           menupopup.appendChild(menuItem);\\n         }\\n       }\\n@@ -278,7 +306,7 @@ var gAddBookmarksPanel = {\\n   },\\n \\n   // nsIMicrosummaryObserver\\n-  onContentLoaded: function ABP_onContentLoaded(aMicrosummary) {\\n+  onContentLoaded: function EIO_onContentLoaded(aMicrosummary) {\\n     var namePicker = this._element(\\\"namePicker\\\");\\n     var childNodes = namePicker.menupopup.childNodes;\\n \\n@@ -302,7 +330,7 @@ var gAddBookmarksPanel = {\\n     }\\n   },\\n \\n-  onElementAppended: function BPP_onElementAppended(aMicrosummary) {\\n+  onElementAppended: function EIO_onElementAppended(aMicrosummary) {\\n     var namePicker = this._element(\\\"namePicker\\\");\\n     namePicker.menupopup\\n               .appendChild(this._createMicrosummaryMenuItem(aMicrosummary));\\n@@ -311,52 +339,46 @@ var gAddBookmarksPanel = {\\n     namePicker.setAttribute(\\\"droppable\\\", \\\"true\\\");\\n   },\\n \\n-  uninitPanel: function ABP_uninitPanel() {\\n-    if (this._microsummaries)\\n-      this._microsummaries.removeObserver(this);\\n+  uninitPanel: function EIO_uninitPanel(aHideCollapsibleElements) {\\n+    if (aHideCollapsibleElements) {\\n+      // hide the folder tree if it was previously visible\\n+      if (!this._folderTree.collapsed)\\n+        this.toggleFolderTreeVisibility();\\n \\n-    // hide the folder tree if it was previously visible\\n-    if (!this._folderTree.collapsed)\\n-      this.toggleFolderTreeVisibility();\\n+      // hide the tag selector if it was previously visible\\n+      var tagsSelector = this._element(\\\"tagsSelector\\\");\\n+      if (!tagsSelector.collapsed)\\n+        tagsSelector.collapsed = true;\\n+    }\\n \\n-    // hide the tag selector if it was previously visible\\n-    var tagsSelector = this._element(\\\"tagsSelector\\\");\\n-    if (!tagsSelector.collapsed)\\n-      tagsSelector.collapsed = true;\\n+    if (this._observersAdded) {\\n+      PlacesUtils.bookmarks.removeObserver(this);\\n+      this._observersAdded = false;\\n+    }\\n+    if (this._microsummaries) {\\n+      this._microsummaries.removeObserver(this);\\n+      this._microsummaries = null;\\n+    }\\n+    this._itemId = -1;\\n   },\\n \\n-  saveItem: function ABP_saveItem() {\\n-    var container = this._getFolderIdFromMenuList();\\n-    const bms = PlacesUtils.bookmarks;\\n-    const ptm = PlacesUtils.ptm;\\n-    var txns = [];\\n-\\n-    // container\\n-    if (bms.getFolderIdForItem(this._itemId) != container)\\n-      txns.push(ptm.moveItem(this._itemId, container, -1));\\n-\\n-    // title\\n-    var newTitle = this._element(\\\"userEnteredName\\\").label;\\n-    if (bms.getItemTitle(this._itemId) != newTitle)\\n-      txns.push(ptm.editItemTitle(this._itemId, newTitle));\\n-\\n-    // description\\n-    var newDescription = this._element(\\\"descriptionField\\\").value;\\n-    if (newDescription != PlacesUtils.getItemDescription(this._itemId))\\n-      txns.push(ptm.editItemDescription(this._itemId, newDescription));\\n+  onTagsFieldBlur: function EIO_onTagsFieldBlur() {\\n+    this._updateTags();\\n+  },\\n \\n-    // Tags, NOT YET UNDOABLE\\n+  _updateTags: function EIO__updateTags() {\\n+    var currentTags = PlacesUtils.tagging.getTagsForURI(this._uri);\\n     var tags = this._getTagsArrayFromTagField();\\n-    if (tags.length > 0 || this._currentTags.length > 0) {\\n+    if (tags.length > 0 || currentTags.length > 0) {\\n       var tagsToRemove = [];\\n       var tagsToAdd = [];\\n       var t;\\n-      for each (t in this._currentTags) {\\n+      for each (t in currentTags) {\\n         if (tags.indexOf(t) == -1)\\n           tagsToRemove.push(t);\\n       }\\n       for each (t in tags) {\\n-        if (this._currentTags.indexOf(t) == -1)\\n+        if (currentTags.indexOf(t) == -1)\\n           tagsToAdd.push(t);\\n       }\\n \\n@@ -365,23 +387,75 @@ var gAddBookmarksPanel = {\\n       if (tagsToRemove.length > 0)\\n         PlacesUtils.tagging.untagURI(this._uri, tagsToRemove);\\n     }\\n+  },\\n \\n-    if (txns.length > 0) {\\n-      // Mark the containing folder as recently-used if it isn't the\\n-      // \\\"All Bookmarks\\\" root\\n-      if (container != PlacesUtils.placesRootId)\\n-        this._markFolderAsRecentlyUsed(container);\\n+  onNamePickerInput: function EIO_onNamePickerInput() {\\n+    var title = this._element(\\\"namePicker\\\").value;\\n+    this._element(\\\"userEnteredName\\\").label = title;\\n+  },\\n+\\n+  onNamePickerChange: function EIO_onNamePickerChange() {\\n+    var namePicker = this._element(\\\"namePicker\\\")\\n+    var txns = [];\\n+    const ptm = PlacesUtils.ptm;\\n+\\n+    // Here we update either the item title or its cached static title\\n+    var newTitle = this._element(\\\"userEnteredName\\\").label;\\n+    if (this._getItemStaticTitle() != newTitle) {\\n+      if (PlacesUtils.microsummaries.hasMicrosummary(this._itemId)) {\\n+        // Note: this implicitly also takes care of the microsummary->static\\n+        // title case, the removeMicorosummary method in the service will set\\n+        // the item-title to the value of this annotation.\\n+        //\\n+        // XXXmano: use a transaction\\n+        PlacesUtils.setAnnotationsForItem(this._itemId,\\n+                                          [{name: STATIC_TITLE_ANNO,\\n+                                            value: newTitle}]);\\n+      }\\n+      else\\n+        txns.push(ptm.editItemTitle(this._itemId, newTitle));\\n+    }\\n+\\n+    var newMicrosummary = namePicker.selectedItem.microsummary;\\n+\\n+    // Only add a microsummary update to the transaction if the microsummary\\n+    // has actually changed, i.e. the user selected no microsummary, but the\\n+    // bookmark previously had one, or the user selected a microsummary which\\n+    // is not the one the bookmark previously had\\n+    if ((newMicrosummary == null && this._mss.hasMicrosummary(this._itemId)) ||\\n+        (newMicrosummary != null &&\\n+         !this._mss.isMicrosummary(this._itemId, newMicrosummary))) {\\n+      txns.push(ptm.editBookmarkMicrosummary(this._itemId, newMicrosummary));\\n     }\\n \\n-    if (txns.length > 0)\\n-      ptm.commitTransaction(ptm.aggregateTransactions(\\\"Edit Item\\\", txns));\\n+    var aggregate = ptm.aggregateTransactions(\\\"Edit Item Title\\\", txns);\\n+    ptm.commitTransaction(aggregate);\\n   },\\n \\n-  onNamePickerInput: function ABP_onNamePickerInput() {\\n-    this._element(\\\"userEnteredName\\\").label = this._element(\\\"namePicker\\\").value;\\n+  onDescriptionFieldBlur: function EIO_onDescriptionFieldInput() {\\n+    var description = this._element(\\\"descriptionField\\\").value;\\n+    if (description != PlacesUtils.getItemDescription(this._itemId)) {\\n+      var txn = PlacesUtils.ptm\\n+                           .editItemDescription(this._itemId, description);\\n+      PlacesUtils.ptm.commitTransaction(txn);\\n+    }\\n+  },\\n+\\n+  onLocationFieldBlur: function EIO_onLocationFieldBlur() {\\n+    // XXXmano: uri fixup\\n+    var uri;\\n+    try {\\n+      uri = IO.newURI(this._element(\\\"locationField\\\").value);\\n+    }\\n+    catch(ex) { return; }\\n+\\n+    if (!this._uri.equals(uri)) {\\n+      var txn = PlacesUtils.ptm.editBookmarkURI(this._itemId, uri);\\n+      PlacesUtils.ptm.commitTransaction(txn);\\n+    }\\n   },\\n \\n-  toggleFolderTreeVisibility: function ABP_toggleFolderTreeVisibility() {\\n+  toggleFolderTreeVisibility: function EIO_toggleFolderTreeVisibility() {\\n     var expander = this._element(\\\"foldersExpander\\\");\\n     if (!this._folderTree.collapsed) {\\n       expander.className = \\\"expander-down\\\";\\n@@ -402,7 +476,7 @@ var gAddBookmarksPanel = {\\n   },\\n \\n   _getFolderIdFromMenuList:\\n-  function BPP__getFolderIdFromMenuList() {\\n+  function EIO__getFolderIdFromMenuList() {\\n     var selectedItem = this._folderMenuList.selectedItem\\n     switch (selectedItem.id) {\\n       case \\\"editBMPanel_placesRootItem\\\":\\n@@ -431,7 +505,7 @@ var gAddBookmarksPanel = {\\n    *        true.\\n    */\\n   _getFolderMenuItem:\\n-  function BPP__getFolderMenuItem(aFolderId, aCheckStaticFolderItems) {\\n+  function EIO__getFolderMenuItem(aFolderId, aCheckStaticFolderItems) {\\n     var menupopup = this._folderMenuList.menupopup;\\n \\n     // 0: All Bookmarks, 1: Bookmarks root, 2: toolbar folder, 3: separator\\n@@ -444,9 +518,9 @@ var gAddBookmarksPanel = {\\n       if (aFolderId == PlacesUtils.placesRootId)\\n         return this._element(\\\"placesRootItem\\\");\\n       if (aFolderId == PlacesUtils.bookmarksRootId)\\n-        return this._element(\\\"bmRootItem\\\")\\n+        return this._element(\\\"bmRootItem\\\");\\n       if (aFolderId == PlacesUtils.toolbarFolderId)\\n-        return this._element(\\\"toolbarFolderItem\\\")\\n+        return this._element(\\\"toolbarFolderItem\\\");\\n     }\\n \\n     // 3 special folders + separator + folder-items-count limit\\n@@ -456,14 +530,29 @@ var gAddBookmarksPanel = {\\n     return this._appendFolderItemToMenupopup(menupopup, aFolderId);\\n   },\\n \\n-  onMenuListFolderSelect: function BPP_onMenuListFolderSelect(aEvent) {\\n-    if (this._folderTree.hidden)\\n-      return;\\n+  onFolderMenuListCommand: function EIO_onFolderMenuListCommand(aEvent) {\\n+    var container = this._getFolderIdFromMenuList();\\n+\\n+    // Move the item\\n+    if (PlacesUtils.bookmarks.getFolderIdForItem(this._itemId) != container) {\\n+      var txn = PlacesUtils.ptm.moveItem(this._itemId, container, -1);\\n+      PlacesUtils.ptm.commitTransaction(txn);\\n+\\n+      // Mark the containing folder as recently-used if it isn't the\\n+      // \\\"All Bookmarks\\\" root\\n+      if (container != PlacesUtils.placesRootId)\\n+        this._markFolderAsRecentlyUsed(container);\\n+    }\\n \\n-    this._folderTree.selectFolders([this._getFolderIdFromMenuList()]);\\n+    // Update folder-tree selection\\n+    if (isElementVisible(this._folderTree)) {\\n+      var selectedNode = this._folderTree.selectedNode;\\n+      if (selectedNode.itemId != container)\\n+        this._folderTree.selectFolders([container]);\\n+    }\\n   },\\n \\n-  onFolderTreeSelect: function BPP_onFolderTreeSelect() {\\n+  onFolderTreeSelect: function EIO_onFolderTreeSelect() {\\n     var selectedNode = this._folderTree.selectedNode;\\n     if (!selectedNode)\\n       return;\\n@@ -473,17 +562,18 @@ var gAddBookmarksPanel = {\\n     // already selected\\n     var oldSelectedItem = this._folderMenuList.selectedItem;\\n     if ((oldSelectedItem.id == \\\"editBMPanel_toolbarFolderItem\\\" &&\\n-         folderId == PlacesUtils.bookmarks.toolbarFolder) ||\\n+         folderId == PlacesUtils.toolbarFolderId) ||\\n         (oldSelectedItem.id == \\\"editBMPanel_bmRootItem\\\" &&\\n-         folderId == PlacesUtils.bookmarks.bookmarksRoot))\\n+         folderId == PlacesUtils.bookmarksRootId))\\n       return;\\n \\n     var folderItem = this._getFolderMenuItem(folderId, false);\\n     this._folderMenuList.selectedItem = folderItem;\\n+    folderItem.doCommand();\\n   },\\n \\n   _markFolderAsRecentlyUsed:\\n-  function ABP__markFolderAsRecentlyUsed(aFolderId) {\\n+  function EIO__markFolderAsRecentlyUsed(aFolderId) {\\n     // We'll figure out when/if to expire the annotation if it turns out\\n     // we keep this recently-used-folders implementation\\n     PlacesUtils.annotations\\n@@ -492,47 +582,34 @@ var gAddBookmarksPanel = {\\n                                   Ci.nsIAnnotationService.EXPIRE_NEVER);\\n   },\\n \\n-  accept: function ABP_accept() {\\n-    this.saveItem();\\n-    if (typeof(this._doneCallback) == \\\"function\\\")\\n-      this._doneCallback();\\n-  },\\n+  _rebuildTagsSelectorList: function EIO__rebuildTagsSelectorList() {\\n+    var tagsSelector = this._element(\\\"tagsSelector\\\");\\n \\n-  deleteAndClose: function ABP_deleteAndClose() {\\n-    // remove the item\\n-    if (this._itemId != -1)\\n-      PlacesUtils.bookmarks.removeItem(this._itemId);\\n+    while (tagsSelector.hasChildNodes())\\n+      tagsSelector.removeChild(tagsSelector.lastChild);\\n \\n-    // remove all tags for the associated url\\n-    PlacesUtils.tagging.untagURI(this._uri, null);\\n+    var tagsInField = this._getTagsArrayFromTagField();\\n+    var allTags = PlacesUtils.tagging.allTags;\\n+    for each (var tag in allTags) {\\n+      var elt = document.createElement(\\\"listitem\\\");\\n+      elt.setAttribute(\\\"type\\\", \\\"checkbox\\\");\\n+      elt.setAttribute(\\\"label\\\", tag);\\n+      if (tagsInField.indexOf(tag) != -1)\\n+        elt.setAttribute(\\\"checked\\\", \\\"true\\\");\\n \\n-    if (typeof(this._doneCallback) == \\\"function\\\")\\n-      this._doneCallback();\\n+      tagsSelector.appendChild(elt);\\n+    }\\n   },\\n \\n-  toggleTagsSelector: function ABP_toggleTagsSelector() {\\n+  toggleTagsSelector: function EIO_toggleTagsSelector() {\\n     var tagsSelector = this._element(\\\"tagsSelector\\\");\\n     var expander = this._element(\\\"tagsSelectorExpander\\\");\\n-    if (tagsSelector.collapsed) {\\n+    if (!isElementVisible(tagsSelector)) {\\n       expander.className = \\\"expander-down\\\";\\n       expander.setAttribute(\\\"tooltiptext\\\",\\n                             expander.getAttribute(\\\"tooltiptextdown\\\"));\\n \\n-      // rebuild the tag list\\n-      while (tagsSelector.hasChildNodes())\\n-        tagsSelector.removeChild(tagsSelector.lastChild);\\n-\\n-      var tagsInField = this._getTagsArrayFromTagField();\\n-      var allTags = PlacesUtils.tagging.allTags;\\n-      for each (var tag in allTags) {\\n-        var elt = document.createElement(\\\"listitem\\\");\\n-        elt.setAttribute(\\\"type\\\", \\\"checkbox\\\");\\n-        elt.setAttribute(\\\"label\\\", tag);\\n-        if (tagsInField.indexOf(tag) != -1)\\n-          elt.setAttribute(\\\"checked\\\", \\\"true\\\");\\n-\\n-        tagsSelector.appendChild(elt);\\n-      }\\n+      this._rebuildTagsSelectorList();\\n \\n       // This is a no-op if we've added the listener.\\n       tagsSelector.addEventListener(\\\"CheckboxStateChange\\\", this, false);\\n@@ -546,7 +623,7 @@ var gAddBookmarksPanel = {\\n     tagsSelector.collapsed = !tagsSelector.collapsed;\\n   },\\n \\n-  _getTagsArrayFromTagField: function() {\\n+  _getTagsArrayFromTagField: function EIO__getTagsArrayFromTagField() {\\n     // we don't require the leading space (after each comma)\\n     var tags = this._element(\\\"tagsField\\\").value.split(\\\",\\\");\\n     for (var i=0; i < tags.length; i++) {\\n@@ -563,8 +640,9 @@ var gAddBookmarksPanel = {\\n   },\\n \\n   // nsIDOMEventListener\\n-  handleEvent: function ABP_nsIDOMEventListener(aEvent) {\\n-    if (aEvent.type == \\\"CheckboxStateChange\\\") {\\n+  handleEvent: function EIO_nsIDOMEventListener(aEvent) {\\n+    switch (aEvent.type) {\\n+    case \\\"CheckboxStateChange\\\":\\n       // Update the tags field when items are checked/unchecked in the listbox\\n       var tags = this._getTagsArrayFromTagField();\\n \\n@@ -576,6 +654,68 @@ var gAddBookmarksPanel = {\\n           tags.splice(indexOfItem, 1);\\n       }\\n       this._element(\\\"tagsField\\\").value = tags.join(\\\", \\\");\\n+      this._updateTags();\\n+      break;\\n+    case \\\"unload\\\":\\n+      this.uninitPanel(false);\\n+      break;\\n+    }\\n+  },\\n+\\n+  // nsINavBookmarkObserver\\n+  onItemChanged: function EIO_onItemChanged(aItemId, aProperty,\\n+                                            aIsAnnotationProperty, aValue) {\\n+    if (this._itemId != aItemId)\\n+      return;\\n+\\n+    switch (aProperty) {\\n+    case \\\"title\\\":\\n+      if (PlacesUtils.annotations.itemHasAnnotation(this._itemId,\\n+                                                    STATIC_TITLE_ANNO))\\n+        return;  // onContentLoaded updates microsummary-items\\n+\\n+      var userEnteredNameField = this._element(\\\"userEnteredName\\\");\\n+      if (userEnteredNameField.value != aValue) {\\n+          userEnteredNameField.value = aValue;\\n+        var namePicker = this._element(\\\"namePicker\\\");\\n+        if (namePicker.selectedItem == userEnteredNameField)\\n+          namePicker.label = aValue;\\n+      }\\n+      break;\\n+    case \\\"uri\\\":\\n+      var locationField = this._element(\\\"locationField\\\");\\n+      if (locationField.value != aValue) {\\n+        locationField.value = aValue;\\n+        this._uri = IO.newURI(aValue);\\n+        this._initNamePicker(); // for microsummaries\\n+        this._element(\\\"tagsField\\\").value =\\n+          PlacesUtils.tagging.getTagsForURI(this._uri).join(\\\", \\\");\\n+        this._rebuildTagsSelectorList();\\n+      }\\n+      break;\\n+    case DESCRIPTION_ANNO:\\n+      this._element(\\\"descriptionField\\\").value =\\n+        PlacesUtils.annotations.getItemDescription(this._itemId);\\n+      break;\\n     }\\n-  }\\n+  },\\n+\\n+  onItemMoved: function EIO_onItemMoved(aItemId, aOldParent, aOldIndex,\\n+                                        aNewParent, aNewIndex) {\\n+    if (aItemId != this._itemId ||\\n+        aNewParent == this._getFolderIdFromMenuList())\\n+      return;\\n+\\n+    var folderItem = this._getFolderMenuItem(aNewParent, false);\\n+\\n+    // just setting selectItem _does not_ trigger oncommand, so we don't\\n+    // recurse\\n+    this._folderMenuList.selectedItem = folderItem;\\n+  },\\n+\\n+  onBeginUpdateBatch: function() { },\\n+  onEndUpdateBatch: function() { },\\n+  onItemAdded: function() { },\\n+  onItemRemoved: function() { },\\n+  onItemVisited: function() { },\\n };\\ndiff --git a/browser/components/places/content/editBookmarkOverlay.xul b/browser/components/places/content/editBookmarkOverlay.xul\\nindex 64ba103..8b4d928 100644\\n--- a/browser/components/places/content/editBookmarkOverlay.xul\\n+++ b/browser/components/places/content/editBookmarkOverlay.xul\\n@@ -62,7 +62,9 @@\\n                     flex=\\\"1\\\"\\n                     editable=\\\"true\\\"\\n                     droppable=\\\"false\\\"\\n-                    oninput=\\\"gAddBookmarksPanel.onNamePickerInput();\\\">\\n+                    oninput=\\\"gEditItemOverlay.onNamePickerInput();\\\"\\n+                    onblur=\\\"gEditItemOverlay.onNamePickerChange();\\\"\\n+                    oncommand=\\\"gEditItemOverlay.onNamePickerChange();\\\">\\n             <menupopup>\\n               <menuitem id=\\\"editBMPanel_userEnteredName\\\"/>\\n               <menuitem disabled=\\\"true\\\">\\n@@ -72,12 +74,18 @@\\n             </menupopup>\\n           </menulist>\\n         </row>\\n+        <row align=\\\"center\\\" id=\\\"editBMPanel_locationRow\\\">\\n+          <label value=\\\"&editBookmarkOverlay.location.label;\\\"\\n+                 contorl=\\\"editBMPanel_locationField\\\"/>\\n+          <textbox id=\\\"editBMPanel_locationField\\\"\\n+                   onblur=\\\"gEditItemOverlay.onLocationFieldBlur();\\\"/>\\n+        </row>\\n         <row align=\\\"center\\\" id=\\\"editBMPanel_folderRow\\\">\\n           <label value=\\\"&editBookmarkOverlay.folder.label;\\\"\\n                  control=\\\"editBMPanel_folderMenuList\\\"/>\\n           <menulist id=\\\"editBMPanel_folderMenuList\\\"\\n                     class=\\\"folder-icon\\\"\\n-                    oncommand=\\\"gAddBookmarksPanel.onMenuListFolderSelect();\\\">\\n+                    oncommand=\\\"gEditItemOverlay.onFolderMenuListCommand();\\\">\\n             <menupopup>\\n               <!-- Static item for special folders -->\\n               <menuitem id=\\\"editBMPanel_placesRootItem\\\"\\n@@ -97,14 +105,14 @@\\n                   tooltiptext=\\\"&editBookmarkOverlay.foldersExpanderDown.tooltip;\\\"\\n                   tooltiptextdown=\\\"&editBookmarkOverlay.foldersExpanderDown.tooltip;\\\"\\n                   tooltiptextup=\\\"&editBookmarkOverlay.expanderUp.tooltip;\\\"\\n-                  oncommand=\\\"gAddBookmarksPanel.toggleFolderTreeVisibility();\\\"/>\\n+                  oncommand=\\\"gEditItemOverlay.toggleFolderTreeVisibility();\\\"/>\\n         </row>\\n         <tree id=\\\"editBMPanel_folderTree\\\"\\n               class=\\\"placesTree\\\"\\n               type=\\\"places\\\"\\n               height=\\\"150\\\"\\n               collapsed=\\\"true\\\"\\n-              onselect=\\\"gAddBookmarksPanel.onFolderTreeSelect();\\\"\\n+              onselect=\\\"gEditItemOverlay.onFolderTreeSelect();\\\"\\n               showRoot=\\\"true\\\"\\n               place=\\\"place:folder=2&amp;group=3&amp;excludeItems=1&amp;excludeQueries=1&amp;excludeReadOnlyFolders=1\\\"\\n               hidecolumnpicker=\\\"true\\\">\\n@@ -116,13 +124,14 @@\\n         <row align=\\\"center\\\" id=\\\"editBMPanel_tagsRow\\\">\\n           <label value=\\\"&editBookmarkOverlay.tags.label;\\\"\\n                  control=\\\"tagsField\\\"/>\\n-          <textbox id=\\\"editBMPanel_tagsField\\\"/>\\n+          <textbox id=\\\"editBMPanel_tagsField\\\"\\n+                   onblur=\\\"gEditItemOverlay.onTagsFieldBlur();\\\"/>\\n           <button id=\\\"editBMPanel_tagsSelectorExpander\\\"\\n                   class=\\\"expander-down\\\"\\n                   tooltiptext=\\\"&editBookmarkOverlay.tagsExpanderDown.tooltip;\\\"\\n                   tooltiptextdown=\\\"&editBookmarkOverlay.tagsExpanderDown.tooltip;\\\"\\n                   tooltiptextup=\\\"&editBookmarkOverlay.expanderUp.tooltip;\\\"\\n-                  oncommand=\\\"gAddBookmarksPanel.toggleTagsSelector();\\\"/>\\n+                  oncommand=\\\"gEditItemOverlay.toggleTagsSelector();\\\"/>\\n         </row>\\n \\n         <!-- XXX: Temporary workaround -->\\n@@ -133,18 +142,10 @@\\n         <row id=\\\"editBMPanel_descriptionRow\\\" align=\\\"center\\\">\\n           <label value=\\\"&editBookmarkOverlay.description.label;\\\"\\n                  control=\\\"editBMPanel_descriptionField\\\"/>\\n-          <textbox id=\\\"editBMPanel_descriptionField\\\"/>\\n+          <textbox id=\\\"editBMPanel_descriptionField\\\"\\n+                   onblur=\\\"gEditItemOverlay.onDescriptionFieldBlur();\\\"/>\\n         </row>\\n       </rows>\\n     </grid>\\n-\\n-    <hbox>\\n-      <spacer flex=\\\"1\\\"/>\\n-      <button label=\\\"&editBookmarkOverlay.delete.label;\\\"\\n-              oncommand=\\\"gAddBookmarksPanel.deleteAndClose();\\\"/>\\n-      <button label=\\\"&editBookmarkOverlay.ok.label;\\\"\\n-              default=\\\"true\\\"\\n-              oncommand=\\\"gAddBookmarksPanel.accept();\\\"/>\\n-    </hbox>\\n   </vbox>\\n </overlay>\\ndiff --git a/browser/components/places/content/places.js b/browser/components/places/content/places.js\\nindex 8c4e943..f247d29 100755\\n--- a/browser/components/places/content/places.js\\n+++ b/browser/components/places/content/places.js\\n@@ -325,6 +325,24 @@ var PlacesOrganizer = {\\n         statusText = selectedNode.uri;\\n     }\\n     document.getElementById(\\\"status\\\").label = statusText;\\n+  },\\n+\\n+  onContentTreeSelect: function PO_onContentTreeSelect() {\\n+    var contentTree = document.getElementById(\\\"placeContent\\\");\\n+    var deck = document.getElementById(\\\"infoDeck\\\");\\n+    this.updateStatusBarForView(contentTree);\\n+    if (contentTree.hasSingleSelection) {\\n+      var selectedNode = contentTree.selectedNode;\\n+      if (selectedNode.itemId != -1 &&\\n+          !PlacesUtils.nodeIsSeparator(selectedNode)) {\\n+        gEditItemOverlay.initPanel(selectedNode.itemId,\\n+                                   { hiddenRows: [\\\"folderPicker\\\"] });\\n+        deck.selectedIndex = 1;\\n+        return;\\n+      }\\n+    }\\n+    gEditItemOverlay.uninitPanel();\\n+    deck.selectedIndex = 0;\\n   }\\n };\\n \\ndiff --git a/browser/locales/en-US/chrome/browser/browser.dtd b/browser/locales/en-US/chrome/browser/browser.dtd\\nindex 6d906d6..436fe64 100644\\n--- a/browser/locales/en-US/chrome/browser/browser.dtd\\n+++ b/browser/locales/en-US/chrome/browser/browser.dtd\\n@@ -348,3 +348,5 @@\\n <!ENTITY spellAddDictionaries.label \\\"Add dictionaries...\\\">\\n <!ENTITY spellAddDictionaries.accesskey \\\"A\\\">\\n \\n+<!ENTITY editBookmark.done.label                      \\\"Done\\\">\\n+<!ENTITY editBookmark.delete.label                    \\\"Delete\\\">\\ndiff --git a/browser/locales/en-US/chrome/browser/places/editBookmarkOverlay.dtd b/browser/locales/en-US/chrome/browser/places/editBookmarkOverlay.dtd\\nindex daa59a6..848486d 100644\\n--- a/browser/locales/en-US/chrome/browser/places/editBookmarkOverlay.dtd\\n+++ b/browser/locales/en-US/chrome/browser/places/editBookmarkOverlay.dtd\\n@@ -1,4 +1,5 @@\\n <!ENTITY editBookmarkOverlay.name.label                      \\\"Name:\\\">\\n+<!ENTITY editBookmarkOverlay.location.label                  \\\"Location:\\\">\\n <!ENTITY editBookmarkOverlay.liveTitlesSeparator.label       \\\"Live Titles\\\">\\n <!ENTITY editBookmarkOverlay.folder.label                    \\\"Folder:\\\">\\n <!ENTITY editBookmarkOverlay.allBookmarksFolderItem.label    \\\"All Bookmarks\\\">\\n@@ -9,5 +10,3 @@\\n <!ENTITY editBookmarkOverlay.tags.label                      \\\"Tags\\\">\\n <!ENTITY editBookmarkOverlay.description.label               \\\"Description:\\\">\\n <!ENTITY editBookmarkOverlay.tagsExpanderDown.tooltip        \\\"Show all tags\\\">\\n-<!ENTITY editBookmarkOverlay.ok.label                        \\\"OK\\\">\\n-<!ENTITY editBookmarkOverlay.delete.label                    \\\"Delete\\\">\\n\""}