{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas16116d0\""},"diff":"\"16116d0 Only allow XOW wrapped prototypes to go to null, not other objects. bug 394815, r+sr+a=brendan\\ndiff --git a/js/src/xpconnect/src/XPCCrossOriginWrapper.cpp b/js/src/xpconnect/src/XPCCrossOriginWrapper.cpp\\nindex 0f43de6..c7b9a8f 100644\\n--- a/js/src/xpconnect/src/XPCCrossOriginWrapper.cpp\\n+++ b/js/src/xpconnect/src/XPCCrossOriginWrapper.cpp\\n@@ -657,25 +657,17 @@ XPC_XOW_GetOrSetProperty(JSContext *cx, JSObject *obj, jsval id, jsval *vp,\\n     return JS_FALSE;\\n   }\\n \\n-  if (checkProto && JS_GetPrototype(cx, wrappedObj) != proto) {\\n-    // Ensure that this __proto__ setting didn't create a cycle. The JS\\n-    // engine tries to do this, but XOWs confuse it. So here we deal with\\n-    // them by unwrapping each step up the prototype chain.\\n-\\n-    JSObject *oldProto = proto;\\n-    proto = wrappedObj;\\n-    while ((proto = JS_GetPrototype(cx, proto)) != nsnull) {\\n-      JSObject *unwrapped = GetWrappedObject(cx, proto);\\n-      if (unwrapped) {\\n-        proto = unwrapped;\\n-      }\\n-\\n-      if (proto == wrappedObj) {\\n-        JS_SetPrototype(cx, wrappedObj, oldProto);\\n-        JS_ReportError(cx, \\\"cyclic __proto__ value\\\");\\n-        return JS_FALSE;\\n-      }\\n-    }\\n+  JSObject *newProto;\\n+  if (checkProto &&\\n+      (newProto = JS_GetPrototype(cx, wrappedObj)) != proto &&\\n+      newProto) {\\n+    // __proto__ setting is a bad hack, people shouldn't do it. In the\\n+    // interests of sanity, only allow them to set XOW wrapped protos\\n+    // to null.\\n+\\n+    JS_SetPrototype(cx, wrappedObj, proto);\\n+    JS_ReportError(cx, \\\"invalid __proto__ value (can only be set to null)\\\");\\n+    return JS_FALSE;\\n   }\\n \\n   return WrapSameOriginProp(cx, obj, vp);\\n\""}