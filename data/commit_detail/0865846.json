{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas0865846\""},"diff":"\"0865846 Fix for bug 393329 (numerous xslt leaks visiting http://www.metacafe.com). r/sr/a=sicking.\\ndiff --git a/content/xslt/src/base/txCore.h b/content/xslt/src/base/txCore.h\\nindex d0700c7..8953c38 100644\\n--- a/content/xslt/src/base/txCore.h\\n+++ b/content/xslt/src/base/txCore.h\\n@@ -41,6 +41,7 @@\\n \\n #include \\\"nscore.h\\\"\\n #include \\\"nsDebug.h\\\"\\n+#include \\\"nsTraceRefcnt.h\\\"\\n #include \\\"prtypes.h\\\"\\n #include \\\"txDouble.h\\\"\\n \\n@@ -49,11 +50,17 @@ class nsAString;\\n class txObject\\n {\\n public:\\n+    txObject()\\n+    {\\n+        MOZ_COUNT_CTOR(txObject);\\n+    }\\n+\\n     /**\\n      * Deletes this txObject\\n      */\\n     virtual ~txObject()\\n     {\\n+        MOZ_COUNT_DTOR(txObject);\\n     }\\n };\\n \\ndiff --git a/content/xslt/src/xpath/txExpr.h b/content/xslt/src/xpath/txExpr.h\\nindex e42acbf..ca7ff01 100644\\n--- a/content/xslt/src/xpath/txExpr.h\\n+++ b/content/xslt/src/xpath/txExpr.h\\n@@ -70,6 +70,15 @@ class txXPathNode;\\n class Expr\\n {\\n public:\\n+    Expr()\\n+    {\\n+        MOZ_COUNT_CTOR(Expr);\\n+    }\\n+    virtual ~Expr()\\n+    {\\n+        MOZ_COUNT_DTOR(Expr);\\n+    }\\n+\\n     /**\\n      * Evaluates this Expr based on the given context node and processor state\\n      * @param context the context node for evaluation of this Expr\\n@@ -405,7 +414,15 @@ private:\\n class txNodeTest\\n {\\n public:\\n-    virtual ~txNodeTest() {}\\n+    txNodeTest()\\n+    {\\n+        MOZ_COUNT_CTOR(txNodeTest);\\n+    }\\n+    virtual ~txNodeTest()\\n+    {\\n+        MOZ_COUNT_DTOR(txNodeTest);\\n+    }\\n+\\n     /*\\n      * Virtual methods\\n      * pretty much a txPattern, but not supposed to be used \\ndiff --git a/content/xslt/src/xpath/txExprResult.h b/content/xslt/src/xpath/txExprResult.h\\nindex 055eec4..8442ce6 100644\\n--- a/content/xslt/src/xpath/txExprResult.h\\n+++ b/content/xslt/src/xpath/txExprResult.h\\n@@ -72,10 +72,14 @@ public:\\n     txAExprResult(txResultRecycler* aRecycler) : mRecycler(aRecycler)\\n     {\\n     }\\n+    virtual ~txAExprResult()\\n+    {\\n+    }\\n \\n     void AddRef()\\n     {\\n         ++mRefCnt;\\n+        NS_LOG_ADDREF(this, mRefCnt, \\\"txAExprResult\\\", sizeof(*this));\\n     }\\n     \\n     void Release(); // Implemented in txResultRecycler.cpp\\ndiff --git a/content/xslt/src/xpath/txResultRecycler.cpp b/content/xslt/src/xpath/txResultRecycler.cpp\\nindex f97d28a..77e0e25 100644\\n--- a/content/xslt/src/xpath/txResultRecycler.cpp\\n+++ b/content/xslt/src/xpath/txResultRecycler.cpp\\n@@ -290,7 +290,9 @@ txResultRecycler::getNonSharedNodeSet(txNodeSet* aNodeSet, txNodeSet** aResult)\\n void\\n txAExprResult::Release()\\n {\\n-    if (--mRefCnt == 0) {\\n+    --mRefCnt;\\n+    NS_LOG_RELEASE(this, mRefCnt, \\\"txAExprResult\\\");\\n+    if (mRefCnt == 0) {\\n         if (mRecycler) {\\n             mRecycler->recycle(this);\\n         }\\ndiff --git a/content/xslt/src/xpath/txResultRecycler.h b/content/xslt/src/xpath/txResultRecycler.h\\nindex 7d452e5..d463a0f 100644\\n--- a/content/xslt/src/xpath/txResultRecycler.h\\n+++ b/content/xslt/src/xpath/txResultRecycler.h\\n@@ -59,10 +59,13 @@ public:\\n     void AddRef()\\n     {\\n         ++mRefCnt;\\n+        NS_LOG_ADDREF(this, mRefCnt, \\\"txResultRecycler\\\", sizeof(*this));\\n     }\\n     void Release()\\n     {\\n-        if (--mRefCnt == 0) {\\n+        --mRefCnt;\\n+        NS_LOG_RELEASE(this, mRefCnt, \\\"txResultRecycler\\\");\\n+        if (mRefCnt == 0) {\\n             mRefCnt = 1; //stabilize\\n             delete this;\\n         }\\ndiff --git a/content/xslt/src/xslt/txInstructions.h b/content/xslt/src/xslt/txInstructions.h\\nindex 5d0df20..4079217 100644\\n--- a/content/xslt/src/xslt/txInstructions.h\\n+++ b/content/xslt/src/xslt/txInstructions.h\\n@@ -53,18 +53,19 @@ class txExecutionState;\\n class txInstruction : public TxObject\\n {\\n public:\\n-    txInstruction() : mNext(0)\\n+    txInstruction()\\n     {\\n+        MOZ_COUNT_CTOR(txInstruction);\\n     }\\n \\n     virtual ~txInstruction()\\n     {\\n-        delete mNext;\\n+        MOZ_COUNT_DTOR(txInstruction);\\n     }\\n \\n     virtual nsresult execute(txExecutionState& aEs) = 0;\\n \\n-    txInstruction* mNext;\\n+    nsAutoPtr<txInstruction> mNext;\\n };\\n \\n #define TX_DECL_TXINSTRUCTION  \\\\\\ndiff --git a/content/xslt/src/xslt/txStylesheet.h b/content/xslt/src/xslt/txStylesheet.h\\nindex 7f69016..d76e1b9 100644\\n--- a/content/xslt/src/xslt/txStylesheet.h\\n+++ b/content/xslt/src/xslt/txStylesheet.h\\n@@ -236,6 +236,14 @@ protected:\\n class txIGlobalParameter\\n {\\n public:\\n+    txIGlobalParameter()\\n+    {\\n+        MOZ_COUNT_CTOR(txIGlobalParameter);\\n+    }\\n+    virtual ~txIGlobalParameter()\\n+    {\\n+        MOZ_COUNT_DTOR(txIGlobalParameter);\\n+    }\\n     virtual nsresult getValue(txAExprResult** aValue) = 0;\\n };\\n \\ndiff --git a/content/xslt/src/xslt/txStylesheetCompiler.cpp b/content/xslt/src/xslt/txStylesheetCompiler.cpp\\nindex efbd19a..aae6512 100644\\n--- a/content/xslt/src/xslt/txStylesheetCompiler.cpp\\n+++ b/content/xslt/src/xslt/txStylesheetCompiler.cpp\\n@@ -72,13 +72,17 @@ txStylesheetCompiler::txStylesheetCompiler(const nsAString& aStylesheetURI,\\n nsrefcnt\\n txStylesheetCompiler::AddRef()\\n {\\n-    return ++mRefCnt;\\n+    ++mRefCnt;\\n+    NS_LOG_ADDREF(this, mRefCnt, \\\"txStylesheetCompiler\\\", sizeof(*this));\\n+    return mRefCnt;\\n }\\n \\n nsrefcnt\\n txStylesheetCompiler::Release()\\n {\\n-    if (--mRefCnt == 0) {\\n+    --mRefCnt;\\n+    NS_LOG_RELEASE(this, mRefCnt, \\\"txStylesheetCompiler\\\");\\n+    if (mRefCnt == 0) {\\n         mRefCnt = 1; //stabilize\\n         delete this;\\n         return 0;\\n@@ -764,7 +768,7 @@ txStylesheetCompilerState::addInstruction(nsAutoPtr<txInstruction> aInstruction)\\n     txInstruction* newInstr = aInstruction;\\n \\n     *mNextInstrPtr = aInstruction.forget();\\n-    mNextInstrPtr = &newInstr->mNext;\\n+    mNextInstrPtr = newInstr->mNext.StartAssignment();\\n     \\n     PRInt32 i, count = mGotoTargetPointers.Count();\\n     for (i = 0; i < count; ++i) {\\ndiff --git a/content/xslt/src/xslt/txToplevelItems.h b/content/xslt/src/xslt/txToplevelItems.h\\nindex f4876c2..61b2be7 100644\\n--- a/content/xslt/src/xslt/txToplevelItems.h\\n+++ b/content/xslt/src/xslt/txToplevelItems.h\\n@@ -51,8 +51,13 @@ class Expr;\\n class txToplevelItem\\n {\\n public:\\n+    txToplevelItem()\\n+    {\\n+        MOZ_COUNT_CTOR(txToplevelItem);\\n+    }\\n     virtual ~txToplevelItem()\\n     {\\n+        MOZ_COUNT_DTOR(txToplevelItem);\\n     }\\n \\n     enum type {\\n\""}