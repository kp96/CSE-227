{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas44abdac\""},"diff":"\"44abdac Detect placeholders when building the array of frames for bidi resolution and add the real frames to the array. Bug 384527, r+sr=roc, b=dbaron\\ndiff --git a/layout/base/nsBidiPresUtils.cpp b/layout/base/nsBidiPresUtils.cpp\\nindex 312336f..071c40c 100644\\n--- a/layout/base/nsBidiPresUtils.cpp\\n+++ b/layout/base/nsBidiPresUtils.cpp\\n@@ -51,6 +51,7 @@\\n #include \\\"nsCSSFrameConstructor.h\\\"\\n #include \\\"nsHTMLContainerFrame.h\\\"\\n #include \\\"nsInlineFrame.h\\\"\\n+#include \\\"nsPlaceholderFrame.h\\\"\\n \\n static NS_DEFINE_IID(kInlineFrameCID, NS_INLINE_FRAME_CID);\\n \\n@@ -194,7 +195,7 @@ CreateBidiContinuation(nsPresContext* aPresContext,\\n   return NS_OK;\\n }\\n \\n-static void\\n+static PRBool\\n AdvanceLineIteratorToFrame(nsIFrame* aFrame,\\n                            nsIFrame* aBlockFrame,\\n                            nsBlockFrame::line_iterator& aLine,\\n@@ -205,6 +206,8 @@ AdvanceLineIteratorToFrame(nsIFrame* aFrame,\\n   nsIFrame* child = aFrame;\\n   nsIFrame* parent = child->GetParent();\\n   while (parent && parent != aBlockFrame) {\\n+    if (parent->GetStyleDisplay()->IsBlockOutside())\\n+      return PR_FALSE;\\n     child = parent;\\n     parent = child->GetParent();\\n   }\\n@@ -215,6 +218,7 @@ AdvanceLineIteratorToFrame(nsIFrame* aFrame,\\n   }\\n   aPrevFrame = child;\\n   NS_ASSERTION (aLine != aEndLines, \\\"frame not found on any line\\\");\\n+  return PR_TRUE;\\n }\\n \\n /*\\n@@ -415,8 +419,10 @@ nsBidiPresUtils::Resolve(nsPresContext* aPresContext,\\n             break;\\n           }\\n           if (lineNeedsUpdate) {\\n-            AdvanceLineIteratorToFrame(frame, aBlockFrame, line, prevFrame, endLines);\\n-            lineNeedsUpdate = PR_FALSE;\\n+            if (AdvanceLineIteratorToFrame(frame, aBlockFrame, line,\\n+                                           prevFrame, endLines)) {\\n+              lineNeedsUpdate = PR_FALSE;\\n+            }\\n           }\\n           line->MarkDirty();\\n           frame->AdjustOffsetsForBidi(contentOffset, contentOffset + runLength);\\n@@ -431,8 +437,10 @@ nsBidiPresUtils::Resolve(nsPresContext* aPresContext,\\n             RemoveBidiContinuation(aPresContext, frame,\\n                                    frameIndex, newIndex, temp);\\n             if (lineNeedsUpdate) {\\n-              AdvanceLineIteratorToFrame(frame, aBlockFrame, line, prevFrame, endLines);\\n-              lineNeedsUpdate = PR_FALSE;\\n+              if (AdvanceLineIteratorToFrame(frame, aBlockFrame, line,\\n+                                             prevFrame, endLines)) {\\n+                lineNeedsUpdate = PR_FALSE;\\n+              }\\n             }\\n             line->MarkDirty();\\n             runLength -= temp;\\n@@ -471,11 +479,8 @@ nsBidiPresUtils::Resolve(nsPresContext* aPresContext,\\n // Should this frame be treated as a leaf (e.g. when building mLogicalArray)?\\n PRBool IsBidiLeaf(nsIFrame* aFrame) {\\n   nsIFrame* kid = aFrame->GetFirstChild(nsnull);\\n-  // Need the IsBlockLevel() check because nsFirstLetterFrame is\\n-  // always of type eBidiInlineContainer, even if it's floating.\\n   return !kid\\n-    || !aFrame->IsFrameOfType(nsIFrame::eBidiInlineContainer)\\n-    || aFrame->GetStyleDisplay()->IsBlockOutside();\\n+    || !aFrame->IsFrameOfType(nsIFrame::eBidiInlineContainer);\\n }\\n \\n nsresult\\n@@ -484,15 +489,17 @@ nsBidiPresUtils::InitLogicalArray(nsPresContext* aPresContext,\\n                                   nsIFrame*       aNextInFlow,\\n                                   PRBool          aAddMarkers)\\n {\\n-  nsIFrame*             frame;\\n   nsresult              res = NS_OK;\\n \\n   nsIPresShell* shell = aPresContext->PresShell();\\n   nsStyleContext* styleContext;\\n \\n-  for (frame = aCurrentFrame;\\n-       frame && frame != aNextInFlow;\\n-       frame = frame->GetNextSibling()) {\\n+  for (nsIFrame* childFrame = aCurrentFrame;\\n+       childFrame && childFrame != aNextInFlow;\\n+       childFrame = childFrame->GetNextSibling()) {\\n+\\n+    nsIFrame* frame = (nsGkAtoms::placeholderFrame == childFrame->GetType()) ?\\n+      nsPlaceholderFrame::GetRealFrameFor(childFrame) : childFrame;\\n \\n     PRUnichar ch = 0;\\n     if (aAddMarkers &&\\n\""}