{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basaddb183\""},"diff":"\"addb183 backout fix for bug 345428 due to memory leaks\\ndiff --git a/extensions/spellcheck/src/mozInlineSpellChecker.cpp b/extensions/spellcheck/src/mozInlineSpellChecker.cpp\\nindex 56afc275..d2ccf21 100644\\n--- a/extensions/spellcheck/src/mozInlineSpellChecker.cpp\\n+++ b/extensions/spellcheck/src/mozInlineSpellChecker.cpp\\n@@ -73,7 +73,6 @@\\n #include \\\"nsIDOMDocument.h\\\"\\n #include \\\"nsIDOMDocumentRange.h\\\"\\n #include \\\"nsIDOMElement.h\\\"\\n-#include \\\"nsPIDOMWindow.h\\\"\\n #include \\\"nsIDOMEventTarget.h\\\"\\n #include \\\"nsPIDOMEventTarget.h\\\"\\n #include \\\"nsIDOMMouseEvent.h\\\"\\n@@ -505,7 +504,6 @@ public:\\n NS_INTERFACE_MAP_BEGIN(mozInlineSpellChecker)\\n NS_INTERFACE_MAP_ENTRY(nsIInlineSpellChecker)\\n NS_INTERFACE_MAP_ENTRY(nsIEditActionListener)\\n-NS_INTERFACE_MAP_ENTRY(nsIDOMFocusListener)\\n NS_INTERFACE_MAP_ENTRY(nsIDOMMouseListener)\\n NS_INTERFACE_MAP_ENTRY(nsISupportsWeakReference)\\n NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIDOMKeyListener)\\n@@ -626,24 +624,11 @@ mozInlineSpellChecker::RegisterEventListeners()\\n \\n   nsCOMPtr<nsIDOMDocument> doc;\\n   nsresult rv = editor->GetDocument(getter_AddRefs(doc));\\n-  NS_ENSURE_SUCCESS(rv, rv);\\n-\\n-  nsCOMPtr<nsIDocument> doc2 = do_QueryInterface(doc);\\n-  NS_ENSURE_TRUE(doc2, nsnull);\\n-  nsCOMPtr<nsPIDOMWindow> win = do_QueryInterface(doc2->GetWindow());\\n-  nsPIDOMEventTarget* chromeEventHandler = nsnull;\\n-  if (win)\\n-    chromeEventHandler = win->GetChromeEventHandler();\\n-\\n-  nsCOMPtr<nsIDOMEventTarget> target = do_QueryInterface(chromeEventHandler, &rv);\\n-  NS_ENSURE_SUCCESS(rv, rv);\\n+  NS_ENSURE_SUCCESS(rv, rv); \\n \\n   nsCOMPtr<nsPIDOMEventTarget> piTarget = do_QueryInterface(doc, &rv);\\n-  NS_ENSURE_SUCCESS(rv, rv);\\n+  NS_ENSURE_SUCCESS(rv, rv); \\n \\n-  target->AddEventListener(NS_LITERAL_STRING(\\\"blur\\\"),\\n-                           static_cast<nsIDOMFocusListener *>(this),\\n-                           PR_TRUE);\\n   piTarget->AddEventListenerByIID(static_cast<nsIDOMMouseListener*>(this),\\n                                   NS_GET_IID(nsIDOMMouseListener));\\n   piTarget->AddEventListenerByIID(static_cast<nsIDOMKeyListener*>(this),\\n@@ -669,20 +654,6 @@ mozInlineSpellChecker::UnregisterEventListeners()\\n   nsCOMPtr<nsPIDOMEventTarget> piTarget = do_QueryInterface(doc);\\n   NS_ENSURE_TRUE(piTarget, NS_ERROR_NULL_POINTER);\\n \\n-  nsCOMPtr<nsIDocument> doc2 = do_QueryInterface(doc);\\n-  NS_ENSURE_TRUE(doc2, nsnull);\\n-  nsCOMPtr<nsPIDOMWindow> win = do_QueryInterface(doc2->GetWindow());\\n-  nsPIDOMEventTarget* chromeEventHandler = nsnull;\\n-  if (win)\\n-    chromeEventHandler = win->GetChromeEventHandler();\\n-\\n-  nsresult rv;\\n-  nsCOMPtr<nsIDOMEventTarget> target = do_QueryInterface(chromeEventHandler, &rv);\\n-  NS_ENSURE_SUCCESS(rv, rv);\\n-\\n-  target->RemoveEventListener(NS_LITERAL_STRING(\\\"blur\\\"),\\n-                              static_cast<nsIDOMFocusListener *>(this),\\n-                              PR_TRUE);\\n   piTarget->RemoveEventListenerByIID(static_cast<nsIDOMMouseListener*>(this),\\n                                      NS_GET_IID(nsIDOMMouseListener));\\n   piTarget->RemoveEventListenerByIID(static_cast<nsIDOMKeyListener*>(this),\\n@@ -1680,18 +1651,6 @@ NS_IMETHODIMP mozInlineSpellChecker::HandleEvent(nsIDOMEvent* aEvent)\\n   return NS_OK;\\n }\\n \\n-NS_IMETHODIMP mozInlineSpellChecker::Focus(nsIDOMEvent* aEvent)\\n-{\\n-  return NS_OK;\\n-}\\n-\\n-NS_IMETHODIMP mozInlineSpellChecker::Blur(nsIDOMEvent* aEvent)\\n-{\\n-  // force spellcheck on blur, for instance when tabbing out of a textbox\\n-  HandleNavigationEvent(aEvent, PR_TRUE);\\n-  return NS_OK;\\n-}\\n-\\n NS_IMETHODIMP mozInlineSpellChecker::MouseClick(nsIDOMEvent *aMouseEvent)\\n {\\n   nsCOMPtr<nsIDOMMouseEvent>mouseEvent = do_QueryInterface(aMouseEvent);\\ndiff --git a/extensions/spellcheck/src/mozInlineSpellChecker.h b/extensions/spellcheck/src/mozInlineSpellChecker.h\\nindex 31e2e9d..1e4c2b0 100644\\n--- a/extensions/spellcheck/src/mozInlineSpellChecker.h\\n+++ b/extensions/spellcheck/src/mozInlineSpellChecker.h\\n@@ -48,7 +48,6 @@\\n #include \\\"nsIDOMTreeWalker.h\\\"\\n #include \\\"nsWeakReference.h\\\"\\n #include \\\"nsIEditor.h\\\"\\n-#include \\\"nsIDOMFocusListener.h\\\"\\n #include \\\"nsIDOMMouseListener.h\\\"\\n #include \\\"nsIDOMKeyListener.h\\\"\\n #include \\\"nsWeakReference.h\\\"\\n@@ -139,7 +138,7 @@ protected:\\n                                     nsIDOMRange** aRange);\\n };\\n \\n-class mozInlineSpellChecker : public nsIInlineSpellChecker, nsIEditActionListener, nsIDOMFocusListener, nsIDOMMouseListener, nsIDOMKeyListener,\\n+class mozInlineSpellChecker : public nsIInlineSpellChecker, nsIEditActionListener, nsIDOMMouseListener, nsIDOMKeyListener,\\n                                      nsSupportsWeakReference\\n {\\n private:\\n@@ -225,11 +224,6 @@ public:\\n   // returns true if it looks likely that we can enable real-time spell checking\\n   static PRBool CanEnableInlineSpellChecking();\\n \\n-  /*BEGIN implementations of focus event handler interface*/\\n-  NS_IMETHOD Focus(nsIDOMEvent* aEvent);\\n-  NS_IMETHOD Blur(nsIDOMEvent* aEvent);\\n-  /*END implementations of focus event handler interface*/\\n-\\n   /*BEGIN implementations of mouseevent handler interface*/\\n   NS_IMETHOD HandleEvent(nsIDOMEvent* aEvent);\\n   NS_IMETHOD MouseDown(nsIDOMEvent* aMouseEvent);\\n\""}