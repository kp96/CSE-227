{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas3c1ab990\""},"diff":"\"3c1ab990 Comment fix for bug 394300\\ndiff --git a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\nindex 6317464..023a036 100644\\n--- a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\n+++ b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\n@@ -6239,9 +6239,7 @@ RDFItemUpdater.prototype = {\\n \\n   /**\\n    * Parses the Firefox 1.0RC1+ update manifest format looking for new versions\\n-   * of updated compatibility information about the given add-on. Returns an\\n-   * nsIUpdateItem holding the update's information if a valid update is found\\n-   * or null if not.\\n+   * of updated compatibility information about the given add-on.\\n    * @param   aDataSource\\n    *          The update manifest's datasource\\n    * @param   aLocalItem\\n@@ -6249,6 +6247,8 @@ RDFItemUpdater.prototype = {\\n    * @param   aUpdateCheckType\\n    *          The type of update check being performed. See the constants in\\n    *          nsIExtensionManager\\n+   * @returns An nsIUpdateItem holding the update's information if a valid\\n+   *          update is found or null if not.\\n    */\\n   _parseV20UpdateInfo: function(aDataSource, aLocalItem, aUpdateCheckType) {\\n     var extensionRes  = gRDF.GetResource(getItemPrefix(aLocalItem.type) + aLocalItem.id);\\n@@ -6303,8 +6303,7 @@ RDFItemUpdater.prototype = {\\n \\n   /**\\n    * Parses a single version's update entry looking for the best matching\\n-   * targetApplication entry. Returns an nsIUpdateItem holding the update's\\n-   * information if a valid update is found or null if not.\\n+   * targetApplication entry.\\n    * @param   aDataSource\\n    *          The update manifest's datasource\\n    * @param   aUpdateResource\\n@@ -6317,6 +6316,8 @@ RDFItemUpdater.prototype = {\\n    * @param   aUpdateCheckType\\n    *          The type of update check being performed. See the constants in\\n    *          nsIExtensionManager\\n+   * @returns An nsIUpdateItem holding the update's information if a valid\\n+   *          update is found or null if not.\\n    */\\n   _parseV20Update: function(aDataSource, aUpdateResource, aLocalItem, aNewestVersionFound, aUpdateCheckType) {\\n     var version = this._getPropertyFromResource(aDataSource, aUpdateResource,\\n\""}