{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas4c25808\""},"diff":"\"4c25808 Bug 199692 - Add support for document.elementFromPoint(x, y).  Patch by Ben Karel <web+moz@eschew.org>, r+sr=roc, a=jst\\ndiff --git a/content/base/src/nsDocument.cpp b/content/base/src/nsDocument.cpp\\nindex a6c0f79..8d2fdd0 100644\\n--- a/content/base/src/nsDocument.cpp\\n+++ b/content/base/src/nsDocument.cpp\\n@@ -77,6 +77,8 @@\\n #include \\\"nsIDOMProcessingInstruction.h\\\"\\n #include \\\"nsDOMString.h\\\"\\n #include \\\"nsNodeUtils.h\\\"\\n+#include \\\"nsLayoutUtils.h\\\" // for GetFrameForPoint\\n+#include \\\"nsIFrame.h\\\"\\n \\n #include \\\"nsRange.h\\\"\\n #include \\\"nsIDOMText.h\\\"\\n@@ -1651,6 +1653,60 @@ nsDocument::GetActiveElement(nsIDOMElement **aElement)\\n }\\n \\n NS_IMETHODIMP\\n+nsDocument::ElementFromPoint(PRInt32 aX, PRInt32 aY, nsIDOMElement** aReturn)\\n+{\\n+  NS_ENSURE_ARG_POINTER(aReturn);\\n+  *aReturn = nsnull;\\n+  // As per the the spec, we return null if either coord is negative\\n+  if (aX < 0 || aY < 0)\\n+    return NS_OK;\\n+\\n+  nscoord x = nsPresContext::CSSPixelsToAppUnits(aX);\\n+  nscoord y = nsPresContext::CSSPixelsToAppUnits(aY);\\n+  nsPoint pt(x, y);\\n+\\n+  // Make sure the layout information we get is up-to-date, and\\n+  // ensure we get a root frame (for everything but XUL)\\n+  FlushPendingNotifications(Flush_Layout);\\n+\\n+  nsIPresShell *ps = GetPrimaryShell();\\n+  NS_ENSURE_STATE(ps);\\n+  nsIFrame *rootFrame = ps->GetRootFrame();\\n+\\n+  // XUL docs, unlike HTML, have no frame tree until everything's done loading\\n+  if (!rootFrame)\\n+    return NS_OK; // return null to premature XUL callers as a reminder to wait\\n+\\n+  nsIFrame *ptFrame = nsLayoutUtils::GetFrameForPoint(rootFrame, pt, PR_TRUE);\\n+  if (!ptFrame)\\n+    return NS_OK;\\n+\\n+  nsIContent* ptContent = ptFrame->GetContent();\\n+  NS_ENSURE_STATE(ptContent);\\n+\\n+  // If the content is in a subdocument, try to get the element from |this| doc\\n+  nsIDocument *currentDoc = ptContent->GetCurrentDoc();\\n+  if (currentDoc && (currentDoc != this)) {\\n+    *aReturn = CheckAncestryAndGetFrame(currentDoc).get();\\n+    return NS_OK;\\n+  }\\n+\\n+  // If we have an anonymous element (such as an internal div from a textbox),\\n+  // or a node that isn't an element (such as a text frame node),\\n+  // replace it with the first non-anonymous parent node of type element.\\n+  while (ptContent &&\\n+         !ptContent->IsNodeOfType(nsINode::eELEMENT) ||\\n+         ptContent->GetBindingParent() ||\\n+         ptContent->IsNativeAnonymous()) {\\n+    ptContent = ptContent->GetParent();\\n+  }\\n+ \\n+  if (ptContent)\\n+    CallQueryInterface(ptContent, aReturn);\\n+  return NS_OK;\\n+}\\n+\\n+NS_IMETHODIMP\\n nsDocument::GetElementsByClassName(const nsAString& aClasses,\\n                                    nsIDOMNodeList** aReturn)\\n {\\ndiff --git a/content/html/document/test/Makefile.in b/content/html/document/test/Makefile.in\\nindex 066c68f..05a5f8c 100644\\n--- a/content/html/document/test/Makefile.in\\n+++ b/content/html/document/test/Makefile.in\\n@@ -46,6 +46,9 @@ include $(topsrcdir)/config/rules.mk\\n \\n _TEST_FILES = \\ttest_bug1682.html \\\\\\n \\t\\ttest_bug1823.html \\\\\\n+\\t\\ttest_bug199692.html \\\\\\n+\\t\\tbug199692-nested.html \\\\\\n+\\t\\tbug199692-nested-d2.html \\\\\\n \\t\\ttest_bug172261.html \\\\\\n \\t\\ttest_bug255820.html \\\\\\n \\t\\ttest_bug311681.html \\\\\\ndiff --git a/content/html/document/test/bug199692-nested-d2.html b/content/html/document/test/bug199692-nested-d2.html\\nnew file mode 100644\\nindex 0000000..86c61795\\n--- /dev/null\\n+++ b/content/html/document/test/bug199692-nested-d2.html\\n@@ -0,0 +1,13 @@\\n+<!DOCTYPE HTML>\\n+<html>\\n+<!--\\n+https://bugzilla.mozilla.org/show_bug.cgi?id=199692\\n+-->\\n+<head>\\n+  <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\\n+</head>\\n+<body>\\n+    <div id=\\\"nest2div\\\" style=\\\"border: 2px dotted blue;\\\">nested, depth 2</div>\\n+</body>\\n+</html>\\n+\\ndiff --git a/content/html/document/test/bug199692-nested.html b/content/html/document/test/bug199692-nested.html\\nnew file mode 100644\\nindex 0000000..5eef6a3\\n--- /dev/null\\n+++ b/content/html/document/test/bug199692-nested.html\\n@@ -0,0 +1,14 @@\\n+<!DOCTYPE HTML>\\n+<html>\\n+<!--\\n+https://bugzilla.mozilla.org/show_bug.cgi?id=199692\\n+-->\\n+<head>\\n+  <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\\n+</head>\\n+<body>\\n+    <div id=\\\"nest1div\\\" style=\\\"border: 2px dotted green;\\\">nested, depth 1</div>\\n+    <iframe src=\\\"bug199692-nested-d2.html\\\"></iframe>\\n+</body>\\n+</html>\\n+\\ndiff --git a/content/html/document/test/test_bug199692.html b/content/html/document/test/test_bug199692.html\\nnew file mode 100644\\nindex 0000000..89af018\\n--- /dev/null\\n+++ b/content/html/document/test/test_bug199692.html\\n@@ -0,0 +1,120 @@\\n+<!DOCTYPE HTML>\\n+<html>\\n+<!--\\n+https://bugzilla.mozilla.org/show_bug.cgi?id=199692\\n+-->\\n+<head>\\n+  <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\">\\n+  <title>Test for Bug 199692</title>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/MochiKit/MochiKit.js\\\"></script>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/tests/SimpleTest/SimpleTest.js\\\"></script>        \\n+  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/tests/SimpleTest/test.css\\\" />\\n+  <style type=\\\"text/css\\\">\\n+#content * {\\n+  border: 2px solid black;\\n+  margin: 2px;\\n+  clear: both;\\n+  height: 20px;\\n+  overflow: hidden; \\n+}\\n+\\n+#txt, #static, #fixed, #absolute, #relative, #hidden, #float, #empty, #static, #relative {\\n+width: 200px !important;\\n+}\\n+\\n+  </style>\\n+  \\n+</head>\\n+<!-- Elements are styled in such a way that they don't overlap visually unless they also overlap structurally. -->\\n+<body>\\n+<a target=\\\"_blank\\\" href=\\\"https://bugzilla.mozilla.org/show_bug.cgi?id=199692\\\">Mozilla Bug 199692</a>\\n+\\n+<div id=\\\"content\\\" style=\\\"width: 500px; background-color: #ccc;\\\">\\n+\\n+<!-- element containing text -->\\n+<div id=\\\"txt\\\" style=\\\"height: 30px;\\\">txt</div>\\n+\\n+<!-- element not containing text -->\\n+<div id=\\\"empty\\\" style=\\\"border: 2px solid blue;\\\"></div>\\n+\\n+<!-- element with only whitespace -->\\n+<p id=\\\"whitespace\\\" style=\\\"border: 2px solid magenta;\\\"> </p>\\n+\\n+<!-- position: static -->\\n+<span id=\\\"static\\\" style=\\\"position: static; border-color: green;\\\">static</span>\\n+\\n+<!-- floated element -->\\n+<div id=\\\"float\\\" style=\\\"border-color: red; float: right;\\\">float</div>\\n+\\n+<!-- position: fixed -->\\n+<span id=\\\"fixed\\\" style=\\\"position: fixed; top: 500px; left: 100px; border: 3px solid yellow;\\\">fixed</span>\\n+\\n+<!-- position: absolute -->\\n+<span id=\\\"absolute\\\" style=\\\"position: absolute; top: 550px; left: 150px; border-color: orange;\\\">abs</span>\\n+\\n+<!-- position: relative -->\\n+<div id=\\\"relative\\\" style=\\\"position: relative; top: 200px; border-color: teal;\\\">rel</div>\\n+\\n+<!-- visibility: hidden -->\\n+<div id=\\\"hidden-wrapper\\\" style=\\\"border: 1px dashed teal;\\\">\\n+    <div id=\\\"hidden\\\" style=\\\"opacity: 0.5; background-color: blue; visibility:hidden;\\\">hidden</div>\\n+</div>\\n+\\n+<!-- iframe (within iframe) -->\\n+<iframe id=\\\"our-iframe\\\" src=\\\"bug199692-nested.html\\\" style=\\\"height: 100px;\\\"></iframe>\\n+\\n+<input type=\\\"textbox\\\" id=\\\"textbox\\\" value=\\\"textbox\\\"></input>\\n+</div>\\n+<pre id=\\\"test\\\">\\n+<script class=\\\"testbody\\\" type=\\\"text/javascript\\\">\\n+\\n+/** Test for Bug 199692 **/\\n+\\n+    SimpleTest.waitForExplicitFinish();\\n+  \\n+    ok('elementFromPoint' in document, \\\"document.elementFromPoint() must exist\\\");\\n+    var elts = [\\\"txt\\\", \\\"empty\\\", \\\"whitespace\\\", \\\"static\\\", \\\"fixed\\\", \\\"absolute\\\",\\n+                \\\"relative\\\", \\\"float\\\", \\\"textbox\\\"];\\n+\\n+    var doc = document;\\n+    doc.pt = doc.elementFromPoint; // for shorter lines\\n+    is(doc.pt(-1, 0), null, \\\"Negative coordinates should return null\\\");\\n+    \\n+    function testPoints() {\\n+        \\n+        for(var i in elts) {\\n+            var id = elts[i];\\n+            var elt = $(id);\\n+            // The upper left corner of an element (with a moderate offset) will usually contain text,\\n+            // and the upper right corner usually won't.\\n+            var x = elt.offsetLeft, y = elt.offsetTop, w = elt.scrollWidth, h = elt.scrollHeight;\\n+            var d = 5;\\n+            is(doc.pt(x+d,y+d).id, id, \\\"(\\\"+(x+d)+\\\",\\\"+(y+d)+\\\") IDs should match (upper left corner of \\\"+id+\\\")\\\");\\n+            is(doc.pt(x+w-d, y+h-d).id, id, \\\"(\\\"+(x+w-d)+\\\",\\\"+(y+h-d)+\\\") IDs should match (lower right corner of \\\"+id+\\\")\\\");\\n+        }\\n+        // content\\n+        var c = $('content');\\n+        x = c.offsetLeft + c.clientWidth/2, y = c.offsetTop;\\n+        is(doc.pt(x,y).id, c.id, \\\"Point to right of #txt should be #content\\\");\\n+        \\n+        // hidden\\n+        c = $('hidden');\\n+        x = c.offsetLeft; y = c.offsetTop;\\n+        is(doc.pt(x,y).id, 'hidden-wrapper', \\\"Hit testing should bypass hidden elements.\\\");\\n+        \\n+        // iframe nested\\n+        var iframe = $(\\\"our-iframe\\\");\\n+        x = iframe.offsetLeft, y = iframe.offsetTop;\\n+        is(doc.pt(x+20, y+20).id, \\\"our-iframe\\\", \\\"Element from nested iframe returned is from calling document\\\");\\n+        // iframe, doubly nested\\n+        is(doc.pt(x+60, y+60).id, \\\"our-iframe\\\", \\\"Element from doubly nested iframe returned is from calling document\\\");\\n+        \\n+        SimpleTest.finish();\\n+    }\\n+    \\n+    addLoadEvent(testPoints);\\n+</script>\\n+</pre>\\n+</body>\\n+</html>\\n+\\ndiff --git a/content/xul/document/test/Makefile.in b/content/xul/document/test/Makefile.in\\nindex fedf858..9f20d64 100644\\n--- a/content/xul/document/test/Makefile.in\\n+++ b/content/xul/document/test/Makefile.in\\n@@ -46,6 +46,7 @@ include $(topsrcdir)/config/rules.mk\\n \\n _TEST_FILES\\t= \\\\\\n \\t\\ttest_bug311681.xul \\\\\\n+\\t\\ttest_bug199692.xul \\\\\\n \\t\\t$(NULL)\\n \\n libs:: $(_TEST_FILES)\\ndiff --git a/content/xul/document/test/test_bug199692.xul b/content/xul/document/test/test_bug199692.xul\\nnew file mode 100644\\nindex 0000000..7f21946\\n--- /dev/null\\n+++ b/content/xul/document/test/test_bug199692.xul\\n@@ -0,0 +1,95 @@\\n+<?xml version=\\\"1.0\\\"?>\\n+<?xml-stylesheet href=\\\"chrome://global/skin\\\" type=\\\"text/css\\\"?>\\n+<?xml-stylesheet href=\\\"/tests/SimpleTest/test.css\\\" type=\\\"text/css\\\"?>\\n+<!--\\n+https://bugzilla.mozilla.org/show_bug.cgi?id=199692\\n+-->\\n+<window title=\\\"Test for Bug 199692\\\"\\n+  id=\\\"test_bug199692_xul\\\"\\n+  xmlns:html=\\\"http://www.w3.org/1999/xhtml\\\"\\n+  xmlns:xul=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\"\\n+  xmlns=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\">\\n+\\n+  <script type=\\\"application/javascript\\\" src=\\\"/MochiKit/packed.js\\\"></script>\\n+  <script type=\\\"application/javascript\\\" src=\\\"/tests/SimpleTest/SimpleTest.js\\\"></script>\\n+  <bindings xmlns=\\\"http://www.mozilla.org/xbl\\\"\\n+              xmlns:xul=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\">\\n+    <binding id=\\\"anon\\\">\\n+      <content>\\n+        <xul:label id=\\\"anon-label\\\" value=\\\"ANON\\\"/>\\n+      </content>\\n+    </binding>\\n+  </bindings>\\n+\\n+<body id=\\\"body\\\" xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\\n+<a target=\\\"_blank\\\" href=\\\"https://bugzilla.mozilla.org/show_bug.cgi?id=199692\\\">Mozilla Bug 199692</a>\\n+\\n+<vbox id=\\\"content\\\" style=\\\"position: relative;\\\"\\n+xmlns=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\">\\n+  <xul:label id=\\\"non-anon-label\\\" value=\\\"a textbox!:\\\" control=\\\"textbox\\\"/>\\n+  <xul:textbox id=\\\"textbox\\\" multiline=\\\"true\\\" rows=\\\"4\\\" />\\n+  <xul:radiogroup style=\\\"outline: 2px solid orange;\\\">\\n+    <xul:radio id=\\\"unselected-radio\\\" label=\\\"Orange\\\" style=\\\"outline: 2px solid red;\\\"/>\\n+    <xul:radio id=\\\"selected-radio\\\" label=\\\"Violet\\\" selected=\\\"true\\\"/>\\n+    <xul:radio id=\\\"disabled-radio\\\" label=\\\"Yellow\\\" disabled=\\\"true\\\"/>\\n+  </xul:radiogroup>\\n+  <hbox id=\\\"bound\\\" style=\\\"-moz-binding:url('#anon'); border: 2px solid green;\\\"></hbox>\\n+</vbox>\\n+<pre id=\\\"test\\\">\\n+  <script class=\\\"testbody\\\" type=\\\"text/javascript\\\">\\n+<![CDATA[\\n+  SimpleTest.waitForExplicitFinish();\\n+\\n+  // Before onload, XUL docs have no root frame.\\n+  is(document.elementFromPoint(10,10), null,\\n+     \\\"Calls to elementFromPoint before onload should return null\\\");\\n+\\n+  var d = 10;\\n+  function middle(e) {\\n+    return { \\\"x\\\": e.boxObject.x + e.boxObject.width/2,\\n+             \\\"y\\\": e.boxObject.y + e.boxObject.height/2 };\\n+  }\\n+  function lower_right(e) {\\n+    return { \\\"x\\\": e.boxObject.x + e.boxObject.width - d,\\n+             \\\"y\\\": e.boxObject.y + e.boxObject.height - d };\\n+  }\\n+  function upper_left(e) {\\n+    return { \\\"x\\\": e.boxObject.x + d,\\n+             \\\"y\\\": e.boxObject.y + d };\\n+  }\\n+  function scrollbar_button(e) { // a bit down from upper right\\n+    return { \\\"x\\\": e.boxObject.x + e.boxObject.width - d,\\n+             \\\"y\\\": e.boxObject.y + d + 15 };\\n+  }\\n+  \\n+  function test(ptFunc, id, message) {\\n+    var pt = ptFunc($(id));\\n+    is(document.elementFromPoint(pt.x, pt.y).id, id, message);\\n+  }\\n+  \\n+  function do_test() {\\n+    // Avoid hardcoding x,y pixel values, to better deal with differing default\\n+    // font sizes or other layout defaults.\\n+    \\n+    test(middle, 'textbox', \\\"Point within textbox should return textbox element\\\");\\n+    test(lower_right, 'textbox', \\\"Point on textbox's scrollbar should return textbox element\\\");\\n+    test(scrollbar_button, 'textbox', \\\"Point on textbox's scrollbar button should return textbox element\\\");\\n+    test(middle, 'non-anon-label', \\\"Point on label should return label\\\");\\n+    test(upper_left, 'bound', \\\"Point on XBL content should return element with -moz-binding style\\\");\\n+    \\n+    SimpleTest.finish();\\n+  }\\n+  $(\\\"textbox\\\").setAttribute(\\\"value\\\", \\n+      \\\"lorem ipsum dolor sit amet \\\" +\\n+      \\\"lorem ipsum dolor sit amet \\\" +\\n+      \\\"lorem ipsum dolor sit amet \\\" +\\n+      \\\"lorem ipsum dolor sit amet \\\" +\\n+      \\\"lorem ipsum dolor sit amet \\\" +\\n+      \\\"lorem ipsum dolor sit amet \\\" +\\n+      \\\"lorem ipsum dolor sit amet \\\"); // force scrollbars to appear\\n+  addLoadEvent(do_test);\\n+]]>\\n+  </script>\\n+</pre>\\n+</body>\\n+</window>\\ndiff --git a/dom/public/idl/core/nsIDOMNSDocument.idl b/dom/public/idl/core/nsIDOMNSDocument.idl\\nindex 85f2d2c..536419a 100644\\n--- a/dom/public/idl/core/nsIDOMNSDocument.idl\\n+++ b/dom/public/idl/core/nsIDOMNSDocument.idl\\n@@ -43,7 +43,7 @@\\n interface nsIBoxObject;\\n interface nsIDOMLocation;\\n \\n-[scriptable, uuid(6b395644-9a2a-4200-8247-bf2d07b8e1ea)]\\n+[scriptable, uuid(533a8131-8d0c-4ebf-990b-7fad7cd514ee)]\\n interface nsIDOMNSDocument : nsISupports\\n {\\n   readonly attribute DOMString      characterSet;\\n@@ -70,4 +70,25 @@ interface nsIDOMNSDocument : nsISupports\\n    * See <http://whatwg.org/specs/web-apps/current-work/>\\n    */\\n   nsIDOMNodeList getElementsByClassName(in DOMString classes);\\n+\\n+  /**\\n+  * Returns the element visible at the given point, relative to the\\n+  * upper-left-most visible point in the document.\\n+  *\\n+  * If the element at the given point belongs to another document (such as\\n+  * an iframe's subdocument), the element in the calling document's DOM\\n+  * (e.g. the iframe) is returned. If the element at the given point is\\n+  * anonymous or XBL generated content, such as a textbox's scrollbars, then\\n+  * the first non-anonymous parent element (that is, the textbox) is returned.\\n+  *\\n+  * If the specified point is outside the visible portion of the document,\\n+  * or either coordinate is negative, this method returns null.\\n+  *\\n+  * Callers from XUL documents should wait until the onload event has fired\\n+  * before calling this method.\\n+  *\\n+  * <a href=\\\"http://dev.w3.org/cvsweb/~checkout~/csswg/cssom/Overview.html?content-type=text/html;%20charset=utf-8#documentlayout-elementfrompoint\\\">preliminary spec</a>\\n+  */\\n+  nsIDOMElement             elementFromPoint(in long x, in long y);\\n+\\n };\\ndiff --git a/layout/base/nsDisplayList.h b/layout/base/nsDisplayList.h\\nindex b4d3e4e..38b1a6d 100644\\n--- a/layout/base/nsDisplayList.h\\n+++ b/layout/base/nsDisplayList.h\\n@@ -205,6 +205,11 @@ public:\\n   void SetPaintAllFrames() { mPaintAllFrames = PR_TRUE; }\\n   PRBool GetPaintAllFrames() { return mPaintAllFrames; }\\n   /**\\n+   * Allows callers to selectively override the regular paint suppression checks,\\n+   * so that methods like GetFrameForPoint work when painting is suppressed.\\n+   */\\n+  void IgnorePaintSuppression() { mIsBackgroundOnly = PR_FALSE; }\\n+  /**\\n    * Display the caret if needed.\\n    */\\n   nsresult DisplayCaret(nsIFrame* aFrame, const nsRect& aDirtyRect,\\ndiff --git a/layout/base/nsLayoutUtils.cpp b/layout/base/nsLayoutUtils.cpp\\nindex 4755ca9..08c4c0e 100644\\n--- a/layout/base/nsLayoutUtils.cpp\\n+++ b/layout/base/nsLayoutUtils.cpp\\n@@ -745,12 +745,15 @@ static PRBool gDumpRepaintRegionForCopy = PR_FALSE;\\n #endif\\n \\n nsIFrame*\\n-nsLayoutUtils::GetFrameForPoint(nsIFrame* aFrame, nsPoint aPt)\\n+nsLayoutUtils::GetFrameForPoint(nsIFrame* aFrame, nsPoint aPt,\\n+                                PRBool aShouldIgnoreSuppression)\\n {\\n   nsDisplayListBuilder builder(aFrame, PR_TRUE, PR_FALSE);\\n   nsDisplayList list;\\n   nsRect target(aPt, nsSize(1, 1));\\n \\n+  if (aShouldIgnoreSuppression)\\n+    builder.IgnorePaintSuppression();\\n   builder.EnterPresShell(aFrame, target);\\n \\n   nsresult rv =\\ndiff --git a/layout/base/nsLayoutUtils.h b/layout/base/nsLayoutUtils.h\\nindex 8209bc9..c733bda 100644\\n--- a/layout/base/nsLayoutUtils.h\\n+++ b/layout/base/nsLayoutUtils.h\\n@@ -378,8 +378,11 @@ public:\\n    * frame under the point aPt that receives a mouse event at that location,\\n    * or nsnull if there is no such frame.\\n    * @param aPt the point, relative to the frame origin\\n+   * @param aShouldIgnoreSuppression a boolean to control if the display\\n+   * list builder should ignore paint suppression or not\\n    */\\n-  static nsIFrame* GetFrameForPoint(nsIFrame* aFrame, nsPoint aPt);\\n+  static nsIFrame* GetFrameForPoint(nsIFrame* aFrame, nsPoint aPt,\\n+                                    PRBool aShouldIgnoreSuppression = PR_FALSE);\\n \\n   /**\\n    * Given aFrame, the root frame of a stacking context, paint it and its\\n\""}