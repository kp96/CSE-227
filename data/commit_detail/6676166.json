{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas6676166\""},"diff":"\"6676166 Revert incorrect patch\\ndiff --git a/browser/components/search/nsIBrowserSearchService.idl b/browser/components/search/nsIBrowserSearchService.idl\\nindex be3cfb3..dad61d5 100755\\n--- a/browser/components/search/nsIBrowserSearchService.idl\\n+++ b/browser/components/search/nsIBrowserSearchService.idl\\n@@ -41,7 +41,6 @@\\n #include \\\"nsISupports.idl\\\"\\n \\n interface nsIURI;\\n-interface nsIFile;\\n interface nsIInputStream;\\n \\n [scriptable, uuid(58e4f602-a7c8-4cd1-9dca-716705e826ef)]\\n@@ -163,18 +162,10 @@ interface nsISearchEngine : nsISupports\\n \\n };\\n \\n-[scriptable, uuid(c2e8ae4f-9fea-4a24-81e3-c94cdc055c1b)]\\n+[scriptable, uuid(8307b8f2-08ea-45b8-96bf-b1dc7688fe3b)]\\n interface nsIBrowserSearchService : nsISupports\\n {\\n   /**\\n-   * Loads all the engines in the supplied directory.\\n-   *\\n-   * @param enginesDir\\n-   *        The directory containing the engine description files.\\n-   */\\n-  void loadEngines(in nsIFile enginesDir);\\n-\\n-  /**\\n    * Adds a new search engine from the file at the supplied URI, optionally\\n    * asking the user for confirmation first.  If a confirmation dialog is\\n    * shown, it will offer the option to begin using the newly added engine\\ndiff --git a/browser/components/search/nsSearchService.js b/browser/components/search/nsSearchService.js\\nindex 2bf1579..51b3dba 100755\\n--- a/browser/components/search/nsSearchService.js\\n+++ b/browser/components/search/nsSearchService.js\\n@@ -2222,7 +2222,7 @@ SearchService.prototype = {\\n \\n     while (locations.hasMoreElements()) {\\n       var location = locations.getNext().QueryInterface(Ci.nsIFile);\\n-      this.loadEngines(location);\\n+      this._loadEngines(location);\\n     }\\n \\n     // Now that all engines are loaded, build the sorted engine list\\n@@ -2298,8 +2298,8 @@ SearchService.prototype = {\\n     }\\n   },\\n \\n-  loadEngines: function SRCH_SVC_loadEngines(aDir) {\\n-    LOG(\\\"loadEngines: Searching in \\\" + aDir.path + \\\" for search engines.\\\");\\n+  _loadEngines: function SRCH_SVC_loadEngines(aDir) {\\n+    LOG(\\\"_loadEngines: Searching in \\\" + aDir.path + \\\" for search engines.\\\");\\n \\n     // Check whether aDir is the user profile dir\\n     var isInProfile = aDir.equals(getDir(NS_APP_USER_SEARCH_DIR));\\n@@ -2338,7 +2338,7 @@ SearchService.prototype = {\\n         addedEngine = new Engine(file, dataType, !isWritable);\\n         addedEngine._initFromFile();\\n       } catch (ex) {\\n-        LOG(\\\"loadEngines: Failed to load \\\" + file.path + \\\"!\\\\n\\\" + ex);\\n+        LOG(\\\"_loadEngines: Failed to load \\\" + file.path + \\\"!\\\\n\\\" + ex);\\n         continue;\\n       }\\n \\n@@ -2347,7 +2347,7 @@ SearchService.prototype = {\\n           try {\\n             this._convertSherlockFile(addedEngine, fileURL.fileBaseName);\\n           } catch (ex) {\\n-            LOG(\\\"loadEngines: Failed to convert: \\\" + fileURL.path + \\\"\\\\n\\\" + ex);\\n+            LOG(\\\"_loadEngines: Failed to convert: \\\" + fileURL.path + \\\"\\\\n\\\" + ex);\\n             // The engine couldn't be converted, mark it as read-only\\n             addedEngine._readOnly = true;\\n           }\\n\""}