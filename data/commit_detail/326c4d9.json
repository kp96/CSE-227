{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas326c4d9\""},"diff":"\"326c4d9 Bug 396652, gecko scrolls on activate event (mouse click) with gtk embeds, r+sr+a=roc, p=iainnicol-mozbugs2007@yahoo.co.uk+me\\ndiff --git a/content/events/src/nsEventStateManager.cpp b/content/events/src/nsEventStateManager.cpp\\nindex 94c6418..2cd1b14b 100644\\n--- a/content/events/src/nsEventStateManager.cpp\\n+++ b/content/events/src/nsEventStateManager.cpp\\n@@ -1091,13 +1091,14 @@ nsEventStateManager::PreHandleEvent(nsPresContext* aPresContext,\\n         win->GetRootFocusController();\\n       nsCOMPtr<nsIDOMElement> focusedElement;\\n       nsCOMPtr<nsIDOMWindowInternal> focusedWindow;\\n+      nsFocusScrollSuppressor scrollSuppressor;\\n \\n       if (focusController) {\\n         // Obtain focus info from the focus controller.\\n         focusController->GetFocusedWindow(getter_AddRefs(focusedWindow));\\n         focusController->GetFocusedElement(getter_AddRefs(focusedElement));\\n \\n-        focusController->SetSuppressFocusScroll(PR_TRUE);\\n+        scrollSuppressor.Init(focusController);\\n         focusController->SetActive(PR_TRUE);\\n       }\\n \\n@@ -1151,7 +1152,6 @@ nsEventStateManager::PreHandleEvent(nsPresContext* aPresContext,\\n \\n           focusController->GetSuppressFocus(&isSuppressed);\\n         }\\n-        focusController->SetSuppressFocusScroll(PR_FALSE);\\n       }\\n     }\\n     break;\\n@@ -3197,13 +3197,9 @@ nsEventStateManager::ChangeFocusWith(nsIContent* aFocusContent,\\n \\n   // If this is called from mouse event, we lock to scroll.\\n   // Because the part of element is always in view. See bug 105894.\\n-  PRBool suppressFocusScroll =\\n-    focusController && (aFocusedWith == eEventFocusedByMouse);\\n-  if (suppressFocusScroll) {\\n-    PRBool currentState = PR_FALSE;\\n-    focusController->GetSuppressFocusScroll(&currentState);\\n-    NS_ASSERTION(!currentState, \\\"locked scroll already!\\\");\\n-    focusController->SetSuppressFocusScroll(PR_TRUE);\\n+  nsFocusScrollSuppressor scrollSuppressor;\\n+  if (aFocusedWith == eEventFocusedByMouse) {\\n+    scrollSuppressor.Init(focusController);\\n   }\\n \\n   aFocusContent->SetFocus(mPresContext);\\n@@ -3225,11 +3221,6 @@ nsEventStateManager::ChangeFocusWith(nsIContent* aFocusContent,\\n       }\\n     }\\n   }\\n-\\n-  // Unlock scroll\\n-  if (suppressFocusScroll)\\n-    focusController->SetSuppressFocusScroll(PR_FALSE);\\n-\\n   return NS_OK;\\n }\\n \\ndiff --git a/content/xul/content/src/nsXULPopupListener.cpp b/content/xul/content/src/nsXULPopupListener.cpp\\nindex 3ff35a5..77e12ff 100644\\n--- a/content/xul/content/src/nsXULPopupListener.cpp\\n+++ b/content/xul/content/src/nsXULPopupListener.cpp\\n@@ -294,23 +294,13 @@ nsXULPopupListener::FireFocusOnTargetContent(nsIDOMNode* aTargetNode)\\n \\n     if (focusableContent) {\\n       // Lock to scroll by SetFocus. See bug 309075.\\n-      nsCOMPtr<nsIFocusController> focusController = nsnull;\\n-      PRBool isAlreadySuppressed = PR_FALSE;\\n+      nsFocusScrollSuppressor scrollSuppressor;\\n       nsPIDOMWindow *ourWindow = doc->GetWindow();\\n       if (ourWindow) {\\n-        focusController = ourWindow->GetRootFocusController();\\n-        if (focusController) {\\n-          focusController->GetSuppressFocusScroll(&isAlreadySuppressed);\\n-          if (!isAlreadySuppressed)\\n-            focusController->SetSuppressFocusScroll(PR_TRUE);\\n-        }\\n+        scrollSuppressor.Init(ourWindow->GetRootFocusController());\\n       }\\n \\n       focusableContent->SetFocus(context);\\n-\\n-      // Unlock scroll if it's needed.\\n-      if (focusController && !isAlreadySuppressed)\\n-        focusController->SetSuppressFocusScroll(PR_FALSE);\\n     } else if (!suppressBlur)\\n       esm->SetContentState(nsnull, NS_EVENT_STATE_FOCUS);\\n \\ndiff --git a/dom/public/base/nsIFocusController.h b/dom/public/base/nsIFocusController.h\\nindex b8b930a..6670a74 100644\\n--- a/dom/public/base/nsIFocusController.h\\n+++ b/dom/public/base/nsIFocusController.h\\n@@ -130,4 +130,37 @@ private:\\n   const char *mReason;\\n };\\n \\n+class nsFocusScrollSuppressor\\n+{\\n+public:\\n+  nsFocusScrollSuppressor(nsIFocusController* aController = nsnull)\\n+  : mWasSuppressed(PR_FALSE)\\n+  {\\n+    Init(aController);\\n+  }\\n+\\n+  ~nsFocusScrollSuppressor()\\n+  {\\n+    Init(nsnull);\\n+  }\\n+\\n+  void Init(nsIFocusController* aController)\\n+  {\\n+    if (mController) {\\n+      mController->SetSuppressFocusScroll(mWasSuppressed);\\n+    }\\n+\\n+    mController = aController;\\n+    if (mController) {\\n+      mController->GetSuppressFocusScroll(&mWasSuppressed);\\n+      if (!mWasSuppressed) {\\n+        mController->SetSuppressFocusScroll(PR_TRUE);\\n+      }\\n+    }\\n+  }\\n+private:\\n+  nsCOMPtr<nsIFocusController> mController;\\n+  PRBool                       mWasSuppressed;\\n+};\\n+\\n #endif // nsIFocusController_h__\\n\""}