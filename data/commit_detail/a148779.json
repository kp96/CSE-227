{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basa148779\""},"diff":"\"a148779 Bug 394346 - Allow for named notifications with nsIAlertsService.  r=mano, a=mconnor\\ndiff --git a/toolkit/components/alerts/public/nsIAlertsService.idl b/toolkit/components/alerts/public/nsIAlertsService.idl\\nindex 88d9f73..b13e3c4 100644\\n--- a/toolkit/components/alerts/public/nsIAlertsService.idl\\n+++ b/toolkit/components/alerts/public/nsIAlertsService.idl\\n@@ -40,7 +40,7 @@\\n #include \\\"nsISupports.idl\\\"\\n #include \\\"nsIObserver.idl\\\"\\n \\n-[scriptable, uuid(647248FD-F925-4e30-93DD-CDE26D7E3A90)]\\n+[scriptable, uuid(e177399e-2e31-4019-aed3-cba63ce9fa99)]\\n interface nsIAlertsService : nsISupports\\n {\\n    /**\\n@@ -56,6 +56,9 @@ interface nsIAlertsService : nsISupports\\n     *                       consumer during the alert listener callbacks.\\n     * @param alertListener  Used for callbacks. May be null if the caller \\n     *                       doesn't care about callbacks.\\n+    * @param name           The name of the notification.  This is currently\\n+    *                       only used on OS X with Growl.  On OS X with Growl,\\n+    *                       users can disable notifications with a given name.\\n     *\\n     * @throws NS_ERROR_NOT_AVAILABLE If the notification cannot be displayed.\\n     *\\n@@ -69,7 +72,8 @@ interface nsIAlertsService : nsISupports\\n    void showAlertNotification(in AString  imageUrl, \\n                               in AString  title, \\n                               in AString  text, \\n-                              in boolean  textClickable,\\n-                              in AString  cookie,\\n-                              in nsIObserver alertListener);\\n+                              [optional] in boolean textClickable,\\n+                              [optional] in AString cookie,\\n+                              [optional] in nsIObserver alertListener,\\n+                              [optional] in AString name);\\n };\\ndiff --git a/toolkit/components/alerts/src/mac/nsAlertsService.h b/toolkit/components/alerts/src/mac/nsAlertsService.h\\nindex a012524..a52e921 100644\\n--- a/toolkit/components/alerts/src/mac/nsAlertsService.h\\n+++ b/toolkit/components/alerts/src/mac/nsAlertsService.h\\n@@ -42,24 +42,6 @@\\n \\n struct GrowlDelegateWrapper;\\n \\n-/**\\n- * Helper function to allow for C++ to dispatch named notifications.\\n- *\\n- * @param aName The name of the notification to dispatch to Growl.\\n- * @param aImage The image to display in the notification.\\n- * @param aTitle The text of the title of the notification.\\n- * @param aMessage The message body of the notification.\\n- * @param aCookie The cookie string that will be passed back to the observer.\\n- * @param aListener The nsIObserver that will receive callbacks from Growl.\\n- */\\n-nsresult\\n-NS_DispatchNamedNotification(const nsAString &aName,\\n-                             const nsAString &aImage,\\n-                             const nsAString &aTitle,\\n-                             const nsAString &aMessage,\\n-                             const nsAString &aCookie,\\n-                             nsIObserver *aListener);\\n-\\n class nsAlertsService : public nsIAlertsService,\\n                         public nsIObserver\\n {\\ndiff --git a/toolkit/components/alerts/src/mac/nsAlertsService.mm b/toolkit/components/alerts/src/mac/nsAlertsService.mm\\nindex 85606d3..cf86278 100644\\n--- a/toolkit/components/alerts/src/mac/nsAlertsService.mm\\n+++ b/toolkit/components/alerts/src/mac/nsAlertsService.mm\\n@@ -67,16 +67,16 @@ struct GrowlDelegateWrapper\\n   }\\n };\\n \\n-////////////////////////////////////////////////////////////////////////////////\\n-//// NS_DispatchNamedNotification\\n-\\n-nsresult\\n-NS_DispatchNamedNotification(const nsAString &aName,\\n-                             const nsAString &aImage,\\n-                             const nsAString &aTitle,\\n-                             const nsAString &aMessage,\\n-                             const nsAString &aCookie,\\n-                             nsIObserver *aListener)\\n+/**\\n+ * Helper function to dispatch a notification to Growl\\n+ */\\n+static nsresult\\n+DispatchNamedNotification(const nsAString &aName,\\n+                          const nsAString &aImage,\\n+                          const nsAString &aTitle,\\n+                          const nsAString &aMessage,\\n+                          const nsAString &aCookie,\\n+                          nsIObserver *aListener)\\n {\\n   if ([GrowlApplicationBridge isGrowlInstalled] == NO ||\\n       [GrowlApplicationBridge isGrowlRunning] == NO)\\n@@ -156,11 +156,17 @@ nsAlertsService::ShowAlertNotification(const nsAString& aImageUrl,\\n                                        const nsAString& aAlertText,\\n                                        PRBool aAlertClickable,\\n                                        const nsAString& aAlertCookie,\\n-                                       nsIObserver* aAlertListener)\\n+                                       nsIObserver* aAlertListener,\\n+                                       const nsAString& aAlertName)\\n {\\n   NS_ASSERTION(mDelegate->delegate == [GrowlApplicationBridge growlDelegate],\\n                \\\"Growl Delegate was not registered properly.\\\");\\n \\n+  if (!aAlertName.IsEmpty()) {\\n+    return DispatchNamedNotification(aAlertTitle, aImageUrl, aAlertTitle,\\n+                                     aAlertText, aAlertCookie, aAlertListener);\\n+  }\\n+\\n   nsresult rv;\\n   nsCOMPtr<nsIStringBundleService> bundleService =\\n     do_GetService(\\\"@mozilla.org/intl/stringbundle;1\\\", &rv);\\n@@ -179,8 +185,8 @@ nsAlertsService::ShowAlertNotification(const nsAString& aImageUrl,\\n     }\\n   }\\n \\n-  return NS_DispatchNamedNotification(name, aImageUrl, aAlertTitle,\\n-                                      aAlertText, aAlertCookie, aAlertListener);\\n+  return DispatchNamedNotification(name, aImageUrl, aAlertTitle,\\n+                                   aAlertText, aAlertCookie, aAlertListener);\\n }\\n \\n ////////////////////////////////////////////////////////////////////////////////\\ndiff --git a/toolkit/components/alerts/src/nsAlertsService.cpp b/toolkit/components/alerts/src/nsAlertsService.cpp\\nindex d5e2aed..fafb77a 100644\\n--- a/toolkit/components/alerts/src/nsAlertsService.cpp\\n+++ b/toolkit/components/alerts/src/nsAlertsService.cpp\\n@@ -70,7 +70,8 @@ nsAlertsService::~nsAlertsService()\\n NS_IMETHODIMP nsAlertsService::ShowAlertNotification(const nsAString & aImageUrl, const nsAString & aAlertTitle, \\n                                                      const nsAString & aAlertText, PRBool aAlertTextClickable,\\n                                                      const nsAString & aAlertCookie,\\n-                                                     nsIObserver * aAlertListener)\\n+                                                     nsIObserver * aAlertListener,\\n+                                                     const nsAString & aAlertName)\\n {\\n   nsCOMPtr<nsIWindowWatcher> wwatch(do_GetService(NS_WINDOWWATCHER_CONTRACTID));\\n   nsCOMPtr<nsIDOMWindow> newWindow;\\ndiff --git a/toolkit/components/downloads/src/nsDownloadManager.cpp b/toolkit/components/downloads/src/nsDownloadManager.cpp\\nindex 67f4499..fdc9936 100644\\n--- a/toolkit/components/downloads/src/nsDownloadManager.cpp\\n+++ b/toolkit/components/downloads/src/nsDownloadManager.cpp\\n@@ -1585,7 +1585,8 @@ nsDownload::SetState(DownloadState aState)\\n               // the items they downloaded will have been removed.\\n               alerts->ShowAlertNotification(\\n                   NS_LITERAL_STRING(DOWNLOAD_MANAGER_ALERT_ICON), title,\\n-                  message, !removeWhenDone, EmptyString(), mDownloadManager);\\n+                  message, !removeWhenDone, EmptyString(), mDownloadManager,\\n+                  EmptyString());\\n             }\\n         }\\n       }\\n\""}