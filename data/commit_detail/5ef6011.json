{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5ef6011\""},"diff":"\"5ef6011 263127 close the tempfile output stream before calling the observer patch by Wladimir Palant <trev.moz@adblockplus.org> r=biesi sr=darin\\ndiff --git a/netwerk/base/src/nsDownloader.cpp b/netwerk/base/src/nsDownloader.cpp\\nindex e135f52..59fcf80 100644\\n--- a/netwerk/base/src/nsDownloader.cpp\\n+++ b/netwerk/base/src/nsDownloader.cpp\\n@@ -75,7 +75,10 @@ nsDownloader::~nsDownloader()\\n         // release the sink first since it may still hold an open file\\n         // descriptor to mLocation.  this needs to happen before the\\n         // file can be removed otherwise the Remove call will fail.\\n-        mSink = 0;\\n+        if (mSink) {\\n+            mSink->Close();\\n+            mSink = nsnull;\\n+        }\\n \\n         nsresult rv = mLocation->Remove(PR_FALSE);\\n         if (NS_FAILED(rv))\\n@@ -152,6 +155,10 @@ nsDownloader::OnStopRequest(nsIRequest  *request,\\n             }\\n         }\\n     }\\n+    else if (mSink) {\\n+        mSink->Close();\\n+        mSink = nsnull;\\n+    }\\n \\n     mObserver->OnDownloadComplete(this, request, ctxt, status, mLocation);\\n     mObserver = nsnull;\\ndiff --git a/netwerk/test/unit/test_bug263127.js b/netwerk/test/unit/test_bug263127.js\\nnew file mode 100644\\nindex 0000000..4156cf7\\n--- /dev/null\\n+++ b/netwerk/test/unit/test_bug263127.js\\n@@ -0,0 +1,59 @@\\n+do_import_script(\\\"netwerk/test/httpserver/httpd.js\\\");\\n+\\n+var server;\\n+const BUGID = \\\"263127\\\";\\n+\\n+var listener = {\\n+  QueryInterface: function(iid) {\\n+    if (!iid.equals(nsIDownloadObserver) &&\\n+        !iid.equals(nsISupports))\\n+      throw Components.results.NS_ERROR_NO_INTERFACE;\\n+\\n+    return this;\\n+  },\\n+\\n+  onDownloadComplete: function(downloader, request, ctxt, status, file) {\\n+    server.stop();\\n+\\n+    if (!file)\\n+      do_throw(\\\"Download failed\\\");\\n+\\n+    try {\\n+      file.remove(false);\\n+    }\\n+    catch (e) {\\n+      do_throw(e);\\n+    }\\n+\\n+    do_check_false(file.exists());\\n+\\n+    do_test_finished();\\n+  }\\n+}\\n+\\n+function run_test() {\\n+  // start server\\n+  server = new nsHttpServer();\\n+  server.start(4444);\\n+\\n+  // Initialize downloader\\n+  var channel = Cc[\\\"@mozilla.org/network/io-service;1\\\"]\\n+                  .getService(Ci.nsIIOService)\\n+                  .newChannel(\\\"http://localhost:4444/\\\", null, null);\\n+\\n+  var targetFile = Cc[\\\"@mozilla.org/file/directory_service;1\\\"]\\n+                     .getService(Ci.nsIProperties)\\n+                     .get(\\\"TmpD\\\", Ci.nsIFile);\\n+  targetFile.append(\\\"bug\\\" + BUGID + \\\".test\\\");\\n+  if (targetFile.exists())\\n+    targetFile.remove(false);\\n+\\n+  var downloader = Cc[\\\"@mozilla.org/network/downloader;1\\\"]\\n+                     .createInstance(Ci.nsIDownloader);\\n+  downloader.init(listener, targetFile);\\n+\\n+  // Start download\\n+  channel.asyncOpen(downloader, null);\\n+\\n+  do_test_pending();\\n+}\\n\""}