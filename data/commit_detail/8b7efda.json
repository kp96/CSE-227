{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas8b7efda\""},"diff":"\"8b7efda Bug 391568, Mutation events not fired if listeners are only in anonymous content. r+sr=bz, a=sicking\\ndiff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp\\nindex 53d1a6c..8e3a7df 100644\\n--- a/content/base/src/nsContentUtils.cpp\\n+++ b/content/base/src/nsContentUtils.cpp\\n@@ -3034,6 +3034,16 @@ nsContentUtils::HasMutationListeners(nsINode* aNode,\\n         return PR_TRUE;\\n       }\\n     }\\n+\\n+    if (aNode->IsNodeOfType(nsINode::eCONTENT)) {\\n+      nsIContent* content = static_cast<nsIContent*>(aNode);\\n+      nsIContent* insertionParent =\\n+        doc->BindingManager()->GetInsertionParent(content);\\n+      if (insertionParent) {\\n+        aNode = insertionParent;\\n+        continue;\\n+      }\\n+    }\\n     aNode = aNode->GetNodeParent();\\n   }\\n \\ndiff --git a/content/events/test/Makefile.in b/content/events/test/Makefile.in\\nindex 02f8ec3..2121d25 100644\\n--- a/content/events/test/Makefile.in\\n+++ b/content/events/test/Makefile.in\\n@@ -52,6 +52,7 @@ _TEST_FILES = \\\\\\n \\t\\ttest_bug336682.js \\\\\\n \\t\\ttest_bug367781.html \\\\\\n \\t\\ttest_bug379120.html \\\\\\n+\\t\\ttest_bug391568.xhtml \\\\\\n \\t\\t$(NULL)\\n \\n libs:: $(_TEST_FILES)\\ndiff --git a/content/events/test/test_bug391568.xhtml b/content/events/test/test_bug391568.xhtml\\nnew file mode 100644\\nindex 0000000..0108d3d\\n--- /dev/null\\n+++ b/content/events/test/test_bug391568.xhtml\\n@@ -0,0 +1,77 @@\\n+<?xml version=\\\"1.0\\\"?>\\n+<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xmlns:xbl=\\\"http://www.mozilla.org/xbl\\\">\\n+<!--\\n+https://bugzilla.mozilla.org/show_bug.cgi?id=391568\\n+-->\\n+<head>\\n+  <title>Test for Bug 391568</title>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/MochiKit/packed.js\\\"></script>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/tests/SimpleTest/SimpleTest.js\\\"></script>\\n+  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/tests/SimpleTest/test.css\\\" />\\n+  <script>\\n+    var constructorFired = 0;\\n+  </script>\\n+  <xbl:bindings>\\n+    <xbl:binding id=\\\"test\\\">\\n+      <xbl:content><span>\\n+        (anonumous content)\\n+        <span><xbl:children/></span>\\n+        (anonumous content)</span>\\n+      </xbl:content>\\n+  \\n+      <xbl:implementation>\\n+        <xbl:constructor>\\n+          ++window.constructorFired;\\n+          document.getAnonymousNodes(this)[0].addEventListener(\\n+            \\\"DOMCharacterDataModified\\\", \\n+            function(evt) {\\n+              ++window.characterdatamodified;\\n+            },\\n+            true);\\n+        </xbl:constructor>\\n+      </xbl:implementation>\\n+    </xbl:binding>\\n+  </xbl:bindings>\\n+</head>\\n+<body>\\n+<a target=\\\"_blank\\\" href=\\\"https://bugzilla.mozilla.org/show_bug.cgi?id=391568\\\">Mozilla Bug 391568</a>\\n+<p id=\\\"display\\\"></p>\\n+<div id=\\\"content\\\">\\n+  <span style=\\\"-moz-binding: url(#test);\\\"><span id=\\\"real1\\\">(real content)</span></span>\\n+  <span style=\\\"-moz-binding: url(#test);\\\"><span id=\\\"real2\\\">(real content)</span></span>\\n+</div>\\n+<pre id=\\\"test\\\">\\n+<script class=\\\"testbody\\\" type=\\\"text/javascript\\\">\\n+<![CDATA[\\n+\\n+/** Test for Bug 391568 **/\\n+\\n+var characterdatamodified = 0;\\n+\\n+document.getElementById('real1').addEventListener(\\n+  \\\"DOMCharacterDataModified\\\", \\n+  function(evt) {},\\n+  true);\\n+\\n+function testListeners() {\\n+  if (constructorFired < 2) {\\n+    setTimeout(testListeners, 0);\\n+    return;\\n+  }\\n+  document.getElementById('real1').firstChild.data = \\\"(real content 2)\\\";\\n+  ok(characterdatamodified == 1,\\n+     \\\"There is a DOMCharacterDataModified listener in anonymous content which didn't get called (1)!\\\");\\n+  document.getElementById('real2').firstChild.data = \\\"(real content 2)\\\";\\n+  ok(characterdatamodified == 2,\\n+     \\\"There is a DOMCharacterDataModified listener in anonymous content which didn't get called (2)!\\\");\\n+  SimpleTest.finish();\\n+}\\n+\\n+SimpleTest.waitForExplicitFinish();\\n+addLoadEvent(testListeners);\\n+]]>\\n+</script>\\n+</pre>\\n+</body>\\n+</html>\\n+\\ndiff --git a/content/xbl/src/nsBindingManager.cpp b/content/xbl/src/nsBindingManager.cpp\\nindex 662c9a6..eb6cfd1 100644\\n--- a/content/xbl/src/nsBindingManager.cpp\\n+++ b/content/xbl/src/nsBindingManager.cpp\\n@@ -263,14 +263,16 @@ AddObjectEntry(PLDHashTable& table, nsISupports* aKey, nsISupports* aValue)\\n // helper routine for looking up an existing entry. Note that the\\n // return result is NOT addreffed\\n static nsISupports*\\n-LookupObject(PLDHashTable& table, nsISupports* aKey)\\n+LookupObject(PLDHashTable& table, nsIContent* aKey)\\n {\\n-  ObjectEntry *entry =\\n-    static_cast<ObjectEntry*>\\n-               (PL_DHashTableOperate(&table, aKey, PL_DHASH_LOOKUP));\\n+  if (aKey && aKey->HasFlag(NODE_MAY_BE_IN_BINDING_MNGR)) {\\n+    ObjectEntry *entry =\\n+      static_cast<ObjectEntry*>\\n+                 (PL_DHashTableOperate(&table, aKey, PL_DHASH_LOOKUP));\\n \\n-  if (PL_DHASH_ENTRY_IS_BUSY(entry))\\n-    return entry->GetValue();\\n+    if (PL_DHASH_ENTRY_IS_BUSY(entry))\\n+      return entry->GetValue();\\n+  }\\n \\n   return nsnull;\\n }\\n\""}