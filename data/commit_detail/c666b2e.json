{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basc666b2e\""},"diff":"\"c666b2e Bug 396300 - Put unfiled-bookmarks under their own root. r=dietirch, a=mconnor.\\ndiff --git a/browser/base/content/browser-places.js b/browser/base/content/browser-places.js\\nindex 67c5314..f4f850f 100644\\n--- a/browser/base/content/browser-places.js\\n+++ b/browser/base/content/browser-places.js\\n@@ -154,7 +154,7 @@ var PlacesCommandHook = {\\n    *        a <browser> element.\\n    * @param [optional] aParent\\n    *        The folder in which to create a new bookmark if the page loaded in\\n-   *        aBrowser isn't bookmarked yet, defaults to the places root.\\n+   *        aBrowser isn't bookmarked yet, defaults to the unfiled root.\\n    * @param [optional] aShowEditUI\\n    *        whether or not to show the edit-bookmark UI for the bookmark item\\n    * @param [optional] aAnchorElement\\n@@ -183,7 +183,7 @@ var PlacesCommandHook = {\\n       }\\n       catch (e) { }\\n \\n-      var parent = aParent != undefined ? aParent : PlacesUtils.placesRootId;\\n+      var parent = aParent != undefined ? aParent : PlacesUtils.unfiledRootId;\\n       var descAnno = { name: DESCRIPTION_ANNO, value: description };\\n       var txn = PlacesUtils.ptm.createItem(uri, parent, -1,\\n                                            title, null, [descAnno]);\\ndiff --git a/browser/components/places/content/editBookmarkOverlay.js b/browser/components/places/content/editBookmarkOverlay.js\\nindex f640c89..6d1602d 100644\\n--- a/browser/components/places/content/editBookmarkOverlay.js\\n+++ b/browser/components/places/content/editBookmarkOverlay.js\\n@@ -157,7 +157,7 @@ var gEditItemOverlay = {\\n     var container = PlacesUtils.bookmarks.getFolderIdForItem(this._itemId);\\n \\n     // only show \\\"All Bookmarks\\\" if the url isn't bookmarked somewhere else\\n-    this._element(\\\"placesRootItem\\\").hidden = container != PlacesUtils.placesRootId;\\n+    this._element(\\\"unfiledRootItem\\\").hidden = container != PlacesUtils.unfiledRootId;\\n \\n     // List of recently used folders:\\n     var annos = PlacesUtils.annotations;\\n@@ -479,8 +479,8 @@ var gEditItemOverlay = {\\n   function EIO__getFolderIdFromMenuList() {\\n     var selectedItem = this._folderMenuList.selectedItem\\n     switch (selectedItem.id) {\\n-      case \\\"editBMPanel_placesRootItem\\\":\\n-        return PlacesUtils.placesRootId;\\n+      case \\\"editBMPanel_unfiledRootItem\\\":\\n+        return PlacesUtils.unfiledRootId;\\n       case \\\"editBMPanel_bmRootItem\\\":\\n         return PlacesUtils.bookmarksRootId;\\n       case \\\"editBMPanel_toolbarFolderItem\\\":\\n@@ -515,8 +515,8 @@ var gEditItemOverlay = {\\n     }\\n \\n     if (aCheckStaticFolderItems) {\\n-      if (aFolderId == PlacesUtils.placesRootId)\\n-        return this._element(\\\"placesRootItem\\\");\\n+      if (aFolderId == PlacesUtils.unfiledRootId)\\n+        return this._element(\\\"unfiledRootItem\\\");\\n       if (aFolderId == PlacesUtils.bookmarksRootId)\\n         return this._element(\\\"bmRootItem\\\");\\n       if (aFolderId == PlacesUtils.toolbarFolderId)\\n@@ -540,7 +540,7 @@ var gEditItemOverlay = {\\n \\n       // Mark the containing folder as recently-used if it isn't the\\n       // \\\"All Bookmarks\\\" root\\n-      if (container != PlacesUtils.placesRootId)\\n+      if (container != PlacesUtils.unfiledRootId)\\n         this._markFolderAsRecentlyUsed(container);\\n     }\\n \\ndiff --git a/browser/components/places/content/editBookmarkOverlay.xul b/browser/components/places/content/editBookmarkOverlay.xul\\nindex 0fe726b..4fe4a89 100644\\n--- a/browser/components/places/content/editBookmarkOverlay.xul\\n+++ b/browser/components/places/content/editBookmarkOverlay.xul\\n@@ -90,7 +90,7 @@\\n                     oncommand=\\\"gEditItemOverlay.onFolderMenuListCommand();\\\">\\n             <menupopup>\\n               <!-- Static item for special folders -->\\n-              <menuitem id=\\\"editBMPanel_placesRootItem\\\"\\n+              <menuitem id=\\\"editBMPanel_unfiledRootItem\\\"\\n                         label=\\\"&editBookmarkOverlay.allBookmarksFolderItem.label;\\\"\\n                         class=\\\"menuitem-iconic folder-icon\\\"/>\\n               <menuitem id=\\\"editBMPanel_bmRootItem\\\"\\ndiff --git a/browser/components/places/content/utils.js b/browser/components/places/content/utils.js\\nindex 90173b3..f50cae4 100644\\n--- a/browser/components/places/content/utils.js\\n+++ b/browser/components/places/content/utils.js\\n@@ -1454,6 +1454,13 @@ var PlacesUtils = {\\n     return this._tagRootId;\\n   },\\n \\n+  get unfiledRootId() {\\n+    if (!(\\\"_unfiledRootId\\\" in this))\\n+      this._unfiledRootId = this.bookmarks.unfiledRoot;\\n+\\n+    return this._unfiledRootId;\\n+  },\\n+\\n   /**\\n    * Set the POST data associated with a URI, if any.\\n    * Used by POST keywords.\\n@@ -1504,8 +1511,9 @@ var PlacesUtils = {\\n     for each (var bk in bmkIds) {\\n       // Find the first folder which isn't a tag container\\n       var parent = this.bookmarks.getFolderIdForItem(bk);\\n-      if (parent == this.placesRootId)\\n+      if (parent == this.unfiledRootId)\\n         return bk;\\n+\\n       var grandparent = this.bookmarks.getFolderIdForItem(parent);\\n       if (grandparent != this.tagRootId &&\\n           !this.annotations.itemHasAnnotation(parent, LMANNO_FEEDURI))\\ndiff --git a/toolkit/components/places/public/nsINavBookmarksService.idl b/toolkit/components/places/public/nsINavBookmarksService.idl\\nindex b98c7dd..5c59190 100644\\n--- a/toolkit/components/places/public/nsINavBookmarksService.idl\\n+++ b/toolkit/components/places/public/nsINavBookmarksService.idl\\n@@ -163,7 +163,7 @@ interface nsINavBookmarkObserver : nsISupports\\n  * folders.  A URI in history can be contained in one or more such folders.\\n  */\\n \\n-[scriptable, uuid(117e4d4c-8c10-4c50-b588-848942b55b6e)]\\n+[scriptable, uuid(3ba9f6ca-0003-43b9-bdfb-7014dfec5b76)]\\n interface nsINavBookmarksService : nsISupports\\n {\\n   /**\\n@@ -178,12 +178,14 @@ interface nsINavBookmarksService : nsISupports\\n \\n   /**\\n    * The folder ID of the top-level folders that contain the tag \\\"folders\\\".\\n-   *\\n-   * NOTE: This isn't wired up yet, so don't try to use it for anything until\\n-   *       bug 329961 is marked resolved.\\n    */\\n   readonly attribute long long tagRoot;\\n \\n+ /**\\n+  * The folder ID of the unfiled-bookmarks root\\n+  */\\n+  readonly attribute long long unfiledRoot;\\n+\\n   /**\\n    * The folder ID of the personal toolbar.\\n    */\\ndiff --git a/toolkit/components/places/src/nsNavBookmarks.cpp b/toolkit/components/places/src/nsNavBookmarks.cpp\\nindex fffb38a..7d4312c 100644\\n--- a/toolkit/components/places/src/nsNavBookmarks.cpp\\n+++ b/toolkit/components/places/src/nsNavBookmarks.cpp\\n@@ -263,6 +263,19 @@ nsNavBookmarks::Init()\\n   mLock = PR_NewLock();\\n   NS_ENSURE_TRUE(mLock, NS_ERROR_OUT_OF_MEMORY);\\n \\n+  // Temporary migration code for bug 396300\\n+  nsCOMPtr<mozIStorageStatement> moveUnfiledBookmarks;\\n+  rv = dbConn->CreateStatement(NS_LITERAL_CSTRING(\\\"UPDATE moz_bookmarks SET parent = ?1 WHERE type = ?2 AND parent=?3\\\"),\\n+                               getter_AddRefs(moveUnfiledBookmarks));\\n+  rv = moveUnfiledBookmarks->BindInt64Parameter(0, mUnfiledRoot);\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+  rv = moveUnfiledBookmarks->BindInt32Parameter(1, TYPE_BOOKMARK);\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+  rv = moveUnfiledBookmarks->BindInt32Parameter(2, mRoot);\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+  rv = moveUnfiledBookmarks->Execute();\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+\\n   nsAnnotationService* annosvc = nsAnnotationService::GetAnnotationService();\\n   NS_ENSURE_TRUE(annosvc, NS_ERROR_OUT_OF_MEMORY);\\n \\n@@ -401,6 +414,10 @@ nsNavBookmarks::InitRoots()\\n   rv = CreateRoot(getRootStatement, NS_LITERAL_CSTRING(\\\"tags\\\"), &mTagRoot, mRoot, nsnull);\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n+  getRootStatement->Reset();\\n+  rv = CreateRoot(getRootStatement, NS_LITERAL_CSTRING(\\\"unfiled\\\"), &mUnfiledRoot, mRoot, nsnull);\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+\\n   if (importDefaults) {\\n     // when there is no places root, we should define the hierarchy by\\n     // importing the default one.\\n@@ -408,25 +425,6 @@ nsNavBookmarks::InitRoots()\\n     NS_ENSURE_SUCCESS(rv, rv);\\n   }\\n \\n-  // migration for bug 382094 - remove for A6\\n-  PRInt64 parent;\\n-  rv = GetFolderIdForItem(mBookmarksRoot, &parent);\\n-  if (NS_FAILED(rv) || parent == 0) {\\n-    nsCOMPtr<mozIStorageStatement> statement;\\n-    rv = DBConn()->CreateStatement(NS_LITERAL_CSTRING(\\\"UPDATE moz_bookmarks SET parent = ?1 WHERE id = ?2 or id = ?3\\\"),\\n-                                   getter_AddRefs(statement));\\n-    NS_ENSURE_SUCCESS(rv, rv);\\n-\\n-    rv = statement->BindInt64Parameter(0, mRoot);\\n-    NS_ENSURE_SUCCESS(rv, rv);\\n-    rv = statement->BindInt64Parameter(1, mBookmarksRoot);\\n-    NS_ENSURE_SUCCESS(rv, rv);\\n-    rv = statement->BindInt64Parameter(2, mTagRoot);\\n-    NS_ENSURE_SUCCESS(rv, rv);\\n-\\n-    rv = statement->Execute();\\n-    NS_ENSURE_SUCCESS(rv, rv);\\n-  }\\n   return NS_OK;\\n }\\n \\n@@ -473,60 +471,11 @@ nsNavBookmarks::InitToolbarFolder()\\n   nsTArray<PRInt64> folders;\\n   nsresult rv = annosvc->GetItemsWithAnnotationTArray(BOOKMARKS_TOOLBAR_FOLDER_ANNO,\\n                                                       &folders);\\n-  if (NS_FAILED(rv) || folders.Length() == 0) {\\n-    /**\\n-     * XXXmano: temporary migaration code, should be removed some time\\n-     *          after alpha 5.\\n-     */\\n-    mozIStorageConnection *dbConn = DBConn();\\n-\\n-    nsCOMPtr<mozIStorageStatement> statement;\\n-    rv = dbConn->CreateStatement(NS_LITERAL_CSTRING(\\\"SELECT id from moz_bookmarks WHERE folder_type = 'toolbar'\\\"),\\n-                                 getter_AddRefs(statement));\\n-    NS_ENSURE_SUCCESS(rv, rv);\\n-\\n-    PRBool hasResult;\\n-    rv = statement->ExecuteStep(&hasResult);\\n-    NS_ENSURE_SUCCESS(rv, rv);\\n-    if (hasResult) {\\n-      PRInt64 toolbarFolder;\\n-      rv = statement->GetInt64(0, &toolbarFolder);\\n-      NS_ENSURE_SUCCESS(rv, rv);\\n-      rv = SetToolbarFolder(toolbarFolder);\\n-      NS_ENSURE_SUCCESS(rv, rv);\\n-    } else {\\n-      /**\\n-      * XXXdietrich: temporary migration code to fix bug 389808.\\n-      *              should be removed some time after alpha 7. \\n-      */\\n-      \\n-      nsCOMPtr<mozIStorageStatement> getToolbarFolderStatement;\\n-      rv = dbConn->CreateStatement(NS_LITERAL_CSTRING(\\\"SELECT id from moz_bookmarks WHERE title = ?1 AND type = ?2\\\"),\\n-                                   getter_AddRefs(getToolbarFolderStatement));\\n-      NS_ENSURE_SUCCESS(rv, rv);\\n-      \\n-      nsXPIDLString toolbarTitle;\\n-      rv = mBundle->GetStringFromName(NS_LITERAL_STRING(\\\"PlacesBookmarksToolbarTitle\\\").get(),\\n-                                      getter_Copies(toolbarTitle));\\n-      NS_ENSURE_SUCCESS(rv, rv);\\n-      rv = getToolbarFolderStatement->BindStringParameter(0, toolbarTitle);\\n-      NS_ENSURE_SUCCESS(rv, rv);\\n-      rv = getToolbarFolderStatement->BindInt32Parameter(1, TYPE_FOLDER);\\n-      NS_ENSURE_SUCCESS(rv, rv);\\n-      rv = getToolbarFolderStatement->ExecuteStep(&hasResult);\\n-      NS_ENSURE_SUCCESS(rv, rv);\\n-      if (hasResult) {\\n-        PRInt64 toolbarFolder;\\n-        rv = getToolbarFolderStatement->GetInt64(0, &toolbarFolder);\\n-        NS_ENSURE_SUCCESS(rv, rv);\\n-        rv = SetToolbarFolder(toolbarFolder);\\n-        NS_ENSURE_SUCCESS(rv, rv);\\n-      }\\n-    }\\n-    return NS_OK;\\n-  }\\n+  if (NS_FAILED(rv) || folders.Length() == 0)\\n+    mToolbarFolder = -1;\\n+  else\\n+    mToolbarFolder = folders[0];\\n \\n-  mToolbarFolder = folders[0];\\n   return NS_OK;\\n }\\n \\n@@ -939,6 +888,13 @@ nsNavBookmarks::GetTagRoot(PRInt64 *aRoot)\\n }\\n \\n NS_IMETHODIMP\\n+nsNavBookmarks::GetUnfiledRoot(PRInt64 *aRoot)\\n+{\\n+  *aRoot = mUnfiledRoot;\\n+  return NS_OK;\\n+}\\n+\\n+NS_IMETHODIMP\\n nsNavBookmarks::InsertBookmark(PRInt64 aFolder, nsIURI *aItem, PRInt32 aIndex,\\n                                const nsAString& aTitle,\\n                                PRInt64 *aNewBookmarkId)\\ndiff --git a/toolkit/components/places/src/nsNavBookmarks.h b/toolkit/components/places/src/nsNavBookmarks.h\\nindex dd309c0..5e4addb 100644\\n--- a/toolkit/components/places/src/nsNavBookmarks.h\\n+++ b/toolkit/components/places/src/nsNavBookmarks.h\\n@@ -138,6 +138,7 @@ private:\\n   PRInt64 mRoot;\\n   PRInt64 mBookmarksRoot;\\n   PRInt64 mTagRoot;\\n+  PRInt64 mUnfiledRoot;\\n \\n   // personal toolbar folder\\n   PRInt64 mToolbarFolder;\\ndiff --git a/toolkit/components/places/tests/bookmarks/test_bookmarks.js b/toolkit/components/places/tests/bookmarks/test_bookmarks.js\\nindex 6a5089b..270bd85 100644\\n--- a/toolkit/components/places/tests/bookmarks/test_bookmarks.js\\n+++ b/toolkit/components/places/tests/bookmarks/test_bookmarks.js\\n@@ -117,6 +117,7 @@ function run_test() {\\n   do_check_true(bmsvc.bookmarksRoot > 0);\\n   do_check_true(bmsvc.tagRoot > 0);\\n   do_check_true(bmsvc.toolbarFolder > 0);\\n+  do_check_true(bmsvc.unfiledRoot > 0);\\n \\n   // test root parentage\\n   do_check_eq(bmsvc.getFolderIdForItem(bmsvc.bookmarksRoot), bmsvc.placesRoot);\\n\""}