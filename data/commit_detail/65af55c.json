{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas65af55c\""},"diff":"\"65af55c Bug 391800 - left panel view should be able to pass a more than one subject to the right panel view, rs=sdwilsh\\ndiff --git a/extensions/inspector/resources/content/viewers/accessibleObject/accessibleObject.js b/extensions/inspector/resources/content/viewers/accessibleObject/accessibleObject.js\\nindex e6ef895..9bd3b1a 100644\\n--- a/extensions/inspector/resources/content/viewers/accessibleObject/accessibleObject.js\\n+++ b/extensions/inspector/resources/content/viewers/accessibleObject/accessibleObject.js\\n@@ -43,22 +43,30 @@\\n *   chrome://inspector/content/jsutil/events/ObserverManager.js\\n ****************************************************************/\\n \\n-//////////// global variables /////////////////////\\n+///////////////////////////////////////////////////////////////////////////////\\n+//// Global Variables\\n \\n var viewer;\\n var bundle;\\n var accService;\\n \\n-//////////// global constants ////////////////////\\n-//////////////////////////////////////////////////\\n+///////////////////////////////////////////////////////////////////////////////\\n+//// Global Constants\\n+\\n+const kAccessibleRetrievalCID = \\\"@mozilla.org/accessibleRetrieval;1\\\";\\n+\\n+const nsIAccessibleRetrieval = Components.interfaces.nsIAccessibleRetrieval;\\n+const nsIAccessible = Components.interfaces.nsIAccessible;\\n+\\n+///////////////////////////////////////////////////////////////////////////////\\n+//// Initialization/Destruction\\n \\n window.addEventListener(\\\"load\\\", AccessibleObjectViewer_initialize, false);\\n \\n function AccessibleObjectViewer_initialize()\\n {\\n   bundle = document.getElementById(\\\"inspector-bundle\\\");\\n-  accService = Components.classes['@mozilla.org/accessibleRetrieval;1']\\n-                         .getService(Components.interfaces.nsIAccessibleRetrieval);\\n+  accService = XPCU.getService(kAccessibleRetrievalCID, nsIAccessibleRetrieval);\\n \\n   viewer = new JSObjectViewer();\\n \\n@@ -76,7 +84,11 @@ function AccessibleObjectViewer_initialize()\\n     {\\n       var accObject = null;\\n       try {\\n-        accObject = accService.getAccessibleFor(aObject);\\n+        accObject = aObject.getUserData(\\\"accessible\\\");\\n+        if (accObject)\\n+          XPCU.QI(accObject, nsIAccessible);\\n+        else\\n+          accObject = accService.getAccessibleFor(aObject);\\n       } catch(e) {\\n         dump(\\\"Failed to get accessible object for node.\\\");\\n       }\\ndiff --git a/extensions/inspector/resources/content/viewers/accessibleProps/accessibleProps.js b/extensions/inspector/resources/content/viewers/accessibleProps/accessibleProps.js\\nindex 4b04c01..30a9632 100644\\n--- a/extensions/inspector/resources/content/viewers/accessibleProps/accessibleProps.js\\n+++ b/extensions/inspector/resources/content/viewers/accessibleProps/accessibleProps.js\\n@@ -43,6 +43,16 @@\\n var viewer;\\n \\n ///////////////////////////////////////////////////////////////////////////////\\n+//// Global Constants\\n+\\n+const kAccessibleRetrievalCID = \\\"@mozilla.org/accessibleRetrieval;1\\\";\\n+\\n+const nsIAccessibleRetrieval = Components.interfaces.nsIAccessibleRetrieval;\\n+const nsIAccessible = Components.interfaces.nsIAccessible;\\n+\\n+const nsIPropertyElement = Components.interfaces.nsIPropertyElement;\\n+\\n+///////////////////////////////////////////////////////////////////////////////\\n //// Initialization/Destruction\\n \\n window.addEventListener(\\\"load\\\", AccessiblePropsViewer_initialize, false);\\n@@ -59,8 +69,8 @@ function AccessiblePropsViewer()\\n {\\n   this.mURL = window.location;\\n   this.mObsMan = new ObserverManager(this);\\n-  this.mAccService = Components.classes[\\\"@mozilla.org/accessibleRetrieval;1\\\"]\\n-                      .getService(Components.interfaces.nsIAccessibleRetrieval);\\n+  this.mAccService = XPCU.getService(kAccessibleRetrievalCID,\\n+                                     nsIAccessibleRetrieval);\\n }\\n \\n AccessiblePropsViewer.prototype =\\n@@ -116,7 +126,11 @@ AccessiblePropsViewer.prototype =\\n     this.clearView();\\n \\n     try {\\n-      this.mAccSubject = this.mAccService.getAccessibleFor(this.mSubject);\\n+      this.mAccSubject = this.mSubject.getUserData(\\\"accessible\\\");\\n+      if (this.mAccSubject)\\n+        XPCU.QI(this.mAccSubject, nsIAccessible);\\n+      else\\n+        this.mAccSubject = this.mAccService.getAccessibleFor(this.mSubject);\\n     } catch(e) {\\n       dump(\\\"Failed to get accessible object for node.\\\");\\n       return;\\n@@ -148,7 +162,7 @@ AccessiblePropsViewer.prototype =\\n \\n   addAccessibleAttribute: function addAccessibleAttribute(aElement)\\n   {\\n-    var prop = aElement.QueryInterface(Components.interfaces.nsIPropertyElement);\\n+    var prop = XPCU.QI(aElement, nsIPropertyElement);\\n \\n     var trAttrBody = document.getElementById(\\\"trAttrBody\\\");\\n \\ndiff --git a/extensions/inspector/resources/content/viewers/accessibleTree/accessibleTree.js b/extensions/inspector/resources/content/viewers/accessibleTree/accessibleTree.js\\nindex ad054e7..931e3e9 100644\\n--- a/extensions/inspector/resources/content/viewers/accessibleTree/accessibleTree.js\\n+++ b/extensions/inspector/resources/content/viewers/accessibleTree/accessibleTree.js\\n@@ -389,7 +389,9 @@ inAccTreeView.prototype.getDOMNodeFor =\\n function getDOMNodeFor(aAccessible)\\n {\\n   var accessNode = XPCU.QI(aAccessible, nsIAccessNode);\\n-  return accessNode.DOMNode;\\n+  var DOMNode = accessNode.DOMNode;\\n+  DOMNode.setUserData(\\\"accessible\\\", aAccessible, null);\\n+  return DOMNode;\\n }\\n \\n /**\\n\""}