{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basbc9f221\""},"diff":"\"bc9f221 Bug 388185 LABELLED_BY, LABEL_FOR relations shoudl be set for labels in panels r=aaronleventhal,mano a=dsicore\\ndiff --git a/accessible/src/base/nsAccessibilityAtomList.h b/accessible/src/base/nsAccessibilityAtomList.h\\nindex f940095..c432957 100755\\n--- a/accessible/src/base/nsAccessibilityAtomList.h\\n+++ b/accessible/src/base/nsAccessibilityAtomList.h\\n@@ -91,6 +91,7 @@ ACCESSIBILITY_ATOM(area, \\\"area\\\")\\n ACCESSIBILITY_ATOM(blockquote, \\\"blockquote\\\")\\n ACCESSIBILITY_ATOM(br, \\\"br\\\")\\n ACCESSIBILITY_ATOM(body, \\\"body\\\")\\n+ACCESSIBILITY_ATOM(caption, \\\"caption\\\") // XUL\\n ACCESSIBILITY_ATOM(choices, \\\"choices\\\") // XForms\\n ACCESSIBILITY_ATOM(description, \\\"description\\\")    // XUL\\n ACCESSIBILITY_ATOM(dd, \\\"dd\\\")\\ndiff --git a/accessible/src/xul/nsXULTextAccessible.cpp b/accessible/src/xul/nsXULTextAccessible.cpp\\nindex 10c57e5..bf413d8d 100644\\n--- a/accessible/src/xul/nsXULTextAccessible.cpp\\n+++ b/accessible/src/xul/nsXULTextAccessible.cpp\\n@@ -82,6 +82,36 @@ nsXULTextAccessible::GetState(PRUint32 *aState, PRUint32 *aExtraState)\\n   return NS_OK;\\n }\\n \\n+NS_IMETHODIMP\\n+nsXULTextAccessible::GetAccessibleRelated(PRUint32 aRelationType,\\n+                                          nsIAccessible **aRelated)\\n+{\\n+  nsresult rv =\\n+    nsHyperTextAccessibleWrap::GetAccessibleRelated(aRelationType, aRelated);\\n+  NS_ENSURE_SUCCESS(rv, rv);\\n+  if (*aRelated) {\\n+    return NS_OK;\\n+  }\\n+\\n+  nsIContent *content = GetRoleContent(mDOMNode);\\n+  if (!content)\\n+    return NS_ERROR_FAILURE;\\n+\\n+  if (aRelationType == nsIAccessibleRelation::RELATION_LABEL_FOR) {\\n+    // Caption is the label for groupbox\\n+    nsIContent *parent = content->GetParent();\\n+    if (parent && parent->Tag() == nsAccessibilityAtoms::caption) {\\n+      nsCOMPtr<nsIAccessible> parentAccessible;\\n+      GetParent(getter_AddRefs(parentAccessible));\\n+      if (Role(parentAccessible) == nsIAccessibleRole::ROLE_GROUPING) {\\n+        parentAccessible.swap(*aRelated);\\n+      }\\n+    }\\n+  }\\n+\\n+  return NS_OK;\\n+}\\n+\\n /**\\n   * For XUL tooltip\\n   */\\ndiff --git a/accessible/src/xul/nsXULTextAccessible.h b/accessible/src/xul/nsXULTextAccessible.h\\nindex b3a6b5b..fcbbad5 100644\\n--- a/accessible/src/xul/nsXULTextAccessible.h\\n+++ b/accessible/src/xul/nsXULTextAccessible.h\\n@@ -54,6 +54,8 @@ public:\\n   NS_IMETHOD GetName(nsAString& _retval); \\n   NS_IMETHOD GetState(PRUint32 *aState, PRUint32 *aExtraState);\\n   NS_IMETHOD GetRole(PRUint32 *aRole) { *aRole = nsIAccessibleRole::ROLE_LABEL; return NS_OK; }\\n+  NS_IMETHOD GetAccessibleRelated(PRUint32 aRelationType,\\n+                                  nsIAccessible **aRelated);\\n };\\n \\n class nsXULTooltipAccessible : public nsLeafAccessible\\ndiff --git a/toolkit/content/widgets/groupbox.xml b/toolkit/content/widgets/groupbox.xml\\nindex de86845..63130ab 100644\\n--- a/toolkit/content/widgets/groupbox.xml\\n+++ b/toolkit/content/widgets/groupbox.xml\\n@@ -44,15 +44,6 @@\\n                    xbl:inherits=\\\"default,value=label,crop,accesskey\\\"/>\\n       </children>\\n     </content>\\n-\\n-    <implementation>\\n-      <constructor>\\n-        if (this.parentNode.id) {\\n-          document.getAnonymousNodes(this)[1]\\n-                  .setAttribute(\\\"control\\\", this.parentNode.id);\\n-        }\\n-      </constructor>\\n-    </implementation>\\n   </binding>\\n \\n </bindings>\\n\""}