{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas2a860d4\""},"diff":"\"2a860d4 Blow away text runs after Bidi resolution. Bug 382429, r+sr+a=roc\\ndiff --git a/layout/generic/nsTextFrameThebes.cpp b/layout/generic/nsTextFrameThebes.cpp\\nindex 3381ced..ce8a0f2 100644\\n--- a/layout/generic/nsTextFrameThebes.cpp\\n+++ b/layout/generic/nsTextFrameThebes.cpp\\n@@ -6027,6 +6027,13 @@ nsTextFrame::AdjustOffsetsForBidi(PRInt32 aStart, PRInt32 aEnd)\\n {\\n   AddStateBits(NS_FRAME_IS_BIDI);\\n \\n+  /*\\n+   * After Bidi resolution we may need to reassign text runs.\\n+   * This is called during bidi resolution from the block container, so we\\n+   * shouldn't be holding a local reference to a textrun anywhere.\\n+   */\\n+  ClearTextRun();\\n+\\n   nsTextFrame* prev = static_cast<nsTextFrame*>(GetPrevInFlow());\\n   if (prev) {\\n     // the bidi resolver can be very evil when columns/pages are involved. Don't\\n@@ -6034,13 +6041,10 @@ nsTextFrame::AdjustOffsetsForBidi(PRInt32 aStart, PRInt32 aEnd)\\n     PRInt32 prevOffset = prev->GetContentOffset();\\n     aStart = PR_MAX(aStart, prevOffset);\\n     aEnd = PR_MAX(aEnd, prevOffset);\\n+    prev->ClearTextRun();\\n   }\\n   if (mContentOffset != aStart) {\\n     mContentOffset = aStart;\\n-    ClearTextRun();\\n-    if (prev) {\\n-      prev->ClearTextRun();\\n-    }\\n   }\\n \\n   SetLength(aEnd - aStart);\\ndiff --git a/layout/generic/test/Makefile.in b/layout/generic/test/Makefile.in\\nindex 88c5ce6..b238b33 100644\\n--- a/layout/generic/test/Makefile.in\\n+++ b/layout/generic/test/Makefile.in\\n@@ -47,6 +47,7 @@ include $(topsrcdir)/config/rules.mk\\n _TEST_FILES = \\ttest_bug323656.html \\\\\\n \\t\\ttest_bug344830.html \\\\\\n \\t\\tbug344830_testembed.svg \\\\\\n+\\t\\ttest_bug382429.html \\\\\\n \\t\\ttest_bug391747.html \\\\\\n \\t\\t$(NULL)\\n \\ndiff --git a/layout/generic/test/test_bug382429.html b/layout/generic/test/test_bug382429.html\\nnew file mode 100644\\nindex 0000000..598f922\\n--- /dev/null\\n+++ b/layout/generic/test/test_bug382429.html\\n@@ -0,0 +1,36 @@\\n+<!DOCTYPE HTML>\\n+<html>\\n+<!--\\n+https://bugzilla.mozilla.org/show_bug.cgi?id=382429\\n+-->\\n+<head>\\n+  <title>Test for Bug 382429</title>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/MochiKit/MochiKit.js\\\"></script>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/tests/SimpleTest/SimpleTest.js\\\"></script>        \\n+  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/tests/SimpleTest/test.css\\\" />\\n+</head>\\n+<body>\\n+<a target=\\\"_blank\\\" href=\\\"https://bugzilla.mozilla.org/show_bug.cgi?id=382429\\\">Mozilla Bug 382429</a>\\n+<p id=\\\"display\\\">&#x05e2; 3/4</p>\\n+<div id=\\\"content\\\" style=\\\"display: none\\\">\\n+  \\n+</div>\\n+<pre id=\\\"test\\\">\\n+<script class=\\\"testbody\\\" type=\\\"text/javascript\\\">\\n+ function do_Replace()\\n+{\\n+/** Test for Bug 382429 **/\\n+  var t = $(\\\"display\\\").firstChild;\\n+\\n+  t.data = t.data.replace(/3\\\\/4/, \\\"3 \\\\u05d3 4\\\");\\n+  ok(true, \\\"We should get here without crash or hang\\\");\\n+  is(t.data, \\\"\\\\u05e2 3 \\\\u05d3 4\\\", \\\"replace succeeded\\\");\\n+  SimpleTest.finish();\\n+}\\n+  setTimeout(do_Replace, 500);\\n+  SimpleTest.waitForExplicitFinish();\\n+</script>\\n+</pre>\\n+</body>\\n+</html>\\n+\\n\""}