{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5f21d5e\""},"diff":"\"5f21d5e bug 395942 mitigations for QuickTime media-link flaw, r=gavin,neil, b=beltzner\\ndiff --git a/browser/components/nsBrowserContentHandler.js b/browser/components/nsBrowserContentHandler.js\\nindex 21f6ba8..00f3c14 100644\\n--- a/browser/components/nsBrowserContentHandler.js\\n+++ b/browser/components/nsBrowserContentHandler.js\\n@@ -51,6 +51,7 @@ const nsIFactory             = Components.interfaces.nsIFactory;\\n const nsIFileURL             = Components.interfaces.nsIFileURL;\\n const nsIHttpProtocolHandler = Components.interfaces.nsIHttpProtocolHandler;\\n const nsIInterfaceRequestor  = Components.interfaces.nsIInterfaceRequestor;\\n+const nsINetUtil             = Components.interfaces.nsINetUtil;\\n const nsIPrefBranch          = Components.interfaces.nsIPrefBranch;\\n const nsIPrefLocalizedString = Components.interfaces.nsIPrefLocalizedString;\\n const nsISupportsString      = Components.interfaces.nsISupportsString;\\n@@ -67,6 +68,9 @@ const NS_BINDING_ABORTED = 0x804b0002;\\n const NS_ERROR_WONT_HANDLE_CONTENT = 0x805d0001;\\n const NS_ERROR_ABORT = Components.results.NS_ERROR_ABORT;\\n \\n+const URI_INHERITS_SECURITY_CONTEXT = nsIHttpProtocolHandler\\n+                                        .URI_INHERITS_SECURITY_CONTEXT;\\n+\\n function shouldLoadURI(aURI) {\\n   if (aURI && !aURI.schemeIs(\\\"chrome\\\"))\\n     return true;\\n@@ -430,12 +434,21 @@ var nsBrowserContentHandler = {\\n       // Handle the old preference dialog URL separately (bug 285416)\\n       if (chromeParam == \\\"chrome://browser/content/pref/pref.xul\\\") {\\n         openPreferences();\\n-      } else {\\n+        cmdLine.preventDefault = true;\\n+      } else try {\\n+        // only load URIs which do not inherit chrome privs\\n         var features = \\\"chrome,dialog=no,all\\\" + this.getFeatures(cmdLine);\\n-        openWindow(null, chromeParam, \\\"_blank\\\", features, \\\"\\\");\\n+        var uri = resolveURIInternal(cmdLine, chromeParam);\\n+        var netutil = Components.classes[\\\"@mozilla.org/network/util;1\\\"]\\n+                                .getService(nsINetUtil);\\n+        if (!netutil.URIChainHasFlags(uri, URI_INHERITS_SECURITY_CONTEXT)) {\\n+          openWindow(null, uri.spec, \\\"_blank\\\", features, \\\"\\\");\\n+          cmdLine.preventDefault = true;\\n+        }\\n+      }\\n+      catch (e) {\\n+        Components.utils.reportError(e);\\n       }\\n-\\n-      cmdLine.preventDefault = true;\\n     }\\n     if (cmdLine.handleFlag(\\\"preferences\\\", false)) {\\n       openPreferences();\\ndiff --git a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\nindex 20bcd69..5a70a6f 100644\\n--- a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\n+++ b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\n@@ -2616,6 +2616,12 @@ ExtensionManager.prototype = {\\n   _installGlobalItem: function(file) {\\n     if (!file || !file.exists())\\n       throw new Error(\\\"Unable to find the file specified on the command line!\\\");\\n+#ifdef XP_WIN\\n+    // make sure the file is local on Windows\\n+    file.normalize();\\n+    if (file.path[1] != ':')\\n+      throw new Error(\\\"Can't install global chrome from non-local file \\\"+file.path);\\n+#endif\\n     var installManifestFile = extractRDFFileToTempDir(file, FILE_INSTALL_MANIFEST, true);\\n     if (!installManifestFile.exists())\\n       throw new Error(\\\"The package is missing an install manifest!\\\");\\n\""}