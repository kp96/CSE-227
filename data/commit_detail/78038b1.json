{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas78038b1\""},"diff":"\"78038b1 Fix comments in patch that fixes performance regression from bug 395397 -- comment-only patch. b=396796 r=josh a=josh\\ndiff --git a/widget/src/cocoa/nsAppShell.h b/widget/src/cocoa/nsAppShell.h\\nindex 61c49dd..a0e9669 100644\\n--- a/widget/src/cocoa/nsAppShell.h\\n+++ b/widget/src/cocoa/nsAppShell.h\\n@@ -90,6 +90,11 @@ protected:\\n   // mHadMoreEventsCount and kHadMoreEventsCountMax are used in\\n   // ProcessNextNativeEvent().\\n   PRUint32               mHadMoreEventsCount;\\n+  // Setting kHadMoreEventsCountMax to '10' contributed to a fairly large\\n+  // (about 10%) increase in the number of calls to malloc (though without\\n+  // effecting the total amount of memory used).  Cutting it to '3'\\n+  // reduced the number of calls by 6%-7% (reducing the original regression\\n+  // to 3%-4%).  See bmo bug 395397.\\n   static const PRUint32  kHadMoreEventsCountMax = 3;\\n };\\n \\ndiff --git a/widget/src/cocoa/nsAppShell.mm b/widget/src/cocoa/nsAppShell.mm\\nindex 3a34fd7..1733ca4b 100644\\n--- a/widget/src/cocoa/nsAppShell.mm\\n+++ b/widget/src/cocoa/nsAppShell.mm\\n@@ -414,22 +414,20 @@ nsAppShell::ProcessNextNativeEvent(PRBool aMayWait)\\n     // combining [NSRunLoop runMode:beforeDate] with [NSApp\\n     // nextEventMatchingMask:...].\\n \\n-    // We need to special-case timer events (events of type NSPeriodic),\\n-    // otherwise we will starve them.  (Which can have strange results --\\n-    // among other things it causes a ~10% increase in the number of calls\\n-    // to malloc and a ~2% Tdhtml regression.  See bmo bug 396796.)  Apple's\\n-    // documentation is very scanty, and it's now more scanty than it used to\\n-    // be.  But it appears that [NSRunLoop acceptInputForMode:beforeDate:]\\n-    // doesn't process timer events at all, that it is called from\\n-    // [NSRunLoop runMode:beforeDate:], and that [NSRunLoop runMode:beforeDate:],\\n-    // though it does process timer events, doesn't return after doing so.\\n-    // To get around this, when aWait is PR_FALSE we check for timer events\\n-    // and process them using [NSApp sendEvent:].  When aWait is PR_TRUE\\n-    // [NSRunLoop runMode:beforeDate:] will only return on a \\\"real\\\" event.\\n-    // But there's code in ProcessGeckoEvents() that should (when need be)\\n-    // wake us up by sending a \\\"fake\\\" \\\"real\\\" event.  (See Apple's current doc\\n-    // on [NSRunLoop runMode:beforeDate:] and a quote from what appears to be\\n-    // an older version of this doc at\\n+    // We special-case timer events (events of type NSPeriodic) to avoid\\n+    // starving them.  Apple's documentation is very scanty, and it's now\\n+    // more scanty than it used to be.  But it appears that [NSRunLoop\\n+    // acceptInputForMode:beforeDate:] doesn't process timer events at all,\\n+    // that it is called from [NSRunLoop runMode:beforeDate:], and that\\n+    // [NSRunLoop runMode:beforeDate:], though it does process timer events,\\n+    // doesn't return after doing so.  To get around this, when aWait is\\n+    // PR_FALSE we check for timer events and process them using [NSApp\\n+    // sendEvent:].  When aWait is PR_TRUE [NSRunLoop runMode:beforeDate:]\\n+    // will only return on a \\\"real\\\" event.  But there's code in\\n+    // ProcessGeckoEvents() that should (when need be) wake us up by sending\\n+    // a \\\"fake\\\" \\\"real\\\" event.  (See Apple's current doc on [NSRunLoop\\n+    // runMode:beforeDate:] and a quote from what appears to be an older\\n+    // version of this doc at\\n     // http://lists.apple.com/archives/cocoa-dev/2001/May/msg00559.html.)\\n \\n     // If the current mode is something else than NSDefaultRunLoopMode, look\\n\""}