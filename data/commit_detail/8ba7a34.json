{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas8ba7a34\""},"diff":"\"8ba7a34 Bug 393537: arena handling cleanup. r=brendan\\ndiff --git a/js/src/jsopcode.c b/js/src/jsopcode.c\\nindex 0aec3fe..0d5064e 100644\\n--- a/js/src/jsopcode.c\\n+++ b/js/src/jsopcode.c\\n@@ -418,19 +418,22 @@ static JSBool\\n SprintEnsureBuffer(Sprinter *sp, size_t len)\\n {\\n     ptrdiff_t nb;\\n+    char *base;\\n \\n     nb = (sp->offset + len + 1) - sp->size;\\n     if (nb < 0)\\n         return JS_TRUE;\\n-    if (!sp->base) {\\n-        JS_ARENA_ALLOCATE_CAST(sp->base, char *, sp->pool, nb);\\n+    base = sp->base;\\n+    if (!base) {\\n+        JS_ARENA_ALLOCATE_CAST(base, char *, sp->pool, nb);\\n     } else {\\n-        JS_ARENA_GROW_CAST(sp->base, char *, sp->pool, sp->size, nb);\\n+        JS_ARENA_GROW_CAST(base, char *, sp->pool, sp->size, nb);\\n     }\\n-    if (!sp->base) {\\n+    if (!base) {\\n         JS_ReportOutOfMemory(sp->context);\\n         return JS_FALSE;\\n     }\\n+    sp->base = base;\\n     sp->size += nb;\\n     return JS_TRUE;\\n }\\n\""}