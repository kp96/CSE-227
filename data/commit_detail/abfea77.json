{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basabfea77\""},"diff":"\"abfea77 Bug 216434 - autocomplete dropdown covers textbox when textbox is near bottom of screen, r=neil, a=mconnor\\ndiff --git a/toolkit/components/autocomplete/public/nsIAutoCompletePopup.idl b/toolkit/components/autocomplete/public/nsIAutoCompletePopup.idl\\nindex 38c7350..208e84d 100644\\n--- a/toolkit/components/autocomplete/public/nsIAutoCompletePopup.idl\\n+++ b/toolkit/components/autocomplete/public/nsIAutoCompletePopup.idl\\n@@ -37,9 +37,10 @@\\n \\n #include \\\"nsISupports.idl\\\"\\n \\n+interface nsIDOMElement;\\n interface nsIAutoCompleteInput;\\n \\n-[scriptable, uuid(816668CC-6AC0-47C3-944E-9C2CF37F224A)]\\n+[scriptable, uuid(1b9d7d8a-6dd0-11dc-8314-0800200c9a66)]\\n interface nsIAutoCompletePopup : nsISupports\\n {\\n   /*\\n@@ -67,12 +68,10 @@ interface nsIAutoCompletePopup : nsISupports\\n    * Bind the popup to an input object and display it with the given coordinates\\n    *\\n    * @param input - The input object that the popup will be bound to\\n-   * @param x - The x coordinate to display the popup at\\n-   * @param y - The y coordinate to display the popup at\\n-   * @param width - The width that the popup should size itself to\\n+   * @param element - The element that the popup will be aligned with\\n    */\\n-  void openAutocompletePopup(in nsIAutoCompleteInput input, in long x, in long y, in long width);\\n-  \\n+  void openAutocompletePopup(in nsIAutoCompleteInput input, in nsIDOMElement element);\\n+\\n   /* \\n    * Close the popup and detach from the bound input\\n    */\\ndiff --git a/toolkit/components/satchel/src/nsFormFillController.cpp b/toolkit/components/satchel/src/nsFormFillController.cpp\\nindex 348c8db..d97a93c 100644\\n--- a/toolkit/components/satchel/src/nsFormFillController.cpp\\n+++ b/toolkit/components/satchel/src/nsFormFillController.cpp\\n@@ -124,31 +124,6 @@ nsFormFillController::~nsFormFillController()\\n }\\n \\n ////////////////////////////////////////////////////////////////////////\\n-\\n-nsRect\\n-GetScreenOrigin(nsIDOMElement* aElement)\\n-{\\n-  nsRect rect(0,0,0,0);\\n-\\n-  nsCOMPtr<nsIContent> content = do_QueryInterface(aElement);\\n-  nsCOMPtr<nsIDocument> doc = content->GetDocument();\\n-\\n-  if (doc) {\\n-    // Get Presentation shell 0\\n-    nsIPresShell* presShell = doc->GetPrimaryShell();\\n-\\n-    if (presShell) {\\n-      nsIFrame* frame = presShell->GetPrimaryFrameFor(content);\\n-      if (!frame)\\n-        return rect;\\n-      rect = frame->GetScreenRectExternal();\\n-    }\\n-  }\\n-  \\n-  return rect;\\n-}\\n-\\n-////////////////////////////////////////////////////////////////////////\\n //// nsIFormFillController\\n \\n NS_IMETHODIMP\\n@@ -245,10 +220,7 @@ nsFormFillController::SetPopupOpen(PRBool aPopupOpen)\\n                                        NS_PRESSHELL_SCROLL_IF_NOT_VISIBLE,\\n                                        NS_PRESSHELL_SCROLL_IF_NOT_VISIBLE);\\n \\n-      nsRect popupRect = GetScreenOrigin(mFocusedInput);\\n-      mFocusedPopup->OpenAutocompletePopup(this, popupRect.x,\\n-                                           popupRect.y+popupRect.height,\\n-                                           popupRect.width);\\n+      mFocusedPopup->OpenAutocompletePopup(this, mFocusedInput);\\n     } else\\n       mFocusedPopup->ClosePopup();\\n   }\\ndiff --git a/toolkit/content/widgets/autocomplete.xml b/toolkit/content/widgets/autocomplete.xml\\nindex 1792a05..ee456ad 100644\\n--- a/toolkit/content/widgets/autocomplete.xml\\n+++ b/toolkit/content/widgets/autocomplete.xml\\n@@ -324,7 +324,7 @@\\n \\n       <method name=\\\"openPopup\\\">\\n         <body><![CDATA[\\n-          this.popup.openAutocompletePopup(this, -1, -1, this.boxObject.width);\\n+          this.popup.openAutocompletePopup(this, this);\\n         ]]></body>\\n       </method>\\n \\n@@ -524,7 +524,7 @@\\n       <stylesheet src=\\\"chrome://global/skin/autocomplete.css\\\"/>\\n     </resources>\\n \\n-    <content>\\n+    <content minwidth=\\\"100\\\">\\n       <xul:tree anonid=\\\"tree\\\" class=\\\"autocomplete-tree plain\\\" hidecolumnpicker=\\\"true\\\" flex=\\\"1\\\">\\n         <xul:treecols anonid=\\\"treecols\\\">\\n           <xul:treecol id=\\\"treecolAutoCompleteValue\\\" class=\\\"autocomplete-treecol\\\" flex=\\\"1\\\" overflow=\\\"true\\\"/>\\n@@ -571,9 +571,7 @@\\n \\n       <method name=\\\"openAutocompletePopup\\\">\\n         <parameter name=\\\"aInput\\\"/>\\n-        <parameter name=\\\"aX\\\"/>\\n-        <parameter name=\\\"aY\\\"/>\\n-        <parameter name=\\\"aWidth\\\"/>\\n+        <parameter name=\\\"aElement\\\"/>\\n         <body><![CDATA[\\n           if (!this.mPopupOpen) {\\n             this.mInput = aInput;\\n@@ -583,15 +581,12 @@\\n             this.showCommentColumn = this.mInput.showCommentColumn;\\n             this.showImageColumn = this.mInput.showImageColumn;\\n \\n-            this.setAttribute(\\\"width\\\", aWidth < 100 ? 100 : aWidth);\\n-\\n             document.popupNode = null;\\n-            if (aY == -1) {\\n-              this.showPopup(this.mInput, -1, -1, \\\"popup\\\", 'bottomleft', 'topleft');\\n-            }\\n-            else {\\n-              this.showPopup(document.documentElement, aX, aY, \\\"popup\\\", null, null);            \\n-            }\\n+\\n+            var rect = aElement.getBoundingClientRect();\\n+            this.setAttribute(\\\"width\\\", rect.right - rect.left);            \\n+            this.openPopup(aElement, \\\"after_start\\\", 0, 0, false, false);\\n+\\n             this.popupBoxObject.setConsumeRollupEvent(this.mInput.consumeRollupEvent);\\n           }\\n         ]]></body>\\ndiff --git a/xpfe/components/autocomplete/resources/content/autocomplete.xml b/xpfe/components/autocomplete/resources/content/autocomplete.xml\\nindex d384c50..4b1bdb7 100644\\n--- a/xpfe/components/autocomplete/resources/content/autocomplete.xml\\n+++ b/xpfe/components/autocomplete/resources/content/autocomplete.xml\\n@@ -1405,7 +1405,7 @@\\n       <stylesheet src=\\\"chrome://global/skin/autocomplete.css\\\"/>\\n     </resources>\\n \\n-    <content>\\n+    <content minwidth=\\\"100\\\">\\n       <xul:tree anonid=\\\"tree\\\" class=\\\"autocomplete-tree plain\\\" flex=\\\"1\\\">\\n         <xul:treecols anonid=\\\"treecols\\\">\\n           <xul:treecol class=\\\"autocomplete-treecol\\\" id=\\\"treecolAutoCompleteValue\\\" flex=\\\"2\\\"/>\\n@@ -1560,21 +1560,22 @@\\n \\n       <method name=\\\"openAutocompletePopup\\\">\\n         <parameter name=\\\"aInput\\\"/>\\n-        <parameter name=\\\"aX\\\"/>\\n-        <parameter name=\\\"aY\\\"/>\\n-        <parameter name=\\\"aWidth\\\"/>\\n-        <body>\\n+        <parameter name=\\\"aElement\\\"/>\\n+        <body><![CDATA[\\n           if (!this.input) {\\n             this.tree.view = aInput.controller;\\n             this.view = this.tree.view;\\n             this.showCommentColumn = aInput.showCommentColumn;\\n             this.input = aInput;\\n-            this.width = aWidth;\\n             this.invalidate();\\n-            this.openPopupAtScreen(aX, aY, false);\\n+\\n+            var rect = aElement.getBoundingClientRect();\\n+            this.setAttribute(\\\"width\\\", rect.right - rect.left);            \\n+            this.openPopup(aElement, \\\"after_start\\\", 0, 0, false, false);\\n+\\n             this.popupBoxObject.setConsumeRollupEvent(aInput.consumeRollupEvent);\\n           }\\n-        </body>\\n+        ]]></body>\\n       </method>\\n \\n       <method name=\\\"closePopup\\\">\\n\""}