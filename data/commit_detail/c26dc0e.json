{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basc26dc0e\""},"diff":"\"c26dc0e Bug 393974 - Tree walkers leak with a non-null filter.  r=smaug, sr=sicking, a=blocking1.9\\ndiff --git a/content/base/src/nsTreeWalker.cpp b/content/base/src/nsTreeWalker.cpp\\nindex c5d61c6..973c3f6 100644\\n--- a/content/base/src/nsTreeWalker.cpp\\n+++ b/content/base/src/nsTreeWalker.cpp\\n@@ -100,18 +100,22 @@ nsTreeWalker::~nsTreeWalker()\\n }\\n \\n /*\\n- * nsISupports stuff\\n+ * nsISupports and cycle collection stuff\\n  */\\n \\n+NS_IMPL_CYCLE_COLLECTION_3(nsTreeWalker, mFilter, mCurrentNode, mRoot)\\n+\\n // QueryInterface implementation for nsTreeWalker\\n-NS_INTERFACE_MAP_BEGIN(nsTreeWalker)\\n+NS_INTERFACE_MAP_BEGIN_CYCLE_COLLECTION(nsTreeWalker)\\n     NS_INTERFACE_MAP_ENTRY(nsIDOMTreeWalker)\\n     NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIDOMTreeWalker)\\n     NS_INTERFACE_MAP_ENTRY_CONTENT_CLASSINFO(TreeWalker)\\n NS_INTERFACE_MAP_END\\n \\n-NS_IMPL_ADDREF(nsTreeWalker)\\n-NS_IMPL_RELEASE(nsTreeWalker)\\n+NS_IMPL_CYCLE_COLLECTING_ADDREF(nsTreeWalker)\\n+NS_IMPL_CYCLE_COLLECTING_RELEASE(nsTreeWalker)\\n+\\n+\\n \\n /*\\n  * nsIDOMTreeWalker Getters/Setters\\ndiff --git a/content/base/src/nsTreeWalker.h b/content/base/src/nsTreeWalker.h\\nindex a1a3d0c..707cc9a 100644\\n--- a/content/base/src/nsTreeWalker.h\\n+++ b/content/base/src/nsTreeWalker.h\\n@@ -48,6 +48,7 @@\\n #include \\\"nsCOMPtr.h\\\"\\n #include \\\"nsVoidArray.h\\\"\\n #include \\\"nsJSUtils.h\\\"\\n+#include \\\"nsCycleCollectionParticipant.h\\\"\\n \\n class nsINode;\\n class nsIDOMNode;\\n@@ -56,7 +57,7 @@ class nsIDOMNodeFilter;\\n class nsTreeWalker : public nsIDOMTreeWalker\\n {\\n public:\\n-    NS_DECL_ISUPPORTS\\n+    NS_DECL_CYCLE_COLLECTING_ISUPPORTS\\n     NS_DECL_NSIDOMTREEWALKER\\n \\n     nsTreeWalker(nsINode *aRoot,\\n@@ -64,7 +65,9 @@ public:\\n                  nsIDOMNodeFilter *aFilter,\\n                  PRBool aExpandEntityReferences);\\n     virtual ~nsTreeWalker();\\n-    /* additional members */\\n+\\n+    NS_DECL_CYCLE_COLLECTION_CLASS(nsTreeWalker)\\n+\\n private:\\n     nsCOMPtr<nsINode> mRoot;\\n     PRUint32 mWhatToShow;\\ndiff --git a/dom/tests/mochitest/bugs/Makefile.in b/dom/tests/mochitest/bugs/Makefile.in\\nindex 53aeb7a..60e8801 100644\\n--- a/dom/tests/mochitest/bugs/Makefile.in\\n+++ b/dom/tests/mochitest/bugs/Makefile.in\\n@@ -55,6 +55,7 @@ _TEST_FILES\\t= \\\\\\n \\t\\ttest_bug370098.html \\\\\\n \\t\\ttest_bug377539.html \\\\\\n \\t\\ttest_bug384122.html \\\\\\n+\\t\\ttest_bug393974.html \\\\\\n \\t\\t$(NULL)\\n \\n libs:: \\t$(_TEST_FILES)\\ndiff --git a/dom/tests/mochitest/bugs/test_bug393974.html b/dom/tests/mochitest/bugs/test_bug393974.html\\nnew file mode 100644\\nindex 0000000..a1cae9f\\n--- /dev/null\\n+++ b/dom/tests/mochitest/bugs/test_bug393974.html\\n@@ -0,0 +1,70 @@\\n+<!DOCTYPE HTML>\\n+<html>\\n+<!--\\n+https://bugzilla.mozilla.org/show_bug.cgi?id=393974\\n+-->\\n+<head>\\n+  <title>Test for Bug 393974</title>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/MochiKit/MochiKit.js\\\"></script>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/tests/SimpleTest/SimpleTest.js\\\"></script>\\n+  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/tests/SimpleTest/test.css\\\" />\\n+</head>\\n+<body>\\n+<a target=\\\"_blank\\\" href=\\\"https://bugzilla.mozilla.org/show_bug.cgi?id=393974\\\">Mozilla Bug 393974</a>\\n+<p id=\\\"display\\\"></p>\\n+<div id=\\\"content\\\" style=\\\"display: none\\\">\\n+  \\n+</div>\\n+<pre id=\\\"test\\\">\\n+<script class=\\\"testbody\\\" type=\\\"text/javascript\\\">\\n+\\n+SimpleTest.waitForExplicitFinish();\\n+\\n+function test()\\n+{\\n+  // Create a tree walker with a filter which creates a cycle...\\n+  var tw = document.createTreeWalker(document, NodeFilter.SHOW_ALL,\\n+                                     function(n)\\n+                                     {\\n+                                       // force the closure to contain the\\n+                                       // global object, in case a future\\n+                                       // optimization might minimize the\\n+                                       // function's captured environment\\n+                                       if (\\\"foo\\\" + window == \\\"fooPIRATES!\\\")\\n+                                         return NodeFilter.FILTER_ACCEPT;\\n+                                       return NodeFilter.FILTER_REJECT;\\n+                                     },\\n+                                     true);\\n+\\n+  // That should have been enough to create a leak, but we should do at least\\n+  // a couple tests while we're here so that this document doesn't show up as\\n+  // having no tests pass *or* fail.\\n+\\n+  ok(tw.firstChild() === null, \\\"shouldn't be a first child\\\");\\n+  ok(tw.currentNode === document, \\\"should be unchanged\\\");\\n+\\n+  ok(tw.lastChild() === null, \\\"shouldn't be a last child\\\");\\n+  ok(tw.currentNode === document, \\\"should be unchanged\\\");\\n+\\n+  ok(tw.nextNode() === null, \\\"shouldn't be a next node\\\");\\n+  ok(tw.currentNode === document, \\\"should be unchanged\\\");\\n+\\n+  ok(tw.nextSibling() === null, \\\"shouldn't be a next sibling\\\");\\n+  ok(tw.currentNode === document, \\\"should be unchanged\\\");\\n+\\n+  ok(tw.parentNode() === null, \\\"shouldn't be a parent node\\\");\\n+  ok(tw.currentNode === document, \\\"should be unchanged\\\");\\n+\\n+  ok(tw.previousNode() === null, \\\"shouldn't be a previous node\\\");\\n+  ok(tw.currentNode === document, \\\"should be unchanged\\\");\\n+\\n+  ok(tw.previousSibling() === null, \\\"shouldn't be a previous sibling\\\");\\n+  ok(tw.currentNode === document, \\\"should be unchanged\\\");\\n+}\\n+\\n+addLoadEvent(test);\\n+addLoadEvent(SimpleTest.finish);\\n+</script>\\n+</pre>\\n+</body>\\n+</html>\\n\""}