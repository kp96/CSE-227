{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basb12c093\""},"diff":"\"b12c093 Bug 395426, Contextmenu opened using keyboard should have .button == 0, r=enndeakin,sr+a=jst\\ndiff --git a/content/events/src/nsDOMEvent.cpp b/content/events/src/nsDOMEvent.cpp\\nindex 17dddce..bebc129 100644\\n--- a/content/events/src/nsDOMEvent.cpp\\n+++ b/content/events/src/nsDOMEvent.cpp\\n@@ -708,6 +708,7 @@ NS_METHOD nsDOMEvent::DuplicatePrivateData()\\n       isInputEvent = PR_TRUE;\\n       mouseEvent->clickCount = oldMouseEvent->clickCount;\\n       mouseEvent->acceptActivation = oldMouseEvent->acceptActivation;\\n+      mouseEvent->context = oldMouseEvent->context;\\n       mouseEvent->relatedTarget = oldMouseEvent->relatedTarget;\\n       mouseEvent->button = oldMouseEvent->button;\\n       newEvent = mouseEvent;\\ndiff --git a/dom/src/base/nsDOMWindowUtils.cpp b/dom/src/base/nsDOMWindowUtils.cpp\\nindex 0124bd1..0139eeb 100644\\n--- a/dom/src/base/nsDOMWindowUtils.cpp\\n+++ b/dom/src/base/nsDOMWindowUtils.cpp\\n@@ -198,6 +198,7 @@ nsDOMWindowUtils::SendMouseEvent(const nsAString& aType,\\n     return NS_ERROR_FAILURE;\\n \\n   PRInt32 msg;\\n+  PRBool contextMenuKey = PR_FALSE;\\n   if (aType.EqualsLiteral(\\\"mousedown\\\"))\\n     msg = NS_MOUSE_BUTTON_DOWN;\\n   else if (aType.EqualsLiteral(\\\"mouseup\\\"))\\n@@ -208,12 +209,15 @@ nsDOMWindowUtils::SendMouseEvent(const nsAString& aType,\\n     msg = NS_MOUSE_ENTER;\\n   else if (aType.EqualsLiteral(\\\"mouseout\\\"))\\n     msg = NS_MOUSE_EXIT;\\n-  else if (aType.EqualsLiteral(\\\"contextmenu\\\"))\\n+  else if (aType.EqualsLiteral(\\\"contextmenu\\\")) {\\n     msg = NS_CONTEXTMENU;\\n-  else\\n+    contextMenuKey = (aButton == 0);\\n+  } else\\n     return NS_ERROR_FAILURE;\\n \\n-  nsMouseEvent event(PR_TRUE, msg, widget, nsMouseEvent::eReal);\\n+  nsMouseEvent event(PR_TRUE, msg, widget, nsMouseEvent::eReal,\\n+                     contextMenuKey ?\\n+                       nsMouseEvent::eContextMenuKey : nsMouseEvent::eNormal);\\n   event.isShift = (aModifiers & nsIDOMNSEvent::SHIFT_MASK) ? PR_TRUE : PR_FALSE;\\n   event.isControl = (aModifiers & nsIDOMNSEvent::CONTROL_MASK) ? PR_TRUE : PR_FALSE;\\n   event.isAlt = (aModifiers & nsIDOMNSEvent::ALT_MASK) ? PR_TRUE : PR_FALSE;\\ndiff --git a/widget/public/nsGUIEvent.h b/widget/public/nsGUIEvent.h\\nindex b07ddce..25b912d 100644\\n--- a/widget/public/nsGUIEvent.h\\n+++ b/widget/public/nsGUIEvent.h\\n@@ -645,12 +645,14 @@ public:\\n     if (msg == NS_MOUSE_MOVE) {\\n       flags |= NS_EVENT_FLAG_CANT_CANCEL;\\n     } else if (msg == NS_CONTEXTMENU) {\\n-      button = eRightButton;\\n+      button = (context == eNormal) ? eRightButton : eLeftButton;\\n     }\\n   }\\n #ifdef NS_DEBUG\\n   ~nsMouseEvent() {\\n-    NS_WARN_IF_FALSE(message != NS_CONTEXTMENU || button == eRightButton,\\n+    NS_WARN_IF_FALSE(message != NS_CONTEXTMENU ||\\n+                     button ==\\n+                       ((context == eNormal) ? eRightButton : eLeftButton),\\n                      \\\"Wrong button set to NS_CONTEXTMENU event?\\\");\\n   }\\n #endif\\ndiff --git a/widget/src/gtk2/nsWindow.cpp b/widget/src/gtk2/nsWindow.cpp\\nindex 42f360b..6558a19 100644\\n--- a/widget/src/gtk2/nsWindow.cpp\\n+++ b/widget/src/gtk2/nsWindow.cpp\\n@@ -4902,7 +4902,7 @@ key_event_to_context_menu_event(const nsKeyEvent* aKeyEvent,\\n     aCMEvent->eventStructType = NS_MOUSE_EVENT;\\n     aCMEvent->message = NS_CONTEXTMENU;\\n     aCMEvent->context = nsMouseEvent::eContextMenuKey;\\n-    aCMEvent->button = nsMouseEvent::eRightButton;\\n+    aCMEvent->button = nsMouseEvent::eLeftButton;\\n     aCMEvent->isShift = aCMEvent->isControl = PR_FALSE;\\n     aCMEvent->isAlt = aCMEvent->isMeta = PR_FALSE;\\n     aCMEvent->clickCount = 0;\\ndiff --git a/widget/src/os2/nsWindow.cpp b/widget/src/os2/nsWindow.cpp\\nindex d65d659..c00905c 100644\\n--- a/widget/src/os2/nsWindow.cpp\\n+++ b/widget/src/os2/nsWindow.cpp\\n@@ -2755,7 +2755,7 @@ PRBool nsWindow::ProcessMessage( ULONG msg, MPARAM mp1, MPARAM mp2, MRESULT &rc)\\n               WinSendMsg(hwndCurrFocus, msg, mp1, mp2);\\n             } else {\\n               result = DispatchMouseEvent(NS_CONTEXTMENU, mp1, mp2, PR_TRUE,\\n-                                          nsMouseEvent::eRightButton);\\n+                                          nsMouseEvent::eLeftButton);\\n             }\\n           } else {\\n             result = DispatchMouseEvent(NS_CONTEXTMENU, mp1, mp2, PR_FALSE,\\ndiff --git a/widget/src/windows/nsWindow.cpp b/widget/src/windows/nsWindow.cpp\\nindex 6100e06..7cc1d97 100644\\n--- a/widget/src/windows/nsWindow.cpp\\n+++ b/widget/src/windows/nsWindow.cpp\\n@@ -4510,7 +4510,9 @@ PRBool nsWindow::ProcessMessage(UINT msg, WPARAM wParam, LPARAM lParam, LRESULT\\n         pos = lParamToClient(lParam);\\n       }\\n       result = DispatchMouseEvent(NS_CONTEXTMENU, wParam, pos, contextMenukey,\\n-                                  nsMouseEvent::eRightButton);\\n+                                  contextMenukey ?\\n+                                    nsMouseEvent::eLeftButton :\\n+                                    nsMouseEvent::eRightButton);\\n     }\\n     break;\\n \\n\""}