{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basa54df5b\""},"diff":"\"a54df5b Bug 375778 - Read-Only Files Changed to Read-Write p=Simon Bunzli (busy) <zeniko@gmail.com> r=dougt, sr=bsmedberg, a=bz\\ndiff --git a/xpcom/io/nsLocalFileWin.cpp b/xpcom/io/nsLocalFileWin.cpp\\nindex b0fa5bf..898882ae7 100644\\n--- a/xpcom/io/nsLocalFileWin.cpp\\n+++ b/xpcom/io/nsLocalFileWin.cpp\\n@@ -1435,67 +1435,12 @@ nsLocalFile::CopySingleFile(nsIFile *sourceFile, nsIFile *destParent,\\n     if (!move)\\n         copyOK = ::CopyFileW(filePath.get(), destPath.get(), PR_TRUE);\\n     else\\n-    {\\n-        // What we have to do is check to see if the destPath exists.  If it\\n-        // does, we have to move it out of the say so that MoveFile will\\n-        // succeed.  However, we don't want to just remove it since MoveFile\\n-        // can fail leaving us without a file.\\n-\\n-        nsAutoString backup;\\n-        PRFileInfo64 fileInfo64;\\n-        if (NS_SUCCEEDED(GetFileInfo(destPath, &fileInfo64)))\\n-        {\\n-\\n-            // the file exists.  Check to make sure it is not a directory,\\n-            // then move it out of the way.\\n-            if (fileInfo64.type == PR_FILE_FILE)\\n-            {\\n-                backup.Append(destPath);\\n-                backup.Append(L\\\".moztmp\\\");\\n-\\n-                // we are about to remove the .moztmp file,\\n-                // so attempt to make sure the file is writable\\n-                // (meaning:  the \\\"read only\\\" attribute is not set)\\n-                // _wchmod can silently fail (return -1) if \\n-                // the file doesn't exist but that's ok, because \\n-                // _wremove() will also silently fail if the file\\n-                // doesn't exist.\\n-               (void)_wchmod(backup.get(), _S_IREAD | _S_IWRITE);\\n-\\n-                // remove any existing backup file that we may already have.\\n-                // maybe we should be doing some kind of unique naming here,\\n-                // but why bother.\\n-               (void)_wremove(backup.get());\\n-\\n-                // move destination file to backup file\\n-                copyOK = ::MoveFileW(destPath.get(), backup.get());\\n-                if (!copyOK)\\n-                {\\n-                    // I guess we can't do the backup copy, so return.\\n-                    rv = ConvertWinError(GetLastError());\\n-                    return rv;\\n-                }\\n-            }\\n-        }\\n-        // move source file to destination file\\n-        copyOK = ::MoveFileW(filePath.get(), destPath.get());\\n+        copyOK = ::MoveFileExW(filePath.get(), destPath.get(),\\n+                               MOVEFILE_REPLACE_EXISTING |\\n+                               MOVEFILE_COPY_ALLOWED |\\n+                               MOVEFILE_WRITE_THROUGH);\\n \\n-        if (!backup.IsEmpty())\\n-        {\\n-            if (copyOK)\\n-            {\\n-                // remove the backup copy.\\n-                _wremove(backup.get());\\n-            }\\n-            else\\n-            {\\n-                // restore backup\\n-                int backupOk = ::MoveFileW(backup.get(), destPath.get());\\n-                NS_ASSERTION(backupOk, \\\"move backup failed\\\");\\n-            }\\n-        }\\n-    }\\n-    if (!copyOK)  // CopyFile and MoveFile returns non-zero if succeeds (backward if you ask me).\\n+    if (!copyOK)  // CopyFile and MoveFileEx return zero at failure.\\n         rv = ConvertWinError(GetLastError());\\n \\n     return rv;\\n\""}