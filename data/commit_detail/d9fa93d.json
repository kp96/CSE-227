{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basd9fa93d\""},"diff":"\"d9fa93d bug 386654, Implement notification for EV certs r=rrelyea, sr=bzbarsky, a=bzbarsky\\ndiff --git a/security/manager/boot/src/nsSecureBrowserUIImpl.cpp b/security/manager/boot/src/nsSecureBrowserUIImpl.cpp\\nindex 0801f80..4dce292 100644\\n--- a/security/manager/boot/src/nsSecureBrowserUIImpl.cpp\\n+++ b/security/manager/boot/src/nsSecureBrowserUIImpl.cpp\\n@@ -65,12 +65,14 @@\\n #include \\\"nsPIDOMWindow.h\\\"\\n #include \\\"nsIContent.h\\\"\\n #include \\\"nsIWebProgress.h\\\"\\n+#include \\\"nsIWebProgressListener.h\\\"\\n #include \\\"nsIChannel.h\\\"\\n #include \\\"nsIHttpChannel.h\\\"\\n #include \\\"nsIFileChannel.h\\\"\\n #include \\\"nsIWyciwygChannel.h\\\"\\n #include \\\"nsIFTPChannel.h\\\"\\n #include \\\"nsITransportSecurityInfo.h\\\"\\n+#include \\\"nsIIdentityInfo.h\\\"\\n #include \\\"nsIURI.h\\\"\\n #include \\\"nsISecurityEventSink.h\\\"\\n #include \\\"nsIPrompt.h\\\"\\n@@ -139,6 +141,7 @@ nsSecureBrowserUIImpl::nsSecureBrowserUIImpl()\\n {\\n   mTransferringRequests.ops = nsnull;\\n   mNewToplevelSecurityState = STATE_IS_INSECURE;\\n+  mNewToplevelIsEV = PR_FALSE;\\n   mNewToplevelSecurityStateKnown = PR_TRUE;\\n   ResetStateTracking();\\n   \\n@@ -429,9 +432,10 @@ nsSecureBrowserUIImpl::EvaluateAndUpdateSecurityState(nsIRequest *aRequest)\\n {\\n   nsCOMPtr<nsIChannel> channel(do_QueryInterface(aRequest));\\n \\n-  if (!channel) {\\n-    mNewToplevelSecurityState = nsIWebProgressListener::STATE_IS_INSECURE;\\n-  } else {\\n+  mNewToplevelSecurityState = nsIWebProgressListener::STATE_IS_INSECURE;\\n+  mNewToplevelIsEV = PR_FALSE;\\n+\\n+  if (channel) {\\n     mNewToplevelSecurityState = GetSecurityStateFromChannel(channel);\\n \\n     PR_LOG(gSecureDocLog, PR_LOG_DEBUG,\\n@@ -452,6 +456,13 @@ nsSecureBrowserUIImpl::EvaluateAndUpdateSecurityState(nsIRequest *aRequest)\\n       if (secInfo) {\\n         secInfo->GetShortSecurityDescription(getter_Copies(mInfoTooltip));\\n       }\\n+\\n+      nsCOMPtr<nsIIdentityInfo> idinfo = do_QueryInterface(info);\\n+      if (idinfo) {\\n+        PRBool aTemp;\\n+        if (NS_SUCCEEDED(idinfo->GetIsExtendedValidation(&aTemp)))\\n+          mNewToplevelIsEV = aTemp;\\n+      }\\n     }\\n   }\\n \\n@@ -1139,6 +1150,9 @@ nsresult nsSecureBrowserUIImpl::UpdateSecurityState(nsIRequest* aRequest)\\n            (\\\"SecureUI:%p: UpdateSecurityState: calling OnSecurityChange\\\\n\\\", this\\n             ));\\n \\n+    if (mNewToplevelIsEV)\\n+      newState |= nsIWebProgressListener::STATE_IDENTITY_EV_TOPLEVEL;\\n+\\n     mToplevelEventSink->OnSecurityChange(aRequest, newState);\\n   }\\n   else\\ndiff --git a/security/manager/boot/src/nsSecureBrowserUIImpl.h b/security/manager/boot/src/nsSecureBrowserUIImpl.h\\nindex 67f571c..8f81d0d 100644\\n--- a/security/manager/boot/src/nsSecureBrowserUIImpl.h\\n+++ b/security/manager/boot/src/nsSecureBrowserUIImpl.h\\n@@ -110,6 +110,7 @@ protected:\\n \\n   void ResetStateTracking();\\n   PRUint32 mNewToplevelSecurityState;\\n+  PRPackedBool mNewToplevelIsEV;\\n   PRPackedBool mNewToplevelSecurityStateKnown;\\n   PRPackedBool mIsViewSource;\\n \\ndiff --git a/security/manager/ssl/public/Makefile.in b/security/manager/ssl/public/Makefile.in\\nindex 9db7f42..fcd4503 100644\\n--- a/security/manager/ssl/public/Makefile.in\\n+++ b/security/manager/ssl/public/Makefile.in\\n@@ -57,6 +57,7 @@ SDK_XPIDLSRCS = \\\\\\n     nsIX509Cert.idl \\\\\\n     nsIX509CertDB.idl \\\\\\n     nsIX509CertValidity.idl \\\\\\n+    nsIIdentityInfo.idl \\\\\\n     $(NULL)\\n \\n XPIDLSRCS = \\\\\\ndiff --git a/security/manager/ssl/public/nsIIdentityInfo.idl b/security/manager/ssl/public/nsIIdentityInfo.idl\\nnew file mode 100644\\nindex 0000000..14a2f16\\n--- /dev/null\\n+++ b/security/manager/ssl/public/nsIIdentityInfo.idl\\n@@ -0,0 +1,44 @@\\n+/* ***** BEGIN LICENSE BLOCK *****\\n+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+ *\\n+ * The contents of this file are subject to the Mozilla Public License Version\\n+ * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+ * the License. You may obtain a copy of the License at\\n+ * http://www.mozilla.org/MPL/\\n+ *\\n+ * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+ * for the specific language governing rights and limitations under the\\n+ * License.\\n+ *\\n+ * The Original Code is mozilla.org code.\\n+ *\\n+ * The Initial Developer of the Original Code is Google Inc.\\n+ * Portions created by the Initial Developer are Copyright (C) 2006\\n+ * the Initial Developer. All Rights Reserved.\\n+ *\\n+ * Contributor(s):\\n+ *   Kai Engert <kengert@redhat.com>\\n+ *\\n+ * Alternatively, the contents of this file may be used under the terms of\\n+ * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n+ * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+ * in which case the provisions of the GPL or the LGPL are applicable instead\\n+ * of those above. If you wish to allow use of your version of this file only\\n+ * under the terms of either the GPL or the LGPL, and not to allow others to\\n+ * use your version of this file under the terms of the MPL, indicate your\\n+ * decision by deleting the provisions above and replace them with the notice\\n+ * and other provisions required by the GPL or the LGPL. If you do not delete\\n+ * the provisions above, a recipient may use your version of this file under\\n+ * the terms of any one of the MPL, the GPL or the LGPL.\\n+ *\\n+ * ***** END LICENSE BLOCK ***** */\\n+\\n+#include \\\"nsISupports.idl\\\"\\n+\\n+[scriptable, uuid(e72546a4-9b57-4766-a3aa-c05cbc7d8156)]\\n+interface nsIIdentityInfo : nsISupports\\n+{\\n+  readonly attribute boolean isExtendedValidation;\\n+};\\n+\\ndiff --git a/security/manager/ssl/src/Makefile.in b/security/manager/ssl/src/Makefile.in\\nindex a214823..9fc4691 100644\\n--- a/security/manager/ssl/src/Makefile.in\\n+++ b/security/manager/ssl/src/Makefile.in\\n@@ -95,6 +95,7 @@ CPPSRCS = \\t\\t\\t\\t\\\\\\n   nsSmartCardEvent.cpp \\\\\\n   nsStreamCipher.cpp \\\\\\n   nsKeyModule.cpp \\\\\\n+  nsIdentityChecking.cpp \\\\\\n \\t$(NULL)\\n \\n ifdef MOZ_XUL\\ndiff --git a/security/manager/ssl/src/nsIdentityChecking.cpp b/security/manager/ssl/src/nsIdentityChecking.cpp\\nnew file mode 100644\\nindex 0000000..90cf39d\\n--- /dev/null\\n+++ b/security/manager/ssl/src/nsIdentityChecking.cpp\\n@@ -0,0 +1,11 @@\\n+#include \\\"nsNSSIOLayer.h\\\"\\n+\\n+NS_IMETHODIMP\\n+nsNSSSocketInfo::GetIsExtendedValidation(PRBool* aIsEV)\\n+{\\n+  NS_ENSURE_ARG(aIsEV);\\n+  *aIsEV = PR_FALSE;\\n+\\n+  return NS_OK;\\n+}\\n+\\ndiff --git a/security/manager/ssl/src/nsNSSCallbacks.cpp b/security/manager/ssl/src/nsNSSCallbacks.cpp\\nindex e0292af..522c2cc 100644\\n--- a/security/manager/ssl/src/nsNSSCallbacks.cpp\\n+++ b/security/manager/ssl/src/nsNSSCallbacks.cpp\\n@@ -843,8 +843,13 @@ void PR_CALLBACK HandshakeCallback(PRFileDesc* fd, void* client_data) {\\n \\n     CERTCertificate *serverCert = SSL_PeerCertificate(fd);\\n     if (serverCert) {\\n-      status->mServerCert = new nsNSSCertificate(serverCert);\\n+      nsRefPtr<nsNSSCertificate> nssc = new nsNSSCertificate(serverCert);\\n       CERT_DestroyCertificate(serverCert);\\n+      serverCert = nsnull;\\n+      infoObject->SetCert(nssc);\\n+      if (!status->mServerCert) {\\n+        status->mServerCert = nssc;\\n+      }\\n     }\\n \\n     status->mKeyLength = keyLength;\\ndiff --git a/security/manager/ssl/src/nsNSSIOLayer.cpp b/security/manager/ssl/src/nsNSSIOLayer.cpp\\nindex 4772b2b..12cbb40 100644\\n--- a/security/manager/ssl/src/nsNSSIOLayer.cpp\\n+++ b/security/manager/ssl/src/nsNSSIOLayer.cpp\\n@@ -231,11 +231,12 @@ void nsNSSSocketInfo::destructorSafeDestroyNSSReference()\\n   }\\n }\\n \\n-NS_IMPL_THREADSAFE_ISUPPORTS4(nsNSSSocketInfo,\\n+NS_IMPL_THREADSAFE_ISUPPORTS5(nsNSSSocketInfo,\\n                               nsITransportSecurityInfo,\\n                               nsISSLSocketControl,\\n                               nsIInterfaceRequestor,\\n-                              nsISSLStatusProvider)\\n+                              nsISSLStatusProvider,\\n+                              nsIIdentityInfo)\\n \\n nsresult\\n nsNSSSocketInfo::GetHandshakePending(PRBool *aHandshakePending)\\n@@ -504,6 +505,23 @@ nsresult nsNSSSocketInfo::SetFileDescPtr(PRFileDesc* aFilePtr)\\n   return NS_OK;\\n }\\n \\n+nsresult nsNSSSocketInfo::GetCert(nsNSSCertificate** _result)\\n+{\\n+  NS_ENSURE_ARG_POINTER(_result);\\n+\\n+  *_result = mCert;\\n+  NS_IF_ADDREF(*_result);\\n+\\n+  return NS_OK;\\n+}\\n+\\n+nsresult nsNSSSocketInfo::SetCert(nsNSSCertificate *aCert)\\n+{\\n+  mCert = aCert;\\n+\\n+  return NS_OK;\\n+}\\n+\\n nsresult nsNSSSocketInfo::GetSSLStatus(nsISupports** _result)\\n {\\n   NS_ENSURE_ARG_POINTER(_result);\\ndiff --git a/security/manager/ssl/src/nsNSSIOLayer.h b/security/manager/ssl/src/nsNSSIOLayer.h\\nindex 4d1fcae..228416b 100644\\n--- a/security/manager/ssl/src/nsNSSIOLayer.h\\n+++ b/security/manager/ssl/src/nsNSSIOLayer.h\\n@@ -51,8 +51,11 @@\\n #include \\\"nsISSLSocketControl.h\\\"\\n #include \\\"nsISSLStatus.h\\\"\\n #include \\\"nsISSLStatusProvider.h\\\"\\n+#include \\\"nsIIdentityInfo.h\\\"\\n #include \\\"nsXPIDLString.h\\\"\\n #include \\\"nsNSSShutDown.h\\\"\\n+#include \\\"nsAutoPtr.h\\\"\\n+#include \\\"nsNSSCertificate.h\\\"\\n \\n class nsIChannel;\\n class nsSSLThread;\\n@@ -123,6 +126,7 @@ class nsNSSSocketInfo : public nsITransportSecurityInfo,\\n                         public nsISSLSocketControl,\\n                         public nsIInterfaceRequestor,\\n                         public nsISSLStatusProvider,\\n+                        public nsIIdentityInfo,\\n                         public nsNSSShutDownObject,\\n                         public nsOnPK11LogoutCancelObject\\n {\\n@@ -135,6 +139,7 @@ public:\\n   NS_DECL_NSISSLSOCKETCONTROL\\n   NS_DECL_NSIINTERFACEREQUESTOR\\n   NS_DECL_NSISSLSTATUSPROVIDER\\n+  NS_DECL_NSIIDENTITYINFO\\n \\n   nsresult SetSecurityState(PRUint32 aState);\\n   nsresult SetShortSecurityDescription(const PRUnichar *aText);\\n@@ -155,6 +160,9 @@ public:\\n   nsresult GetPort(PRInt32 *aPort);\\n   nsresult SetPort(PRInt32 aPort);\\n \\n+  nsresult GetCert(nsNSSCertificate** _result);\\n+  nsresult SetCert(nsNSSCertificate *aCert);\\n+\\n   void SetCanceled(PRBool aCanceled);\\n   PRBool GetCanceled();\\n   \\n@@ -187,6 +195,7 @@ public:\\n protected:\\n   nsCOMPtr<nsIInterfaceRequestor> mCallbacks;\\n   PRFileDesc* mFd;\\n+  nsRefPtr<nsNSSCertificate> mCert;\\n   enum { \\n     blocking_state_unknown, is_nonblocking_socket, is_blocking_socket \\n   } mBlockingState;\\n\""}