{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basf22fd43\""},"diff":"\"f22fd43 Bug 261790 port various changes betwen xpfe/toolkit r=mconnor sr=neil\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 590f926..f59fc77 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -192,7 +192,7 @@\\n               const nsIWebProgressListener = Components.interfaces.nsIWebProgressListener;\\n               const nsIChannel = Components.interfaces.nsIChannel;\\n \\n-              if (aStateFlags & nsIWebProgressListener.STATE_START && \\n+              if (aStateFlags & nsIWebProgressListener.STATE_START &&\\n                   aStateFlags & nsIWebProgressListener.STATE_IS_NETWORK) {\\n                 // It's okay to clear what the user typed when we start\\n                 // loading a document. If the user types, this flag gets\\n@@ -205,7 +205,7 @@\\n                 if (!this.mBlank) {\\n                   this.mTab.setAttribute(\\\"busy\\\", \\\"true\\\");\\n                   this.mTab.label = this.mTabBrowser.mStringBundle.getString(\\\"tabs.loading\\\");\\n-                  this.mTab.removeAttribute(\\\"image\\\"); \\n+                  this.mTab.removeAttribute(\\\"image\\\");\\n                   this.mIcon = \\\"\\\";\\n \\n                   if (this.mTabBrowser.mCurrentTab == this.mTab)\\n@@ -227,7 +227,7 @@\\n                 var location = aRequest.QueryInterface(nsIChannel).URI;\\n                 if (this.mIcon) {\\n                   this.mTab.setAttribute(\\\"image\\\", this.mIcon);\\n-                  mIcon = \\\"\\\";\\n+                  this.mIcon = \\\"\\\";\\n                 }\\n                 else if (this.mTabBrowser.shouldLoadFavIcon(location))\\n                   this.mTabBrowser.loadFavIcon(location, \\\"image\\\", this.mTab);\\n@@ -246,10 +246,10 @@\\n                     p.onStateChange(aWebProgress, aRequest, aStateFlags, aStatus);\\n                 }\\n               }\\n-            }\\n-            ,\\n+            },\\n \\n-            onLocationChange : function(aWebProgress, aRequest, aLocation) {\\n+            onLocationChange : function(aWebProgress, aRequest, aLocation)\\n+            {\\n               // The document loaded correctly, clear the value if we should\\n               if (this.mBrowser.userTypedClear)\\n                 this.mBrowser.userTypedValue = null;\\n@@ -263,7 +263,8 @@\\n               }\\n             },\\n \\n-            onStatusChange : function(aWebProgress, aRequest, aStatus, aMessage) {\\n+            onStatusChange : function(aWebProgress, aRequest, aStatus, aMessage)\\n+            {\\n               if (this.mBlank)\\n                 return;\\n \\n@@ -295,8 +296,7 @@\\n                 return this;\\n               throw Components.results.NS_NOINTERFACE;\\n             }\\n-                  \\n-            });\\n+          });\\n         ]]>\\n         </body>\\n       </method>\\n@@ -316,7 +316,7 @@\\n         <body>\\n           <![CDATA[\\n             return (aURI && this.mPrefs.getBoolPref(\\\"browser.chrome.site_icons\\\") &&\\n-                    this.mPrefs.getBoolPref(\\\"browser.chrome.favicons\\\") && \\n+                    this.mPrefs.getBoolPref(\\\"browser.chrome.favicons\\\") &&\\n                     (\\\"schemeIs\\\" in aURI) && (aURI.schemeIs(\\\"http\\\") || aURI.schemeIs(\\\"https\\\")));\\n           ]]>\\n         </body>\\n@@ -484,7 +484,7 @@\\n \\n             // Update the window title.\\n             this.updateTitlebar();\\n-            \\n+\\n             // If the new tab is busy, and our current state is not busy, then\\n             // we need to fire a start to all progress listeners.\\n             const nsIWebProgressListener = Components.interfaces.nsIWebProgressListener;\\n@@ -769,7 +769,9 @@\\n             }\\n \\n             // Wire up a progress listener to our filter.\\n-            const listener = this.mTabProgressListener(this.mCurrentTab, this.mCurrentBrowser, false);\\n+            const listener = this.mTabProgressListener(this.mCurrentTab,\\n+                                                       this.mCurrentBrowser,\\n+                                                       false);\\n             filter.addProgressListener(listener, Components.interfaces.nsIWebProgress.NOTIFY_ALL);\\n             this.mTabListeners[0] = listener;\\n           ]]>\\n@@ -783,16 +785,14 @@\\n         <parameter name=\\\"aPostData\\\"/>\\n         <body>\\n           <![CDATA[\\n-            var blank = (aURI == \\\"about:blank\\\");\\n-\\n             if (!this.mTabbedMode)\\n               this.enterTabbedMode();\\n \\n-            var b = document.createElementNS(\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\",\\n-                                             \\\"browser\\\"); \\n             var t = document.createElementNS(\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\",\\n                                              \\\"tab\\\");\\n \\n+            var blank = (aURI == \\\"about:blank\\\");\\n+\\n             if (blank)\\n               t.setAttribute(\\\"label\\\", this.mStringBundle.getString(\\\"tabs.untitled\\\"));\\n             else\\n@@ -807,6 +807,8 @@\\n             t.setAttribute(\\\"onerror\\\", \\\"this.parentNode.parentNode.parentNode.parentNode.addToMissedIconCache(this.getAttribute('image')); this.removeAttribute('image');\\\");\\n             this.mTabContainer.appendChild(t);\\n \\n+            var b = document.createElementNS(\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\",\\n+                                             \\\"browser\\\");\\n             b.setAttribute(\\\"type\\\", \\\"content\\\");\\n             b.setAttribute(\\\"contextmenu\\\", this.getAttribute(\\\"contentcontextmenu\\\"));\\n             b.setAttribute(\\\"tooltip\\\", this.getAttribute(\\\"contenttooltip\\\"));\\n\""}