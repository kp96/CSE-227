{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basebac74c\""},"diff":"\"ebac74c Bug 395128. Reduce source size of nsBrowserGlue.js. r=gavin\\ndiff --git a/browser/components/nsBrowserGlue.js b/browser/components/nsBrowserGlue.js\\nindex bdcfaf0..4e7ddfb 100644\\n--- a/browser/components/nsBrowserGlue.js\\n+++ b/browser/components/nsBrowserGlue.js\\n@@ -1,43 +1,56 @@\\n-/* ***** BEGIN LICENSE BLOCK *****\\n- * Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n- *\\n- * The contents of this file are subject to the Mozilla Public License Version\\n- * 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n- * the License. You may obtain a copy of the License at\\n- * http://www.mozilla.org/MPL/\\n- *\\n- * Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n- * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n- * for the specific language governing rights and limitations under the\\n- * License.\\n- *\\n- * The Original Code is the Firefox Browser Glue Service.\\n- *\\n- * The Initial Developer of the Original Code is\\n- * Giorgio Maone\\n- * Portions created by the Initial Developer are Copyright (C) 2005\\n- * the Initial Developer. All Rights Reserved.\\n- *\\n- * Contributor(s):\\n- *   Giorgio Maone <g.maone@informaction.com>\\n- *\\n- * Alternatively, the contents of this file may be used under the terms of\\n- * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n- * the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n- * in which case the provisions of the GPL or the LGPL are applicable instead\\n- * of those above. If you wish to allow use of your version of this file only\\n- * under the terms of either the GPL or the LGPL, and not to allow others to\\n- * use your version of this file under the terms of the MPL, indicate your\\n- * decision by deleting the provisions above and replace them with the notice\\n- * and other provisions required by the GPL or the LGPL. If you do not delete\\n- * the provisions above, a recipient may use your version of this file under\\n- * the terms of any one of the MPL, the GPL or the LGPL.\\n- *\\n- * ***** END LICENSE BLOCK ***** */\\n+# ***** BEGIN LICENSE BLOCK *****\\n+# Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+#\\n+# The contents of this file are subject to the Mozilla Public License Version\\n+# 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+# the License. You may obtain a copy of the License at\\n+# http://www.mozilla.org/MPL/\\n+#\\n+# Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+# for the specific language governing rights and limitations under the\\n+# License.\\n+#\\n+# The Original Code is the Browser Search Service.\\n+#\\n+# The Initial Developer of the Original Code is\\n+# Giorgio Maone\\n+# Portions created by the Initial Developer are Copyright (C) 2005\\n+# the Initial Developer. All Rights Reserved.\\n+#\\n+# Contributor(s):\\n+#   Giorgio Maone <g.maone@informaction.com>\\n+#\\n+# Alternatively, the contents of this file may be used under the terms of\\n+# either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n+# the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+# in which case the provisions of the GPL or the LGPL are applicable instead\\n+# of those above. If you wish to allow use of your version of this file only\\n+# under the terms of either the GPL or the LGPL, and not to allow others to\\n+# use your version of this file under the terms of the MPL, indicate your\\n+# decision by deleting the provisions above and replace them with the notice\\n+# and other provisions required by the GPL or the LGPL. If you do not delete\\n+# the provisions above, a recipient may use your version of this file under\\n+# the terms of any one of the MPL, the GPL or the LGPL.\\n+#\\n+# ***** END LICENSE BLOCK *****\\n \\n const Ci = Components.interfaces;\\n const Cc = Components.classes;\\n const Cr = Components.results;\\n+Components.utils.import(\\\"resource://gre/modules/XPCOMUtils.jsm\\\");\\n+\\n+// Factory object\\n+const BrowserGlueServiceFactory = {\\n+  _instance: null,\\n+  createInstance: function (outer, iid) \\n+  {\\n+    if (outer != null)\\n+      throw Components.results.NS_ERROR_NO_AGGREGATION;\\n+    return this._instance == null ?\\n+      this._instance = new BrowserGlue() : this._instance;\\n+  }\\n+};\\n \\n // Constructor\\n \\n@@ -49,12 +62,6 @@ function BrowserGlue() {\\n BrowserGlue.prototype = {\\n   _saveSession: false,\\n \\n-  QueryInterface: function(iid) \\n-  {\\n-     xpcomCheckInterfaces(iid, kServiceIIds, Cr.NS_ERROR_NO_INTERFACE);\\n-     return this;\\n-  }\\n-,\\n   // nsIObserver implementation \\n   observe: function(subject, topic, data) \\n   {\\n@@ -366,111 +373,31 @@ BrowserGlue.prototype = {\\n   sanitize: function(aParentWindow) \\n   {\\n     this.Sanitizer.sanitize(aParentWindow);\\n-  }\\n-}\\n-\\n-\\n-// XPCOM Scaffolding code\\n-\\n-// component defined in this file\\n-\\n-const kServiceName = \\\"Firefox Browser Glue Service\\\";\\n-const kServiceId = \\\"{eab9012e-5f74-4cbc-b2b5-a590235513cc}\\\";\\n-const kServiceCtrId = \\\"@mozilla.org/browser/browserglue;1\\\";\\n-const kServiceConstructor = BrowserGlue;\\n-\\n-const kServiceCId = Components.ID(kServiceId);\\n-\\n-// interfaces implemented by this component\\n-const kServiceIIds = [ \\n-  Ci.nsIObserver,\\n-  Ci.nsISupports,\\n-  Ci.nsISupportsWeakReference,\\n-  Ci.nsIBrowserGlue\\n-  ];\\n+  },\\n \\n-// categories which this component is registered in\\n-const kServiceCats = [\\\"app-startup\\\"];\\n+  // for XPCOM\\n+  classDescription: \\\"Firefox Browser Glue Service\\\",\\n+  classID:          Components.ID(\\\"{eab9012e-5f74-4cbc-b2b5-a590235513cc}\\\"),\\n+  contractID:       \\\"@mozilla.org/browser/browserglue;1\\\",\\n \\n-// Factory object\\n-const kServiceFactory = {\\n-  _instance: null,\\n-  createInstance: function (outer, iid) \\n-  {\\n-    if (outer != null) throw Cr.NS_ERROR_NO_AGGREGATION;\\n+  QueryInterface : XPCOMUtils.generateQI([Ci.nsIObserver, Ci.nsISupports,\\n+                                          Ci.nsISupportsWeakReference,\\n+                                          Ci.nsIBrowserGlue]),\\n \\n-    xpcomCheckInterfaces(iid, kServiceIIds, \\n-                          Cr.NS_ERROR_INVALID_ARG);\\n-    return this._instance == null ?\\n-      this._instance = new kServiceConstructor() : this._instance;\\n-  }\\n-};\\n+  // redefine the default factory for XPCOMUtils\\n+  _xpcom_factory: BrowserGlueServiceFactory,\\n \\n-function xpcomCheckInterfaces(iid, iids, ex) {\\n-  for (var j = iids.length; j-- >0;) {\\n-    if (iid.equals(iids[j])) return true;\\n-  }\\n-  throw ex;\\n+  // get this contractID registered for certain categories via XPCOMUtils\\n+  _xpcom_categories: [\\n+    // make BrowserGlue a startup observer\\n+    { category: \\\"app-startup\\\", service: true }\\n+  ]\\n }\\n \\n-// Module\\n+//module initialization\\n+function NSGetModule(aCompMgr, aFileSpec) {\\n+  return XPCOMUtils.generateModule([BrowserGlue]);\\n+}\\n \\n-var Module = {\\n-  registered: false,\\n-  \\n-  registerSelf: function(compMgr, fileSpec, location, type) \\n-  {\\n-    if (!this.registered) {\\n-      compMgr.QueryInterface(Ci.nsIComponentRegistrar)\\n-             .registerFactoryLocation(kServiceCId,\\n-                                      kServiceName,\\n-                                      kServiceCtrId, \\n-                                      fileSpec,\\n-                                      location, \\n-                                      type);\\n-      const catman = Cc['@mozilla.org/categorymanager;1'].\\n-                     getService(Ci.nsICategoryManager);\\n-      var len = kServiceCats.length;\\n-      for (var j = 0; j < len; j++) {\\n-        catman.addCategoryEntry(kServiceCats[j],\\n-          kServiceCtrId, kServiceCtrId, true, true);\\n-      }\\n-      this.registered = true;\\n-    } \\n-  },\\n-  \\n-  unregisterSelf: function(compMgr, fileSpec, location) \\n-  {\\n-    compMgr.QueryInterface(Ci.nsIComponentRegistrar)\\n-           .unregisterFactoryLocation(kServiceCId, fileSpec);\\n-    const catman = Cc['@mozilla.org/categorymanager;1'].\\n-                   getService(Ci.nsICategoryManager);\\n-    var len = kServiceCats.length;\\n-    for (var j = 0; j < len; j++) {\\n-      catman.deleteCategoryEntry(kServiceCats[j], kServiceCtrId, true);\\n-    }\\n-  },\\n-  \\n-  getClassObject: function(compMgr, cid, iid) \\n-  {\\n-    if(cid.equals(kServiceCId))\\n-      return kServiceFactory;\\n-    \\n-    throw Cr[\\n-      iid.equals(Ci.nsIFactory)\\n-      ? \\\"NS_ERROR_NO_INTERFACE\\\"\\n-      : \\\"NS_ERROR_NOT_IMPLEMENTED\\\"\\n-    ];\\n-    \\n-  },\\n-  \\n-  canUnload: function(compMgr) \\n-  {\\n-    return true;\\n-  }\\n-};\\n+\\t\\n \\n-// entrypoint\\n-function NSGetModule(compMgr, fileSpec) {\\n-  return Module;\\n-}\\n\""}