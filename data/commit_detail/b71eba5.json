{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basb71eba5\""},"diff":"\"b71eba5 [OS/2] Bug 395491: Fix files copied over from gfx for compilation, step 1 to remove NS_GFX macros to fix build break. Tested as working by abwillis1 and daveryeo.\\ndiff --git a/widget/src/os2/nsOS2Uni.cpp b/widget/src/os2/nsOS2Uni.cpp\\nindex b34d25d..0b14aac 100644\\n--- a/widget/src/os2/nsOS2Uni.cpp\\n+++ b/widget/src/os2/nsOS2Uni.cpp\\n@@ -135,7 +135,7 @@ void OS2Uni::FreeUconvObjects()\\n /**********************************************************\\n     WideCharToMultiByte\\n  **********************************************************/\\n-NS_GFX_(nsresult)\\n+nsresult\\n WideCharToMultiByte(int aCodePage, const PRUnichar* aSrc,\\n                     PRInt32 aSrcLength, nsAutoCharBuffer& aResult,\\n                     PRInt32& aResultLength)\\n@@ -159,7 +159,7 @@ WideCharToMultiByte(int aCodePage, const PRUnichar* aSrc,\\n /**********************************************************\\n     MultiByteToWideChar\\n  **********************************************************/\\n-NS_GFX_(nsresult)\\n+nsresult\\n MultiByteToWideChar(int aCodePage, const char* aSrc,\\n                     PRInt32 aSrcLength, nsAutoChar16Buffer& aResult,\\n                     PRInt32& aResultLength)\\ndiff --git a/widget/src/os2/nsOS2Uni.h b/widget/src/os2/nsOS2Uni.h\\nindex 6d86fab..65a8b2b 100644\\n--- a/widget/src/os2/nsOS2Uni.h\\n+++ b/widget/src/os2/nsOS2Uni.h\\n@@ -44,13 +44,12 @@\\n #include \\\"nsICharsetConverterManager.h\\\"\\n #include \\\"gfxCore.h\\\"\\n \\n-\\n enum ConverterRequest {\\n   eConv_Encoder,\\n   eConv_Decoder\\n };\\n \\n-class NS_GFX OS2Uni {\\n+class OS2Uni {\\n public:\\n   static nsISupports* GetUconvObject(int CodePage, ConverterRequest aReq);\\n   static void FreeUconvObjects();\\n@@ -58,16 +57,15 @@ private:\\n   static nsICharsetConverterManager* gCharsetManager;\\n };\\n \\n-\\n #define CHAR_BUFFER_SIZE 1024\\n typedef nsAutoBuffer<char, CHAR_BUFFER_SIZE> nsAutoCharBuffer;\\n typedef nsAutoBuffer<PRUnichar, CHAR_BUFFER_SIZE> nsAutoChar16Buffer;\\n \\n-NS_GFX_(nsresult) WideCharToMultiByte(int aCodePage, const PRUnichar* aSrc,\\n-                                      PRInt32 aSrcLength, nsAutoCharBuffer& aResult,\\n-                                      PRInt32& aResultLength);\\n-NS_GFX_(nsresult) MultiByteToWideChar(int aCodePage, const char* aSrc,\\n-                                      PRInt32 aSrcLength, nsAutoChar16Buffer& aResult,\\n-                                      PRInt32& aResultLength);\\n-         \\n+nsresult WideCharToMultiByte(int aCodePage, const PRUnichar* aSrc,\\n+                             PRInt32 aSrcLength, nsAutoCharBuffer& aResult,\\n+                             PRInt32& aResultLength);\\n+nsresult MultiByteToWideChar(int aCodePage, const char* aSrc,\\n+                             PRInt32 aSrcLength, nsAutoChar16Buffer& aResult,\\n+                             PRInt32& aResultLength);\\n+\\n #endif\\ndiff --git a/widget/src/os2/nsPaletteOS2.h b/widget/src/os2/nsPaletteOS2.h\\nindex 4e7d26a..34e45368 100644\\n--- a/widget/src/os2/nsPaletteOS2.h\\n+++ b/widget/src/os2/nsPaletteOS2.h\\n@@ -42,7 +42,7 @@\\n #include <os2.h>\\n #include \\\"gfxCore.h\\\"\\n \\n-class NS_GFX nsPaletteOS2 {\\n+class nsPaletteOS2 {\\n public:\\n   static void FreeGlobalPalette();\\n   static void InitializeGlobalPalette();\\ndiff --git a/widget/src/os2/nsPrintOS2.cpp b/widget/src/os2/nsPrintOS2.cpp\\nindex b310e02..0ce619d 100644\\n--- a/widget/src/os2/nsPrintOS2.cpp\\n+++ b/widget/src/os2/nsPrintOS2.cpp\\n@@ -50,7 +50,7 @@ static HMODULE hmodRes;\\n #define SHIFT_PTR(ptr,offset) ( *((LONG*)&ptr) += offset )\\n \\n \\n-class NS_GFX PRTQUEUE\\n+class PRTQUEUE\\n {\\n public:\\n    PRTQUEUE (const PRQINFO3* pPQI3)  { InitWithPQI3 (pPQI3); }\\n@@ -354,7 +354,7 @@ BOOL PRINTDLG::ShowProperties(ULONG printerNdx)\\n /*  Job management                                                          */\\n /****************************************************************************/\\n \\n-NS_GFX_(HDC) PrnOpenDC( PRTQUEUE *pInfo, PSZ pszApplicationName, int copies, int destination, char *file )\\n+HDC PrnOpenDC( PRTQUEUE *pInfo, PSZ pszApplicationName, int copies, int destination, char *file )\\n {\\n    HDC hdc = 0;\\n    PSZ pszLogAddress;\\n@@ -405,7 +405,7 @@ NS_GFX_(HDC) PrnOpenDC( PRTQUEUE *pInfo, PSZ pszApplicationName, int copies, int\\n }\\n \\n /* find the selected form */\\n-NS_GFX_(BOOL) PrnQueryHardcopyCaps( HDC hdc, PHCINFO pHCInfo)\\n+BOOL PrnQueryHardcopyCaps( HDC hdc, PHCINFO pHCInfo)\\n {\\n    BOOL rc = FALSE;\\n \\n@@ -440,19 +440,19 @@ NS_GFX_(BOOL) PrnQueryHardcopyCaps( HDC hdc, PHCINFO pHCInfo)\\n /*  Library-level data and functions    -Printing                           */\\n /****************************************************************************/\\n \\n-NS_GFX_(BOOL) PrnInitialize( HMODULE hmodResources)\\n+BOOL PrnInitialize( HMODULE hmodResources)\\n {\\n    hmodRes = hmodResources;\\n    return TRUE;\\n }\\n \\n-NS_GFX_(BOOL) PrnTerminate()\\n+BOOL PrnTerminate()\\n {\\n    /* nop for now, may do something eventually */\\n    return TRUE;\\n }\\n \\n-NS_GFX_(BOOL) PrnClosePrinter( PRTQUEUE *pPrintQueue)\\n+BOOL PrnClosePrinter( PRTQUEUE *pPrintQueue)\\n {\\n    BOOL rc = FALSE;\\n \\ndiff --git a/widget/src/os2/nsPrintOS2.h b/widget/src/os2/nsPrintOS2.h\\nindex 62857db8..ff09ce5 100644\\n--- a/widget/src/os2/nsPrintOS2.h\\n+++ b/widget/src/os2/nsPrintOS2.h\\n@@ -54,15 +54,15 @@\\n // OS/2 Printing   - was in libprint\\n //---------------------------------------------------------------------------\\n // Library init and term; job properties per queue are cached during run.\\n-NS_GFX_(BOOL) PrnInitialize(HMODULE hmodResources);\\n-NS_GFX_(BOOL) PrnTerminate(void);\\n+BOOL PrnInitialize(HMODULE hmodResources);\\n+BOOL PrnTerminate(void);\\n \\n // opaque type to describe a print queue (printer)\\n-class NS_GFX PRTQUEUE;\\n+class PRTQUEUE;\\n \\n #define MAX_PRINT_QUEUES  (128)\\n \\n-class NS_GFX PRINTDLG\\n+class PRINTDLG\\n {\\n public:\\n    PRINTDLG();\\n@@ -84,17 +84,15 @@ private:\\n \\n \\n // Release app. resources associated with a printer\\n-NS_GFX_(BOOL) PrnClosePrinter( PRTQUEUE *pPrintQueue);\\n+BOOL PrnClosePrinter( PRTQUEUE *pPrintQueue);\\n \\n // Get a DC for the selected printer.  Must supply the application name.\\n-NS_GFX_(HDC) PrnOpenDC( PRTQUEUE *pPrintQueue, PSZ pszApplicationName, int copies, int destination, char *file);\\n+HDC PrnOpenDC( PRTQUEUE *pPrintQueue, PSZ pszApplicationName, int copies, int destination, char *file);\\n \\n // Get the hardcopy caps for the selected form\\n-NS_GFX_(BOOL) PrnQueryHardcopyCaps( HDC hdc, PHCINFO pHCInfo);\\n+BOOL PrnQueryHardcopyCaps( HDC hdc, PHCINFO pHCInfo);\\n \\n // Abort the current job started with PrnStartJob().\\n-NS_GFX_(BOOL) PrnAbortJob( HDC hdc);\\n-\\n-\\n+BOOL PrnAbortJob( HDC hdc);\\n \\n #endif\\n\""}