{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5080523\""},"diff":"\"5080523 b=174265 (also 252288, 253161): favicon handling merge from aviary branch\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 8eae8f2..22e95e2 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -477,7 +477,7 @@\\n                   p.onSecurityChange(webProgress, null, securityUI.state);\\n                 var listener = this.mTabListeners[this.mPanelContainer.selectedIndex];\\n                 if (listener.mIcon)\\n-                  p.onLinkIconAvailable(listener.mIcon);\\n+                  p.onLinkIconAvailable(newBrowser, listener.mIcon);\\n               }\\n             }\\n             this.mCurrentBrowser.userTypedClear = userTypedClear;\\n@@ -579,10 +579,11 @@\\n             if (!href)\\n               return;\\n \\n+            const nsIContentPolicy = Components.interfaces.nsIContentPolicy;\\n             try {\\n               var contentPolicy =\\n                 Components.classes['@mozilla.org/layout/content-policy;1']\\n-                          .getService(Components.interfaces.nsIContentPolicy);\\n+                          .getService(nsIContentPolicy);\\n             } catch(e) {\\n               return; // Refuse to load if we can't do a security check.\\n             }\\n@@ -615,40 +616,42 @@\\n               return;\\n             }\\n \\n-            var notifyListeners = true;\\n-            var i;\\n-\\n             // Security says okay, now ask content policy\\n+            if (contentPolicy.shouldLoad(nsIContentPolicy.TYPE_IMAGE,\\n+                                         uri, origURI, event.target,\\n+                                         safeGetProperty(event.target, \\\"type\\\"),\\n+                                         null) != nsIContentPolicy.ACCEPT)\\n+              return;\\n+\\n+            // var browserIndex = tabBrowser.getBrowserIndexForDocument(targetDoc);\\n+            var browserIndex = -1;\\n             if (tabBrowser.mTabbedMode) {\\n-              // We need to update a tab.\\n-              for (i = 0; i < this.childNodes.length; i++) {\\n-                if (this.childNodes[i].contentDocument == event.target.ownerDocument) {\\n-                  if (contentPolicy.shouldLoad(Components.interfaces.nsIContentPolicy.TYPE_IMAGE,\\n-                                               uri, origURI, event.target,\\n-                                               safeGetProperty(event.target, \\\"type\\\"),\\n-                                               null) != Components.interfaces.nsIContentPolicy.ACCEPT)\\n-                    return;\\n-\\n-                  var listener = tabBrowser.mTabListeners[i];\\n-                  listener.mIcon = href;\\n-                  break;\\n+                for (var i = 0; i < tabBrowser.mPanelContainer.childNodes.length; i++) {\\n+                    if (tabBrowser.mPanelContainer.childNodes[i].contentDocument == targetDoc) {\\n+                        browserIndex = i;\\n+                        break;\\n+                    }\\n                 }\\n-              }\\n-\\n-              notifyListeners = (this.childNodes[i] == tabBrowser.mCurrentBrowser);\\n+            } else {\\n+                if (tabBrowser.mCurrentBrowser.contentDocument == targetDoc)\\n+                    browserIndex = 0;\\n             }\\n-            else if ((this.contentDocument != safeGetProperty(event.originalTarget, \\\"ownerDocument\\\")) ||\\n-                     (contentPolicy.shouldLoad(Components.interfaces.nsIContentPolicy.TYPE_IMAGE,\\n-                                               uri, origURI, event.target,\\n-                                               safeGetProperty(event.target, \\\"type\\\"),\\n-                                               null) != Components.interfaces.nsIContentPolicy.ACCEPT))\\n+\\n+            // no browser? no favicon.\\n+            if (browserIndex == -1)\\n               return;\\n \\n-            if (notifyListeners && tabBrowser.mProgressListeners) {\\n+            var listener = tabBrowser.mTabListeners[browserIndex];\\n+            // there's no tab listener for non-tabbed mode browser 0\\n+            if (listener)\\n+              listener.mIcon = href;\\n+\\n+            if (tabBrowser.mProgressListeners) {\\n+              var targetBrowser = tabBrowser.mTabbedMode ? tabBrowser.mPanelContainer.childNodes[i] : tabBrowser.mCurrentBrowser;\\n               for (i = 0; i < tabBrowser.mProgressListeners.length; i++) {\\n                 var p = tabBrowser.mProgressListeners[i];\\n                 if (p)\\n-                  p.onLinkIconAvailable(href);\\n+                  p.onLinkIconAvailable(targetBrowser, href);\\n               }\\n             }\\n           ]]>\\n\""}