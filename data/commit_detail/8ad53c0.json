{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas8ad53c0\""},"diff":"\"8ad53c0 bug 396119 - Fix minor errors in XPCOMUtils.jsm.  Patch by Manish Singh <manish@flock.com>, r1=gavin, r2=sayrer\\ndiff --git a/js/src/xpconnect/loader/XPCOMUtils.jsm b/js/src/xpconnect/loader/XPCOMUtils.jsm\\nindex 54b792c..f5487f1 100644\\n--- a/js/src/xpconnect/loader/XPCOMUtils.jsm\\n+++ b/js/src/xpconnect/loader/XPCOMUtils.jsm\\n@@ -102,6 +102,7 @@\\n EXPORTED_SYMBOLS = [ \\\"XPCOMUtils\\\" ];\\n \\n const Ci = Components.interfaces;\\n+const Cr = Components.results;\\n \\n var XPCOMUtils = {\\n   /**\\n@@ -152,15 +153,16 @@ var XPCOMUtils = {\\n \\n     return { // nsIModule impl.\\n       getClassObject: function(compMgr, cid, iid) {\\n+        // We only support nsIFactory queries, not nsIClassInfo\\n         if (!iid.equals(Ci.nsIFactory))\\n-          throw Components.results.NS_ERROR_NO_INTERFACE;\\n+          throw Cr.NS_ERROR_NOT_IMPLEMENTED;\\n \\n         for each (let classDesc in classes) {\\n           if (classDesc.cid.equals(cid))\\n             return classDesc.factory;\\n         }\\n \\n-        throw Components.results.NS_ERROR_NOT_IMPLEMENTED;\\n+        throw Cr.NS_ERROR_FACTORY_NOT_REGISTERED;\\n       },\\n \\n       registerSelf: function(compMgr, fileSpec, location, type) {\\n@@ -207,7 +209,8 @@ var XPCOMUtils = {\\n             let catMan = XPCOMUtils.categoryManager;\\n             for each (let cat in classDesc.categories) {\\n               catMan.deleteCategoryEntry(cat.category,\\n-                                         cat.entry || classDesc.className);\\n+                                         cat.entry || classDesc.className,\\n+                                         true);\\n             }\\n           }\\n           compMgr.unregisterFactoryLocation(classDesc.cid, fileSpec);\\n@@ -237,8 +240,8 @@ var XPCOMUtils = {\\n     if (!factory) {\\n       factory = {\\n         createInstance: function(outer, iid) {\\n-          if(outer)\\n-            throw CR.NS_ERROR_NO_AGGREGATION;\\n+          if (outer)\\n+            throw Cr.NS_ERROR_NO_AGGREGATION;\\n           return (new component()).QueryInterface(iid);\\n         }\\n       }\\n@@ -259,6 +262,6 @@ function makeQI(interfaceNames) {\\n         return this;\\n     }\\n \\n-    throw Components.results.NS_ERROR_NO_INTERFACE;\\n+    throw Cr.NS_ERROR_NO_INTERFACE;\\n   };\\n }\\n\""}