{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas9194c29\""},"diff":"\"9194c29 Bug 385987 Minotaur Tool initial check in, r=robcee\\ndiff --git a/testing/release/minotaur/README.txt b/testing/release/minotaur/README.txt\\nnew file mode 100644\\nindex 0000000..e92c724\\n--- /dev/null\\n+++ b/testing/release/minotaur/README.txt\\n@@ -0,0 +1,35 @@\\n+ == Steps to Install Minotaur ==\\n+ 1. Drop all the Minotaur files into a directory - this is the MINOTAUR_DIR folder\\n+ 2. Change the tests.manifest file to also point to this directory\\n+    DO NOT FORGET TRAILING SLASH!!:\\n+    Windows: content minotaur file:///c:/code/minotaur/\\n+    Mac/Linux: content minotaur file:///Users/clint/code/Minotaur/workspace/\\n+ 3. Run Minotaur - run it without commands to get a usage statement\\n+ 4. Run Minotaur - results will be in <buildname>-<locale> directory in the\\n+    MINOTAUR_DIR folder\\n+\\n+ == To get verification files for a first run of a build ==\\n+ 1. Run Minotaur without the \\\"verification\\\" args, this means without -b -o and\\n+    -c options\\n+ 2. The output.xml and bookmarks.html will be placed in <buildname>-<locale>\\n+    directory in the MINOTAUR_DIR folder\\n+ 3. View the http.log that was generated (or partner specs) and create a\\n+    release.txt file where the first (and only) line is the release channel name\\n+ 4. Edit these files if needed, and copy them to a verification directory.\\n+ 5. Run Minotaur again with using these as your verification files for the\\n+    -b -o and -c options\\n+ 6. Submit those files for review and check-in so that future runs will use\\n+    those files to diff against.\\n+\\n+== Known Issues and Troubleshooting ==\\n+* On Windows, there is no Http Debug Log: Depending on which bash shell you\\n+  use on Windows, the settings to turn on HTTP Debug logging may not be\\n+  properly exported. If this is the case, you will need to export those two\\n+  variables by hand.  The variables are:\\n+  export NSPR_LOG_MODULES=nsHttp:5,nsSocketTransport:5,nsHostResolver:5\\n+  export NSPR_LOG_FILE=c:/tmp/http.log\\n+\\n+* No Firefox windows appear when I run Minotaur, and the Firefox process (may)\\n+  hang out in the system process list after the test finishes:  If you see this\\n+  then Firefox is trying to tell you that your tests.manifest file is messed up.\\n+  Either it has the wrong path, or you forgot the trailing slash.\\n\""}