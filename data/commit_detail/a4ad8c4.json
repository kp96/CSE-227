{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basa4ad8c4\""},"diff":"\"a4ad8c4 Bug 378371 - Crash [@ nsNativeDragTarget::ProcessDrag] when drag event handler and removing iframe, patch by Andrew Smith, r+sr=roc, (blocking1.9+)\\ndiff --git a/widget/src/windows/nsNativeDragTarget.cpp b/widget/src/windows/nsNativeDragTarget.cpp\\nindex 80e283f..78bff4e 100644\\n--- a/widget/src/windows/nsNativeDragTarget.cpp\\n+++ b/widget/src/windows/nsNativeDragTarget.cpp\\n@@ -75,7 +75,7 @@ static POINTL gDragLastPoint;\\n // construction\\n //-----------------------------------------------------\\n nsNativeDragTarget::nsNativeDragTarget(nsIWidget * aWnd)\\n-  : m_cRef(0), mWindow(aWnd), mCanMove(PR_TRUE)\\n+  : m_cRef(0), mWindow(aWnd), mCanMove(PR_TRUE), mDragCancelled(PR_FALSE)\\n {\\n   mHWnd = (HWND)mWindow->GetNativeData(NS_NATIVE_WINDOW);\\n \\n@@ -294,10 +294,15 @@ nsNativeDragTarget::DragOver(DWORD   grfKeyState,\\n \\t\\treturn ResultFromScode(E_FAIL);\\n   }\\n \\n+  // without the AddRef() |this| can get destroyed in an event handler\\n+  this->AddRef();\\n   mDragService->FireDragEventAtSource(NS_DRAGDROP_DRAG);\\n+  if (!mDragCancelled) {\\n+    // Now process the native drag state and then dispatch the event\\n+    ProcessDrag(nsnull, NS_DRAGDROP_OVER, grfKeyState, pt, pdwEffect);\\n+  }\\n+  this->Release();\\n \\n-  // Now process the native drag state and then dispatch the event\\n-  ProcessDrag(nsnull, NS_DRAGDROP_OVER, grfKeyState, pt, pdwEffect);\\n   return S_OK;\\n }\\n \\ndiff --git a/widget/src/windows/nsNativeDragTarget.h b/widget/src/windows/nsNativeDragTarget.h\\nindex c599e82..8462fc4 100644\\n--- a/widget/src/windows/nsNativeDragTarget.h\\n+++ b/widget/src/windows/nsNativeDragTarget.h\\n@@ -90,6 +90,8 @@ public:\\n   STDMETHODIMP Drop(LPDATAOBJECT pSource, DWORD grfKeyState,\\n                     POINTL point, DWORD* pEffect);\\n \\n+  PRBool           mDragCancelled;\\n+\\n protected:\\n \\n   void GetGeckoDragAction(LPDATAOBJECT pData, DWORD grfKeyState,\\ndiff --git a/widget/src/windows/nsWindow.cpp b/widget/src/windows/nsWindow.cpp\\nindex d1a11f6..0fd8629 100644\\n--- a/widget/src/windows/nsWindow.cpp\\n+++ b/widget/src/windows/nsWindow.cpp\\n@@ -3096,6 +3096,7 @@ NS_METHOD nsWindow::EnableDragDrop(PRBool aEnable)\\n       if (S_OK == ::CoLockObjectExternal((LPUNKNOWN)mNativeDragTarget, FALSE, TRUE)) {\\n         rv = NS_OK;\\n       }\\n+      mNativeDragTarget->mDragCancelled = PR_TRUE;\\n       NS_RELEASE(mNativeDragTarget);\\n     }\\n   }\\n@@ -4608,11 +4609,11 @@ PRBool nsWindow::ProcessMessage(UINT msg, WPARAM wParam, LPARAM lParam, LRESULT\\n #endif\\n \\n     case WM_SETFOCUS:\\n-      result = DispatchFocus(NS_GOTFOCUS, PR_TRUE);\\r\\n-      if (gJustGotActivate) {\\r\\n-        gJustGotActivate = PR_FALSE;\\r\\n-        gJustGotDeactivate = PR_FALSE;\\r\\n-        result = DispatchFocus(NS_ACTIVATE, PR_TRUE);\\r\\n+      result = DispatchFocus(NS_GOTFOCUS, PR_TRUE);\\n+      if (gJustGotActivate) {\\n+        gJustGotActivate = PR_FALSE;\\n+        gJustGotDeactivate = PR_FALSE;\\n+        result = DispatchFocus(NS_ACTIVATE, PR_TRUE);\\n       }\\n \\n #ifdef ACCESSIBILITY\\n\""}