{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas098dd88\""},"diff":"\"098dd88 Bug 392818 - getTextAtOffset broken for all but the first line in a multi-line entry, r=ginn.chen, a=dsicore\\ndiff --git a/accessible/src/html/nsHyperTextAccessible.cpp b/accessible/src/html/nsHyperTextAccessible.cpp\\nindex 521559d..8058734 100644\\n--- a/accessible/src/html/nsHyperTextAccessible.cpp\\n+++ b/accessible/src/html/nsHyperTextAccessible.cpp\\n@@ -624,8 +624,14 @@ nsresult nsHyperTextAccessible::DOMPointToHypertextOffset(nsIDOMNode* aNode, PRI\\n   return NS_OK;\\n }\\n \\n-PRInt32 nsHyperTextAccessible::GetRelativeOffset(nsIPresShell *aPresShell, nsIFrame *aFromFrame, PRInt32 aFromOffset,\\n-                                                 nsSelectionAmount aAmount, nsDirection aDirection, PRBool aNeedsStart)\\n+PRInt32\\n+nsHyperTextAccessible::GetRelativeOffset(nsIPresShell *aPresShell,\\n+                                         nsIFrame *aFromFrame,\\n+                                         PRInt32 aFromOffset,\\n+                                         nsIAccessible *aFromAccessible,\\n+                                         nsSelectionAmount aAmount,\\n+                                         nsDirection aDirection,\\n+                                         PRBool aNeedsStart)\\n {\\n   const PRBool kIsJumpLinesOk = PR_TRUE;          // okay to jump lines\\n   const PRBool kIsScrollViewAStop = PR_FALSE;     // do not stop at scroll views\\n@@ -640,9 +646,18 @@ PRInt32 nsHyperTextAccessible::GetRelativeOffset(nsIPresShell *aPresShell, nsIFr\\n   // Ask layout for the new node and offset, after moving the appropriate amount\\n   nsPeekOffsetStruct pos;\\n \\n-  PRInt32 contentOffset;\\n-  nsresult rv = RenderedToContentOffset(aFromFrame, aFromOffset, &contentOffset);\\n-  NS_ENSURE_SUCCESS(rv, -1);\\n+  nsresult rv;\\n+  PRInt32 contentOffset = aFromOffset;\\n+  if (IsText(aFromAccessible)) {\\n+    nsCOMPtr<nsPIAccessNode> accessNode(do_QueryInterface(aFromAccessible));\\n+    NS_ASSERTION(accessNode, \\\"nsIAccessible doesn't support nsPIAccessNode\\\");\\n+\\n+    nsIFrame *frame = accessNode->GetFrame();\\n+    NS_ENSURE_TRUE(frame, -1);\\n+\\n+    rv = RenderedToContentOffset(frame, aFromOffset, &contentOffset);\\n+    NS_ENSURE_SUCCESS(rv, -1);\\n+  }\\n \\n   pos.SetData(aAmount, aDirection, contentOffset,\\n               0, kIsJumpLinesOk, kIsScrollViewAStop, kIsKeyboardSelect, kIsVisualBidi,\\n@@ -740,7 +755,10 @@ nsresult nsHyperTextAccessible::GetTextHelper(EGetTextType aType, nsAccessibleTe\\n     ++ endOffset;\\n   }\\n   // Convert offsets to frame-relative\\n-  nsIFrame *startFrame = GetPosAndText(startOffset, endOffset);\\n+  nsCOMPtr<nsIAccessible> startAcc;\\n+  nsIFrame *startFrame = GetPosAndText(startOffset, endOffset, nsnull, nsnull,\\n+                                       nsnull, getter_AddRefs(startAcc));\\n+\\n   if (!startFrame) {\\n     PRInt32 textLength;\\n     GetCharacterCount(&textLength);\\n@@ -809,8 +827,9 @@ nsresult nsHyperTextAccessible::GetTextHelper(EGetTextType aType, nsAccessibleTe\\n     finalStartOffset = aOffset;\\n   }\\n   else {\\n-    finalStartOffset = GetRelativeOffset(presShell, startFrame,  startOffset,\\n-                                         amount, eDirPrevious, needsStart);\\n+    finalStartOffset = GetRelativeOffset(presShell, startFrame, startOffset,\\n+                                         startAcc, amount, eDirPrevious,\\n+                                         needsStart);\\n     NS_ENSURE_TRUE(finalStartOffset >= 0, NS_ERROR_FAILURE);\\n   }\\n \\n@@ -822,12 +841,14 @@ nsresult nsHyperTextAccessible::GetTextHelper(EGetTextType aType, nsAccessibleTe\\n     // 2 words/lines if the offset occured on whitespace boundary\\n     // Careful, startOffset and endOffset are passed by reference to GetPosAndText() and changed\\n     startOffset = endOffset = finalStartOffset;\\n-    nsIFrame *endFrame = GetPosAndText(startOffset, endOffset);\\n+    nsCOMPtr<nsIAccessible> endAcc;\\n+    nsIFrame *endFrame = GetPosAndText(startOffset, endOffset, nsnull, nsnull,\\n+                                       nsnull, getter_AddRefs(endAcc));\\n     if (!endFrame) {\\n       return NS_ERROR_FAILURE;\\n     }\\n-    finalEndOffset = GetRelativeOffset(presShell, endFrame, endOffset, amount,\\n-                                       eDirNext, needsStart);\\n+    finalEndOffset = GetRelativeOffset(presShell, endFrame, endOffset, endAcc,\\n+                                       amount, eDirNext, needsStart);\\n     NS_ENSURE_TRUE(endOffset >= 0, NS_ERROR_FAILURE);\\n     if (finalEndOffset == aOffset) {\\n       // This happens sometimes when current character at finalStartOffset \\ndiff --git a/accessible/src/html/nsHyperTextAccessible.h b/accessible/src/html/nsHyperTextAccessible.h\\nindex 4af7bf1..4a7a247 100644\\n--- a/accessible/src/html/nsHyperTextAccessible.h\\n+++ b/accessible/src/html/nsHyperTextAccessible.h\\n@@ -131,17 +131,23 @@ protected:\\n                          nsAString & aText);\\n \\n   /**\\n-    * Used by GetPosAndText to move backward/forward from a given point by word/line/etc.\\n-    * @param aPresShell, the current presshell we're moving in\\n-    * @param aFromFrame, the starting frame we're moving from\\n-    * @param aFromOffset, the starting offset we're moving from\\n-    * @param aAmount, how much are we moving (word/line/etc.) ?\\n-    * @param aDirection, forward or backward?\\n-    * @param aNeedsStart, for word and line cases, are we basing this on the start or end?\\n-    * @return, the resulting offset into this hypertext\\n+    * Used by GetTextHelper() to move backward/forward from a given point\\n+    * by word/line/etc.\\n+    *\\n+    * @param  aPresShell       the current presshell we're moving in\\n+    * @param  aFromFrame       the starting frame we're moving from\\n+    * @param  aFromOffset      the starting offset we're moving from\\n+    * @param  aFromAccessible  the starting accessible we're moving from\\n+    * @param  aAmount          how much are we moving (word/line/etc.) ?\\n+    * @param  aDirection       forward or backward?\\n+    * @param  aNeedsStart      for word and line cases, are we basing this on\\n+    *                          the start or end?\\n+    * @return                  the resulting offset into this hypertext\\n     */\\n-  PRInt32 GetRelativeOffset(nsIPresShell *aPresShell, nsIFrame *aFromFrame, PRInt32 aFromOffset,\\n-                            nsSelectionAmount aAmount, nsDirection aDirection, PRBool aNeedsStart);\\n+  PRInt32 GetRelativeOffset(nsIPresShell *aPresShell, nsIFrame *aFromFrame,\\n+                            PRInt32 aFromOffset, nsIAccessible *aFromAccessible,\\n+                            nsSelectionAmount aAmount, nsDirection aDirection,\\n+                            PRBool aNeedsStart);\\n \\n   /**\\n     * Provides information for substring that is defined by the given start\\n\""}