{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basdab43ff\""},"diff":"\"dab43ff Fix page report bustage.\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex b8df679..59b7cdd 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -14,9 +14,9 @@\\n    - The Original Code is this file as it was released on\\n    - March 28, 2001.\\n    -\\n-   - The Initial Developer of the Original Code is Peter Annema.\\n-   - Portions created by Peter Annema are Copyright (C) 2001\\n-   - Peter Annema.  All Rights Reserved.\\n+   - The Initial Developer of the Original Code is David Hyatt\\n+   - Portions created by David Hyatt are Copyright (C) 2001\\n+   - David Hyatt.  All Rights Reserved.\\n    -\\n    - Contributor(s):\\n    -   David Hyatt <hyatt@netscape.com> (Original Author of <tabbrowser>)\\n@@ -51,7 +51,7 @@\\n \\n     <content>\\n       <xul:stringbundle src=\\\"chrome://global/locale/tabbrowser.properties\\\"/>\\n-      <xul:tabbox flex=\\\"1\\\" eventnode=\\\"document\\\"\\n+      <xul:tabbox flex=\\\"1\\\"\\n                   onselect=\\\"if (!('updateCurrentBrowser' in this.parentNode) || event.target.localName != 'tabpanels') return; this.parentNode.updateCurrentBrowser();\\\">\\n         <xul:hbox class=\\\"tabbrowser-strip chromeclass-toolbar\\\" collapsed=\\\"true\\\" tooltip=\\\"_child\\\" context=\\\"_child\\\">\\n           <xul:tooltip onpopupshowing=\\\"event.preventBubble(); if (document.tooltipNode.hasAttribute('label')) { this.setAttribute('label', document.tooltipNode.getAttribute('label')); return true; } return false;\\\"/>\\n@@ -79,7 +79,6 @@\\n           </xul:menupopup>\\n \\n           <xul:tabs class=\\\"tabbrowser-tabs\\\" closebutton=\\\"true\\\" flex=\\\"1\\\"\\n-                    tooltiptextnew=\\\"&newTabButton.tooltip;\\\"\\n                     onclick=\\\"this.parentNode.parentNode.parentNode.onTabClick(event);\\\"\\n                     ondragover=\\\"nsDragAndDrop.dragOver(event, this.parentNode.parentNode.parentNode);\\n                                 event.stopPropagation();\\\"\\n@@ -98,7 +97,7 @@\\n           </xul:tabs>\\n         </xul:hbox>\\n         <xul:tabpanels flex=\\\"1\\\" class=\\\"plain\\\">\\n-          <xul:browser type=\\\"content-primary\\\" xbl:inherits=\\\"tooltip=contenttooltip,contextmenu=contentcontextmenu\\\"/>\\n+          <xul:browser type=\\\"content-primary\\\" xbl:inherits=\\\"tooltip=contenttooltip,contextmenu=contentcontextmenu,autocompletepopup\\\"/>\\n         </xul:tabpanels>\\n       </xul:tabbox>\\n       <children/>\\n@@ -109,10 +108,6 @@\\n                   .getService(Components.interfaces.nsIPrefService)\\n                   .getBranch(null);\\n       </field>\\n-      <field name=\\\"mURIFixup\\\" readonly=\\\"true\\\">\\n-        Components.classes[\\\"@mozilla.org/docshell/urifixup;1\\\"]\\n-                  .getService(Components.interfaces.nsIURIFixup);\\n-      </field>\\n       <field name=\\\"mTabBox\\\">\\n         document.getAnonymousNodes(this)[1]\\n       </field>\\n@@ -355,7 +350,7 @@\\n             var newTitle = \\\"\\\";\\n             var docTitle;\\n             if (this.docShell.contentViewer)\\n-              docTitle = this.contentTitle;\\n+              docTitle = this.contentDocument.title;\\n             \\n             if (docTitle) {\\n               newTitle += this.ownerDocument.documentElement.getAttribute(\\\"titlepreface\\\");\\n@@ -391,12 +386,23 @@\\n             if (this.mCurrentBrowser)\\n               this.mCurrentBrowser.setAttribute(\\\"type\\\", \\\"content\\\");\\n             \\n+            var updatePageReport = false;\\n+            if ((this.mCurrentBrowser.pageReport && !newBrowser.pageReport) ||\\n+                (!this.mCurrentBrowser.pageReport && newBrowser.pageReport))\\n+              updatePageReport = true;\\n+\\n             newBrowser.setAttribute(\\\"type\\\", \\\"content-primary\\\");\\n             this.mCurrentBrowser = newBrowser;\\n             this.mCurrentTab = this.selectedTab;\\n \\n+            if (updatePageReport)\\n+              this.mCurrentBrowser.updatePageReport();\\n+\\n             // Update the URL bar.\\n             var loc = this.mCurrentBrowser.currentURI;\\n+            if (!loc)\\n+              loc = ({ spec: \\\"\\\" });\\n+\\n             var webProgress = this.mCurrentBrowser.webProgress;\\n             var securityUI = this.mCurrentBrowser.securityUI;\\n             var i, p;\\n@@ -549,38 +555,18 @@\\n         <body>\\n           <![CDATA[\\n             var browser = this.getBrowserForTab(aTab);\\n-            var title = browser.contentTitle;\\n             var crop = \\\"end\\\";\\n-\\n-            if (!title) {\\n-              if (browser.currentURI.spec) {\\n-                try {\\n-                  title = this.mURIFixup.createExposableURI(browser.currentURI).spec;\\n-                }\\n-                catch(ex) {\\n-                  title = browser.currentURI.spec;\\n-                }\\n-              }\\n-\\n-              if (title && title != \\\"about:blank\\\") {\\n-                // At this point, we now have a URI.\\n-                // Let's try to unescape it using a character set\\n-                // in case the URI is not ASCII.\\n-                try {\\n-                  var characterSet = Components.lookupMethod(browser.contentDocument, 'characterSet')\\n-                                               .call(browser.contentDocument);\\n-                  const textToSubURI = Components.classes[\\\"@mozilla.org/intl/texttosuburi;1\\\"]\\n-                                                 .getService(Components.interfaces.nsITextToSubURI);\\n-                  title = textToSubURI.unEscapeNonAsciiURI(characterSet, title);\\n-                }\\n-                catch(ex) {\\n-                  // Do nothing.\\n-                }\\n-\\n-                crop = \\\"center\\\";\\n-              } else // Still no title?  Fall back to our untitled string.\\n-                title = this.mStringBundle.getString(\\\"tabs.untitled\\\");\\n+            var titleViaGetter = browser.contentDocument.__proto__.__lookupGetter__('title').call(browser.contentDocument);\\n+            var title;\\n+\\n+            if (titleViaGetter)\\n+              title = titleViaGetter\\n+            else if (browser.currentURI.spec && browser.currentURI.spec != \\\"about:blank\\\") {\\n+              title = browser.currentURI.spec;\\n+              crop  = \\\"center\\\";\\n             }\\n+            else\\n+              title = this.mStringBundle.getString(\\\"tabs.untitled\\\");\\n \\n             aTab.label = title;\\n             aTab.setAttribute(\\\"crop\\\", crop);\\n@@ -620,9 +606,9 @@\\n           <![CDATA[\\n             this.mTabbedMode = true; // Welcome to multi-tabbed mode.\\n \\n-            // Get the first tab all hooked up with a title listener.\\n+            // Get the first tab all hooked up with a title listener and popup blocking listener.\\n             this.mCurrentBrowser.addEventListener(\\\"DOMTitleChanged\\\", this.onTitleChanged, false);\\n-\\n+            \\n             this.setTabTitle(this.mCurrentTab);\\n \\n             // Hook up our favicon.\\n@@ -790,7 +776,7 @@\\n             this.mTabFilters.splice(index, 1);\\n             this.mTabListeners.splice(index, 1);\\n \\n-            // Remove our title change listener\\n+            // Remove our title change and blocking listeners\\n             oldBrowser.removeEventListener(\\\"DOMTitleChanged\\\", this.onTitleChanged, false);\\n             \\n             // We are no longer the primary content area.\\n@@ -799,6 +785,9 @@\\n             // Now select the new tab before nuking the old one.\\n             var currentIndex = this.mPanelContainer.selectedIndex;\\n             \\n+            // Now select the new tab before nuking the old one.\\n+            var currentIndex = this.mPanelContainer.selectedIndex;\\n+            \\n             var newIndex = -1;\\n             if (currentIndex > index)\\n               newIndex = currentIndex-1;\\n@@ -814,13 +803,17 @@\\n             // clean up the before/afterselected attributes before removing the tab\\n             oldTab.selected = false;\\n \\n+            // XXX browser's destructor isn't always called, so we force a cleanup ourselves\\n+            oldBrowser.destroy();\\n+            \\n             this.mTabContainer.removeChild(oldTab);\\n             this.mPanelContainer.removeChild(oldBrowser);\\n \\n             this.selectedTab = this.mTabContainer.childNodes[newIndex];\\n             this.mPanelContainer.selectedIndex = newIndex;\\n-\\n+            \\n             this.updateCurrentBrowser();\\n+            }\\n           ]]>\\n         </body>\\n       </method>\\n@@ -1104,6 +1097,10 @@\\n         </body>\\n       </method>\\n \\n+      <property name=\\\"pageReport\\\"\\n+                onget=\\\"return this.mCurrentBrowser.pageReport;\\\"\\n+                readonly=\\\"true\\\"/>\\n+\\n       <property name=\\\"currentURI\\\"\\n                 onget=\\\"return this.mCurrentBrowser.currentURI;\\\"\\n                 readonly=\\\"true\\\"/>\\n@@ -1152,10 +1149,6 @@\\n                 onget=\\\"return this.mCurrentBrowser.contentDocument;\\\"\\n                 readonly=\\\"true\\\"/>\\n \\n-      <property name=\\\"contentTitle\\\"\\n-                onget=\\\"return this.mCurrentBrowser.contentTitle;\\\"\\n-                readonly=\\\"true\\\"/>\\n-\\n       <property name=\\\"securityUI\\\"\\n                 onget=\\\"return this.mCurrentBrowser.securityUI;\\\"\\n                 readonly=\\\"true\\\"/>\\n@@ -1164,6 +1157,7 @@\\n         <![CDATA[\\n         this.mCurrentBrowser = this.mPanelContainer.firstChild;\\n         this.mCurrentTab = this.mTabContainer.firstChild;\\n+        this.mTabBox.setAttribute(\\\"handleCtrlTab\\\", \\\"false\\\");\\n         ]]>\\n       </constructor>\\n \\n\""}