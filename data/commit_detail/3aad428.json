{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas3aad428\""},"diff":"\"3aad428 Additional CSS parsing tests for bugs 393286 and 393499.\\ndiff --git a/layout/style/test/test_parse_rule.html b/layout/style/test/test_parse_rule.html\\nindex 5649dc3..3bece85 100644\\n--- a/layout/style/test/test_parse_rule.html\\n+++ b/layout/style/test/test_parse_rule.html\\n@@ -48,6 +48,8 @@ base + \\\"#a {color: rgb\\\\n(255, 0, 0)}\\\",\\n \\\"@threedee {maroon url('asdf\\\\n) ra('asdf\\\\n);} \\\" + base,\\n \\\"div[title='zxcv weeqweqeweasd\\\\\\\\D\\\\\\\\A a']{color:green}\\\",\\n \\\"div[title~='weeqweqeweasd\\\\\\\\D\\\\\\\\A a']{color:green}\\\",\\n+base + \\\"#a\\\\\\\\\\\\n{color:red}\\\",\\n+base + \\\"#a\\\\v{color:red}\\\",\\n \\n // CSS1 section 7.1\\n \\\"#a {color: green; rotation: 70deg;}\\\",\\n@@ -127,6 +129,7 @@ base + \\\"#a {color: rgb(255.0, 0, 0)}\\\",\\n todo: {\\\"@import 'data:text/css,#a{color:green}'\\\" : 1,\\n        \\\"@import 'data:text/css,#a{color:green}\\\" : 1,\\n        \\\"div[title~='weeqweqeweasd\\\\\\\\D\\\\\\\\A a']{color:green}\\\" : 1,\\n+       \\\"div {color:green}#a\\\\\\\\\\\\n{color:red}\\\" : 1\\n       }\\n },\\n \\n@@ -162,6 +165,14 @@ base + \\\"#a {border-width: 0; border-width: 0.0px medium}\\\",\\n \\\"#a::before {content: 'This is \\\\\\\\00000a '}\\\",\\n \\\"#a::before {content: 'This is \\\\\\\\\\\\n\\\\\\\\00000a '}\\\",\\n \\\"#a::before {content: 'This is \\\\\\\\\\\\015\\\\012\\\\\\\\00000a '}\\\",\\n+\\\"#a::before {content: 'This is \\\\\\\\\\\\015\\\\\\\\00000a '}\\\",\\n+\\\"#a::before {content: 'This is \\\\\\\\\\\\f\\\\\\\\00000a '}\\\",\\n+\\\"#a::before {content: 'This is\\\\\\\\20\\\\f\\\\\\\\a'}\\\",\\n+\\\"#a::before {content: 'This is\\\\\\\\20\\\\r\\\\\\\\a'}\\\",\\n+\\\"#a::before {content: 'This is\\\\\\\\20\\\\n\\\\\\\\a'}\\\",\\n+\\\"#a::before {content: 'This is\\\\\\\\20\\\\r\\\\n\\\\\\\\a'}\\\",\\n+base + \\\"#a::before {content: 'FAIL \\\\f\\\\\\\\a'}\\\",\\n+base + \\\"#a::before {content: 'FAIL \\\\\\\\\\\\n\\\\r\\\\\\\\a'}\\\",\\n \\\"#a:before {content: 'This is \\\\\\\\a'}\\\",\\n \\n base + \\\"#a:: before {content: 'FAIL'}\\\",\\n@@ -179,7 +190,19 @@ todo: {\\\"#a::before {content: 'This is \\\\\\\\a\\\" : 1}\\n \\\"#a {background: url() blue}\\\",\\n \\\"#a {background: url(æ€€) blue}\\\",\\n ], prop: \\\"backgroundColor\\\", pseudo: \\\"\\\"\\n-}\\n+},\\n+\\n+// A one-off test I couldn't come up with a better way to do\\n+{ base : base = \\\"div {border-style: dotted}\\\",\\n+  tests : [\\n+// Sanity-check to make sure this test will work\\n+// This test requires a color name that starts with a \\\"-\\\"\\n+base + \\\"#a {border: dotted 0 -moz-menuhover}\\\",\\n+// The actual test: check that 0-moz-menuhover get parsed as an unknown dimension\\n+// rather than a separate identifier\\n+base + \\\"#a {border: solid 0-moz-menuhover}\\\",\\n+], prop: \\\"borderLeftStyle\\\", pseudo: \\\"\\\"\\n+},\\n \\n ];\\n \\n\""}