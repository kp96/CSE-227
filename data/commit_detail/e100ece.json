{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Base100ece\""},"diff":"\"e100ece Null out browser's focusedWindow field as well (to prevent leaks).  b=283063  r=mconnor\\ndiff --git a/browser/base/content/tabbrowser.xml b/browser/base/content/tabbrowser.xml\\nindex 63bd537..4bbdbac 100644\\n--- a/browser/base/content/tabbrowser.xml\\n+++ b/browser/base/content/tabbrowser.xml\\n@@ -1139,7 +1139,16 @@\\n             // clean up the before/afterselected attributes before removing the tab\\n             oldTab.selected = false;\\n \\n-            // XXX browser's destructor isn't always called, so we force a cleanup ourselves\\n+            // Because of the way XBL works (fields just set JS\\n+            // properties on the element) and the code we have in place\\n+            // to preserve the JS objects for any elements that have\\n+            // JS properties set on them, the browser element won't be\\n+            // destroyed until the document goes away.  So we force a\\n+            // cleanup ourselves.\\n+            // This has to hapen before we remove the child so that the\\n+            // XBL implementation of nsIObserver still works.  But\\n+            // clearing focusedWindow happens below because it gets\\n+            // reset by updateCurrentBrowser.\\n             oldBrowser.destroy();\\n             \\n             this.mTabContainer.removeChild(oldTab);\\n@@ -1149,6 +1158,9 @@\\n             this.mPanelContainer.selectedIndex = newIndex;\\n             \\n             this.updateCurrentBrowser();\\n+\\n+            // see comment above destroy above\\n+            oldBrowser.focusedWindow = null;\\n             }\\n           ]]>\\n         </body>\\n\""}