{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas672e66c\""},"diff":"\"672e66c Bug 392873. Add debugging code to help track down a crash in the bfcache-expiry code. r+sr=bzbarsky,a=damon\\ndiff --git a/docshell/shistory/src/nsSHEntry.cpp b/docshell/shistory/src/nsSHEntry.cpp\\nindex 32a8bc8..4e8b015 100644\\n--- a/docshell/shistory/src/nsSHEntry.cpp\\n+++ b/docshell/shistory/src/nsSHEntry.cpp\\n@@ -160,6 +160,14 @@ nsSHEntry::~nsSHEntry()\\n   if (viewer) {\\n     viewer->Destroy();\\n   }\\n+\\n+#ifdef DEBUG\\n+  nsExpirationTracker<nsSHEntry,3>::Iterator iterator(gHistoryTracker);\\n+  nsSHEntry* elem;\\n+  while ((elem = iterator.Next()) != nsnull) {\\n+    NS_ASSERTION(elem != this, \\\"Found dead entry still in the tracker!\\\");\\n+  }\\n+#endif\\n }\\n \\n //*****************************************************************************\\ndiff --git a/xpcom/ds/nsExpirationTracker.h b/xpcom/ds/nsExpirationTracker.h\\nindex 0c88a39..c006fc4f4 100644\\n--- a/xpcom/ds/nsExpirationTracker.h\\n+++ b/xpcom/ds/nsExpirationTracker.h\\n@@ -234,6 +234,29 @@ template <class T, PRUint32 K> class nsExpirationTracker {\\n         AgeOneGeneration();\\n       }\\n     }\\n+    \\n+    class Iterator {\\n+    private:\\n+      nsExpirationTracker<T,K>* mTracker;\\n+      PRUint32                  mGeneration;\\n+      PRUint32                  mIndex;\\n+    public:\\n+      Iterator(nsExpirationTracker<T,K>* aTracker)\\n+        : mTracker(aTracker), mGeneration(0), mIndex(0) {}\\n+      T* Next() {\\n+        while (mGeneration < K) {\\n+          nsTArray<T*>* generation = &mTracker->mGenerations[mGeneration];\\n+          if (mIndex < generation->Length()) {\\n+            ++mIndex;\\n+            return (*generation)[mIndex - 1];\\n+          }\\n+          ++mGeneration;\\n+        }\\n+        return nsnull;\\n+      }\\n+    };\\n+    \\n+    friend class Iterator;\\n \\n   protected:\\n     /**\\n\""}