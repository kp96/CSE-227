{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas9006b49\""},"diff":"\"9006b49 Bug 395256 - Make nsJSID/IID/CID objects .equals method slightly faster, r=mrbkap sr=jst a=damons\\ndiff --git a/js/src/xpconnect/idl/xpcjsid.idl b/js/src/xpconnect/idl/xpcjsid.idl\\nindex 654715c..d2e2988 100644\\n--- a/js/src/xpconnect/idl/xpcjsid.idl\\n+++ b/js/src/xpconnect/idl/xpcjsid.idl\\n@@ -48,7 +48,7 @@ interface nsIJSID : nsISupports\\n     [noscript] readonly attribute nsIDPtr id;\\n     readonly attribute boolean            valid;\\n \\n-    boolean equals(in nsIJSID other);\\n+    boolean equals(in nsIDRef other);\\n \\n     void initialize(in string idString);\\n \\ndiff --git a/js/src/xpconnect/src/xpcjsid.cpp b/js/src/xpconnect/src/xpcjsid.cpp\\nindex ee0d80b..3f21e8c 100644\\n--- a/js/src/xpconnect/src/xpcjsid.cpp\\n+++ b/js/src/xpconnect/src/xpcjsid.cpp\\n@@ -138,22 +138,17 @@ nsJSID::GetValid(PRBool *aValid)\\n }\\n \\n NS_IMETHODIMP\\n-nsJSID::Equals(nsIJSID *other, PRBool *_retval)\\n+nsJSID::Equals(REFNSIID other, PRBool *_retval)\\n {\\n     if(!_retval)\\n         return NS_ERROR_NULL_POINTER;\\n \\n     *_retval = PR_FALSE;\\n \\n-    if(!other || mID.Equals(GetInvalidIID()))\\n+    if(mID.Equals(GetInvalidIID()))\\n         return NS_OK;\\n \\n-    nsID* otherID;\\n-    if(NS_SUCCEEDED(other->GetId(&otherID)))\\n-    {\\n-        *_retval = mID.Equals(*otherID);\\n-        nsMemory::Free(otherID);\\n-    }\\n+    *_retval = mID.Equals(other);\\n     return NS_OK;\\n }\\n \\n@@ -433,22 +428,12 @@ NS_IMETHODIMP nsJSIID::GetValid(PRBool *aValid)\\n     return NS_OK;\\n }\\n \\n-NS_IMETHODIMP nsJSIID::Equals(nsIJSID *other, PRBool *_retval)\\n+NS_IMETHODIMP nsJSIID::Equals(const nsID &other, PRBool *_retval)\\n {\\n     if(!_retval)\\n         return NS_ERROR_NULL_POINTER;\\n \\n-    *_retval = PR_FALSE;\\n-\\n-    if(!other)\\n-        return NS_OK;\\n-\\n-    nsID* otherID;\\n-    if(NS_SUCCEEDED(other->GetId(&otherID)))\\n-    {\\n-        mInfo->IsIID((nsIID*)otherID, _retval);\\n-        nsMemory::Free(otherID);\\n-    }\\n+    mInfo->IsIID((nsIID*) &other, _retval);\\n     return NS_OK;\\n }\\n \\n@@ -679,7 +664,7 @@ NS_IMETHODIMP nsJSCID::GetId(nsID* *aId)\\n NS_IMETHODIMP nsJSCID::GetValid(PRBool *aValid)\\n     {return mDetails.GetValid(aValid);}\\n \\n-NS_IMETHODIMP nsJSCID::Equals(nsIJSID *other, PRBool *_retval)\\n+NS_IMETHODIMP nsJSCID::Equals(const nsID &other, PRBool *_retval)\\n     {return mDetails.Equals(other, _retval);}\\n \\n NS_IMETHODIMP nsJSCID::Initialize(const char *idString)\\n\""}