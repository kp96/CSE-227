{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basb1f095b\""},"diff":"\"b1f095b Final part of Bug 389070 Port bookmarks to frozen linkage. r=Neil. NPOTFFB.\\ndiff --git a/xpfe/components/bookmarks/src/Makefile.in b/xpfe/components/bookmarks/src/Makefile.in\\nindex 37d66dc..f4cf72d 100644\\n--- a/xpfe/components/bookmarks/src/Makefile.in\\n+++ b/xpfe/components/bookmarks/src/Makefile.in\\n@@ -45,7 +45,6 @@ include $(DEPTH)/config/autoconf.mk\\n MODULE               = appcomps\\n LIBRARY_NAME         = bookmark\\n MODULE_NAME          = BookmarkModule\\n-MOZILLA_INTERNAL_API = 1\\n IS_COMPONENT         = 1\\n EXPORT_LIBRARY       = 1\\n \\n@@ -74,6 +73,7 @@ CPPSRCS\\t\\t= nsBookmarksService.cpp\\n include $(topsrcdir)/config/rules.mk\\n \\n EXTRA_DSO_LDOPTS += \\\\\\n-\\t$(MOZ_UNICHARUTIL_LIBS) \\\\\\n+\\t$(call EXPAND_LIBNAME_PATH,unicharutil_external_s,$(LIBXUL_DIST)/lib) \\\\\\n+\\t$(XPCOM_GLUE_LDOPTS) \\\\\\n \\t$(MOZ_COMPONENT_LIBS) \\\\\\n \\t$(NULL)\\ndiff --git a/xpfe/components/bookmarks/src/nsBookmarksService.cpp b/xpfe/components/bookmarks/src/nsBookmarksService.cpp\\nindex e42a641..d434a72 100644\\n--- a/xpfe/components/bookmarks/src/nsBookmarksService.cpp\\n+++ b/xpfe/components/bookmarks/src/nsBookmarksService.cpp\\n@@ -96,12 +96,7 @@\\n #include \\\"nsVoidArray.h\\\"\\n #include \\\"nsUnicharUtils.h\\\"\\n #include \\\"nsAutoBuffer.h\\\"\\n-\\n-// Tempoarary defines while we convert to the frozen API\\n-#ifdef MOZILLA_INTERNAL_API\\n-#include \\\"nsEscape.h\\\"\\n-#define CaseInsensitiveCompare nsCaseInsensitiveStringComparator()\\n-#endif\\n+#include \\\"nsINetUtil.h\\\"\\n \\n #if defined(XP_WIN) || defined(XP_OS2)\\n #define NS_LINEBREAK \\\"\\\\015\\\\012\\\"\\n@@ -399,6 +394,43 @@ bm_ReleaseGlobals()\\n     }\\n }\\n \\n+/**\\n+ * Escape HTML-special characters in a string.\\n+ */\\n+static void\\n+EscapeHTML(nsCString &data)\\n+{\\n+    const char *begin = data.get();\\n+\\n+    for (PRInt32 pos = data.Length() - 1; pos >= 0; --pos) {\\n+        switch (begin[pos]) {\\n+        case '<':\\n+            data.Replace(pos, 1, \\\"&lt;\\\");\\n+            break;\\n+\\n+        case '>':\\n+            data.Replace(pos, 1, \\\"&gt;\\\");\\n+            break;\\n+\\n+        case '&':\\n+            data.Replace(pos, 1, \\\"&amp;\\\");\\n+            break;\\n+\\n+        case '\\\"':\\n+            data.Replace(pos, 1, \\\"&quot;\\\");\\n+            break;\\n+\\n+        case '\\\\'':\\n+            data.Replace(pos, 1, \\\"&#39;\\\");\\n+            break;\\n+\\n+        default:\\n+            continue;\\n+        }\\n+        begin = data.get();\\n+    }\\n+}\\n+\\n ////////////////////////////////////////////////////////////////////////\\n \\n /**\\n@@ -749,7 +781,7 @@ BookmarkParser::DecodeBuffer(nsString &line, char *buf, PRUint32 aLength)\\n     }\\n     else\\n     {\\n-        CopyASCIItoUTF16(buf, line);\\n+        CopyASCIItoUTF16(nsDependentCString(buf), line);\\n     }\\n     return NS_OK;\\n }\\n@@ -1350,7 +1382,7 @@ BookmarkParser::ParseDate(nsIRDFResource *arc, nsString& aValue, nsIRDFNode** aR\\n     PRInt32 theDate = 0;\\n     if (!aValue.IsEmpty())\\n     {\\n-        PRInt32 err;\\n+        nsresult err;\\n         theDate = aValue.ToInteger(&err); // ignored.\\n     }\\n     if (theDate == 0)\\n@@ -1862,11 +1894,11 @@ nsBookmarksService::ExamineBookmarkSchedule(nsIRDFResource *theBookmark, PRBool\\n                     nsAutoString startStr(StringHead(hourRange, dashOffset));\\n                     nsAutoString endStr(Substring(hourRange, dashOffset + 1));\\n \\n-                    PRInt32 rv2 = 0;\\n+                    nsresult rv2;\\n                     startHour = startStr.ToInteger(&rv2);\\n-                    if (rv2) startHour = -1;\\n+                    if (NS_FAILED(rv2)) startHour = -1;\\n                     endHour = endStr.ToInteger(&rv2);\\n-                    if (rv2) endHour = -1;\\n+                    if (NS_FAILED(rv2)) endHour = -1;\\n                     \\n                     if ((startHour >=0) && (endHour >=0))\\n                     {\\n@@ -1878,7 +1910,7 @@ nsBookmarksService::ExamineBookmarkSchedule(nsIRDFResource *theBookmark, PRBool\\n \\n                             // get duration\\n                             duration = durationStr.ToInteger(&rv2);\\n-                            if (rv2) duration = -1;\\n+                            if (NS_FAILED(rv2)) duration = -1;\\n \\n                             // what's left is the notification options\\n                             notificationMethod = schedule;\\n@@ -2299,9 +2331,7 @@ nsBookmarksService::OnStopRequest(nsIRequest* request, nsISupports *ctxt,\\n             }\\n \\n             // update icon?\\n-            if (FindInReadable(NS_LITERAL_STRING(\\\"icon\\\"),\\n-                               schedule,\\n-                               CaseInsensitiveCompare))\\n+            if (schedule.Find(NS_LITERAL_STRING(\\\"icon\\\"), PR_TRUE) != -1)\\n             {\\n                 nsCOMPtr<nsIRDFLiteral> statusLiteral;\\n                 if (NS_SUCCEEDED(rv = gRDF->GetLiteral(NS_LITERAL_STRING(\\\"new\\\").get(), getter_AddRefs(statusLiteral))))\\n@@ -2321,9 +2351,7 @@ nsBookmarksService::OnStopRequest(nsIRequest* request, nsISupports *ctxt,\\n             }\\n             \\n             // play a sound?\\n-            if (FindInReadable(NS_LITERAL_STRING(\\\"sound\\\"),\\n-                               schedule,\\n-                               CaseInsensitiveCompare))\\n+            if (schedule.Find(NS_LITERAL_STRING(\\\"sound\\\"), PR_TRUE) != -1)\\n             {\\n                 nsCOMPtr<nsISound> soundInterface =\\n                         do_CreateInstance(\\\"@mozilla.org/sound;1\\\", &rv);\\n@@ -2337,9 +2365,7 @@ nsBookmarksService::OnStopRequest(nsIRequest* request, nsISupports *ctxt,\\n             PRBool      openURLFlag = PR_FALSE;\\n \\n             // show an alert?\\n-            if (FindInReadable(NS_LITERAL_STRING(\\\"alert\\\"),\\n-                               schedule,\\n-                               CaseInsensitiveCompare))\\n+            if (schedule.Find(NS_LITERAL_STRING(\\\"alert\\\"), PR_TRUE) != -1)\\n             {\\n                 nsCOMPtr<nsIPrompt> prompter;\\n                 NS_QueryNotificationCallbacks(channel, prompter);\\n@@ -2412,9 +2438,7 @@ nsBookmarksService::OnStopRequest(nsIRequest* request, nsISupports *ctxt,\\n \\n             // open the URL in a new window?\\n             if ((openURLFlag == PR_TRUE) ||\\n-                FindInReadable(NS_LITERAL_STRING(\\\"open\\\"),\\n-                               schedule,\\n-                               CaseInsensitiveCompare))\\n+                schedule.Find(NS_LITERAL_STRING(\\\"open\\\"), PR_TRUE) != -1)\\n             {\\n                 if (NS_SUCCEEDED(rv))\\n                 {\\n@@ -2710,9 +2734,8 @@ nsBookmarksService::Compare(const void* aElement1, const void* aElement2, void*\\n                                           &result);\\n             }\\n             else {\\n-                result = ::Compare(nsDependentString(value1),\\n-                                   nsDependentString(value2),\\n-                                   CaseInsensitiveCompare);\\n+                result = nsDependentString(value1).Compare(nsDependentString(value2),\\n+                                                           CaseInsensitiveCompare);\\n             }\\n \\n             return result * sortInfo->mDirection;\\n@@ -3847,7 +3870,7 @@ nsBookmarksService::ParseFavoritesFolder(nsIFile* aDirectory, nsIRDFResource* aP\\n             PRInt32 lnkExtStart = bookmarkName.Length() - lnkExt.Length();\\n             if (StringEndsWith(bookmarkName, lnkExt,\\n                   CaseInsensitiveCompare))\\n-                bookmarkName.Truncate(lnkExtStart);\\n+                bookmarkName.SetLength(lnkExtStart);\\n \\n             nsCOMPtr<nsIRDFResource> bookmark;\\n             // NS_GetURLSpecFromFile on Windows returns url-escaped URL in \\n@@ -3878,7 +3901,7 @@ nsBookmarksService::ParseFavoritesFolder(nsIFile* aDirectory, nsIRDFResource* aP\\n             nsCAutoString extension;\\n \\n             url->GetFileExtension(extension);\\n-            if (!extension.LowerCaseEqualsLiteral(\\\"url\\\"))\\n+            if (!extension.Equals(NS_LITERAL_CSTRING(\\\"url\\\"), CaseInsensitiveCompare))\\n                 continue;\\n \\n             nsAutoString name(Substring(bookmarkName, 0, \\n@@ -4097,7 +4120,7 @@ nsBookmarksService::ProcessCachedBookmarkIcon(nsIRDFResource* aSource,\\n     // if we have a new icon URL, save it away into our internal graph\\n     if (iconURL)\\n     {\\n-        LossyCopyUTF16toASCII(iconURL, path);\\n+        LossyCopyUTF16toASCII(nsDependentString(iconURL), path);\\n \\n         nsCOMPtr<nsIRDFLiteral> iconLiteral;\\n         if (NS_FAILED(rv = gRDF->GetLiteral(iconURL, getter_AddRefs(iconLiteral))))\\n@@ -4128,7 +4151,7 @@ nsBookmarksService::ProcessCachedBookmarkIcon(nsIRDFResource* aSource,\\n             const PRUnichar *uni = nsnull;\\n             tempLiteral->GetValueConst(&uni);\\n             if (uni)\\n-                LossyCopyUTF16toASCII(uni, path);\\n+                LossyCopyUTF16toASCII(nsDependentString(uni), path);\\n         }\\n     }\\n \\n@@ -5532,7 +5555,7 @@ nsBookmarksService::WriteBookmarksContainer(nsIRDFDataSource *ds,\\n                         const PRUnichar *title = nsnull;\\n                         if (NS_SUCCEEDED(rv = nameLiteral->GetValueConst(&title)))\\n                         {\\n-                            CopyUTF16toUTF8(title, name);\\n+                            CopyUTF16toUTF8(nsDependentString(title), name);\\n                         }\\n                     }\\n                 }\\n@@ -5605,12 +5628,9 @@ nsBookmarksService::WriteBookmarksContainer(nsIRDFDataSource *ds,\\n                     if (!name.IsEmpty())\\n                     {\\n                         // see bug #65098\\n-                        char *escapedAttrib = nsEscapeHTML(name.get());\\n-                        if (escapedAttrib)\\n-                        {\\n-                            rv |= strm->Write(escapedAttrib, strlen(escapedAttrib), &dummy);\\n-                            NS_Free(escapedAttrib);\\n-                        }\\n+                        EscapeHTML(name);\\n+\\n+                        rv |= strm->Write(name.get(), name.Length(), &dummy);\\n                     }\\n                     rv |= strm->Write(kCloseH3, sizeof(kCloseH3)-1, &dummy);\\n \\n@@ -5703,15 +5723,10 @@ nsBookmarksService::WriteBookmarksContainer(nsIRDFDataSource *ds,\\n                             {\\n                                 // Note: we escape the title due to security issues;\\n                                 //       see bug # 13197 for details\\n-                                char *escapedAttrib = nsEscapeHTML(name.get());\\n-                                if (escapedAttrib)\\n-                                {\\n-                                    rv |= strm->Write(escapedAttrib,\\n-                                                       strlen(escapedAttrib),\\n-                                                       &dummy);\\n-                                    NS_Free(escapedAttrib);\\n-                                    escapedAttrib = nsnull;\\n-                                }\\n+                                EscapeHTML(name);\\n+\\n+                                rv |= strm->Write(name.get(), name.Length(),\\n+                                                  &dummy);\\n                             }\\n \\n                             rv |= strm->Write(kAClose, sizeof(kAClose)-1, &dummy);\\n@@ -5868,38 +5883,34 @@ nsBookmarksService::WriteBookmarkProperties(nsIRDFDataSource *ds,\\n                 }\\n             }\\n \\n-            char        *attribute = ToNewUTF8String(literalString);\\n-            if (nsnull != attribute)\\n+            nsCAutoString attribute;\\n+            CopyUTF16toUTF8(literalString, attribute);\\n+\\n+            if (isFirst == PR_FALSE)\\n             {\\n-                if (isFirst == PR_FALSE)\\n-                {\\n-                    rv |= strm->Write(kSpaceStr, sizeof(kSpaceStr)-1, &dummy);\\n-                }\\n+                rv |= strm->Write(kSpaceStr, sizeof(kSpaceStr)-1, &dummy);\\n+            }\\n \\n-                if (property == kNC_Description)\\n+            if (property == kNC_Description)\\n+            {\\n+                if (!literalString.IsEmpty())\\n                 {\\n-                    if (!literalString.IsEmpty())\\n-                    {\\n-                        char *escapedAttrib = nsEscapeHTML(attribute);\\n-                        if (escapedAttrib)\\n-                        {\\n-                            rv |= strm->Write(htmlAttrib, strlen(htmlAttrib), &dummy);\\n-                            rv |= strm->Write(escapedAttrib, strlen(escapedAttrib), &dummy);\\n-                            rv |= strm->Write(kNL, sizeof(kNL)-1, &dummy);\\n+                    EscapeHTML(attribute);\\n \\n-                            NS_Free(escapedAttrib);\\n-                            escapedAttrib = nsnull;\\n-                        }\\n+                    if (NS_SUCCEEDED(rv))\\n+                    {\\n+                        rv |= strm->Write(htmlAttrib, strlen(htmlAttrib), &dummy);\\n+                        rv |= strm->Write(attribute.get(),\\n+                                          attribute.Length(), &dummy);\\n+                        rv |= strm->Write(kNL, sizeof(kNL)-1, &dummy);\\n                     }\\n                 }\\n-                else\\n-                {\\n-                    rv |= strm->Write(htmlAttrib, strlen(htmlAttrib), &dummy);\\n-                    rv |= strm->Write(attribute, strlen(attribute), &dummy);\\n-                    rv |= strm->Write(kQuoteStr, sizeof(kQuoteStr)-1, &dummy);\\n-                }\\n-                NS_Free(attribute);\\n-                attribute = nsnull;\\n+            }\\n+            else\\n+            {\\n+                rv |= strm->Write(htmlAttrib, strlen(htmlAttrib), &dummy);\\n+                rv |= strm->Write(attribute.get(), attribute.Length(), &dummy);\\n+                rv |= strm->Write(kQuoteStr, sizeof(kQuoteStr)-1, &dummy);\\n             }\\n         }\\n     }\\n\""}