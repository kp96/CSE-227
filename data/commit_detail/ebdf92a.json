{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basebdf92a\""},"diff":"\"ebdf92a Bug 395029 - when I delete items from folders on the personal toolbar, we don't update the generated items. r=dietrich, a=mconnor.\\ndiff --git a/browser/components/places/content/menu.xml b/browser/components/places/content/menu.xml\\nindex e3e30c1..62c97e5 100755\\n--- a/browser/components/places/content/menu.xml\\n+++ b/browser/components/places/content/menu.xml\\n@@ -36,7 +36,7 @@\\n # the provisions above, a recipient may use your version of this file under\\n # the terms of any one of the MPL, the GPL or the LGPL.\\n #\\n-# ***** END LICENSE BLOCK ***** \\n+# ***** END LICENSE BLOCK *****\\n \\n <bindings id=\\\"placesMenuBindings\\\"\\n           xmlns=\\\"http://www.mozilla.org/xbl\\\"\\n@@ -44,12 +44,12 @@\\n           xmlns:html=\\\"http://www.w3.org/1999/xhtml\\\"\\n           xmlns:xul=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\">\\n \\n-  <binding id=\\\"places-menupopup\\\" \\n+  <binding id=\\\"places-menupopup\\\"\\n            extends=\\\"chrome://global/content/bindings/popup.xml#popup\\\">\\n     <implementation>\\n       <constructor><![CDATA[\\n #if 0\\n-        // Support an asyncinit attribute that causes the view to populate \\n+        // Support an asyncinit attribute that causes the view to populate\\n         // itself only after the window has been shown. This is to ensure we\\n         // do not regress browser window show time (Ts/Txul)\\n         if (this.hasAttribute(\\\"asyncinit\\\")) {\\n@@ -60,7 +60,7 @@\\n #endif\\n         this._init();\\n       ]]></constructor>\\n-      \\n+\\n       <destructor><![CDATA[\\n         this._resultNode = null;\\n         if (this._result) {\\n@@ -77,7 +77,7 @@\\n           // This function should only be called for top-level menus like the bookmarks menu.\\n           // Submenus get their _result and _resultNode from their parents.\\n           if (this.hasAttribute(\\\"place\\\")) {\\n-            // Do the initial build. \\n+            // Do the initial build.\\n             this.place = this.place;\\n           }\\n         ]]></body>\\n@@ -103,9 +103,9 @@\\n           this.popupShowingCallback();\\n         ]]></body>\\n       </method>\\n-      \\n+\\n       <field name=\\\"_selection\\\">null</field>\\n-      \\n+\\n       <method name=\\\"setResultAndNode\\\">\\n         <parameter name=\\\"result\\\"/>\\n         <parameter name=\\\"resultNode\\\"/>\\n@@ -141,7 +141,7 @@\\n            _startMarker and _endMarker are -1. -->\\n       <field name=\\\"_startMarker\\\">-1</field>\\n       <field name=\\\"_endMarker\\\">-1</field>\\n-      \\n+\\n       <method name=\\\"_cleanMenu\\\">\\n         <body><![CDATA[\\n           // Find static menuitems that should go at the start\\n@@ -164,7 +164,7 @@\\n             if ((this._startMarker != -1) && (this._endMarker == -1))\\n               items.push(item);\\n           }\\n-          \\n+\\n           // If static items at the beginning were found, remove all items between\\n           // them and the static content at the end.\\n           for (var i = 0; i < items.length; ++i) {\\n@@ -172,7 +172,7 @@\\n             if (this._endMarker > 0)\\n               --this._endMarker;\\n           }\\n-            \\n+\\n           // If no static items were found at the beginning, remove all items before\\n           // the static items at the end.\\n           if (this._startMarker == -1) {\\n@@ -279,6 +279,23 @@\\n       <field name=\\\"_needsBindingAttachment\\\">false</field>\\n #endif\\n \\n+      <field name=\\\"_emptyMenuItem\\\">null</field>\\n+      <method name=\\\"_showEmptyMenuItem\\\">\\n+        <body><![CDATA[\\n+          if (this._emptyMenuItem) {\\n+            this._emptyMenuItem.hidden = false;\\n+            return;\\n+          }\\n+\\n+          var label = PlacesUtils.getString(\\\"bookmarksMenuEmptyFolder\\\");\\n+          const XULNS = \\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\";\\n+          this._emptyMenuItem = document.createElementNS(XULNS, \\\"menuitem\\\");\\n+          this._emptyMenuItem.setAttribute(\\\"label\\\", label);\\n+          this._emptyMenuItem.setAttribute(\\\"disabled\\\", true);\\n+          this.appendChild(this._emptyMenuItem);\\n+        ]]></body>\\n+      </method>\\n+\\n       <method name=\\\"_rebuild\\\">\\n         <body><![CDATA[\\n           // Make sure not to hold onto any references to menu nodes when we\\n@@ -289,7 +306,7 @@\\n             this._DNDObserver._clearOverFolder();\\n \\n           this._cleanMenu();\\n-          \\n+\\n           NS_ASSERT(PlacesUtils.nodeIsContainer(this._resultNode),\\n                     \\\"Result-node of a places popup has to be a container node\\\");\\n \\n@@ -310,6 +327,9 @@\\n \\n           var cc = this._resultNode.childCount;\\n           if (cc > 0) {\\n+            if (this._emptyMenuItem)\\n+              this._emptyMenuItem.hidden = true;\\n+\\n             for (var i = 0; i < cc; ++i) {\\n               var child = this._resultNode.getChild(i);\\n               this.insertNewItem(child, null);\\n@@ -318,14 +338,8 @@\\n           else {\\n             // This menu is empty.  If there is no static content, add\\n             // an element to show it is empty.\\n-            if (this._startMarker == -1 && this._endMarker == -1) {\\n-              var label = PlacesUtils.getString(\\\"bookmarksMenuEmptyFolder\\\");\\n-              const XULNS = \\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\";\\n-              var element = document.createElementNS(XULNS, \\\"menuitem\\\");\\n-              element.setAttribute(\\\"label\\\", label);\\n-              element.setAttribute(\\\"disabled\\\", true);\\n-              this.appendChild(element);\\n-            }\\n+            if (this._startMarker == -1 && this._endMarker == -1)\\n+              this._showEmptyMenuItem();\\n           }\\n           this._built = true;\\n         ]]></body>\\n@@ -355,6 +369,8 @@\\n             var index = this._self._startMarker + 1 + aIndex;\\n             var before = this._self.childNodes[index] || null;\\n             this._self.insertNewItem(aNode, before);\\n+            if (this._self._emptyMenuItem)\\n+              this._self._emptyMenuItem.hidden = true;\\n           }\\n           else\\n             this._forwardToChildView(aParentNode, \\\"itemInserted\\\", arguments);\\n@@ -366,11 +382,15 @@\\n \\n           if (aParentNode == this._self.getResultNode()) {\\n             var children = this._self.childNodes;\\n-            \\n+\\n             for (var i = 0; i < children.length; i++) {\\n               if (children[i].node == aNode) {\\n                 this._self.removeItem(children[i]);\\n-                return;\\n+                if (!this._self.hasChildNodes() ||\\n+                    (this._self.childNodes.length == 1 &&\\n+                     this._self.firstChild == this._self._emptyMenuItem)) {\\n+                  this._self._showEmptyMenuItem();\\n+                }\\n               }\\n             }\\n           }\\n@@ -411,7 +431,7 @@\\n           if (PlacesUtils.nodeIsSeparator(aNode)) {\\n             // nothing to do when a separator changes\\n             return;\\n-          } \\n+          }\\n           else if (PlacesUtils.nodeIsContainer(aNode)) {\\n             if (PlacesUtils.nodeIsLivemarkContainer(aNode)) {\\n               var folder = aNode.itemId;\\n@@ -481,13 +501,13 @@\\n           var viewerToRebuild = null;\\n           for (var i=0; i < this._self._containerNodesMap.length; i++) {\\n             var node = this._self._containerNodesMap[i].resultNode;\\n-            \\n+\\n             if (node == aContainer)\\n               viewerToRebuild = this._self._containerNodesMap[i].domNode._viewer;\\n             if (isChildOf(node, aContainer))\\n               this._self._containerNodesMap.splice(i,1);\\n           }\\n-        \\n+\\n           if (aContainer.containerOpen) {\\n             if (viewerToRebuild)\\n               viewerToRebuild._built = false;\\n@@ -534,9 +554,9 @@\\n           this.setAttribute(\\\"place\\\", val);\\n           var queries = { }, options = { };\\n           PlacesUtils.history.queryStringToQueries(val, queries, { }, options);\\n-          if (!queries.value.length) \\n+          if (!queries.value.length)\\n             queries.value = [PlacesUtils.history.getNewQuery()];\\n-          this._result = \\n+          this._result =\\n             PlacesUtils.history.executeQueries(queries.value,\\n                                                queries.value.length,\\n                                                options.value);\\n@@ -548,14 +568,14 @@\\n \\n       <!-- nsIPlacesView -->\\n       <property name=\\\"hasSelection\\\">\\n-        <getter><![CDATA[ \\n+        <getter><![CDATA[\\n           return this._selection != null;\\n         ]]></getter>\\n       </property>\\n-      \\n+\\n       <!-- nsIPlacesView -->\\n       <property name=\\\"hasSingleSelection\\\">\\n-        <getter><![CDATA[ \\n+        <getter><![CDATA[\\n           return this.hasSelection;\\n         ]]></getter>\\n       </property>\\n@@ -569,7 +589,7 @@\\n \\n       <!-- nsIPlacesView -->\\n       <method name=\\\"getRemovableSelectionRanges\\\">\\n-        <body><![CDATA[ \\n+        <body><![CDATA[\\n           return [this.getSelectionNodes()];\\n         ]]></body>\\n       </method>\\n@@ -592,7 +612,7 @@\\n \\n       <!-- nsIPlacesView -->\\n       <property name=\\\"selectedNode\\\">\\n-        <getter><![CDATA[ \\n+        <getter><![CDATA[\\n           return this.hasSelection ? this._selection : null;\\n         ]]></getter>\\n       </property>\\n@@ -607,8 +627,8 @@\\n \\n       <!-- nsIPlacesView -->\\n       <property name=\\\"insertionPoint\\\">\\n-        <getter><![CDATA[ \\n-          // By default, the insertion point is at the top level, at the end. \\n+        <getter><![CDATA[\\n+          // By default, the insertion point is at the top level, at the end.\\n           var index = -1;\\n           var folderId = 0;\\n           if (PlacesUtils.nodeIsFolder(this._resultNode))\\n@@ -637,7 +657,7 @@\\n \\n       <!-- nsIPlacesView -->\\n       <method name=\\\"selectAll\\\">\\n-        <body><![CDATA[ \\n+        <body><![CDATA[\\n           // Nothing\\n         ]]></body>\\n       </method>\\n@@ -653,7 +673,7 @@\\n       </method>\\n \\n       <field name=\\\"_DNDObserver\\\"><![CDATA[({\\n-        // Inside the _DNDObserver object's functions, this points to \\n+        // Inside the _DNDObserver object's functions, this points to\\n         // the _DNDObserver object.  _self points to the menu xbl object.\\n         _self: this,\\n         // Subfolders should be opened when the mouse drags over them, and closed\\n@@ -685,7 +705,7 @@\\n           if (timer == this._overFolder.closeTimer) {\\n             // Only close the submenu if the mouse isn't being dragged over any\\n             // of its child menus.\\n-            var draggingOverChild = \\n+            var draggingOverChild =\\n               PlacesControllerDragHelper.draggingOverChildNode(this._overFolder.node);\\n             if (draggingOverChild)\\n               this._overFolder.node = null;\\n\""}