{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basba0a18e\""},"diff":"\"ba0a18e make listboxes stylable on Mac OS X. b=382145 sr=roc\\ndiff --git a/widget/src/cocoa/nsNativeThemeCocoa.mm b/widget/src/cocoa/nsNativeThemeCocoa.mm\\nindex bab84ab..c19fc5b 100644\\n--- a/widget/src/cocoa/nsNativeThemeCocoa.mm\\n+++ b/widget/src/cocoa/nsNativeThemeCocoa.mm\\n@@ -95,7 +95,6 @@ NS_IMPL_ISUPPORTS1(nsNativeThemeCocoa, nsITheme)\\n \\n nsNativeThemeCocoa::nsNativeThemeCocoa()\\n {\\n-  sListboxBGTransparent = PR_TRUE;\\n }\\n \\n nsNativeThemeCocoa::~nsNativeThemeCocoa()\\n@@ -1335,8 +1334,6 @@ nsNativeThemeCocoa::ThemeSupportsWidget(nsPresContext* aPresContext, nsIFrame* a\\n \\n   switch (aWidgetType) {\\n     case NS_THEME_LISTBOX:\\n-      return PR_TRUE; // we always want listboxes themed, non-themed ones look wrong\\n-      break;\\n \\n     case NS_THEME_DIALOG:\\n     case NS_THEME_WINDOW:\\ndiff --git a/widget/src/xpwidgets/nsNativeTheme.cpp b/widget/src/xpwidgets/nsNativeTheme.cpp\\nindex b38c8a8..932b3e7 100644\\n--- a/widget/src/xpwidgets/nsNativeTheme.cpp\\n+++ b/widget/src/xpwidgets/nsNativeTheme.cpp\\n@@ -69,7 +69,6 @@ nsILookAndFeel::nsColorID nsNativeTheme::sTextfieldDisabledBGColorID = nsILookAn\\n nsMargin                  nsNativeTheme::sListboxBorderSize(2, 2, 2, 2);\\n PRUint8                   nsNativeTheme::sListboxBorderStyle = NS_STYLE_BORDER_STYLE_INSET;\\n nsILookAndFeel::nsColorID nsNativeTheme::sListboxBorderColorID = nsILookAndFeel::eColor_threedface;\\n-PRBool                    nsNativeTheme::sListboxBGTransparent = PR_FALSE;\\n nsILookAndFeel::nsColorID nsNativeTheme::sListboxBGColorID = nsILookAndFeel::eColor__moz_field;\\n nsILookAndFeel::nsColorID nsNativeTheme::sListboxDisabledBGColorID = nsILookAndFeel::eColor_threedface;\\n \\n@@ -256,13 +255,10 @@ nsNativeTheme::IsWidgetStyled(nsPresContext* aPresContext, nsIFrame* aFrame,\\n         defaultBorderStyle = sListboxBorderStyle;\\n         ConvertBorderToAppUnits(aPresContext, sListboxBorderSize, defaultBorderSize);\\n         lookAndFeel->GetColor(sListboxBorderColorID, defaultBorderColor);\\n-        defaultBGTransparent = sListboxBGTransparent;\\n-        if (!defaultBGTransparent) {\\n-          if (IsDisabled(aFrame))\\n-            lookAndFeel->GetColor(sListboxDisabledBGColorID, defaultBGColor);\\n-          else\\n-            lookAndFeel->GetColor(sListboxBGColorID, defaultBGColor);\\n-        }\\n+        if (IsDisabled(aFrame))\\n+          lookAndFeel->GetColor(sListboxDisabledBGColorID, defaultBGColor);\\n+        else\\n+          lookAndFeel->GetColor(sListboxBGColorID, defaultBGColor);\\n         break;\\n \\n       case NS_THEME_DROPDOWN:\\ndiff --git a/widget/src/xpwidgets/nsNativeTheme.h b/widget/src/xpwidgets/nsNativeTheme.h\\nindex a3f3d69..67871c0 100644\\n--- a/widget/src/xpwidgets/nsNativeTheme.h\\n+++ b/widget/src/xpwidgets/nsNativeTheme.h\\n@@ -158,7 +158,6 @@ class nsNativeTheme\\n   static nsMargin                  sListboxBorderSize;\\n   static PRUint8                   sListboxBorderStyle;\\n   static nsILookAndFeel::nsColorID sListboxBorderColorID;\\n-  static PRBool                    sListboxBGTransparent;\\n   static nsILookAndFeel::nsColorID sListboxBGColorID;\\n   static nsILookAndFeel::nsColorID sListboxDisabledBGColorID;\\n   // comboboxes\\n\""}