{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Base15b4ac\""},"diff":"\"e15b4ac Backout  bug 394442\\ndiff --git a/content/base/public/nsINode.h b/content/base/public/nsINode.h\\nindex 30f74fc..87f7a36 100644\\n--- a/content/base/public/nsINode.h\\n+++ b/content/base/public/nsINode.h\\n@@ -92,14 +92,8 @@ enum {\\n \\n   NODE_IS_EDITABLE =             0x00000100U,\\n \\n-  // Optimizations to quickly check whether element may have ID, class or style\\n-  // attributes. Not all element implementations may use these!\\n-  NODE_MAY_HAVE_ID =             0x00000200U,\\n-  NODE_MAY_HAVE_CLASS =          0x00000400U,\\n-  NODE_MAY_HAVE_STYLE =          0x00000800U,\\n-\\n   // Four bits for the script-type ID\\n-  NODE_SCRIPT_TYPE_OFFSET =               12,\\n+  NODE_SCRIPT_TYPE_OFFSET =                9,\\n \\n   NODE_SCRIPT_TYPE_SIZE =                  4,\\n \\ndiff --git a/content/base/src/nsGenericElement.cpp b/content/base/src/nsGenericElement.cpp\\nindex 852d189..b7f8ec6 100644\\n--- a/content/base/src/nsGenericElement.cpp\\n+++ b/content/base/src/nsGenericElement.cpp\\n@@ -2265,10 +2265,6 @@ nsGenericElement::DispatchDOMEvent(nsEvent* aEvent,\\n nsIAtom*\\n nsGenericElement::GetID() const\\n {\\n-  if (!HasFlag(NODE_MAY_HAVE_ID)) {\\n-    return nsnull;\\n-  }\\n-\\n   nsIAtom* IDName = GetIDAttributeName();\\n   if (IDName) {\\n     const nsAttrValue* attrVal = mAttrsAndChildren.GetAttr(IDName);\\n@@ -2291,9 +2287,6 @@ nsGenericElement::GetID() const\\n       }\\n     }\\n   }\\n-\\n-  nsINode* node = const_cast<nsINode*>(static_cast<const nsINode*>(this));\\n-  node->UnsetFlags(NODE_MAY_HAVE_ID);\\n   return nsnull;\\n }\\n \\n@@ -3687,7 +3680,6 @@ nsGenericElement::ParseAttribute(PRInt32 aNamespaceID,\\n {\\n   if (aNamespaceID == kNameSpaceID_None &&\\n       aAttribute == GetIDAttributeName() && !aValue.IsEmpty()) {\\n-    SetFlags(NODE_MAY_HAVE_ID);\\n     // Store id as an atom.  id=\\\"\\\" means that the element has no id,\\n     // not that it has an emptystring as the id.\\n     aResult.ParseAtom(aValue);\\ndiff --git a/content/base/src/nsStyledElement.cpp b/content/base/src/nsStyledElement.cpp\\nindex 0967391..454fdbf 100644\\n--- a/content/base/src/nsStyledElement.cpp\\n+++ b/content/base/src/nsStyledElement.cpp\\n@@ -73,15 +73,7 @@ nsStyledElement::GetIDAttributeName() const\\n const nsAttrValue*\\n nsStyledElement::GetClasses() const\\n {\\n-  if (!HasFlag(NODE_MAY_HAVE_CLASS)) {\\n-    return nsnull;\\n-  }\\n-  const nsAttrValue* clazz = mAttrsAndChildren.GetAttr(nsGkAtoms::_class);\\n-  if (!clazz) {\\n-    nsINode* node = const_cast<nsINode*>(static_cast<const nsINode*>(this));\\n-    node->UnsetFlags(NODE_MAY_HAVE_CLASS);\\n-  }\\n-  return clazz;\\n+  return mAttrsAndChildren.GetAttr(nsGkAtoms::_class);\\n }\\n \\n PRBool\\n@@ -90,12 +82,10 @@ nsStyledElement::ParseAttribute(PRInt32 aNamespaceID, nsIAtom* aAttribute,\\n {\\n   if (aNamespaceID == kNameSpaceID_None) {\\n     if (aAttribute == nsGkAtoms::style) {\\n-      SetFlags(NODE_MAY_HAVE_STYLE);\\n       ParseStyleAttribute(this, aValue, aResult);\\n       return PR_TRUE;\\n     }\\n     if (aAttribute == nsGkAtoms::_class) {\\n-      SetFlags(NODE_MAY_HAVE_CLASS);\\n #ifdef MOZ_SVG\\n       NS_ASSERTION(!nsCOMPtr<nsIDOMSVGStylable>(do_QueryInterface(this)),\\n                    \\\"SVG code should have handled this 'class' attribute!\\\");\\n@@ -112,7 +102,6 @@ nsStyledElement::ParseAttribute(PRInt32 aNamespaceID, nsIAtom* aAttribute,\\n NS_IMETHODIMP\\n nsStyledElement::SetInlineStyleRule(nsICSSStyleRule* aStyleRule, PRBool aNotify)\\n {\\n-  SetFlags(NODE_MAY_HAVE_STYLE);\\n   PRBool modification = PR_FALSE;\\n   nsAutoString oldValueStr;\\n \\n@@ -146,16 +135,12 @@ nsStyledElement::SetInlineStyleRule(nsICSSStyleRule* aStyleRule, PRBool aNotify)\\n nsICSSStyleRule*\\n nsStyledElement::GetInlineStyleRule()\\n {\\n-  if (!HasFlag(NODE_MAY_HAVE_STYLE)) {\\n-    return nsnull;\\n-  }\\n   const nsAttrValue* attrVal = mAttrsAndChildren.GetAttr(nsGkAtoms::style);\\n \\n   if (attrVal && attrVal->Type() == nsAttrValue::eCSSStyleRule) {\\n     return attrVal->GetCSSStyleRuleValue();\\n   }\\n \\n-  UnsetFlags(NODE_MAY_HAVE_STYLE);\\n   return nsnull;\\n }\\n \\n@@ -211,9 +196,6 @@ nsStyledElement::GetStyle(nsIDOMCSSStyleDeclaration** aStyle)\\n nsresult\\n nsStyledElement::ReparseStyleAttribute()\\n {\\n-  if (!HasFlag(NODE_MAY_HAVE_STYLE)) {\\n-    return NS_OK;\\n-  }\\n   const nsAttrValue* oldVal = mAttrsAndChildren.GetAttr(nsGkAtoms::style);\\n   \\n   if (oldVal && oldVal->Type() != nsAttrValue::eCSSStyleRule) {\\n\""}