{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basb75794e\""},"diff":"\"b75794e Fix Cocoa/Gecko coordinate conversion. r=smichaud r=cbarrett sr=pink\\ndiff --git a/widget/src/cocoa/nsChildView.mm b/widget/src/cocoa/nsChildView.mm\\nindex 5e4bf88..2227281 100644\\n--- a/widget/src/cocoa/nsChildView.mm\\n+++ b/widget/src/cocoa/nsChildView.mm\\n@@ -213,7 +213,7 @@ ConvertGeckoRectToMacRect(const nsRect& aRect, Rect& outMacRect)\\n static inline void\\n FlipCocoaScreenCoordinate (NSPoint &inPoint)\\n {  \\n-  inPoint.y = CocoaScreenCoordsHeight() - inPoint.y;\\n+  inPoint.y = FlippedScreenY(inPoint.y);\\n }\\n   \\n \\ndiff --git a/widget/src/cocoa/nsCocoaUtils.h b/widget/src/cocoa/nsCocoaUtils.h\\nindex 7f8fb60..d8df2d3 100644\\n--- a/widget/src/cocoa/nsCocoaUtils.h\\n+++ b/widget/src/cocoa/nsCocoaUtils.h\\n@@ -22,6 +22,7 @@\\n  * Contributor(s):\\n  *   Josh Aas <josh@mozilla.com>\\n  *   Sylvain Pasche <sylvain.pasche@gmail.com>\\n+ *   Stuart Morgan <stuart.morgan@alumni.case.edu>\\n  *\\n  * Alternatively, the contents of this file may be used under the terms of\\n  * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n@@ -44,15 +45,17 @@\\n \\n #include \\\"nsRect.h\\\"\\n \\n-// Returns the height (from lowest 'y' to highest 'y', regardless of sign) of\\n-// the global coordinate system that includes all NSScreen objects.\\n-float CocoaScreenCoordsHeight();\\n+//\\n+// Returns the given y coordinate, which must be in screen coordinates,\\n+// flipped from Gecko to Cocoa or Cocoa to Gecko.\\n+//\\n+float FlippedScreenY(float y);\\n \\n /*\\n  * Gecko rects (nsRect) contain an origin (x,y) in a coordinate\\n- * system with (0,0) in the top-left of the screen. Cocoa rects\\n- * (NSRect) contain an origin (x,y) in a coordinate system with\\n- * (0,0) in the bottom-left of the screen. Both nsRect and NSRect\\n+ * system with (0,0) in the top-left of the primary screen. Cocoa rects\\n+ * (NSRect) contain an origin (x,y) in a coordinate system with (0,0)\\n+ * in the bottom-left of the primary screen. Both nsRect and NSRect\\n  * contain width/height info, with no difference in their use.\\n  */\\n NSRect geckoRectToCocoaRect(const nsRect &geckoRect);\\ndiff --git a/widget/src/cocoa/nsCocoaUtils.mm b/widget/src/cocoa/nsCocoaUtils.mm\\nindex 783cb96..3712230 100644\\n--- a/widget/src/cocoa/nsCocoaUtils.mm\\n+++ b/widget/src/cocoa/nsCocoaUtils.mm\\n@@ -22,6 +22,7 @@\\n  * Contributor(s):\\n  *   Josh Aas <josh@mozilla.com>\\n  *   Sylvain Pasche <sylvain.pasche@gmail.com>\\n+ *   Stuart Morgan <stuart.morgan@alumni.case.edu>\\n  *\\n  * Alternatively, the contents of this file may be used under the terms of\\n  * either the GNU General Public License Version 2 or later (the \\\"GPL\\\"), or\\n@@ -39,33 +40,30 @@\\n \\n #include \\\"nsCocoaUtils.h\\\"\\n \\n-// Returns the height (from lowest 'y' to highest 'y', regardless of sign) of\\n-// the global coordinate system that includes all NSScreen objects.\\n-float CocoaScreenCoordsHeight()\\n+// Returns the height of the primary screen (the one with the menu bar, which\\n+// is documented to be the first in the |screens| array).\\n+float MenuBarScreenHeight()\\n {\\n-  float globalLowestY = 0;\\n-  float globalHighestY = 0;\\n-  NSArray *allScreens = [NSScreen screens];\\n-  for (unsigned i = 0; i < [allScreens count]; ++i) {\\n-    NSScreen *aScreen = (NSScreen*) [allScreens objectAtIndex:i];\\n-    NSRect screenFrame = [aScreen frame];\\n-    float screenLowestY = screenFrame.origin.y;\\n-    float screenHighestY = screenFrame.origin.y + screenFrame.size.height;\\n-    if (screenLowestY < globalLowestY)\\n-      globalLowestY = screenLowestY;\\n-    if (screenHighestY > globalHighestY)\\n-      globalHighestY = screenHighestY;\\n-  }\\n-  return globalHighestY - globalLowestY;\\n+  NSArray* allScreens = [NSScreen screens];\\n+  if ([allScreens count])\\n+    return [[allScreens objectAtIndex:0] frame].size.height;\\n+  else\\n+    return 0; // If there are no screens, there's not much we can say.\\n+}\\n+\\n+\\n+float FlippedScreenY(float y)\\n+{\\n+  return MenuBarScreenHeight() - y;\\n }\\n \\n \\n NSRect geckoRectToCocoaRect(const nsRect &geckoRect)\\n {\\n-  // We only need to change the Y coordinate by starting with the screen\\n+  // We only need to change the Y coordinate by starting with the primary screen\\n   // height, subtracting the gecko Y coordinate, and subtracting the height.\\n   return NSMakeRect(geckoRect.x,\\n-                    CocoaScreenCoordsHeight() - geckoRect.y - geckoRect.height,\\n+                    MenuBarScreenHeight() - (geckoRect.y + geckoRect.height),\\n                     geckoRect.width,\\n                     geckoRect.height);\\n }\\n@@ -73,11 +71,11 @@ NSRect geckoRectToCocoaRect(const nsRect &geckoRect)\\n \\n nsRect cocoaRectToGeckoRect(const NSRect &cocoaRect)\\n {\\n-  // We only need to change the Y coordinate by starting with the screen\\n+  // We only need to change the Y coordinate by starting with the primary screen\\n   // height and subtracting both the cocoa y origin and the height of the\\n   // cocoa rect.\\n   return nsRect((nscoord)cocoaRect.origin.x,\\n-                (nscoord)(CocoaScreenCoordsHeight() - (cocoaRect.origin.y + cocoaRect.size.height)),\\n+                (nscoord)(MenuBarScreenHeight() - (cocoaRect.origin.y + cocoaRect.size.height)),\\n                 (nscoord)cocoaRect.size.width,\\n                 (nscoord)cocoaRect.size.height);\\n }\\ndiff --git a/widget/src/cocoa/nsCocoaWindow.mm b/widget/src/cocoa/nsCocoaWindow.mm\\nindex 0380a8d2..09e481e 100644\\n--- a/widget/src/cocoa/nsCocoaWindow.mm\\n+++ b/widget/src/cocoa/nsCocoaWindow.mm\\n@@ -688,7 +688,7 @@ NS_IMETHODIMP nsCocoaWindow::Move(PRInt32 aX, PRInt32 aY)\\n     \\n     // the point we have is in Gecko coordinates (origin top-left). Convert\\n     // it to Cocoa ones (origin bottom-left).\\n-    NSPoint coord = {aX, CocoaScreenCoordsHeight() - aY};\\n+    NSPoint coord = {aX, FlippedScreenY(aY)};\\n \\n     //printf(\\\"final coords %f %f\\\\n\\\", coord.x, coord.y);\\n     //printf(\\\"- window coords before %f %f\\\\n\\\", [mWindow frame].origin.x, [mWindow frame].origin.y);\\ndiff --git a/widget/src/cocoa/nsToolkit.mm b/widget/src/cocoa/nsToolkit.mm\\nindex 641f55d..f7cc69a 100644\\n--- a/widget/src/cocoa/nsToolkit.mm\\n+++ b/widget/src/cocoa/nsToolkit.mm\\n@@ -204,7 +204,7 @@ static NSPoint ConvertCGGlobalToCocoaScreen(CGPoint aPoint)\\n {\\n   NSPoint cocoaPoint;\\n   cocoaPoint.x = aPoint.x;\\n-  cocoaPoint.y = CocoaScreenCoordsHeight() - aPoint.y;\\n+  cocoaPoint.y = FlippedScreenY(aPoint.y);\\n   return cocoaPoint;\\n }\\n \\n\""}