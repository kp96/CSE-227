{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Base98b32a\""},"diff":"\"e98b32a Bug 359845 - crash [@nsXULTreeitemAccessibleWrap::GetRole] probably !mColumn, r=Evan.Yan, a=dsicore\\ndiff --git a/accessible/src/xul/nsXULTreeAccessible.cpp b/accessible/src/xul/nsXULTreeAccessible.cpp\\nindex b20af1d..cdb62d2 100644\\n--- a/accessible/src/xul/nsXULTreeAccessible.cpp\\n+++ b/accessible/src/xul/nsXULTreeAccessible.cpp\\n@@ -504,8 +504,12 @@ NS_IMETHODIMP nsXULTreeAccessible::SelectAllSelection(PRBool *_retval)\\n   return NS_OK;\\n }\\n \\n-NS_IMETHODIMP nsXULTreeAccessible::GetCachedTreeitemAccessible(PRInt32 aRow, nsITreeColumn* aColumn, nsIAccessible** aAccessible)\\n+NS_IMETHODIMP\\n+nsXULTreeAccessible::GetCachedTreeitemAccessible(PRInt32 aRow,\\n+                                                 nsITreeColumn* aColumn,\\n+                                                 nsIAccessible** aAccessible)\\n {\\n+  NS_ENSURE_ARG_POINTER(aAccessible);\\n   *aAccessible = nsnull;\\n \\n   NS_ASSERTION(mAccessNodeCache, \\\"No accessibility cache for tree\\\");\\n@@ -524,8 +528,12 @@ NS_IMETHODIMP nsXULTreeAccessible::GetCachedTreeitemAccessible(PRInt32 aRow, nsI\\n       cols->GetKeyColumn(getter_AddRefs(col));\\n   }\\n \\n-  if (col)\\n-     col->GetIndex(&columnIndex);\\n+  // Do not create accessible for treeitem if there is no column in the tree\\n+  // because it doesn't render treeitems properly.\\n+  if (!col)\\n+    return NS_OK;\\n+\\n+  col->GetIndex(&columnIndex);\\n \\n   nsCOMPtr<nsIAccessNode> accessNode;\\n   GetCacheEntry(*mAccessNodeCache, (void*)(aRow * kMaxTreeColumns + columnIndex), getter_AddRefs(accessNode));\\n\""}