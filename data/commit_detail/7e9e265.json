{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas7e9e265\""},"diff":"\"7e9e265 Bug 393650 - XPCOMUtilify ExtensionManager. r=dtownsend\\ndiff --git a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\nindex e5d6937..ea945f6 100644\\n--- a/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\n+++ b/toolkit/mozapps/extensions/src/nsExtensionManager.js.in\\n@@ -48,16 +48,22 @@\\n // - better logging\\n //\\n \\n-const nsIExtensionManager             = Components.interfaces.nsIExtensionManager;\\n-const nsIAddonUpdateCheckListener     = Components.interfaces.nsIAddonUpdateCheckListener;\\n-const nsIUpdateItem                   = Components.interfaces.nsIUpdateItem;\\n-const nsILocalFile                    = Components.interfaces.nsILocalFile;\\n-const nsILineInputStream              = Components.interfaces.nsILineInputStream;\\n-const nsIInstallLocation              = Components.interfaces.nsIInstallLocation;\\n-const nsIURL                          = Components.interfaces.nsIURL\\n+const Cc = Components.classes;\\n+const Ci = Components.interfaces;\\n+const Cr = Components.results;\\n+\\n+Components.utils.import(\\\"resource://gre/modules/XPCOMUtils.jsm\\\");\\n+\\n+const nsIExtensionManager             = Ci.nsIExtensionManager;\\n+const nsIAddonUpdateCheckListener     = Ci.nsIAddonUpdateCheckListener;\\n+const nsIUpdateItem                   = Ci.nsIUpdateItem;\\n+const nsILocalFile                    = Ci.nsILocalFile;\\n+const nsILineInputStream              = Ci.nsILineInputStream;\\n+const nsIInstallLocation              = Ci.nsIInstallLocation;\\n+const nsIURL                          = Ci.nsIURL\\n // XXXrstrong calling hasMoreElements on a nsIDirectoryEnumerator after\\n // it has been removed will cause a crash on Mac OS X - bug 292823\\n-const nsIDirectoryEnumerator          = Components.interfaces.nsIDirectoryEnumerator;\\n+const nsIDirectoryEnumerator          = Ci.nsIDirectoryEnumerator;\\n \\n const PREF_EM_CHECK_COMPATIBILITY     = \\\"extensions.checkCompatibility\\\";\\n const PREF_EM_CHECK_UPDATE_SECURITY   = \\\"extensions.checkUpdateSecurity\\\";\\n@@ -192,8 +198,8 @@ var gIDTest = /^(\\\\{[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\\\\\n  */\\n function getVersionChecker() {\\n   if (!gVersionChecker) {\\n-    gVersionChecker = Components.classes[\\\"@mozilla.org/xpcom/version-comparator;1\\\"]\\n-                                .getService(Components.interfaces.nsIVersionComparator);\\n+    gVersionChecker = Cc[\\\"@mozilla.org/xpcom/version-comparator;1\\\"].\\n+                      getService(Ci.nsIVersionComparator);\\n   }\\n   return gVersionChecker;\\n }\\n@@ -206,8 +212,8 @@ var BundleManager = {\\n   * @returns A nsIStringBundle which was retrieved.\\n   */\\n   getBundle: function(bundleURI) {\\n-    var sbs = Components.classes[\\\"@mozilla.org/intl/stringbundle;1\\\"]\\n-                        .getService(Components.interfaces.nsIStringBundleService);\\n+    var sbs = Cc[\\\"@mozilla.org/intl/stringbundle;1\\\"].\\n+              getService(Ci.nsIStringBundleService);\\n     return sbs.createBundle(bundleURI);\\n   },\\n \\n@@ -296,8 +302,8 @@ function getPref(func, preference, defaultValue) {\\n  * @returns The nsIRDFContainer, initialized at the root.\\n  */\\n function getContainer(datasource, root) {\\n-  var ctr = Components.classes[\\\"@mozilla.org/rdf/container;1\\\"]\\n-                      .createInstance(Components.interfaces.nsIRDFContainer);\\n+  var ctr = Cc[\\\"@mozilla.org/rdf/container;1\\\"].\\n+            createInstance(Ci.nsIRDFContainer);\\n   ctr.Init(datasource, root);\\n   return ctr;\\n }\\n@@ -373,8 +379,8 @@ function getDirNoCreate(key, pathArray) {\\n  * @return  nsIFile object for the location specified.\\n  */\\n function getDirInternal(key, pathArray, shouldCreate) {\\n-  var fileLocator = Components.classes[\\\"@mozilla.org/file/directory_service;1\\\"]\\n-                              .getService(Components.interfaces.nsIProperties);\\n+  var fileLocator = Cc[\\\"@mozilla.org/file/directory_service;1\\\"].\\n+                    getService(Ci.nsIProperties);\\n   var dir = fileLocator.get(key, nsILocalFile);\\n   for (var i = 0; i < pathArray.length; ++i) {\\n     dir.append(pathArray[i]);\\n@@ -436,12 +442,12 @@ function getAbsoluteDescriptor(itemLocation) {\\n  * @returns The nsILocalFile object representing the location of the item\\n  */\\n function getFileFromDescriptor(descriptor, installLocation) {\\n-  var location = Components.classes[\\\"@mozilla.org/file/local;1\\\"]\\n-                           .createInstance(nsILocalFile);\\n+  var location = Cc[\\\"@mozilla.org/file/local;1\\\"].\\n+                 createInstance(nsILocalFile);\\n \\n   var m = descriptor.match(/^(abs|rel)\\\\%(.*)$/);\\n   if (!m)\\n-    throw Components.results.NS_ERROR_INVALID_ARG;\\n+    throw Cr.NS_ERROR_INVALID_ARG;\\n \\n   if (m[1] == \\\"rel\\\") {\\n     location.setRelativeDescriptor(installLocation.location, m[2]);\\n@@ -475,8 +481,8 @@ function fileIsItemPackage(file) {\\n  * @returns nsIFileOutputStream to write to.\\n  */\\n function openSafeFileOutputStream(file, modeFlags) {\\n-  var fos = Components.classes[\\\"@mozilla.org/network/safe-file-output-stream;1\\\"]\\n-                      .createInstance(Components.interfaces.nsIFileOutputStream);\\n+  var fos = Cc[\\\"@mozilla.org/network/safe-file-output-stream;1\\\"].\\n+            createInstance(Ci.nsIFileOutputStream);\\n   if (modeFlags === undefined)\\n     modeFlags = MODE_WRONLY | MODE_CREATE | MODE_TRUNCATE;\\n   if (!file.exists())\\n@@ -491,7 +497,7 @@ function openSafeFileOutputStream(file, modeFlags) {\\n  *          The stream to close.\\n  */\\n function closeSafeFileOutputStream(stream) {\\n-  if (stream instanceof Components.interfaces.nsISafeOutputStream)\\n+  if (stream instanceof Ci.nsISafeOutputStream)\\n     stream.finish();\\n   else\\n     stream.close();\\n@@ -516,7 +522,7 @@ function removeDirRecursive(dir) {\\n \\n   var dirEntries = dir.directoryEntries;\\n   while (dirEntries.hasMoreElements()) {\\n-    var entry = dirEntries.getNext().QueryInterface(Components.interfaces.nsIFile);\\n+    var entry = dirEntries.getNext().QueryInterface(Ci.nsIFile);\\n \\n     if (entry.isDirectory()) {\\n       removeDirRecursive(entry);\\n@@ -599,10 +605,10 @@ function stripPrefix(string, prefix) {\\n  * @returns The file URL spec to the file\\n  */\\n function getURLSpecFromFile(file) {\\n-  var ioServ = Components.classes[\\\"@mozilla.org/network/io-service;1\\\"]\\n-                         .getService(Components.interfaces.nsIIOService);\\n+  var ioServ = Cc[\\\"@mozilla.org/network/io-service;1\\\"].\\n+               getService(Ci.nsIIOService);\\n   var fph = ioServ.getProtocolHandler(\\\"file\\\")\\n-                  .QueryInterface(Components.interfaces.nsIFileProtocolHandler);\\n+                  .QueryInterface(Ci.nsIFileProtocolHandler);\\n   return fph.getURLSpecFromFile(file);\\n }\\n \\n@@ -613,8 +619,8 @@ function getURLSpecFromFile(file) {\\n  * @returns The nsIURI constructed.\\n  */\\n function newURI(spec) {\\n-  var ioServ = Components.classes[\\\"@mozilla.org/network/io-service;1\\\"]\\n-                         .getService(Components.interfaces.nsIIOService);\\n+  var ioServ = Cc[\\\"@mozilla.org/network/io-service;1\\\"].\\n+               getService(Ci.nsIIOService);\\n   return ioServ.newURI(spec, null, null);\\n }\\n \\n@@ -625,8 +631,8 @@ function newURI(spec) {\\n  * @returns The file URI to the file\\n  */\\n function getURIFromFile(file) {\\n-  var ioServ = Components.classes[\\\"@mozilla.org/network/io-service;1\\\"]\\n-                         .getService(Components.interfaces.nsIIOService);\\n+  var ioServ = Cc[\\\"@mozilla.org/network/io-service;1\\\"].\\n+               getService(Ci.nsIIOService);\\n   return ioServ.newFileURI(file);\\n }\\n \\n@@ -645,9 +651,9 @@ function inSafeMode() {\\n  *          supplied is not a RDF string literal or resource.\\n  */\\n function stringData(literalOrResource) {\\n-  if (literalOrResource instanceof Components.interfaces.nsIRDFLiteral)\\n+  if (literalOrResource instanceof Ci.nsIRDFLiteral)\\n     return literalOrResource.Value;\\n-  if (literalOrResource instanceof Components.interfaces.nsIRDFResource)\\n+  if (literalOrResource instanceof Ci.nsIRDFResource)\\n     return literalOrResource.Value;\\n   return undefined;\\n }\\n@@ -659,7 +665,7 @@ function stringData(literalOrResource) {\\n  * @return  integer value of the literal\\n  */\\n function intData(literal) {\\n-  if (literal instanceof Components.interfaces.nsIRDFInt)\\n+  if (literal instanceof Ci.nsIRDFInt)\\n     return literal.Value;\\n   return undefined;\\n }\\n@@ -752,8 +758,8 @@ function showIncompatibleError(installData) {\\n     message = extensionStrings.formatStringFromName(\\\"incompatibleMsg\\\", params, params.length);\\n   }\\n \\n-  var ps = Components.classes[\\\"@mozilla.org/embedcomp/prompt-service;1\\\"]\\n-                     .getService(Components.interfaces.nsIPromptService);\\n+  var ps = Cc[\\\"@mozilla.org/embedcomp/prompt-service;1\\\"].\\n+           getService(Ci.nsIPromptService);\\n   ps.alert(null, title, message);\\n }\\n \\n@@ -781,8 +787,8 @@ function showMessage(titleKey, titleParams, messageKey, messageParams) {\\n   }\\n   else\\n     message = extensionStrings.GetStringFromName(messageKey);\\n-  var ps = Components.classes[\\\"@mozilla.org/embedcomp/prompt-service;1\\\"]\\n-                     .getService(Components.interfaces.nsIPromptService);\\n+  var ps = Cc[\\\"@mozilla.org/embedcomp/prompt-service;1\\\"].\\n+           getService(Ci.nsIPromptService);\\n   ps.alert(null, title, message);\\n }\\n \\n@@ -796,8 +802,8 @@ function showMessage(titleKey, titleParams, messageKey, messageParams) {\\n  */\\n function showBlocklistMessage(items, fromInstall) {\\n   var win = null;\\n-  var params = Components.classes[\\\"@mozilla.org/embedcomp/dialogparam;1\\\"]\\n-                         .createInstance(Components.interfaces.nsIDialogParamBlock);\\n+  var params = Cc[\\\"@mozilla.org/embedcomp/dialogparam;1\\\"].\\n+               createInstance(Ci.nsIDialogParamBlock);\\n   params.SetInt(0, (fromInstall ? 1 : 0));\\n   params.SetInt(1, items.length);\\n   params.SetNumberStrings(items.length * 2);\\n@@ -806,13 +812,13 @@ function showBlocklistMessage(items, fromInstall) {\\n \\n   // if this was initiated from an install try to find the appropriate manager\\n   if (fromInstall) {\\n-    var wm = Components.classes[\\\"@mozilla.org/appshell/window-mediator;1\\\"]\\n-                       .getService(Components.interfaces.nsIWindowMediator);\\n+    var wm = Cc[\\\"@mozilla.org/appshell/window-mediator;1\\\"].\\n+             getService(Ci.nsIWindowMediator);\\n     win = wm.getMostRecentWindow(nsIUpdateItem.TYPE_THEME ? \\\"Extension:Manager-themes\\\" :\\n                                                             \\\"Extension:Manager-extensions\\\");\\n   }\\n-  var ww = Components.classes[\\\"@mozilla.org/embedcomp/window-watcher;1\\\"]\\n-                     .getService(Components.interfaces.nsIWindowWatcher);\\n+  var ww = Cc[\\\"@mozilla.org/embedcomp/window-watcher;1\\\"].\\n+           getService(Ci.nsIWindowWatcher);\\n   ww.openWindow(win, URI_EXTENSION_LIST_DIALOG, \\\"\\\",\\n                 \\\"chrome,centerscreen,modal,dialog,titlebar\\\", params);\\n }\\n@@ -825,8 +831,8 @@ function showBlocklistMessage(items, fromInstall) {\\n  */\\n function getZipReaderForFile(zipFile) {\\n   try {\\n-    var zipReader = Components.classes[\\\"@mozilla.org/libjar/zip-reader;1\\\"]\\n-                              .createInstance(Components.interfaces.nsIZipReader);\\n+    var zipReader = Cc[\\\"@mozilla.org/libjar/zip-reader;1\\\"].\\n+                    createInstance(Ci.nsIZipReader);\\n     zipReader.open(zipFile);\\n   }\\n   catch (e) {\\n@@ -883,7 +889,7 @@ function showOldThemeError(contentsManifest) {\\n     var elts = ctr.GetElements();\\n     var nameArc = gRDF.GetResource(CHROME_NS(\\\"displayName\\\"));\\n     while (elts.hasMoreElements()) {\\n-      var elt = elts.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var elt = elts.getNext().QueryInterface(Ci.nsIRDFResource);\\n       themeName = stringData(contentsManifest.GetTarget(elt, nameArc, true));\\n       if (themeName)\\n         break;\\n@@ -897,8 +903,8 @@ function showOldThemeError(contentsManifest) {\\n             BundleManager.appName, appVersion];\\n   var message = extensionStrings.formatStringFromName(\\\"incompatibleMsgSingleAppVersion\\\",\\n                                                       params, params.length);\\n-  var ps = Components.classes[\\\"@mozilla.org/embedcomp/prompt-service;1\\\"]\\n-                     .getService(Components.interfaces.nsIPromptService);\\n+  var ps = Cc[\\\"@mozilla.org/embedcomp/prompt-service;1\\\"].\\n+           getService(Ci.nsIPromptService);\\n   ps.alert(null, title, message);\\n }\\n \\n@@ -914,8 +920,8 @@ function getInstallManifest(file) {\\n   var arcs = ds.ArcLabelsOut(gInstallManifestRoot);\\n   if (!arcs.hasMoreElements()) {\\n     ds = null;\\n-    var uri = Components.classes[\\\"@mozilla.org/network/io-service;1\\\"]\\n-                        .getService(Components.interfaces.nsIIOService)\\n+    var uri = Cc[\\\"@mozilla.org/network/io-service;1\\\"].\\n+              getService(Ci.nsIIOService)\\n                         .newFileURI(file);\\n     var url = uri.QueryInterface(nsIURL);\\n     showMessage(\\\"malformedTitle\\\", [], \\\"malformedMessage\\\",\\n@@ -1048,16 +1054,16 @@ DirectoryInstallLocation.prototype = {\\n    * @returns A nsILocalFile object representing the linked directory.\\n    */\\n   _readDirectoryFromFile: function(file) {\\n-    var fis = Components.classes[\\\"@mozilla.org/network/file-input-stream;1\\\"]\\n-                        .createInstance(Components.interfaces.nsIFileInputStream);\\n+    var fis = Cc[\\\"@mozilla.org/network/file-input-stream;1\\\"].\\n+              createInstance(Ci.nsIFileInputStream);\\n     fis.init(file, -1, -1, false);\\n     var line = { value: \\\"\\\" };\\n     if (fis instanceof nsILineInputStream)\\n       fis.readLine(line);\\n     fis.close();\\n     if (line.value) {\\n-      var linkedDirectory = Components.classes[\\\"@mozilla.org/file/local;1\\\"]\\n-                                      .createInstance(nsILocalFile);\\n+      var linkedDirectory = Cc[\\\"@mozilla.org/file/local;1\\\"].\\n+                            createInstance(nsILocalFile);\\n       try {\\n         linkedDirectory.initWithPath(line.value);\\n       }\\n@@ -1293,20 +1299,12 @@ DirectoryInstallLocation.prototype = {\\n     }\\n   },\\n \\n-  /**\\n-   * See nsISupports.idl\\n-   */\\n-  QueryInterface: function (iid) {\\n-    if (!iid.equals(Components.interfaces.nsIInstallLocation) &&\\n-        !iid.equals(Components.interfaces.nsISupports))\\n-      throw Components.results.NS_ERROR_NO_INTERFACE;\\n-    return this;\\n-  }\\n+  QueryInterface: XPCOMUtils.generateQI([Ci.nsIInstallLocation])\\n };\\n \\n #ifdef XP_WIN\\n \\n-const nsIWindowsRegKey = Components.interfaces.nsIWindowsRegKey;\\n+const nsIWindowsRegKey = Ci.nsIWindowsRegKey;\\n \\n /**\\n  * An object that identifies the location of installed items based on entries\\n@@ -1338,8 +1336,8 @@ function WinRegInstallLocation(name, rootKey, restricted, priority) {\\n   // cases, we just leave ourselves in the empty state.\\n   try {\\n     var path = this._appKeyPath + \\\"\\\\\\\\Extensions\\\";\\n-    var key = Components.classes[\\\"@mozilla.org/windows-registry-key;1\\\"]\\n-                        .createInstance(nsIWindowsRegKey);\\n+    var key = Cc[\\\"@mozilla.org/windows-registry-key;1\\\"].\\n+              createInstance(nsIWindowsRegKey);\\n     key.open(this._rootKey, path, nsIWindowsRegKey.ACCESS_READ);\\n     this._readAddons(key);\\n   } catch (e) {\\n@@ -1386,8 +1384,8 @@ WinRegInstallLocation.prototype = {\\n     for (var i = 0; i < count; ++i) {\\n       var id = key.getValueName(i);\\n \\n-      var dir = Components.classes[\\\"@mozilla.org/file/local;1\\\"]\\n-                          .createInstance(nsILocalFile);\\n+      var dir = Cc[\\\"@mozilla.org/file/local;1\\\"].\\n+                createInstance(nsILocalFile);\\n       dir.initWithPath(key.readStringValue(id));\\n \\n       if (dir.exists() && dir.isDirectory()) {\\n@@ -1446,12 +1444,7 @@ WinRegInstallLocation.prototype = {\\n     return true;\\n   },\\n \\n-  QueryInterface: function(iid) {\\n-    if (!iid.equals(Components.interfaces.nsIInstallLocation) &&\\n-        !iid.equals(Components.interfaces.nsISupports))\\n-      throw Components.results.NS_ERROR_NO_INTERFACE;\\n-    return this;\\n-  }\\n+  QueryInterface: XPCOMUtils.generateQI([Ci.nsIInstallLocation])\\n };\\n \\n #endif\\n@@ -1670,8 +1663,8 @@ Installer.prototype = {\\n    */\\n   upgradeThemeChrome: function() {\\n     // Use the Chrome Registry API to install the theme there\\n-    var cr = Components.classes[\\\"@mozilla.org/chrome/chrome-registry;1\\\"]\\n-                       .getService(Components.interfaces.nsIToolkitChromeRegistry);\\n+    var cr = Cc[\\\"@mozilla.org/chrome/chrome-registry;1\\\"].\\n+             getService(Ci.nsIToolkitChromeRegistry);\\n     var manifestFile = this._installLocation.getItemFile(this._id, FILE_CHROME_MANIFEST);\\n     if (manifestFile.exists() ||\\n         this._id == stripPrefix(RDFURI_DEFAULT_THEME, PREFIX_ITEM_URI))\\n@@ -1745,7 +1738,7 @@ Installer.prototype = {\\n       var manifestURI = getURIFromFile(manifestFile);\\n       var files = this.metadataDS.GetTargets(gInstallManifestRoot, EM_R(\\\"file\\\"), true);\\n       while (files.hasMoreElements()) {\\n-        var file = files.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+        var file = files.getNext().QueryInterface(Ci.nsIRDFResource);\\n         var chromeFile = chromeDir.clone();\\n         var fileName = file.Value.substr(\\\"urn:mozilla:extension:file:\\\".length, file.Value.length);\\n         chromeFile.append(fileName);\\n@@ -1762,7 +1755,7 @@ Installer.prototype = {\\n         for (var i = 0; i < providers.length; ++i) {\\n           var items = this.metadataDS.GetTargets(file, providers[i], true);\\n           while (items.hasMoreElements()) {\\n-            var item = items.getNext().QueryInterface(Components.interfaces.nsIRDFLiteral);\\n+            var item = items.getNext().QueryInterface(Ci.nsIRDFLiteral);\\n             var fileURI = newURI(fileURLSpec + item.Value);\\n             // Extract the contents.rdf files instead of opening them inside of\\n             // the jar. This prevents the jar from being cached by the zip\\n@@ -1774,8 +1767,8 @@ Installer.prototype = {\\n             else\\n               contentsFileURI = fileURI;\\n \\n-            var cr = Components.classes[\\\"@mozilla.org/chrome/chrome-registry;1\\\"]\\n-                               .getService(Components.interfaces.nsIToolkitChromeRegistry);\\n+            var cr = Cc[\\\"@mozilla.org/chrome/chrome-registry;1\\\"].\\n+                     getService(Ci.nsIToolkitChromeRegistry);\\n             cr.processContentsManifest(contentsFileURI, manifestURI, fileURI, true, false);\\n           }\\n         }\\n@@ -2267,8 +2260,8 @@ var StartupCache = {\\n       // change manifest was removed. Return an empty dataset and rebuild.\\n       return;\\n     }\\n-    var fis = Components.classes[\\\"@mozilla.org/network/file-input-stream;1\\\"]\\n-                        .createInstance(Components.interfaces.nsIFileInputStream);\\n+    var fis = Cc[\\\"@mozilla.org/network/file-input-stream;1\\\"].\\n+              createInstance(Ci.nsIFileInputStream);\\n     fis.init(itemChangeManifest, -1, -1, false);\\n     if (fis instanceof nsILineInputStream) {\\n       var line = { value: \\\"\\\" };\\n@@ -2336,9 +2329,8 @@ var StartupCache = {\\n  * @constructor\\n  */\\n function ExtensionManager() {\\n-  gApp = Components.classes[\\\"@mozilla.org/xre/app-info;1\\\"]\\n-                   .getService(Components.interfaces.nsIXULAppInfo)\\n-                   .QueryInterface(Components.interfaces.nsIXULRuntime);\\n+  gApp = Cc[\\\"@mozilla.org/xre/app-info;1\\\"].\\n+         getService(Ci.nsIXULAppInfo).QueryInterface(Ci.nsIXULRuntime);\\n   gOSTarget = gApp.OS;\\n   try {\\n     gXPCOMABI = gApp.XPCOMABI;\\n@@ -2349,18 +2341,18 @@ function ExtensionManager() {\\n     // transmitted to update URLs.\\n     gXPCOMABI = UNKNOWN_XPCOM_ABI;\\n   }\\n-  gPref = Components.classes[\\\"@mozilla.org/preferences-service;1\\\"]\\n-                    .getService(Components.interfaces.nsIPrefBranch2);\\n+  gPref = Cc[\\\"@mozilla.org/preferences-service;1\\\"].\\n+          getService(Ci.nsIPrefBranch2);\\n \\n-  gOS = Components.classes[\\\"@mozilla.org/observer-service;1\\\"]\\n-                  .getService(Components.interfaces.nsIObserverService);\\n+  gOS = Cc[\\\"@mozilla.org/observer-service;1\\\"].\\n+        getService(Ci.nsIObserverService);\\n   gOS.addObserver(this, \\\"xpcom-shutdown\\\", false);\\n \\n-  gConsole = Components.classes[\\\"@mozilla.org/consoleservice;1\\\"]\\n-                       .getService(Components.interfaces.nsIConsoleService);\\n+  gConsole = Cc[\\\"@mozilla.org/consoleservice;1\\\"].\\n+             getService(Ci.nsIConsoleService);\\n \\n-  gRDF = Components.classes[\\\"@mozilla.org/rdf/rdf-service;1\\\"]\\n-                   .getService(Components.interfaces.nsIRDFService);\\n+  gRDF = Cc[\\\"@mozilla.org/rdf/rdf-service;1\\\"].\\n+         getService(Ci.nsIRDFService);\\n   gInstallManifestRoot = gRDF.GetResource(RDFURI_INSTALL_MANIFEST_ROOT);\\n \\n   // Register Global Install Location\\n@@ -2396,13 +2388,13 @@ function ExtensionManager() {\\n #endif\\n \\n   // Register Additional Install Locations\\n-  var categoryManager = Components.classes[\\\"@mozilla.org/categorymanager;1\\\"]\\n-                                  .getService(Components.interfaces.nsICategoryManager);\\n+  var categoryManager = Cc[\\\"@mozilla.org/categorymanager;1\\\"].\\n+                        getService(Ci.nsICategoryManager);\\n   var locations = categoryManager.enumerateCategory(CATEGORY_INSTALL_LOCATIONS);\\n   while (locations.hasMoreElements()) {\\n-    var entry = locations.getNext().QueryInterface(Components.interfaces.nsISupportsCString).data;\\n+    var entry = locations.getNext().QueryInterface(Ci.nsISupportsCString).data;\\n     var contractID = categoryManager.getCategoryEntry(CATEGORY_INSTALL_LOCATIONS, entry);\\n-    var location = Components.classes[contractID].getService(nsIInstallLocation);\\n+    var location = Cc[contractID].getService(nsIInstallLocation);\\n     InstallLocations.put(location);\\n   }\\n }\\n@@ -2459,8 +2451,8 @@ ExtensionManager.prototype = {\\n   _updateLocale: function() {\\n     try {\\n       if (gPref.getBoolPref(PREF_MATCH_OS_LOCALE)) {\\n-        var localeSvc = Components.classes[\\\"@mozilla.org/intl/nslocaleservice;1\\\"]\\n-                                  .getService(Components.interfaces.nsILocaleService);\\n+        var localeSvc = Cc[\\\"@mozilla.org/intl/nslocaleservice;1\\\"].\\n+                        getService(Ci.nsILocaleService);\\n         gLocale = localeSvc.getLocaleComponentForUserAgent();\\n         return;\\n       }\\n@@ -2483,7 +2475,7 @@ ExtensionManager.prototype = {\\n     var ctr = getContainer(ds, ds._itemRoot);\\n     var elements = ctr.GetElements();\\n     while (elements.hasMoreElements()) {\\n-      var itemResource = elements.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var itemResource = elements.getNext().QueryInterface(Ci.nsIRDFResource);\\n \\n       // App disable or enable items as necessary\\n       // _appEnableItem and _appDisableItem will do nothing if the item is already\\n@@ -2530,12 +2522,12 @@ ExtensionManager.prototype = {\\n     const EMURL = \\\"chrome://mozapps/content/extensions/extensions.xul\\\";\\n     const EMFEATURES = \\\"chrome,centerscreen,extra-chrome,dialog,resizable,modal\\\";\\n \\n-    var ww = Components.classes[\\\"@mozilla.org/embedcomp/window-watcher;1\\\"]\\n-                       .getService(Components.interfaces.nsIWindowWatcher);\\n-    var param = Components.classes[\\\"@mozilla.org/supports-array;1\\\"]\\n-                          .createInstance(Components.interfaces.nsISupportsArray);\\n-    var arg = Components.classes[\\\"@mozilla.org/supports-string;1\\\"]\\n-                        .createInstance(Components.interfaces.nsISupportsString);\\n+    var ww = Cc[\\\"@mozilla.org/embedcomp/window-watcher;1\\\"].\\n+             getService(Ci.nsIWindowWatcher);\\n+    var param = Cc[\\\"@mozilla.org/supports-array;1\\\"].\\n+                createInstance(Ci.nsISupportsArray);\\n+    var arg = Cc[\\\"@mozilla.org/supports-string;1\\\"].\\n+              createInstance(Ci.nsISupportsString);\\n     arg.data = \\\"updates-only\\\";\\n     param.AppendElement(arg);\\n     ww.openWindow(null, EMURL, null, EMFEATURES, param);\\n@@ -2650,9 +2642,8 @@ ExtensionManager.prototype = {\\n    */\\n   _startTimers: function() {\\n     // Register a background update check timer\\n-    var tm =\\n-        Components.classes[\\\"@mozilla.org/updates/timer-manager;1\\\"]\\n-                  .getService(Components.interfaces.nsIUpdateTimerManager);\\n+    var tm = Cc[\\\"@mozilla.org/updates/timer-manager;1\\\"].\\n+             getService(Ci.nsIUpdateTimerManager);\\n     var interval = getPref(\\\"getIntPref\\\", PREF_EM_UPDATE_INTERVAL, 86400);\\n     tm.registerTimer(\\\"addon-background-update-timer\\\", this, interval);\\n   },\\n@@ -2881,8 +2872,8 @@ ExtensionManager.prototype = {\\n       * @returns A nsIDialogParamBlock loaded with the strings and dialog state.\\n       */\\n     function getParamBlock(strings) {\\n-      var dpb = Components.classes[\\\"@mozilla.org/embedcomp/dialogparam;1\\\"]\\n-                          .createInstance(Components.interfaces.nsIDialogParamBlock);\\n+      var dpb = Cc[\\\"@mozilla.org/embedcomp/dialogparam;1\\\"].\\n+                createInstance(Ci.nsIDialogParamBlock);\\n       // OK and Cancel Buttons\\n       dpb.SetInt(0, 2);\\n       // Number of Strings\\n@@ -2892,12 +2883,12 @@ ExtensionManager.prototype = {\\n       for (var i = 0; i < strings.length; ++i)\\n         dpb.SetString(i, strings[i]);\\n \\n-      var supportsString = Components.classes[\\\"@mozilla.org/supports-string;1\\\"]\\n-                                     .createInstance(Components.interfaces.nsISupportsString);\\n+      var supportsString = Cc[\\\"@mozilla.org/supports-string;1\\\"].\\n+                           createInstance(Ci.nsISupportsString);\\n       var bundle = BundleManager.getBundle(URI_EXTENSIONS_PROPERTIES);\\n       supportsString.data = bundle.GetStringFromName(\\\"droppedInWarning\\\");\\n-      var objs = Components.classes[\\\"@mozilla.org/array;1\\\"]\\n-                           .createInstance(Components.interfaces.nsIMutableArray);\\n+      var objs = Cc[\\\"@mozilla.org/array;1\\\"].\\n+                 createInstance(Ci.nsIMutableArray);\\n       objs.appendElement(supportsString, false);\\n       dpb.objects = objs;\\n       return dpb;\\n@@ -2919,12 +2910,12 @@ ExtensionManager.prototype = {\\n         return;\\n \\n       var dpb = getParamBlock(xpinstallStrings);\\n-      var ifptr = Components.classes[\\\"@mozilla.org/supports-interface-pointer;1\\\"]\\n-                            .createInstance(Components.interfaces.nsISupportsInterfacePointer);\\n+      var ifptr = Cc[\\\"@mozilla.org/supports-interface-pointer;1\\\"].\\n+                  createInstance(Ci.nsISupportsInterfacePointer);\\n       ifptr.data = dpb;\\n-      ifptr.dataIID = Components.interfaces.nsIDialogParamBlock;\\n-      var ww = Components.classes[\\\"@mozilla.org/embedcomp/window-watcher;1\\\"]\\n-                          .getService(Components.interfaces.nsIWindowWatcher);\\n+      ifptr.dataIID = Ci.nsIDialogParamBlock;\\n+      var ww = Cc[\\\"@mozilla.org/embedcomp/window-watcher;1\\\"].\\n+               getService(Ci.nsIWindowWatcher);\\n       ww.openWindow(null, URI_XPINSTALL_CONFIRM_DIALOG,\\n                     \\\"\\\", \\\"chrome,centerscreen,modal,dialog,titlebar\\\", ifptr);\\n       if (!dpb.GetInt(0)) {\\n@@ -3212,8 +3203,8 @@ ExtensionManager.prototype = {\\n           var contentsURI = newURI(\\\"jar:\\\" + jarFileURI.spec + \\\"!/\\\");\\n \\n           // Use the Chrome Registry API to install the theme there\\n-          var cr = Components.classes[\\\"@mozilla.org/chrome/chrome-registry;1\\\"]\\n-                            .getService(Components.interfaces.nsIToolkitChromeRegistry);\\n+          var cr = Cc[\\\"@mozilla.org/chrome/chrome-registry;1\\\"].\\n+                   getService(Ci.nsIToolkitChromeRegistry);\\n           cr.processContentsManifest(contentsURI, manifestURI, contentsURI, false, true);\\n         }\\n         entries.close();\\n@@ -3369,7 +3360,7 @@ ExtensionManager.prototype = {\\n           var ctr = getContainer(ds, ds._itemRoot);\\n           var elements = ctr.GetElements();\\n           while (elements.hasMoreElements()) {\\n-            var itemResource = elements.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+            var itemResource = elements.getNext().QueryInterface(Ci.nsIRDFResource);\\n \\n             // Ensure appDisabled is in the correct state.\\n             id = stripPrefix(itemResource.Value, PREFIX_ITEM_URI);\\n@@ -3394,8 +3385,8 @@ ExtensionManager.prototype = {\\n       // Upgrade contents.rdf files to the new chrome.manifest format for\\n       // existing Extensions and Themes\\n       if (this._upgradeChrome()) {\\n-        var cr = Components.classes[\\\"@mozilla.org/chrome/chrome-registry;1\\\"]\\n-                           .getService(Components.interfaces.nsIChromeRegistry);\\n+        var cr = Cc[\\\"@mozilla.org/chrome/chrome-registry;1\\\"].\\n+                 getService(Ci.nsIChromeRegistry);\\n         cr.checkForNewChrome();\\n       }\\n \\n@@ -3457,7 +3448,7 @@ ExtensionManager.prototype = {\\n     ds.beginUpdateBatch();\\n     var allResources = ds.GetAllResources();\\n     while (allResources.hasMoreElements()) {\\n-      var res = allResources.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var res = allResources.getNext().QueryInterface(Ci.nsIRDFResource);\\n       if (ds.GetTarget(res, EM_R(\\\"downloadURL\\\"), true) ||\\n           (!ds.GetTarget(res, EM_R(\\\"installLocation\\\"), true) &&\\n           stringData(ds.GetTarget(res, EM_R(\\\"appDisabled\\\"), true)) == \\\"true\\\"))\\n@@ -3469,7 +3460,7 @@ ExtensionManager.prototype = {\\n     var ctr = getContainer(ds, ds._itemRoot);\\n     var elements = ctr.GetElements();\\n     while (elements.hasMoreElements()) {\\n-      var itemResource = elements.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var itemResource = elements.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var id = stripPrefix(itemResource.Value, PREFIX_ITEM_URI);\\n       if (ds.getItemProperty(id, \\\"appManaged\\\") == \\\"true\\\") {\\n         // Force an update of the metadata for appManaged extensions since the\\n@@ -3496,7 +3487,7 @@ ExtensionManager.prototype = {\\n         if (installRDF.exists()) {\\n           var metadataDS = getInstallManifest(installRDF);\\n           var literal = metadataDS.GetTarget(gInstallManifestRoot, EM_R(\\\"updateKey\\\"), true);\\n-          if (literal && literal instanceof Components.interfaces.nsIRDFLiteral)\\n+          if (literal && literal instanceof Ci.nsIRDFLiteral)\\n             ds.setItemProperty(id, EM_R(\\\"updateKey\\\"), literal);\\n         }\\n       }\\n@@ -3538,8 +3529,8 @@ ExtensionManager.prototype = {\\n    * Shows the \\\"Compatibility Updates\\\" UI\\n    */\\n   _showMismatchWindow: function(items) {\\n-    var wm = Components.classes[\\\"@mozilla.org/appshell/window-mediator;1\\\"]\\n-                       .getService(Components.interfaces.nsIWindowMediator);\\n+    var wm = Cc[\\\"@mozilla.org/appshell/window-mediator;1\\\"].\\n+             getService(Ci.nsIWindowMediator);\\n     var wizard = wm.getMostRecentWindow(\\\"Update:Wizard\\\");\\n     if (wizard)\\n       wizard.focus();\\n@@ -3547,8 +3538,8 @@ ExtensionManager.prototype = {\\n       var features = \\\"chrome,centerscreen,dialog,titlebar,modal\\\";\\n       // This *must* be modal so as not to break startup! This code is invoked before\\n       // the main event loop is initiated (via checkForMismatches).\\n-      var ww = Components.classes[\\\"@mozilla.org/embedcomp/window-watcher;1\\\"]\\n-                         .getService(Components.interfaces.nsIWindowWatcher);\\n+      var ww = Cc[\\\"@mozilla.org/embedcomp/window-watcher;1\\\"].\\n+               getService(Ci.nsIWindowWatcher);\\n       ww.openWindow(null, URI_EXTENSION_UPDATE_DIALOG, \\\"\\\", features, null);\\n     }\\n   },\\n@@ -3711,7 +3702,7 @@ ExtensionManager.prototype = {\\n       var targetApps = oldExtensionsDS.GetTargets(oldRes, EM_R(\\\"targetApplication\\\"), true);\\n       while (targetApps.hasMoreElements()) {\\n         var targetApp = targetApps.getNext();\\n-        if (targetApp instanceof Components.interfaces.nsIRDFResource) {\\n+        if (targetApp instanceof Ci.nsIRDFResource) {\\n           try {\\n             var foundAppID = stringData(oldExtensionsDS.GetTarget(targetApp, EM_R(\\\"id\\\"), true));\\n             // Different target application?  (Note:  v1.0 didn't support toolkit app ID)\\n@@ -3920,7 +3911,7 @@ ExtensionManager.prototype = {\\n                                                 true);\\n     while (targetApps.hasMoreElements()) {\\n       var targetApp = targetApps.getNext();\\n-      if (targetApp instanceof Components.interfaces.nsIRDFResource) {\\n+      if (targetApp instanceof Ci.nsIRDFResource) {\\n         try {\\n           var data = { id        : readTAProperty(targetApp, \\\"id\\\"),\\n                        minVersion: readTAProperty(targetApp, \\\"minVersion\\\"),\\n@@ -3998,8 +3989,8 @@ ExtensionManager.prototype = {\\n     \\n     // Check if the item is blocklisted.\\n     if (!gBlocklist)\\n-      gBlocklist = Components.classes[\\\"@mozilla.org/extensions/blocklist;1\\\"]\\n-                             .getService(Components.interfaces.nsIBlocklistService);\\n+      gBlocklist = Cc[\\\"@mozilla.org/extensions/blocklist;1\\\"].\\n+                   getService(Ci.nsIBlocklistService);\\n     if (gBlocklist.isAddonBlocklisted(installData.id, installData.version,\\n                                       undefined, undefined))\\n       installData.error = INSTALLERROR_BLOCKLISTED;\\n@@ -4113,14 +4104,14 @@ ExtensionManager.prototype = {\\n         var targetApp = installData.targetApps[i];\\n         if (targetApp.id != gApp.ID && targetApp.id != TOOLKIT_ID) {\\n         /* XXXben uncomment when this works!\\n-          var settingsThingy = Components.classes[]\\n-                                        .getService(Components.interfaces.nsIXULRunnerSettingsThingy);\\n+          var settingsThingy = Cc[].\\n+                               getService(Ci.nsIXULRunnerSettingsThingy);\\n           try {\\n             var appPrefix = \\\"SOFTWARE\\\\\\\\Mozilla\\\\\\\\XULRunner\\\\\\\\Applications\\\\\\\\\\\";\\n             var branch = settingsThingy.getBranch(appPrefix + targetApp.id);\\n             var path = branch.getProperty(\\\"ExtensionsLocation\\\");\\n-            var destination = Components.classes[\\\"@mozilla.org/file/local;1\\\"]\\n-                                        .createInstance(nsILocalFile);\\n+            var destination = Cc[\\\"@mozilla.org/file/local;1\\\"].\\n+                              createInstance(nsILocalFile);\\n             destination.initWithPath(path);\\n             xpiFile.copyTo(file, xpiFile.leafName);\\n           }\\n@@ -4261,7 +4252,7 @@ ExtensionManager.prototype = {\\n        */\\n       onAddonUpdateStarted: function(addon) {\\n         if (!addon)\\n-          throw Components.results.NS_ERROR_INVALID_ARG;\\n+          throw Cr.NS_ERROR_INVALID_ARG;\\n \\n         LOG(\\\"Phone Home Listener: Update For \\\" + addon.id + \\\" started\\\");\\n         em.datasource.addIncompatibleUpdateItem(addon.name, this._xpi.path,\\n@@ -4273,7 +4264,7 @@ ExtensionManager.prototype = {\\n        */\\n       onAddonUpdateEnded: function(addon, status) {\\n         if (!addon)\\n-          throw Components.results.NS_ERROR_INVALID_ARG;\\n+          throw Cr.NS_ERROR_INVALID_ARG;\\n \\n         LOG(\\\"Phone Home Listener: Update For \\\" + addon.id + \\\" ended, status = \\\" + status);\\n         em.datasource.removeDownload(this._xpi.path);\\n@@ -4308,7 +4299,7 @@ ExtensionManager.prototype = {\\n           }\\n           // Prevent the datasource file from being lazily recreated after\\n           // it is deleted by calling Flush.\\n-          this._installManifest.QueryInterface(Components.interfaces.nsIRDFRemoteDataSource);\\n+          this._installManifest.QueryInterface(Ci.nsIRDFRemoteDataSource);\\n           this._installManifest.Flush();\\n         }\\n         else {\\n@@ -4319,15 +4310,7 @@ ExtensionManager.prototype = {\\n         }\\n       },\\n \\n-      /**\\n-       * See nsISupports.idl\\n-       */\\n-      QueryInterface: function(iid) {\\n-        if (!iid.equals(Components.interfaces.nsIAddonUpdateCheckListener) &&\\n-            !iid.equals(Components.interfaces.nsISupports))\\n-          throw Components.results.NS_ERROR_NO_INTERFACE;\\n-        return this;\\n-      }\\n+      QueryInterface: XPCOMUtils.generateQI([Ci.nsIAddonUpdateCheckListener])\\n     }\\n \\n     var installManifestFile = extractRDFFileToTempDir(aXPIFile, FILE_INSTALL_MANIFEST, true);\\n@@ -4525,10 +4508,10 @@ ExtensionManager.prototype = {\\n     var localeProp = EM_R(\\\"locale\\\");\\n     var localizations = installManifest.GetTargets(gInstallManifestRoot, localizationProp, true);\\n     while (localizations.hasMoreElements()) {\\n-      var localization = localizations.getNext().QueryInterface(Components.interfaces.nsIRDFNode);\\n+      var localization = localizations.getNext().QueryInterface(Ci.nsIRDFNode);\\n       var locales = installManifest.GetTargets(localization, localeProp, true);\\n       while (locales.hasMoreElements()) {\\n-        var locale = locales.getNext().QueryInterface(Components.interfaces.nsIRDFNode);\\n+        var locale = locales.getNext().QueryInterface(Ci.nsIRDFNode);\\n         if (stringData(locale) == gLocale)\\n           name = installManifest.GetTarget(localization, EM_R(\\\"name\\\"), true);\\n       }\\n@@ -5167,12 +5150,12 @@ ExtensionManager.prototype = {\\n    */\\n   update: function(items, itemCount, updateCheckType, listener) {\\n     if (itemCount == 0)\\n-      throw Components.results.NS_ERROR_ILLEGAL_VALUE;\\n+      throw Cr.NS_ERROR_ILLEGAL_VALUE;\\n \\n     for (i = 0; i < itemCount; ++i) {\\n       var currItem = items[i];\\n       if (!currItem)\\n-        throw Components.results.NS_ERROR_ILLEGAL_VALUE;\\n+        throw Cr.NS_ERROR_ILLEGAL_VALUE;\\n     }\\n \\n     var appID = gApp.ID;\\n@@ -5341,7 +5324,7 @@ ExtensionManager.prototype = {\\n #endif\\n       if (!result)\\n         this._cancelDownloads();\\n-      if (subject instanceof Components.interfaces.nsISupportsPRBool)\\n+      if (subject instanceof Ci.nsISupportsPRBool)\\n         subject.data = result;\\n     }\\n   },\\n@@ -5363,7 +5346,7 @@ ExtensionManager.prototype = {\\n                                             \\\"dontGoOfflineButton\\\");\\n       if (!result)\\n         this._cancelDownloads();\\n-      if (subject instanceof Components.interfaces.nsISupportsPRBool)\\n+      if (subject instanceof Ci.nsISupportsPRBool)\\n         subject.data = result;\\n     }\\n   },\\n@@ -5410,12 +5393,12 @@ ExtensionManager.prototype = {\\n     }\\n     var dontQuitButton = bundle.GetStringFromName(dontCancelButton);\\n \\n-    var wm = Components.classes[\\\"@mozilla.org/appshell/window-mediator;1\\\"]\\n-                       .getService(Components.interfaces.nsIWindowMediator);\\n+    var wm = Cc[\\\"@mozilla.org/appshell/window-mediator;1\\\"].\\n+             getService(Ci.nsIWindowMediator);\\n     var win = wm.getMostRecentWindow(\\\"Extension:Manager\\\");\\n-    const nsIPromptService = Components.interfaces.nsIPromptService;\\n-    var ps = Components.classes[\\\"@mozilla.org/embedcomp/prompt-service;1\\\"]\\n-                       .getService(nsIPromptService);\\n+    const nsIPromptService = Ci.nsIPromptService;\\n+    var ps = Cc[\\\"@mozilla.org/embedcomp/prompt-service;1\\\"].\\n+             getService(nsIPromptService);\\n     var flags = (nsIPromptService.BUTTON_TITLE_IS_STRING * nsIPromptService.BUTTON_POS_0) +\\n                 (nsIPromptService.BUTTON_TITLE_IS_STRING * nsIPromptService.BUTTON_POS_1);\\n     var rv = ps.confirmEx(win, title, message, flags, quitButton, dontQuitButton, null, null, { });\\n@@ -5425,12 +5408,12 @@ ExtensionManager.prototype = {\\n   /* See nsIExtensionManager.idl */\\n   addDownloads: function(items, itemCount, fromChrome) {\\n     if (itemCount == 0)\\n-      throw Components.results.NS_ERROR_ILLEGAL_VALUE;\\n+      throw Cr.NS_ERROR_ILLEGAL_VALUE;\\n \\n     for (i = 0; i < itemCount; ++i) {\\n       var currItem = items[i];\\n       if (!currItem)\\n-        throw Components.results.NS_ERROR_ILLEGAL_VALUE;\\n+        throw Cr.NS_ERROR_ILLEGAL_VALUE;\\n     }\\n \\n     var ds = this.datasource;\\n@@ -5468,9 +5451,8 @@ ExtensionManager.prototype = {\\n \\n     if (fromChrome) {\\n       // Initiate an install from chrome\\n-      var xpimgr =\\n-          Components.classes[\\\"@mozilla.org/xpinstall/install-manager;1\\\"].\\n-          createInstance(Components.interfaces.nsIXPInstallManager);\\n+      var xpimgr = Cc[\\\"@mozilla.org/xpinstall/install-manager;1\\\"].\\n+                   createInstance(Ci.nsIXPInstallManager);\\n       xpimgr.initManagerWithHashes(urls, hashes, urls.length, txn);\\n     }\\n     else\\n@@ -5525,7 +5507,7 @@ ExtensionManager.prototype = {\\n       this._updateListeners[i].onStateChange(addon, state, value);\\n     var ds = this.datasource;\\n     var id = addon.id != addon.xpiURL ? PREFIX_ITEM_URI + addon.id : addon.xpiURL;\\n-    const nsIXPIProgressDialog = Components.interfaces.nsIXPIProgressDialog;\\n+    const nsIXPIProgressDialog = Ci.nsIXPIProgressDialog;\\n     switch (state) {\\n     case nsIXPIProgressDialog.DOWNLOAD_START:\\n       ds.updateDownloadState(id, \\\"downloading\\\");\\n@@ -5613,48 +5595,28 @@ ExtensionManager.prototype = {\\n    */\\n   get datasource() {\\n     this._ensureDS();\\n-    return this._ds.QueryInterface(Components.interfaces.nsIRDFDataSource);\\n+    return this._ds.QueryInterface(Ci.nsIRDFDataSource);\\n   },\\n \\n-  /**\\n-   * See nsIClassInfo.idl\\n-   */\\n+  // nsIClassInfo\\n+  flags: Ci.nsIClassInfo.SINGLETON,\\n+  implementationLanguage: Ci.nsIProgrammingLanguage.JAVASCRIPT,\\n+  getHelperForLanguage: function(language) null,\\n   getInterfaces: function(count) {\\n-    var interfaces = [Components.interfaces.nsIExtensionManager,\\n-                      Components.interfaces.nsIXPIProgressDialog,\\n-                      Components.interfaces.nsIObserver];\\n+    var interfaces = [Ci.nsIExtensionManager, Ci.nsIObserver];\\n     count.value = interfaces.length;\\n     return interfaces;\\n   },\\n-  getHelperForLanguage: function(language) {\\n-    return null;\\n-  },\\n-  get contractID() {\\n-    return \\\"@mozilla.org/extensions/manager;1\\\";\\n-  },\\n-  get classDescription() {\\n-    return \\\"Extension Manager\\\";\\n-  },\\n-  get classID() {\\n-    return Components.ID(\\\"{8A115FAA-7DCB-4e8f-979B-5F53472F51CF}\\\");\\n-  },\\n-  get implementationLanguage() {\\n-    return Components.interfaces.nsIProgrammingLanguage.JAVASCRIPT;\\n-  },\\n-  get flags() {\\n-    return Components.interfaces.nsIClassInfo.SINGLETON;\\n-  },\\n \\n-  /* See nsISupports.idl */\\n-  QueryInterface: function(iid) {\\n-    if (!iid.equals(Components.interfaces.nsIExtensionManager) &&\\n-        !iid.equals(Components.interfaces.nsITimerCallback) &&\\n-        !iid.equals(Components.interfaces.nsIObserver) &&\\n-        !iid.equals(Components.interfaces.nsIClassInfo) &&\\n-        !iid.equals(Components.interfaces.nsISupports))\\n-      throw Components.results.NS_ERROR_NO_INTERFACE;\\n-    return this;\\n-  }\\n+  classDescription: \\\"Extension Manager\\\",\\n+  contractID: \\\"@mozilla.org/extensions/manager;1\\\",\\n+  classID: Components.ID(\\\"{8A115FAA-7DCB-4e8f-979B-5F53472F51CF}\\\"),\\n+  _xpcom_categories: [{ category: \\\"app-startup\\\", service: true }],\\n+  _xpcom_factory: EmFactory,\\n+  QueryInterface: XPCOMUtils.generateQI([Ci.nsIExtensionManager,\\n+                                         Ci.nsITimerCallback,\\n+                                         Ci.nsIObserver,\\n+                                         Ci.nsIClassInfo])\\n };\\n \\n /**\\n@@ -5740,14 +5702,7 @@ ItemDownloadTransaction.prototype = {\\n     this._manager.onProgress(this._downloads[index].addon, value, maxValue);\\n   },\\n \\n-  /////////////////////////////////////////////////////////////////////////////\\n-  // nsISupports\\n-  QueryInterface: function(iid) {\\n-    if (!iid.equals(Components.interfaces.nsIXPIProgressDialog) &&\\n-        !iid.equals(Components.interfaces.nsISupports))\\n-      throw Components.results.NS_ERROR_NO_INTERFACE;\\n-    return this;\\n-  }\\n+  QueryInterface: XPCOMUtils.generateQI([Ci.nsIXPIProgressDialog])\\n };\\n \\n /**\\n@@ -5925,8 +5880,8 @@ ExtensionItemUpdater.prototype = {\\n       return false;\\n \\n     if (!gBlocklist)\\n-      gBlocklist = Components.classes[\\\"@mozilla.org/extensions/blocklist;1\\\"]\\n-                             .getService(Components.interfaces.nsIBlocklistService);\\n+      gBlocklist = Cc[\\\"@mozilla.org/extensions/blocklist;1\\\"].\\n+                   getService(Ci.nsIBlocklistService);\\n     if (gBlocklist.isAddonBlocklisted(aLocalItem.id, aRemoteItem.version,\\n                                       undefined, undefined))\\n       return false;\\n@@ -6037,14 +5992,14 @@ RDFItemUpdater.prototype = {\\n     // install manifest, 3) the default configuration\\n     try {\\n       var dsURI = gPref.getComplexValue(PREF_EM_ITEM_UPDATE_URL.replace(/%UUID%/, aItem.id),\\n-                                        Components.interfaces.nsIPrefLocalizedString).data;\\n+                                        Ci.nsIPrefLocalizedString).data;\\n     }\\n     catch (e) { }\\n     if (!dsURI)\\n       dsURI = aItem.updateRDF;\\n     if (!dsURI) {\\n       dsURI = gPref.getComplexValue(PREF_UPDATE_DEFAULT_URL,\\n-                                    Components.interfaces.nsIPrefLocalizedString).data;\\n+                                    Ci.nsIPrefLocalizedString).data;\\n     }\\n     dsURI = dsURI.replace(/%ITEM_ID%/g, aItem.id);\\n     dsURI = dsURI.replace(/%ITEM_VERSION%/g, aItem.version);\\n@@ -6061,14 +6016,14 @@ RDFItemUpdater.prototype = {\\n     var catMan = null;\\n     dsURI = dsURI.replace(/%(\\\\w{3,})%/g, function(match, param) {\\n       if (!catMan) {\\n-        catMan = Components.classes[\\\"@mozilla.org/categorymanager;1\\\"]\\n-                           .getService(Components.interfaces.nsICategoryManager);\\n+        catMan = Cc[\\\"@mozilla.org/categorymanager;1\\\"].\\n+                 getService(Ci.nsICategoryManager);\\n       }\\n \\n       try {\\n         var contractID = catMan.getCategoryEntry(CATEGORY_UPDATE_PARAMS, param);\\n-        var paramHandler = Components.classes[contractID]\\n-                                     .getService(Components.interfaces.nsIPropertyBag2);\\n+        var paramHandler = Cc[contractID].\\n+                           getService(Ci.nsIPropertyBag2);\\n         return paramHandler.getPropertyAsAString(param);\\n       }\\n       catch(e) {\\n@@ -6094,14 +6049,14 @@ RDFItemUpdater.prototype = {\\n     LOG(\\\"RDFItemUpdater:checkForUpdates sending a request to server for: \\\" +\\n         uri.spec + \\\", item = \\\" + aItem.objectSource);\\n \\n-    var request = Components.classes[\\\"@mozilla.org/xmlextras/xmlhttprequest;1\\\"]\\n-                            .createInstance(Components.interfaces.nsIXMLHttpRequest)\\n-                            .QueryInterface(Components.interfaces.nsIJSXMLHttpRequest);\\n+    var request = Cc[\\\"@mozilla.org/xmlextras/xmlhttprequest;1\\\"].\\n+                  createInstance(Ci.nsIXMLHttpRequest).\\n+                  QueryInterface(Ci.nsIJSXMLHttpRequest);\\n     request.open(\\\"GET\\\", uri.spec, true);\\n     request.channel.notificationCallbacks = new BadCertHandler();\\n     request.overrideMimeType(\\\"text/xml\\\");\\n-    request.channel.loadFlags |= Components.interfaces.nsIRequest.LOAD_BYPASS_CACHE;\\n-    request.QueryInterface(Components.interfaces.nsIJSXMLHttpRequest);\\n+    request.channel.loadFlags |= Ci.nsIRequest.LOAD_BYPASS_CACHE;\\n+    request.QueryInterface(Ci.nsIJSXMLHttpRequest);\\n \\n     var self = this;\\n     request.onerror     = function(event) { self.onXMLError(event, aItem);    };\\n@@ -6142,10 +6097,10 @@ RDFItemUpdater.prototype = {\\n       return;\\n     }\\n \\n-    var rdfParser = Components.classes[\\\"@mozilla.org/rdf/xml-parser;1\\\"]\\n-                              .createInstance(Components.interfaces.nsIRDFXMLParser)\\n-    var ds = Components.classes[\\\"@mozilla.org/rdf/datasource;1?name=in-memory-datasource\\\"]\\n-                       .createInstance(Components.interfaces.nsIRDFDataSource);\\n+    var rdfParser = Cc[\\\"@mozilla.org/rdf/xml-parser;1\\\"].\\n+                    createInstance(Ci.nsIRDFXMLParser)\\n+    var ds = Cc[\\\"@mozilla.org/rdf/datasource;1?name=in-memory-datasource\\\"].\\n+             createInstance(Ci.nsIRDFDataSource);\\n     rdfParser.parseString(ds, request.channel.URI, request.responseText);\\n \\n     this.onDatasourceLoaded(ds, aItem);\\n@@ -6158,7 +6113,7 @@ RDFItemUpdater.prototype = {\\n       var status = request.status;\\n     }\\n     catch (e) {\\n-      request = aEvent.target.channel.QueryInterface(Components.interfaces.nsIRequest);\\n+      request = aEvent.target.channel.QueryInterface(Ci.nsIRequest);\\n       status = request.status;\\n     }\\n     // this can fail when a network connection is not present.\\n@@ -6244,8 +6199,8 @@ RDFItemUpdater.prototype = {\\n         var serializer = new RDFSerializer();\\n         try {\\n           var updateString = serializer.serializeResource(aDatasource, extensionRes);\\n-          var verifier = Components.classes[\\\"@mozilla.org/security/datasignatureverifier;1\\\"]\\n-                                   .getService(Components.interfaces.nsIDataSignatureVerifier);\\n+          var verifier = Cc[\\\"@mozilla.org/security/datasignatureverifier;1\\\"].\\n+                         getService(Ci.nsIDataSignatureVerifier);\\n           try {\\n             if (!verifier.verifyData(updateString, signature, aLocalItem.updateKey)) {\\n               LOG(\\\"RDFItemUpdater:onDatasourceLoaded: Update manifest for \\\" +\\n@@ -6340,7 +6295,7 @@ RDFItemUpdater.prototype = {\\n       var property = gRDF.GetResource(EM_NS(aProperty));\\n       rv = stringData(aDataSource.GetTarget(aSourceResource, property, true));\\n       if (rv === undefined)\\n-        throw Components.results.NS_ERROR_FAILURE;\\n+        throw Cr.NS_ERROR_FAILURE;\\n     }\\n     catch (e) {\\n       // XXXben show console message \\\"aProperty\\\" not found on aSourceResource.\\n@@ -6369,7 +6324,7 @@ RDFItemUpdater.prototype = {\\n     var updates = aDataSource.GetTarget(extensionRes, updatesArc, true);\\n \\n     try {\\n-      updates = updates.QueryInterface(Components.interfaces.nsIRDFResource);\\n+      updates = updates.QueryInterface(Ci.nsIRDFResource);\\n     }\\n     catch (e) {\\n       LOG(\\\"RDFItemUpdater:_parseV20UpdateInfo: No updates were found for:\\\\r\\\\n\\\" +\\n@@ -6387,8 +6342,8 @@ RDFItemUpdater.prototype = {\\n     // Track the newest update found\\n     var updatedItem = null;\\n \\n-    var cu = Components.classes[\\\"@mozilla.org/rdf/container-utils;1\\\"]\\n-                       .getService(Components.interfaces.nsIRDFContainerUtils);\\n+    var cu = Cc[\\\"@mozilla.org/rdf/container-utils;1\\\"].\\n+             getService(Ci.nsIRDFContainerUtils);\\n     if (cu.IsContainer(aDataSource, updates)) {\\n       var ctr = getContainer(aDataSource, updates);\\n \\n@@ -6397,7 +6352,7 @@ RDFItemUpdater.prototype = {\\n         // There are two different methodologies for collecting version\\n         // information depending on whether or not we've been invoked in\\n         // \\\"version updates only\\\" mode or \\\"version+newest\\\" mode.\\n-        var version = versions.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+        var version = versions.getNext().QueryInterface(Ci.nsIRDFResource);\\n         var foundItem = this._parseV20Update(aDataSource, version, aLocalItem,\\n                                              updatedItem ? updatedItem.version : aLocalItem.version,\\n                                              aUpdateCheckType);\\n@@ -6447,7 +6402,7 @@ RDFItemUpdater.prototype = {\\n     // Track the best update we have found so far\\n     var newestUpdateItem = null;\\n     while (targetApps.hasMoreElements()) {\\n-      var targetApp = targetApps.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var targetApp = targetApps.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var appID = this._getPropertyFromResource(aDataSource, targetApp, \\\"id\\\", aLocalItem);\\n       if (appID != this._updater._appID && appID != TOOLKIT_ID)\\n         continue;\\n@@ -6508,8 +6463,8 @@ RDFItemUpdater.prototype = {\\n  */\\n function RDFSerializer()\\n {\\n-  this.cUtils = Components.classes[\\\"@mozilla.org/rdf/container-utils;1\\\"]\\n-                          .getService(Components.interfaces.nsIRDFContainerUtils);\\n+  this.cUtils = Cc[\\\"@mozilla.org/rdf/container-utils;1\\\"].\\n+                getService(Ci.nsIRDFContainerUtils);\\n   this.resources = [];\\n }\\n \\n@@ -6544,7 +6499,7 @@ RDFSerializer.prototype = {\\n     var result = \\\"\\\";\\n     var items = container.GetElements();\\n     while (items.hasMoreElements()) {\\n-      var item = items.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var item = items.getNext().QueryInterface(Ci.nsIRDFResource);\\n       result += indent + \\\"<RDF:li>\\\\n\\\"\\n       result += this.serializeResource(ds, item, indent + this.INDENT);\\n       result += indent + \\\"</RDF:li>\\\\n\\\"\\n@@ -6567,7 +6522,7 @@ RDFSerializer.prototype = {\\n     var items = [];\\n     var arcs = ds.ArcLabelsOut(resource);\\n     while (arcs.hasMoreElements()) {\\n-      var arc = arcs.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var arc = arcs.getNext().QueryInterface(Ci.nsIRDFResource);\\n       if (arc.ValueUTF8.substring(0, PREFIX_NS_EM.length) != PREFIX_NS_EM)\\n         continue;\\n       var prop = arc.ValueUTF8.substring(PREFIX_NS_EM.length);\\n@@ -6577,16 +6532,16 @@ RDFSerializer.prototype = {\\n       var targets = ds.GetTargets(resource, arc, true);\\n       while (targets.hasMoreElements()) {\\n         var target = targets.getNext();\\n-        if (target instanceof Components.interfaces.nsIRDFResource) {\\n+        if (target instanceof Ci.nsIRDFResource) {\\n           var item = indent + \\\"<em:\\\" + prop + \\\">\\\\n\\\";\\n           item += this.serializeResource(ds, target, indent + this.INDENT);\\n           item += indent + \\\"</em:\\\" + prop + \\\">\\\\n\\\";\\n           items.push(item);\\n         }\\n-        else if (target instanceof Components.interfaces.nsIRDFLiteral) {\\n+        else if (target instanceof Ci.nsIRDFLiteral) {\\n           items.push(indent + \\\"<em:\\\" + prop + \\\">\\\" + this.escapeEntities(target.Value) + \\\"</em:\\\" + prop + \\\">\\\\n\\\");\\n         }\\n-        else if (target instanceof Components.interfaces.nsIRDFInt) {\\n+        else if (target instanceof Ci.nsIRDFInt) {\\n           items.push(indent + \\\"<em:\\\" + prop + \\\" NC:parseType=\\\\\\\"Integer\\\\\\\">\\\" + target.Value + \\\"</em:\\\" + prop + \\\">\\\\n\\\");\\n         }\\n         else {\\n@@ -6691,7 +6646,7 @@ ExtensionsDataSource.prototype = {\\n     var minVersionRes = EM_R(\\\"minVersion\\\");\\n     var maxVersionRes = EM_R(\\\"maxVersion\\\");\\n     while (targets.hasMoreElements()) {\\n-      var target = targets.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var target = targets.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var dependencyID = stringData(ds.GetTarget(target, idRes, true));\\n       var version = null;\\n       version = this.getItemProperty(dependencyID, \\\"version\\\");\\n@@ -6755,7 +6710,7 @@ ExtensionsDataSource.prototype = {\\n     var versionChecker = getVersionChecker();\\n     var rv = false;\\n     while (targets.hasMoreElements()) {\\n-      var targetApp = targets.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var targetApp = targets.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var id          = stringData(datasource.GetTarget(targetApp, idRes, true));\\n       var minVersion  = stringData(datasource.GetTarget(targetApp, minVersionRes, true));\\n       var maxVersion  = stringData(datasource.GetTarget(targetApp, maxVersionRes, true));\\n@@ -6795,7 +6750,7 @@ ExtensionsDataSource.prototype = {\\n     var ctr = getContainer(this._inner, this._itemRoot);\\n     var elements = ctr.GetElements();\\n     while (elements.hasMoreElements()) {\\n-      var item = elements.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var item = elements.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var id = stripPrefix(item.Value, PREFIX_ITEM_URI);\\n       var type = this.getItemProperty(id, \\\"type\\\");\\n       // Skip this item if we're not seeking disabled items\\n@@ -6839,13 +6794,13 @@ ExtensionsDataSource.prototype = {\\n   getBlocklistedItemList: function(appVersion, platformVersion, desiredType,\\n                                    includeAppDisabled) {\\n     if (!gBlocklist)\\n-      gBlocklist = Components.classes[\\\"@mozilla.org/extensions/blocklist;1\\\"]\\n-                             .getService(Components.interfaces.nsIBlocklistService);\\n+      gBlocklist = Cc[\\\"@mozilla.org/extensions/blocklist;1\\\"].\\n+                   getService(Ci.nsIBlocklistService);\\n     var items = [];\\n     var ctr = getContainer(this._inner, this._itemRoot);\\n     var elements = ctr.GetElements();\\n     while (elements.hasMoreElements()) {\\n-      var item = elements.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var item = elements.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var id = stripPrefix(item.Value, PREFIX_ITEM_URI);\\n       var type = this.getItemProperty(id, \\\"type\\\");\\n \\n@@ -6877,7 +6832,7 @@ ExtensionsDataSource.prototype = {\\n     var ctr = getContainer(this, this._itemRoot);\\n     var elements = ctr.GetElements();\\n     while (elements.hasMoreElements()) {\\n-      var e = elements.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var e = elements.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var eID = stripPrefix(e.Value, PREFIX_ITEM_URI);\\n       var type = this.getItemProperty(eID, \\\"type\\\");\\n       if (type != -1 && type & desiredType)\\n@@ -6905,12 +6860,12 @@ ExtensionsDataSource.prototype = {\\n     var ctr = getContainer(this, this._itemRoot);\\n     var elements = ctr.GetElements();\\n     while (elements.hasMoreElements()) {\\n-      var e = elements.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var e = elements.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var dependentID = stripPrefix(e.Value, PREFIX_ITEM_URI);\\n       var targets = ds.GetTargets(e, EM_R(\\\"requires\\\"), true);\\n       var idRes = EM_R(\\\"id\\\");\\n       while (targets.hasMoreElements()) {\\n-        var target = targets.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+        var target = targets.getNext().QueryInterface(Ci.nsIRDFResource);\\n         var dependencyID = stringData(ds.GetTarget(target, idRes, true));\\n         if (dependencyID == id) {\\n           if (!includeDisabled && this.getItemProperty(dependentID, \\\"isDisabled\\\") == \\\"true\\\")\\n@@ -7050,7 +7005,7 @@ ExtensionsDataSource.prototype = {\\n     var outData = null;\\n     while (targetApps.hasMoreElements()) {\\n       var targetApp = targetApps.getNext();\\n-      if (targetApp instanceof Components.interfaces.nsIRDFResource) {\\n+      if (targetApp instanceof Ci.nsIRDFResource) {\\n         try {\\n           var foundAppID = stringData(this._inner.GetTarget(targetApp, EM_R(\\\"id\\\"), true));\\n           // Different target application?\\n@@ -7117,7 +7072,7 @@ ExtensionsDataSource.prototype = {\\n     else {\\n       while (targetApps.hasMoreElements()) {\\n         var targetApp = targetApps.getNext();\\n-        if (targetApp instanceof Components.interfaces.nsIRDFResource) {\\n+        if (targetApp instanceof Ci.nsIRDFResource) {\\n           var foundAppID = stringData(this._inner.GetTarget(targetApp, EM_R(\\\"id\\\"), true));\\n           // Different target application?\\n           if (foundAppID != targetAppID)\\n@@ -7165,7 +7120,7 @@ ExtensionsDataSource.prototype = {\\n     var outData = null;\\n     while (targetApps.hasMoreElements()) {\\n       var targetApp = targetApps.getNext();\\n-      if (targetApp instanceof Components.interfaces.nsIRDFResource) {\\n+      if (targetApp instanceof Ci.nsIRDFResource) {\\n         try {\\n           var foundAppID = stringData(datasource.GetTarget(targetApp, EM_R(\\\"id\\\"), true));\\n           // Different target application?\\n@@ -7218,7 +7173,7 @@ ExtensionsDataSource.prototype = {\\n       targetApps = datasource.GetTargets(gInstallManifestRoot, EM_R(\\\"targetApplication\\\"), true);\\n     while (targetApps.hasMoreElements()) {\\n       var targetApp = targetApps.getNext();\\n-      if (targetApp instanceof Components.interfaces.nsIRDFResource) {\\n+      if (targetApp instanceof Ci.nsIRDFResource) {\\n         var foundAppID = stringData(targetDataSource.GetTarget(targetApp, EM_R(\\\"id\\\"), true));\\n         // Different target application?\\n         if (foundAppID != targetAppID)\\n@@ -7376,11 +7331,11 @@ ExtensionsDataSource.prototype = {\\n \\n       var oldValues = this._inner.GetTargets(targetRes, property, true);\\n       while (oldValues.hasMoreElements()) {\\n-        var oldValue = oldValues.getNext().QueryInterface(Components.interfaces.nsIRDFNode);\\n+        var oldValue = oldValues.getNext().QueryInterface(Ci.nsIRDFNode);\\n         this._inner.Unassert(targetRes, property, oldValue);\\n       }\\n       while (literals.hasMoreElements()) {\\n-        var literal = literals.getNext().QueryInterface(Components.interfaces.nsIRDFNode);\\n+        var literal = literals.getNext().QueryInterface(Ci.nsIRDFNode);\\n         this._inner.Assert(targetRes, property, literal, true);\\n       }\\n     }\\n@@ -7424,18 +7379,18 @@ ExtensionsDataSource.prototype = {\\n     // Remove old localized properties\\n     var oldValues = this._inner.GetTargets(targetRes, localizedProp, true);\\n     while (oldValues.hasMoreElements()) {\\n-      var oldValue = oldValues.getNext().QueryInterface(Components.interfaces.nsIRDFNode);\\n+      var oldValue = oldValues.getNext().QueryInterface(Ci.nsIRDFNode);\\n       this._cleanResource(oldValue);\\n       this._inner.Unassert(targetRes, localizedProp, oldValue);\\n     }\\n     // Add each localized property\\n     var localizations = installManifest.GetTargets(gInstallManifestRoot, localizedProp, true);\\n     while (localizations.hasMoreElements()) {\\n-      var localization = localizations.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var localization = localizations.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var anon = gRDF.GetAnonymousResource();\\n       var literals = installManifest.GetTargets(localization, localeProp, true);\\n       while (literals.hasMoreElements()) {\\n-        var literal = literals.getNext().QueryInterface(Components.interfaces.nsIRDFNode);\\n+        var literal = literals.getNext().QueryInterface(Ci.nsIRDFNode);\\n         this._inner.Assert(anon, localeProp, literal, true);\\n       }\\n       this._addLocalizedMetadata(installManifest, localization, anon);\\n@@ -7455,12 +7410,12 @@ ExtensionsDataSource.prototype = {\\n \\n       var oldVersionInfos = this._inner.GetTargets(targetRes, property, true);\\n       while (oldVersionInfos.hasMoreElements()) {\\n-        var oldVersionInfo = oldVersionInfos.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+        var oldVersionInfo = oldVersionInfos.getNext().QueryInterface(Ci.nsIRDFResource);\\n         this._cleanResource(oldVersionInfo);\\n         this._inner.Unassert(targetRes, property, oldVersionInfo);\\n       }\\n       while (newVersionInfos.hasMoreElements()) {\\n-        var newVersionInfo = newVersionInfos.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+        var newVersionInfo = newVersionInfos.getNext().QueryInterface(Ci.nsIRDFResource);\\n         var anon = gRDF.GetAnonymousResource();\\n         this._inner.Assert(anon, idRes, installManifest.GetTarget(newVersionInfo, idRes, true), true);\\n         this._inner.Assert(anon, minVersionRes, installManifest.GetTarget(newVersionInfo, minVersionRes, true), true);\\n@@ -7484,7 +7439,7 @@ ExtensionsDataSource.prototype = {\\n     for (var i = 0; i < resources.length; ++i) {\\n       var targetApps = this._inner.GetTargets(item, EM_R(resources[i]), true);\\n       while (targetApps.hasMoreElements()) {\\n-        var targetApp = targetApps.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+        var targetApp = targetApps.getNext().QueryInterface(Ci.nsIRDFResource);\\n         this._cleanResource(targetApp);\\n       }\\n     }\\n@@ -7503,10 +7458,10 @@ ExtensionsDataSource.prototype = {\\n     // Remove outward arcs\\n     var arcs = this._inner.ArcLabelsOut(resource);\\n     while (arcs.hasMoreElements()) {\\n-      var arc = arcs.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var arc = arcs.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var targets = this._inner.GetTargets(resource, arc, true);\\n       while (targets.hasMoreElements()) {\\n-        var value = targets.getNext().QueryInterface(Components.interfaces.nsIRDFNode);\\n+        var value = targets.getNext().QueryInterface(Ci.nsIRDFNode);\\n         if (value)\\n           this._inner.Unassert(resource, arc, value);\\n       }\\n@@ -7592,7 +7547,7 @@ ExtensionsDataSource.prototype = {\\n     // Base 0 ordinal for checking against the existing order after sorting\\n     var ordinal = 0;\\n     while (elements.hasMoreElements()) {\\n-      var item = elements.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var item = elements.getNext().QueryInterface(Ci.nsIRDFResource);\\n       var id = stripPrefix(item.Value, PREFIX_ITEM_URI);\\n       var itemType = this.getItemProperty(id, \\\"type\\\");\\n       if (itemType & type) {\\n@@ -7792,7 +7747,7 @@ ExtensionsDataSource.prototype = {\\n     var ctr = getContainer(this, this._itemRoot);\\n     var items = ctr.GetElements();\\n     while (items.hasMoreElements()) {\\n-      var item = items.getNext().QueryInterface(Components.interfaces.nsIRDFResource);\\n+      var item = items.getNext().QueryInterface(Ci.nsIRDFResource);\\n       // Resource URIs adopt the format: location-key,item-id\\n       var id = stripPrefix(item.Value, PREFIX_ITEM_URI);\\n       this.visibleItems[id] = this.getItemProperty(id, \\\"installLocation\\\");\\n@@ -7837,8 +7792,8 @@ ExtensionsDataSource.prototype = {\\n       return;\\n     }\\n \\n-    var cu = Components.classes[\\\"@mozilla.org/rdf/container-utils;1\\\"]\\n-                       .getService(Components.interfaces.nsIRDFContainerUtils);\\n+    var cu = Cc[\\\"@mozilla.org/rdf/container-utils;1\\\"].\\n+             getService(Ci.nsIRDFContainerUtils);\\n     cu.MakeSeq(this._inner, this._itemRoot);\\n \\n     this._buildVisibleItemList();\\n@@ -7863,7 +7818,7 @@ ExtensionsDataSource.prototype = {\\n    */\\n   onAddonUpdateStarted: function(addon) {\\n     if (!addon)\\n-      throw Components.results.NS_ERROR_INVALID_ARG;\\n+      throw Cr.NS_ERROR_INVALID_ARG;\\n \\n     LOG(\\\"Datasource: Addon Update Started: \\\" + addon.id);\\n     this.updateProperty(addon.id, \\\"availableUpdateURL\\\");\\n@@ -7874,7 +7829,7 @@ ExtensionsDataSource.prototype = {\\n    */\\n   onAddonUpdateEnded: function(addon, status) {\\n     if (!addon)\\n-      throw Components.results.NS_ERROR_INVALID_ARG;\\n+      throw Cr.NS_ERROR_INVALID_ARG;\\n \\n     LOG(\\\"Datasource: Addon Update Ended: \\\" + addon.id + \\\", status: \\\" + status);\\n     var url = null, hash = null, version = null;\\n@@ -8039,8 +7994,8 @@ ExtensionsDataSource.prototype = {\\n     var id = stripPrefix(item.Value, PREFIX_ITEM_URI);\\n     var version = this.getItemProperty(id, \\\"version\\\");\\n     if (!gBlocklist)\\n-      gBlocklist = Components.classes[\\\"@mozilla.org/extensions/blocklist;1\\\"]\\n-                             .getService(Components.interfaces.nsIBlocklistService);\\n+      gBlocklist = Cc[\\\"@mozilla.org/extensions/blocklist;1\\\"].\\n+                   getService(Ci.nsIBlocklistService);\\n     if (gBlocklist.isAddonBlocklisted(id, version,\\n                                       undefined, undefined))\\n       return EM_L(\\\"true\\\");\\n@@ -8140,10 +8095,10 @@ ExtensionsDataSource.prototype = {\\n     var localeProp = EM_R(\\\"locale\\\");\\n     var localizations = this._inner.GetTargets(item, localizedProp, true);\\n     while (localizations.hasMoreElements()) {\\n-      var localized = localizations.getNext().QueryInterface(Components.interfaces.nsIRDFNode);\\n+      var localized = localizations.getNext().QueryInterface(Ci.nsIRDFNode);\\n       var list = this._inner.GetTargets(localized, localeProp, true);\\n       while (list.hasMoreElements()) {\\n-        var locale = list.getNext().QueryInterface(Components.interfaces.nsIRDFNode);\\n+        var locale = list.getNext().QueryInterface(Ci.nsIRDFNode);\\n         if (stringData(locale) == gLocale)\\n           return localized;\\n       }\\n@@ -8168,7 +8123,7 @@ ExtensionsDataSource.prototype = {\\n                     stripPrefix(property.Value, PREFIX_NS_EM);\\n     try {\\n       var value = gPref.getComplexValue(prefName,\\n-                                        Components.interfaces.nsIPrefLocalizedString);\\n+                                        Ci.nsIPrefLocalizedString);\\n       if (value.data)\\n         return EM_L(value.data);\\n     }\\n@@ -8289,14 +8244,14 @@ ExtensionsDataSource.prototype = {\\n     while (true) {\\n       try {\\n         var value = gPref.getComplexValue(prefName + \\\".\\\" + ++i,\\n-                                          Components.interfaces.nsIPrefLocalizedString);\\n+                                          Ci.nsIPrefLocalizedString);\\n         if (value.data)\\n           values.push(EM_L(value.data));\\n       }\\n       catch (e) {\\n         try {\\n           var value = gPref.getComplexValue(prefName,\\n-                                            Components.interfaces.nsIPrefLocalizedString);\\n+                                            Ci.nsIPrefLocalizedString);\\n           if (value.data)\\n             values.push(EM_L(value.data));\\n         }\\n@@ -8451,7 +8406,7 @@ ExtensionsDataSource.prototype = {\\n    * See nsIRDFRemoteDataSource.idl\\n    */\\n   get loaded() {\\n-    throw Components.results.NS_ERROR_NOT_IMPLEMENTED;\\n+    throw Cr.NS_ERROR_NOT_IMPLEMENTED;\\n   },\\n \\n   Init: function(uri) {\\n@@ -8461,27 +8416,18 @@ ExtensionsDataSource.prototype = {\\n   },\\n \\n   Flush: function() {\\n-    if (this._inner instanceof Components.interfaces.nsIRDFRemoteDataSource)\\n+    if (this._inner instanceof Ci.nsIRDFRemoteDataSource)\\n       this._inner.Flush();\\n   },\\n \\n   FlushTo: function(uri) {\\n   },\\n \\n-  /**\\n-   * See nsISupports.idl\\n-   */\\n-  QueryInterface: function(iid) {\\n-    if (!iid.equals(Components.interfaces.nsIRDFDataSource) &&\\n-        !iid.equals(Components.interfaces.nsIRDFRemoteDataSource) &&\\n-        !iid.equals(Components.interfaces.nsISupports))\\n-      throw Components.results.NS_ERROR_NO_INTERFACE;\\n-    return this;\\n-  }\\n+  QueryInterface: XPCOMUtils.generateQI([Ci.nsIRDFDataSource,\\n+                                         Ci.nsIRDFRemoteDataSource])\\n };\\n \\n-function UpdateItem () {\\n-}\\n+function UpdateItem () {}\\n UpdateItem.prototype = {\\n   /**\\n    * See nsIUpdateService.idl\\n@@ -8541,91 +8487,38 @@ UpdateItem.prototype = {\\n            }.toSource();\\n   },\\n \\n-  /**\\n-   * See nsISupports.idl\\n-   */\\n-  QueryInterface: function(iid) {\\n-    if (!iid.equals(Components.interfaces.nsIUpdateItem) &&\\n-        !iid.equals(Components.interfaces.nsISupports))\\n-      throw Components.results.NS_ERROR_NO_INTERFACE;\\n-    return this;\\n-  }\\n+  classDescription: \\\"Update Item\\\",\\n+  contractID: \\\"@mozilla.org/updates/item;1\\\",\\n+  classID: Components.ID(\\\"{F3294B1C-89F4-46F8-98A0-44E1EAE92518}\\\"),\\n+  QueryInterface: XPCOMUtils.generateQI([Ci.nsIUpdateItem])\\n };\\n \\n-var ExtensionManagerDataSourceFactory = {\\n-  createInstance: function() {\\n-    return Components.classes[ExtensionManager.prototype.contractID]\\n-                     .getService(Components.interfaces.nsIExtensionManager)\\n-                     .datasource;\\n+var gEmSingleton = null;\\n+var EmFactory = {\\n+  createInstance: function(outer, iid) {\\n+    if (outer != null)\\n+      throw Cr.NS_ERROR_NO_AGGREGATION;\\n+\\n+    if (!gEmSingleton)\\n+      gEmSingleton = new ExtensionManager();\\n+    return gEmSingleton.QueryInterface(iid);\\n   }\\n-}\\n+};\\n \\n-var gModule = {\\n-  registerSelf: function(componentManager, fileSpec, location, type) {\\n-    componentManager = componentManager.QueryInterface(Components.interfaces.nsIComponentRegistrar);\\n-\\n-    for (var key in this._objects) {\\n-      var obj = this._objects[key];\\n-      componentManager.registerFactoryLocation(obj.CID, obj.className, obj.contractID,\\n-                                               fileSpec, location, type);\\n-    }\\n-\\n-    // Make the Extension Manager a startup observer\\n-    var categoryManager = Components.classes[\\\"@mozilla.org/categorymanager;1\\\"]\\n-                                    .getService(Components.interfaces.nsICategoryManager);\\n-    categoryManager.addCategoryEntry(\\\"app-startup\\\", this._objects.manager.className,\\n-                                     \\\"service,\\\" + this._objects.manager.contractID,\\n-                                     true, true);\\n-  },\\n-\\n-  getClassObject: function(componentManager, cid, iid) {\\n-    if (!iid.equals(Components.interfaces.nsIFactory))\\n-      throw Components.results.NS_ERROR_NOT_IMPLEMENTED;\\n-\\n-    for (var key in this._objects) {\\n-      if (cid.equals(this._objects[key].CID))\\n-        return this._objects[key].factory;\\n-    }\\n-\\n-    throw Components.results.NS_ERROR_NO_INTERFACE;\\n-  },\\n-\\n-  _makeFactory: #1= function(ctor) {\\n-    return {\\n-             createInstance: function (outer, iid) {\\n-               if (outer != null)\\n-                 throw Components.results.NS_ERROR_NO_AGGREGATION;\\n-               return (new ctor()).QueryInterface(iid);\\n-             }\\n-           };\\n-  },\\n-\\n-  _objects: {\\n-    manager: { CID        : ExtensionManager.prototype.classID,\\n-               contractID : ExtensionManager.prototype.contractID,\\n-               className  : ExtensionManager.prototype.classDescription,\\n-               factory    : #1#(ExtensionManager)\\n-             },\\n-    item:    { CID        : Components.ID(\\\"{F3294B1C-89F4-46F8-98A0-44E1EAE92518}\\\"),\\n-               contractID : \\\"@mozilla.org/updates/item;1\\\",\\n-               className  : \\\"Update Item\\\",\\n-               factory    : #1#(UpdateItem)\\n-             },\\n-    datasource: { CID        : Components.ID(\\\"{69BB8313-2D4F-45EC-97E0-D39DA58ECCE9}\\\"),\\n-                  contractID : \\\"@mozilla.org/rdf/datasource;1?name=extensions\\\",\\n-                  className  : \\\"Extension Manager Data Source\\\",\\n-                  factory    : ExtensionManagerDataSourceFactory\\n-             }\\n-   },\\n-\\n-  canUnload: function(componentManager) {\\n-    return true;\\n+function DatasourceModule() {}\\n+DatasourceModule.prototype = {\\n+  classDescription: \\\"Extension Manager Data Source\\\",\\n+  contractID: \\\"@mozilla.org/rdf/datasource;1?name=extensions\\\",\\n+  classID: Components.ID(\\\"{69BB8313-2D4F-45EC-97E0-D39DA58ECCE9}\\\"),\\n+  _xpcom_factory: {\\n+    createInstance: function() Cc[ExtensionManager.prototype.contractID].\\n+                               getService(Ci.nsIExtensionManager).datasource\\n   }\\n };\\n \\n-function NSGetModule(compMgr, fileSpec) {\\n-  return gModule;\\n-}\\n+\\n+function NSGetModule(compMgr, fileSpec)\\n+  XPCOMUtils.generateModule([ExtensionManager, DatasourceModule, UpdateItem]);\\n \\n #if 0\\n function stackTraceFunctionFormat(aFunctionName) {\\n\""}