{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas4c131aa\""},"diff":"\"4c131aa Fix crash if a paused download is stopped (bug 395188); patch by Mardak, r=sdwilsh, a=dsicore\\ndiff --git a/toolkit/components/downloads/src/nsDownloadManager.cpp b/toolkit/components/downloads/src/nsDownloadManager.cpp\\nindex 57dfed1..00f6154 100644\\n--- a/toolkit/components/downloads/src/nsDownloadManager.cpp\\n+++ b/toolkit/components/downloads/src/nsDownloadManager.cpp\\n@@ -150,7 +150,10 @@ nsDownloadManager::CompleteDownload(nsDownload *aDownload)\\n   // we've stopped, so break the cycle we created at download start\\n   aDownload->mCancelable = nsnull;\\n   aDownload->mEntityID.Truncate();\\n-  if (aDownload->mWasResumed)\\n+\\n+  // we need do what exthandler would have done for a finished download\\n+  if (aDownload->mDownloadState == nsIDownloadManager::DOWNLOAD_FINISHED &&\\n+      aDownload->mWasResumed)\\n     (void)ExecuteDesiredAction(aDownload);\\n \\n   (void)mCurrentDownloads.RemoveObject(aDownload);\\n@@ -161,9 +164,14 @@ nsDownloadManager::ExecuteDesiredAction(nsDownload *aDownload)\\n {\\n   // If we have a temp file and we have resumed, we have to do what the external\\n   // helper app service would have done.\\n-  if (!aDownload->mTempFile && !aDownload->mWasResumed)\\n+  if (!aDownload->mTempFile || !aDownload->mWasResumed)\\n     return NS_OK;\\n \\n+  // We need to bail if for some reason the temp file got removed\\n+  PRBool fileExists;\\n+  if (NS_FAILED(aDownload->mTempFile->Exists(&fileExists)) || !fileExists)\\n+    return NS_ERROR_FAILURE;\\n+\\n   // Find out if it was a SaveToDisk kind of a download\\n   nsHandlerInfoAction action = nsIMIMEInfo::saveToDisk;\\n   nsresult rv;\\n@@ -183,7 +191,6 @@ nsDownloadManager::ExecuteDesiredAction(nsDownload *aDownload)\\n         // MoveTo will fail if the file already exists, but we've already\\n         // obtained confirmation from the user that this is OK.  So, we have\\n         // to remove it if it exists.\\n-        PRBool fileExists;\\n         if (NS_SUCCEEDED(target->Exists(&fileExists)) && fileExists) {\\n           rv = target->Remove(PR_FALSE);\\n           NS_ENSURE_SUCCESS(rv, rv);\\n\""}