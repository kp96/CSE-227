{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas4c74ce3\""},"diff":"\"4c74ce3 Bug 375651 - \\\"Assertion failure: nbytes != 0\\\" with regexp quantifiers, r=mrbkap, a=brendan\\ndiff --git a/js/src/jsregexp.c b/js/src/jsregexp.c\\nindex 4257a95..ecb8700 100644\\n--- a/js/src/jsregexp.c\\n+++ b/js/src/jsregexp.c\\n@@ -2880,20 +2880,20 @@ ExecuteREBytecode(REGlobalData *gData, REMatchState *x)\\n                 continue;\\n \\n               case REOP_RPAREN:\\n+              {\\n+                ptrdiff_t delta;\\n+\\n                 pc = ReadCompactIndex(pc, &parenIndex);\\n                 JS_ASSERT(parenIndex < gData->regexp->parenCount);\\n                 cap = &x->parens[parenIndex];\\n-                cap->length = x->cp - (gData->cpbegin + cap->index);\\n-#if defined(DEBUG_crowder) || defined(DEBUG_mrbkap)\\n-                JS_ASSERT(x->cp >= (gData->cpbegin + cap->index));\\n-                JS_ASSERT((int)cap->length <= (gData->cpend - gData->cpbegin));\\n-#endif\\n+                delta = x->cp - (gData->cpbegin + cap->index);\\n+                cap->length = (delta < 0) ? 0 : (size_t) delta;\\n                 op = (REOp) *pc++;\\n \\n                 if (!result)\\n                     result = x;\\n                 continue;\\n-\\n+              }\\n               case REOP_ASSERT:\\n                 nextpc = pc + GET_OFFSET(pc);  /* start of term after ASSERT */\\n                 pc += ARG_LEN;                 /* start of ASSERT child */\\n\""}