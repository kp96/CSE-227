{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basbeaba9b\""},"diff":"\"beaba9b Bug 386005: passwords deleted from drop down menu in gmail.com apear to be deleted but are still saved. r=gavin\\ndiff --git a/toolkit/components/passwordmgr/src/nsLoginManager.js b/toolkit/components/passwordmgr/src/nsLoginManager.js\\nindex 8bfd667..0524364 100644\\n--- a/toolkit/components/passwordmgr/src/nsLoginManager.js\\n+++ b/toolkit/components/passwordmgr/src/nsLoginManager.js\\n@@ -1241,10 +1241,10 @@ function UserAutoCompleteResult (aSearchString, matchingLogins) {\\n         var userA = a.username.toLowerCase();\\n         var userB = b.username.toLowerCase();\\n \\n-        if (a < b)\\n+        if (userA < userB)\\n             return -1;\\n \\n-        if (b > a)\\n+        if (userB > userA)\\n             return  1;\\n \\n         return 0;\\n@@ -1297,7 +1297,8 @@ UserAutoCompleteResult.prototype = {\\n         if (index < 0 || index >= this.logins.length)\\n             throw \\\"Index out of range.\\\";\\n \\n-        var removedLogin = this.logins.splice(index, 1);\\n+        var [removedLogin] = this.logins.splice(index, 1);\\n+\\n         this.matchCount--;\\n         if (this.defaultIndex > this.logins.length)\\n             this.defaultIndex--;\\ndiff --git a/toolkit/components/passwordmgr/test/Makefile.in b/toolkit/components/passwordmgr/test/Makefile.in\\nindex 12a0a7d..dc377be 100644\\n--- a/toolkit/components/passwordmgr/test/Makefile.in\\n+++ b/toolkit/components/passwordmgr/test/Makefile.in\\n@@ -56,6 +56,7 @@ MOCHI_TESTS = \\\\\\n \\t\\ttest_basic_form_2pw_1.html \\\\\\n \\t\\ttest_basic_form_2pw_2.html \\\\\\n \\t\\ttest_basic_form_3pw_1.html \\\\\\n+\\t\\ttest_basic_form_autocomplete.html \\\\\\n \\t\\ttest_bug_227640.html \\\\\\n \\t\\ttest_bug_242956.html \\\\\\n \\t\\ttest_bug_360493_1.html \\\\\\ndiff --git a/toolkit/components/passwordmgr/test/test_0init.html b/toolkit/components/passwordmgr/test/test_0init.html\\nindex 8cd8150..3ff5a80 100644\\n--- a/toolkit/components/passwordmgr/test/test_0init.html\\n+++ b/toolkit/components/passwordmgr/test/test_0init.html\\n@@ -21,6 +21,15 @@ Login Manager test: initialization.\\n netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\\n \\n \\n+// Enable debug pref (for console output)\\n+if (false) {\\n+    var prefs = Components.classes[\\\"@mozilla.org/preferences-service;1\\\"].\\n+                        getService(Components.interfaces.nsIPrefService);\\n+    prefs = prefs.getBranch(\\\"signon.\\\");\\n+    prefs.setBoolPref(\\\"debug\\\", true);\\n+}\\n+\\n+\\n // Get the pwmgr service\\n var Cc_pwmgr = Components.classes[\\\"@mozilla.org/login-manager;1\\\"];\\n ok(Cc_pwmgr != null, \\\"Access Cc[@mozilla.org/login-manager;1]\\\");\\ndiff --git a/toolkit/components/passwordmgr/test/test_basic_form_autocomplete.html b/toolkit/components/passwordmgr/test/test_basic_form_autocomplete.html\\nnew file mode 100644\\nindex 0000000..633f1a7\\n--- /dev/null\\n+++ b/toolkit/components/passwordmgr/test/test_basic_form_autocomplete.html\\n@@ -0,0 +1,430 @@\\n+<!DOCTYPE HTML>\\n+<html>\\n+<head>\\n+  <title>Test for Login Manager</title>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/MochiKit/MochiKit.js\\\"></script>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/tests/SimpleTest/SimpleTest.js\\\"></script>  \\n+  <script type=\\\"text/javascript\\\" src=\\\"/tests/SimpleTest/EventUtils.js\\\"></script>\\n+  <script type=\\\"text/javascript\\\" src=\\\"pwmgr_common.js\\\"></script>\\n+  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/tests/SimpleTest/test.css\\\" />\\n+</head>\\n+<body>\\n+Login Manager test: multiple login autocomplete\\n+<p id=\\\"display\\\"></p>\\n+\\n+<!-- we presumably can't hide the content for this test. -->\\n+<div id=\\\"content\\\">\\n+\\n+  <form id=\\\"form1\\\" action=\\\"http://autocomplete:8888/formtest.js\\\" onsubmit=\\\"return false;\\\">\\n+    <input  type=\\\"text\\\"       name=\\\"uname\\\">\\n+    <input  type=\\\"password\\\"   name=\\\"pword\\\">\\n+\\n+    <button type=\\\"submit\\\">Submit</button>\\n+    <button type=\\\"reset\\\"> Reset </button>\\n+  </form>\\n+\\n+</div>\\n+\\n+<pre id=\\\"test\\\">\\n+<script class=\\\"testbody\\\" type=\\\"text/javascript\\\">\\n+\\n+/** Test for Login Manager: multiple login autocomplete. **/\\n+\\n+netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\\n+\\n+var uname = $_(1, \\\"uname\\\");\\n+var pword = $_(1, \\\"pword\\\");\\n+const shiftModifier = Components.interfaces.nsIDOMNSEvent.SHIFT_MASK;\\n+\\n+// Window utils for sending fake sey events.\\n+var wutils = window.QueryInterface(Components.interfaces.nsIInterfaceRequestor).\\n+                      getInterface(Components.interfaces.nsIDOMWindowUtils);\\n+\\n+// Get the pwmgr service\\n+var pwmgr = Components.classes[\\\"@mozilla.org/login-manager;1\\\"]\\n+            .getService(Components.interfaces.nsILoginManager);\\n+ok(pwmgr != null, \\\"nsLoginManager service\\\");\\n+\\n+// Create some logins just for this form, since we'll be deleting them.\\n+var nsLoginInfo =\\n+Components.Constructor(\\\"@mozilla.org/login-manager/loginInfo;1\\\",\\n+                       Components.interfaces.nsILoginInfo, \\\"init\\\");\\n+ok(nsLoginInfo != null, \\\"nsLoginInfo constructor\\\");\\n+\\n+\\n+var login1 = new nsLoginInfo(\\n+    \\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null,\\n+    \\\"tempuser1\\\", \\\"temppass1\\\", \\\"uname\\\", \\\"pword\\\");\\n+\\n+var login2 = new nsLoginInfo(\\n+    \\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null,\\n+    \\\"testuser2\\\", \\\"testpass2\\\", \\\"uname\\\", \\\"pword\\\");\\n+\\n+var login3 = new nsLoginInfo(\\n+    \\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null,\\n+    \\\"testuser3\\\", \\\"testpass3\\\", \\\"uname\\\", \\\"pword\\\");\\n+\\n+var login4 = new nsLoginInfo(\\n+    \\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null,\\n+    \\\"zzzuser4\\\", \\\"zzzpass4\\\", \\\"uname\\\", \\\"pword\\\");\\n+\\n+// try/catch in case someone runs the tests manually, twice.\\n+try {\\n+    pwmgr.addLogin(login1);\\n+    pwmgr.addLogin(login2);\\n+    pwmgr.addLogin(login3);\\n+    pwmgr.addLogin(login4);\\n+} catch (e) {\\n+    ok(false, \\\"addLogin threw: \\\" + e);\\n+}\\n+\\n+\\n+// Restore the form to the default state.\\n+function restoreForm() {\\n+    uname.value = \\\"\\\";\\n+    pword.value = \\\"\\\";\\n+    uname.focus();\\n+}\\n+\\n+\\n+// Check for expected username/password in form.\\n+function checkForm(expectedUsername, expectedPassword) {\\n+  is(uname.value, expectedUsername, \\\"Checking form username\\\");\\n+  is(pword.value, expectedPassword, \\\"Checking form password\\\");\\n+}\\n+\\n+\\n+// Mochitest gives us a sendKey(), but it's targeted to a specific element.\\n+// This basically sends an untargeted key event, to whatever's focused.\\n+function doKey(aKey, modifier) {\\n+    // Seems we need to enable this again, or sendKeyEvent() complaints.\\n+    netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\\n+\\n+    var keyName = \\\"DOM_VK_\\\" + aKey.toUpperCase();\\n+    var key = Components.interfaces.nsIDOMKeyEvent[keyName];\\n+\\n+    // undefined --> null\\n+    if (!modifier)\\n+        modifier = null;\\n+\\n+    wutils.sendKeyEvent(\\\"keydown\\\",  key, 0, modifier);\\n+    wutils.sendKeyEvent(\\\"keypress\\\", key, 0, modifier);\\n+    wutils.sendKeyEvent(\\\"keyup\\\",    key, 0, modifier);\\n+}\\n+\\n+\\n+\\n+/*\\n+ * Main section of test...\\n+ *\\n+ * This is a bit hacky, because the events are either being sent or\\n+ * processes asynchronously, so we need to interrupt our flow with lots of\\n+ * setTimeout() calls. The case statements are executed in order, one per\\n+ * timeout.\\n+ */\\n+function runTest(testNum) {\\n+  // Seems we need to enable this again, or sendKeyEvent() complaints.\\n+  netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\\n+  ok(true, \\\"Starting test #\\\" + testNum);\\n+\\n+  switch(testNum) {\\n+    case 1:\\n+        // Make sure initial form is empty.\\n+        checkForm(\\\"\\\", \\\"\\\");\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 2:\\n+        // Check first entry\\n+        doKey(\\\"down\\\");\\n+        checkForm(\\\"\\\", \\\"\\\"); // value shouldn't update\\n+        doKey(\\\"return\\\"); // not \\\"enter\\\"!\\n+        checkForm(\\\"tempuser1\\\", \\\"temppass1\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 3:\\n+        // Check second entry\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"return\\\"); // not \\\"enter\\\"!\\n+        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 4:\\n+        // Check third entry\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"testuser3\\\", \\\"testpass3\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 5:\\n+        // Check fourth entry\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 6:\\n+        // Check first entry (wraparound)\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\"); // deselects\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"tempuser1\\\", \\\"temppass1\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 7:\\n+        // Check the last entry via arrow-up\\n+        doKey(\\\"up\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 8:\\n+        // Check the last entry via arrow-up\\n+        doKey(\\\"down\\\"); // select first entry\\n+        doKey(\\\"up\\\");   // selects nothing!\\n+        doKey(\\\"up\\\");   // select last entry\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 9:\\n+        // Check the last entry via arrow-up (wraparound)\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"up\\\"); // deselects\\n+        doKey(\\\"up\\\"); // last entry\\n+        doKey(\\\"up\\\");\\n+        doKey(\\\"up\\\");\\n+        doKey(\\\"up\\\"); // first entry\\n+        doKey(\\\"up\\\"); // deselects\\n+        doKey(\\\"up\\\"); // last entry\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 10:\\n+        // Set first entry w/o triggering autocomplete\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"right\\\");\\n+        checkForm(\\\"tempuser1\\\", \\\"\\\"); // empty password\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 11:\\n+        // Set first entry w/o triggering autocomplete\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"left\\\");\\n+        checkForm(\\\"tempuser1\\\", \\\"\\\"); // empty password\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 12:\\n+        // Check first entry (page up)\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"page_up\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"tempuser1\\\", \\\"temppass1\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 13:\\n+        // Check last entry (page down)\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"page_down\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        testNum = 49;\\n+        break;\\n+\\n+    case 14:\\n+        // Abort with ESC\\n+// XXX This isn't working in the test suite, seems to fubar any later tests.\\n+//        doKey(\\\"down\\\");\\n+//        doKey(\\\"down\\\");\\n+//        doKey(\\\"escape\\\");\\n+//        checkForm(\\\"\\\", \\\"\\\");\\n+\\n+        // Trigger autocomplete popup\\n+//        restoreForm();\\n+//        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    // XXX tried sending character \\\"t\\\" before/during dropdown to test\\n+    // filtering, but had no luck. Seemed like the character was getting lost.\\n+    // Setting uname.value didn't seem to work either. This works with a human\\n+    // driver, so I'm not sure what's up.\\n+\\n+\\n+    case 50:\\n+        // Delete the first entry (of 4), \\\"tempuser1\\\"\\n+        doKey(\\\"down\\\");\\n+        // XXX Just \\\"delete\\\", and on Mac also shift-backspace?\\n+        var numLogins;\\n+        numLogins = pwmgr.countLogins(\\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null);\\n+        is(numLogins, 4, \\\"Correct number of logins before deleting one\\\");\\n+\\n+        doKey(\\\"back_space\\\", shiftModifier);\\n+\\n+        checkForm(\\\"zzzuser4\\\", \\\"\\\"); // why does a value get set here?\\n+        numLogins = pwmgr.countLogins(\\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null);\\n+        is(numLogins, 3, \\\"Correct number of logins after deleting one\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 51:\\n+        // Check the new first entry (of 3)\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 52:\\n+        // Delete the second entry (of 3), \\\"testuser3\\\"\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"back_space\\\", shiftModifier);\\n+        checkForm(\\\"testuser2\\\", \\\"\\\"); // XXX why does a value get set here?\\n+        numLogins = pwmgr.countLogins(\\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null);\\n+        is(numLogins, 2, \\\"Correct number of logins after deleting one\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"zzzuser4\\\", \\\"zzzpass4\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 53:\\n+        // Check the new second entry (of 2)\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 54:\\n+        // Delete the last entry (of 2), \\\"zzzuser4\\\"\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"back_space\\\", shiftModifier);\\n+        checkForm(\\\"testuser2\\\", \\\"\\\"); // XXX why does a value get set here?\\n+        numLogins = pwmgr.countLogins(\\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null);\\n+        is(numLogins, 1, \\\"Correct number of logins after deleting one\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 55:\\n+        // Check the new second entry (of 2)\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"return\\\");\\n+        checkForm(\\\"testuser2\\\", \\\"testpass2\\\");\\n+\\n+        // Trigger autocomplete popup\\n+        restoreForm();\\n+        doKey(\\\"down\\\");\\n+        break;\\n+\\n+    case 56:\\n+        // Delete the only remaining entry, \\\"testuser2\\\"\\n+        doKey(\\\"down\\\");\\n+        doKey(\\\"back_space\\\", shiftModifier);\\n+        //doKey(\\\"return\\\");\\n+        checkForm(\\\"\\\", \\\"\\\");\\n+        numLogins = pwmgr.countLogins(\\\"http://localhost:8888\\\", \\\"http://autocomplete:8888\\\", null);\\n+        is(numLogins, 0, \\\"Correct number of logins after deleting one\\\");\\n+\\n+    default:\\n+        SimpleTest.finish();\\n+        return;\\n+  }\\n+\\n+  setTimeout(runTest, 50, testNum + 1); // XXX 40ms was too slow, why?\\n+}\\n+\\n+\\n+function startTest() {\\n+    runTest(1);\\n+}\\n+\\n+window.onload = startTest;\\n+\\n+SimpleTest.waitForExplicitFinish();\\n+</script>\\n+</pre>\\n+</body>\\n+</html>\\n+\\n\""}