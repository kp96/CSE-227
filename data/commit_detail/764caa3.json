{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas764caa3\""},"diff":"\"764caa3 (Missed a new file in last checkin. b=386150)\\ndiff --git a/toolkit/components/passwordmgr/test/test_basic_form_pwonly.html b/toolkit/components/passwordmgr/test/test_basic_form_pwonly.html\\nnew file mode 100644\\nindex 0000000..168529b\\n--- /dev/null\\n+++ b/toolkit/components/passwordmgr/test/test_basic_form_pwonly.html\\n@@ -0,0 +1,230 @@\\n+<!DOCTYPE HTML>\\n+<html>\\n+<head>\\n+  <title>Test for Login Manager</title>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/MochiKit/MochiKit.js\\\"></script>\\n+  <script type=\\\"text/javascript\\\" src=\\\"/tests/SimpleTest/SimpleTest.js\\\"></script>  \\n+  <script type=\\\"text/javascript\\\" src=\\\"pwmgr_common.js\\\"></script>\\n+  <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/tests/SimpleTest/test.css\\\" />\\n+</head>\\n+<body>\\n+Login Manager test: forms and logins without a username.\\n+<p id=\\\"display\\\"></p>\\n+\\n+<div id=\\\"content\\\" style=\\\"display: none\\\">\\n+\\n+\\n+<!-- simple form: no username field, 1 password field -->\\n+<form id='form1' action='http://localhost:1111/formtest.js'> 1\\n+    <input type='password' name='pname' value=''>\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+<!-- simple form: no username field, 2 password fields -->\\n+<form id='form2' action='http://localhost:1111/formtest.js'> 2\\n+    <input type='password' name='pname1' value=''>\\n+    <input type='password' name='pname2' value=''>\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+<!-- simple form: no username field, 3 password fields -->\\n+<form id='form3' action='http://localhost:1111/formtest.js'> 3\\n+    <input type='password' name='pname1' value=''>\\n+    <input type='password' name='pname2' value=''>\\n+    <input type='password' name='pname3' value=''>\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+<!-- 4 password fields, should be ignored. -->\\n+<form id='form4' action='http://localhost:1111/formtest.js'> 4\\n+    <input type='password' name='pname1' value=''>\\n+    <input type='password' name='pname2' value=''>\\n+    <input type='password' name='pname3' value=''>\\n+    <input type='password' name='pname4' value=''>\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+\\n+\\n+<!-- 1 username field -->\\n+<form id='form5' action='http://localhost:1111/formtest.js'> 5\\n+    <input type='text'     name='uname' value=''>\\n+    <input type='password' name='pname' value=''>\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+\\n+<!-- 1 username field, with a value set -->\\n+<form id='form6' action='http://localhost:1111/formtest.js'> 6\\n+    <input type='text'     name='uname' value='someuser'>\\n+    <input type='password' name='pname' value=''>\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+\\n+\\n+<!--\\n+(The following forms have 2 potentially-matching logins, on is\\n+password-only, the other is username+password)\\n+-->\\n+\\n+\\n+\\n+<!-- 1 username field, with value set. Fill in the matching U+P login -->\\n+<form id='form7' action='formtest.js'> 7\\n+    <input type='text'     name='uname' value='testuser'>\\n+    <input type='password' name='pname' value=''>\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+<!-- 1 username field, with value set. Don't fill in U+P login-->\\n+<form id='form8' action='formtest.js'> 8\\n+    <input type='text'     name='uname' value='someuser'>\\n+    <input type='password' name='pname' value=''>\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+\\n+\\n+<!-- 1 username field, too small for U+P login -->\\n+<form id='form9' action='formtest.js'> 9\\n+    <input type='text'     name='uname' value='' maxlength=\\\"4\\\">\\n+    <input type='password' name='pname' value=''>\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+<!-- 1 username field, too small for U+P login -->\\n+<form id='form10' action='formtest.js'> 10\\n+    <input type='text'     name='uname' value='' maxlength=\\\"0\\\">\\n+    <input type='password' name='pname' value=''>\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+<!-- 1 username field, too small for U+P login -->\\n+<form id='form11' action='formtest.js'> 11\\n+    <input type='text'     name='uname' value=''>\\n+    <input type='password' name='pname' value='' maxlength=\\\"4\\\">\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+<!-- 1 username field, too small for either login -->\\n+<form id='form12' action='formtest.js'> 12\\n+    <input type='text'     name='uname' value=''>\\n+    <input type='password' name='pname' value='' maxlength=\\\"1\\\">\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+<!-- 1 username field, too small for either login -->\\n+<form id='form13' action='formtest.js'> 13\\n+    <input type='text'     name='uname' value=''>\\n+    <input type='password' name='pname' value='' maxlength=\\\"0\\\">\\n+\\n+    <button type='submit'>Submit</button>\\n+    <button type='reset'> Reset </button>\\n+</form>\\n+\\n+\\n+\\n+</div>\\n+\\n+<pre id=\\\"test\\\">\\n+<script class=\\\"testbody\\\" type=\\\"text/javascript\\\">\\n+\\n+/** Test for Login Manager: password-only logins **/\\n+\\n+function startTest() {\\n+\\n+    checkForm(1, \\\"1234\\\");\\n+    checkForm(2, \\\"1234\\\", \\\"\\\");\\n+    checkForm(3, \\\"1234\\\", \\\"\\\", \\\"\\\");\\n+    checkUnmodifiedForm(4);\\n+\\n+    checkForm(5, \\\"\\\", \\\"1234\\\");\\n+    checkForm(6, \\\"someuser\\\", \\\"\\\");\\n+\\n+    checkForm(7, \\\"testuser\\\", \\\"testpass\\\");\\n+    checkForm(8, \\\"someuser\\\", \\\"\\\");\\n+\\n+    checkForm(9, \\\"\\\", \\\"1234\\\");\\n+    checkForm(10, \\\"\\\", \\\"1234\\\");\\n+    checkForm(11, \\\"\\\", \\\"1234\\\");\\n+\\n+    checkUnmodifiedForm(12);\\n+    checkUnmodifiedForm(13);\\n+\\n+    netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\\n+    pwmgr.removeLogin(pwlogin2);\\n+    SimpleTest.finish();\\n+}\\n+\\n+\\n+netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');\\n+\\n+// Get the pwmgr service\\n+var Cc_pwmgr = Components.classes[\\\"@mozilla.org/login-manager;1\\\"];\\n+ok(Cc_pwmgr != null, \\\"Access Cc[@mozilla.org/login-manager;1]\\\");\\n+\\n+var Ci_pwmgr = Components.interfaces.nsILoginManager;\\n+ok(Ci_pwmgr != null, \\\"Access Ci.nsILoginManager\\\");\\n+\\n+var pwmgr = Cc_pwmgr.getService(Ci_pwmgr);\\n+ok(pwmgr != null, \\\"pwmgr getService()\\\");\\n+\\n+\\n+var nsLoginInfo = new Components.Constructor(\\\"@mozilla.org/login-manager/loginInfo;1\\\", Components.interfaces.nsILoginInfo);\\n+ok(nsLoginInfo != null, \\\"nsLoginInfo constructor\\\");\\n+\\n+// pwlogin1 uses a unique formSubmitURL, to check forms where no other logins\\n+// will apply. pwlogin2 uses the normal formSubmitURL, so that we can test\\n+// forms with a mix of username and non-username logins that might apply.\\n+//\\n+// Note: pwlogin2 is deleted at the end of the test.\\n+\\n+pwlogin1 = new nsLoginInfo();\\n+pwlogin2 = new nsLoginInfo();\\n+\\n+pwlogin1.init(\\\"http://localhost:8888\\\", \\\"http://localhost:1111\\\", null,\\n+    \\\"\\\", \\\"1234\\\", \\\"uname\\\", \\\"pword\\\");\\n+\\n+pwlogin2.init(\\\"http://localhost:8888\\\", \\\"http://localhost:8888\\\", null,\\n+    \\\"\\\", \\\"1234\\\", \\\"uname\\\", \\\"pword\\\");\\n+\\n+try {\\n+    pwmgr.addLogin(pwlogin1);\\n+    pwmgr.addLogin(pwlogin2);\\n+} catch (e) {\\n+    ok(false, \\\"addLogin threw: \\\" + e);\\n+}\\n+\\n+window.onload = startTest;\\n+\\n+SimpleTest.waitForExplicitFinish();\\n+</script>\\n+</pre>\\n+</body>\\n+</html>\\n+\\n\""}