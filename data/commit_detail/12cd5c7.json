{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas12cd5c7\""},"diff":"\"12cd5c7 Bug 390719 - GTK textboxes should highlight according to theme when focused, patch by Michael Ventnor <ventnor.bugzilla@yahoo.com.au>, r+sr=roc, a1.9=pavlov\\ndiff --git a/widget/src/gtk2/gtk2drawing.c b/widget/src/gtk2/gtk2drawing.c\\nindex d2db795..dcd5f07 100644\\n--- a/widget/src/gtk2/gtk2drawing.c\\n+++ b/widget/src/gtk2/gtk2drawing.c\\n@@ -616,17 +616,7 @@ moz_gtk_toggle_paint(GdkDrawable* drawable, GdkRectangle* rect,\\n     style = w->style;\\n     TSOffsetStyleGCs(style, x, y);\\n \\n-    /* Some themes check the widget state themselves. */\\n-    if (state->focused)\\n-        GTK_WIDGET_SET_FLAGS(w, GTK_HAS_FOCUS);\\n-    else\\n-        GTK_WIDGET_UNSET_FLAGS(w, GTK_HAS_FOCUS);\\n-\\n-    if (state_type != GTK_STATE_INSENSITIVE)\\n-         GTK_WIDGET_SET_FLAGS(w, GTK_SENSITIVE);\\n-    else\\n-         GTK_WIDGET_UNSET_FLAGS(w, GTK_SENSITIVE);\\n-\\n+    gtk_widget_set_sensitive(w, !state->disabled);\\n     GTK_TOGGLE_BUTTON(w)->active = selected;\\n       \\n     if (isradio) {\\n@@ -1005,26 +995,34 @@ moz_gtk_entry_paint(GdkDrawable* drawable, GdkRectangle* rect,\\n     x = rect->x;\\n     y = rect->y;\\n \\n+    if (state->focused && !state->disabled) {\\n+         /* This will get us the lit borders that focused textboxes enjoy on some themes. */\\n+        GTK_WIDGET_SET_FLAGS(gEntryWidget, GTK_HAS_FOCUS);\\n+\\n+        if (!interior_focus) {\\n+            /* Indent the border a little bit if we have exterior focus \\n+               (this is what GTK does to draw native entries) */\\n+            x += focus_width;\\n+            y += focus_width;\\n+            width -= 2 * focus_width;\\n+            height -= 2 * focus_width;\\n+        }\\n+    }\\n+\\n     TSOffsetStyleGCs(style, x, y);\\n     gtk_paint_shadow(style, drawable, GTK_STATE_NORMAL, GTK_SHADOW_IN,\\n                      cliprect, gEntryWidget, \\\"entry\\\", x, y, width, height);\\n-  \\n-\\n-    if (state->focused && !interior_focus) {\\n-        x += focus_width;\\n-        y += focus_width;\\n-        width -= 2 * focus_width;\\n-        height -= 2 * focus_width;\\n \\n-        TSOffsetStyleGCs(style, x, y);\\n-        gtk_paint_shadow(style, drawable, GTK_STATE_NORMAL, GTK_SHADOW_IN,\\n-                         cliprect, gEntryWidget, \\\"entry\\\",\\n-                         x, y, width, height);\\n+    if (state->focused && !state->disabled) {\\n+        if (!interior_focus) {\\n+            TSOffsetStyleGCs(style, rect->x, rect->y);\\n+            gtk_paint_focus(style, drawable,  GTK_STATE_NORMAL, cliprect,\\n+                            gEntryWidget, \\\"entry\\\",\\n+                            rect->x, rect->y, rect->width, rect->height);\\n+        }\\n \\n-        TSOffsetStyleGCs(style, rect->x, rect->y);\\n-        gtk_paint_focus(style, drawable,  GTK_STATE_NORMAL, cliprect,\\n-                        gEntryWidget, \\\"entry\\\",\\n-                        rect->x, rect->y, rect->width, rect->height);\\n+        /* Now unset the focus flag. We don't want other entries to look like they're focused too! */\\n+        GTK_WIDGET_UNSET_FLAGS(gEntryWidget, GTK_HAS_FOCUS);\\n     }\\n \\n     return MOZ_GTK_SUCCESS;\\n\""}