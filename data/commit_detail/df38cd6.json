{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Basdf38cd6\""},"diff":"\"df38cd6 Bug 392314, alt key should close menu, add some key closing menus tests, r+sr=bz,a=dbaron\\ndiff --git a/layout/xul/base/src/nsMenuBarFrame.cpp b/layout/xul/base/src/nsMenuBarFrame.cpp\\nindex 15df2a0..e57d316 100644\\n--- a/layout/xul/base/src/nsMenuBarFrame.cpp\\n+++ b/layout/xul/base/src/nsMenuBarFrame.cpp\\n@@ -255,6 +255,8 @@ nsMenuBarFrame::FindMenuWithShortcut(nsIDOMKeyEvent* aKeyEvent)\\n {\\n   PRUint32 charCode;\\n   aKeyEvent->GetCharCode(&charCode);\\n+  if (!charCode) // no character was pressed so just return  \\n+    return nsnull;\\n \\n   // Enumerate over our list of frames.\\n   nsIFrame* immediateParent = nsnull;\\ndiff --git a/layout/xul/base/src/nsXULPopupManager.cpp b/layout/xul/base/src/nsXULPopupManager.cpp\\nindex c4e5e61..6877e9c 100644\\n--- a/layout/xul/base/src/nsXULPopupManager.cpp\\n+++ b/layout/xul/base/src/nsXULPopupManager.cpp\\n@@ -1604,8 +1604,10 @@ nsXULPopupManager::IsValidMenuItem(nsPresContext* aPresContext,\\n nsresult\\n nsXULPopupManager::KeyUp(nsIDOMEvent* aKeyEvent)\\n {\\n-  aKeyEvent->StopPropagation();\\n-  aKeyEvent->PreventDefault();\\n+  if (mCurrentMenu) {\\n+    aKeyEvent->StopPropagation();\\n+    aKeyEvent->PreventDefault();\\n+  }\\n \\n   return NS_OK; // I am consuming event\\n }\\n@@ -1613,6 +1615,10 @@ nsXULPopupManager::KeyUp(nsIDOMEvent* aKeyEvent)\\n nsresult\\n nsXULPopupManager::KeyDown(nsIDOMEvent* aKeyEvent)\\n {\\n+  // don't do anything if a menu isn't open\\n+  if (!mCurrentMenu)\\n+    return NS_OK;\\n+\\n   PRInt32 menuAccessKey = -1;\\n \\n   // If the key just pressed is the access key (usually Alt),\\n@@ -1726,8 +1732,12 @@ nsXULPopupManager::KeyPress(nsIDOMEvent* aKeyEvent)\\n     HandleShortcutNavigation(keyEvent, nsnull);\\n   }\\n \\n-  aKeyEvent->StopPropagation();\\n-  aKeyEvent->PreventDefault();\\n+  if (mCurrentMenu) {\\n+    // if a menu is open, it consumes the key event\\n+    aKeyEvent->StopPropagation();\\n+    aKeyEvent->PreventDefault();\\n+  }\\n+\\n   return NS_OK; // I am consuming event\\n }\\n \\ndiff --git a/toolkit/content/tests/widgets/window_menubar.xul b/toolkit/content/tests/widgets/window_menubar.xul\\nindex 6b163eb..1f884e0 100644\\n--- a/toolkit/content/tests/widgets/window_menubar.xul\\n+++ b/toolkit/content/tests/widgets/window_menubar.xul\\n@@ -1,8 +1,11 @@\\n <?xml version=\\\"1.0\\\"?>\\n <?xml-stylesheet href=\\\"chrome://global/skin\\\" type=\\\"text/css\\\"?>\\n \\n+<!-- the condition in the focus event handler is because pressing Tab\\n+     unfocuses and refocuses the window on Windows -->\\n+\\n <window title=\\\"Popup Tests\\\"\\n-  onfocus=\\\"runTests()\\\"\\n+  onfocus=\\\"if(gTestIndex == -1) runTests()\\\"\\n   xmlns:html=\\\"http://www.w3.org/1999/xhtml\\\"\\n   xmlns=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\">\\n \\n@@ -492,6 +495,49 @@ var popupTests = [\\n     checkClosed(\\\"editmenu\\\", testname);\\n   }\\n },\\n+{\\n+  testname: \\\"F10 to activate menubar for tab deactivation\\\",\\n+  events: [ \\\"DOMMenuBarActive menubar\\\", \\\"DOMMenuItemActive filemenu\\\" ],\\n+  test: function() { synthesizeKey(\\\"VK_F10\\\", { }); },\\n+},\\n+{\\n+  testname: \\\"Deactivate menubar with tab key\\\",\\n+  events: [ \\\"DOMMenuBarInactive menubar\\\", \\\"DOMMenuItemInactive filemenu\\\" ],\\n+  test: function() { synthesizeKey(\\\"VK_TAB\\\", { }); },\\n+},\\n+{\\n+  testname: \\\"F10 to activate menubar for escape deactivation\\\",\\n+  events: [ \\\"DOMMenuBarActive menubar\\\", \\\"DOMMenuItemActive filemenu\\\" ],\\n+  test: function() { synthesizeKey(\\\"VK_F10\\\", { }); },\\n+},\\n+{\\n+  testname: \\\"Deactivate menubar with escape key\\\",\\n+  events: [ \\\"DOMMenuBarInactive menubar\\\", \\\"DOMMenuItemInactive filemenu\\\" ],\\n+  test: function() { synthesizeKey(\\\"VK_ESCAPE\\\", { }); },\\n+},\\n+{\\n+  testname: \\\"F10 to activate menubar for f10 deactivation\\\",\\n+  events: [ \\\"DOMMenuBarActive menubar\\\", \\\"DOMMenuItemActive filemenu\\\" ],\\n+  test: function() { synthesizeKey(\\\"VK_F10\\\", { }); },\\n+},\\n+{\\n+  testname: \\\"Deactivate menubar with f10 key\\\",\\n+  events: [ \\\"DOMMenuBarInactive menubar\\\", \\\"DOMMenuItemInactive filemenu\\\"  ],\\n+  test: function() { synthesizeKey(\\\"VK_F10\\\", { }); },\\n+},\\n+{\\n+  testname: \\\"F10 to activate menubar for alt deactivation\\\",\\n+  condition: function() { return (navigator.platform.indexOf(\\\"Win\\\") == 0) },\\n+  events: [ \\\"DOMMenuBarActive menubar\\\", \\\"DOMMenuItemActive filemenu\\\" ],\\n+  test: function() { synthesizeKey(\\\"VK_F10\\\", { }); },\\n+},\\n+{\\n+  testname: \\\"Deactivate menubar with alt key\\\",\\n+  condition: function() { return (navigator.platform.indexOf(\\\"Win\\\") == 0) },\\n+  events: [ \\\"DOMMenuBarInactive menubar\\\", \\\"DOMMenuItemInactive filemenu\\\"  ],\\n+  test: function() { synthesizeKey(\\\"VK_ALT\\\", { }); },\\n+}\\n+\\n ];\\n \\n ]]>\\n\""}