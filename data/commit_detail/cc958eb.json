{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bascc958eb\""},"diff":"\"cc958eb Bug 377696, fix up missing return values, and use image instead of src, plus add tests for deck, statusbar and the main element properties, r=mano\\ndiff --git a/toolkit/content/tests/widgets/Makefile.in b/toolkit/content/tests/widgets/Makefile.in\\nindex 397a5ca..0912fb4 100644\\n--- a/toolkit/content/tests/widgets/Makefile.in\\n+++ b/toolkit/content/tests/widgets/Makefile.in\\n@@ -49,6 +49,7 @@ _TEST_FILES = \\ttest_bug360220.xul \\\\\\n \\t\\ttest_bug365773.xul \\\\\\n \\t\\ttest_closemenu_attribute.xul \\\\\\n \\t\\ttest_colorpicker_popup.xul \\\\\\n+\\t\\ttest_deck.xul \\\\\\n \\t\\ttest_menulist_keynav.xul \\\\\\n \\t\\ttest_popup_coords.xul \\\\\\n \\t\\ttest_popup_recreate.xul \\\\\\n@@ -67,6 +68,8 @@ _TEST_FILES = \\ttest_bug360220.xul \\\\\\n \\t\\twindow_popup_attribute.xul \\\\\\n \\t\\twindow_tooltip.xul \\\\\\n \\t\\ttest_progressmeter.xul \\\\\\n+\\t\\ttest_props.xul \\\\\\n+\\t\\ttest_statusbar.xul \\\\\\n \\t\\ttest_datepicker.xul \\\\\\n \\t\\ttest_timepicker.xul \\\\\\n \\t\\ttest_textbox_number.xul \\\\\\ndiff --git a/toolkit/content/tests/widgets/test_deck.xul b/toolkit/content/tests/widgets/test_deck.xul\\nnew file mode 100644\\nindex 0000000..265be860\\n--- /dev/null\\n+++ b/toolkit/content/tests/widgets/test_deck.xul\\n@@ -0,0 +1,60 @@\\n+<?xml version=\\\"1.0\\\"?>\\n+<?xml-stylesheet href=\\\"chrome://global/skin\\\" type=\\\"text/css\\\"?>\\n+<?xml-stylesheet href=\\\"chrome://mochikit/content/tests/SimpleTest/test.css\\\" type=\\\"text/css\\\"?>\\n+<!--\\n+  XUL Widget Test for deck\\n+  -->\\n+<window title=\\\"Deck Test\\\"\\n+        onload=\\\"setTimeout(test_deck, 0);\\\"\\n+        xmlns=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\">\\n+  <script type=\\\"application/javascript\\\" \\n+          src=\\\"chrome://mochikit/content/MochiKit/packed.js\\\"></script>\\n+  <script type=\\\"application/javascript\\\"\\n+          src=\\\"chrome://mochikit/content/tests/SimpleTest/SimpleTest.js\\\"></script>      \\n+  <script type=\\\"application/javascript\\\"\\n+          src=\\\"chrome://mochikit/content/tests/SimpleTest/EventUtils.js\\\"></script>      \\n+\\n+<deck id=\\\"deck1\\\" style=\\\"padding-top: 5px; padding-bottom: 12px;\\\">\\n+  <button id=\\\"d1b1\\\" label=\\\"Button One\\\"/>\\n+  <button id=\\\"d1b2\\\" label=\\\"Button Two is larger\\\" height=\\\"80\\\" style=\\\"margin: 1px;\\\"/>\\n+</deck>\\n+<deck id=\\\"deck2\\\" selectedIndex=\\\"1\\\">\\n+  <button id=\\\"d2b1\\\" label=\\\"Button One\\\"/>\\n+  <button id=\\\"d2b2\\\" label=\\\"Button Two\\\"/>\\n+</deck>\\n+\\n+  <!-- test resuls are displayed in the html:body -->\\n+  <body xmlns=\\\"http://www.w3.org/1999/xhtml\\\" style=\\\"height: 300px; overflow: auto;\\\"/>\\n+\\n+  <!-- test code goes here -->\\n+  <script type=\\\"application/javascript\\\"><![CDATA[\\n+\\n+SimpleTest.waitForExplicitFinish();\\n+\\n+function test_deck()\\n+{\\n+  var deck = $(\\\"deck1\\\");\\n+  ok(deck.selectedIndex === '0', \\\"deck one selectedIndex\\\");\\n+  // this size is the button height, 80, plus the button padding of 1px on each side,\\n+  // plus the deck's 5px top padding and the 12px bottom padding.\\n+  var rect = deck.getBoundingClientRect();\\n+  is(Math.round(rect.bottom) - Math.round(rect.top), 99, \\\"deck size of largest child\\\");\\n+  synthesizeMouseExpectEvent(deck, 12, 12, { }, $(\\\"d1b1\\\"), \\\"click\\\", \\\"mouse on deck one\\\");\\n+\\n+  // change the selected page of the deck and ensure that the mouse click goes\\n+  // to the button on that page\\n+  deck.selectedIndex = 1;\\n+  ok(deck.selectedIndex === '1', \\\"deck one selectedIndex after change\\\");\\n+  synthesizeMouseExpectEvent(deck, 9, 9, { }, $(\\\"d1b2\\\"), \\\"click\\\", \\\"mouse on deck one after change\\\");\\n+\\n+  deck = $(\\\"deck2\\\");\\n+  ok(deck.selectedIndex === '1', \\\"deck two selectedIndex\\\");\\n+  synthesizeMouseExpectEvent(deck, 9, 9, { }, $(\\\"d2b2\\\"), \\\"click\\\", \\\"mouse on deck two\\\");\\n+\\n+  SimpleTest.finish();\\n+}\\n+\\n+]]>\\n+</script>\\n+\\n+</window>\\ndiff --git a/toolkit/content/tests/widgets/test_props.xul b/toolkit/content/tests/widgets/test_props.xul\\nnew file mode 100644\\nindex 0000000..8d85674\\n--- /dev/null\\n+++ b/toolkit/content/tests/widgets/test_props.xul\\n@@ -0,0 +1,93 @@\\n+<?xml version=\\\"1.0\\\"?>\\n+<?xml-stylesheet href=\\\"chrome://global/skin\\\" type=\\\"text/css\\\"?>\\n+<?xml-stylesheet href=\\\"chrome://mochikit/content/tests/SimpleTest/test.css\\\" type=\\\"text/css\\\"?>\\n+<!--\\n+  XUL Widget Test for basic properties - this test checks that the basic\\n+  properties defined in general.xml and inherited by a number of elements\\n+  work properly.\\n+  -->\\n+<window title=\\\"Basic Properties Test\\\"\\n+        onload=\\\"setTimeout(test_props, 0);\\\"\\n+        xmlns=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\">\\n+  <script type=\\\"application/javascript\\\" \\n+          src=\\\"chrome://mochikit/content/MochiKit/packed.js\\\"></script>\\n+  <script type=\\\"application/javascript\\\"\\n+          src=\\\"chrome://mochikit/content/tests/SimpleTest/SimpleTest.js\\\"></script>      \\n+  <script type=\\\"application/javascript\\\"\\n+          src=\\\"chrome://mochikit/content/tests/SimpleTest/EventUtils.js\\\"></script>      \\n+\\n+<command id=\\\"cmd_nothing\\\"/>\\n+<command id=\\\"cmd_action\\\"/>\\n+\\n+<button id=\\\"button\\\" label=\\\"Button\\\" accesskey=\\\"B\\\"\\n+        crop=\\\"end\\\" image=\\\"happy.png\\\" command=\\\"cmd_nothing\\\"/>\\n+<checkbox id=\\\"checkbox\\\" label=\\\"Checkbox\\\" accesskey=\\\"B\\\"\\n+          crop=\\\"end\\\" image=\\\"happy.png\\\" command=\\\"cmd_nothing\\\"/>\\n+<radiogroup>\\n+  <radio id=\\\"radio\\\" label=\\\"Radio Button\\\" value=\\\"rb1\\\" accesskey=\\\"B\\\"\\n+         crop=\\\"end\\\" image=\\\"happy.png\\\" command=\\\"cmd_nothing\\\"/>\\n+</radiogroup>\\n+\\n+  <!-- test resuls are displayed in the html:body -->\\n+  <body xmlns=\\\"http://www.w3.org/1999/xhtml\\\" style=\\\"height: 300px; overflow: auto;\\\"/>\\n+\\n+  <!-- test code goes here -->\\n+  <script type=\\\"application/javascript\\\"><![CDATA[\\n+\\n+SimpleTest.waitForExplicitFinish();\\n+\\n+function test_props()\\n+{\\n+  test_props_forelement($(\\\"button\\\"), \\\"Button\\\", null);\\n+  test_props_forelement($(\\\"checkbox\\\"), \\\"Checkbox\\\", null);\\n+  test_props_forelement($(\\\"radio\\\"), \\\"Radio Button\\\", \\\"rb1\\\");\\n+\\n+  SimpleTest.finish();\\n+}\\n+\\n+function test_props_forelement(element, label, value)\\n+{\\n+  // check the initial values\\n+  is(element.label, label, \\\"element label\\\");\\n+  if (value)\\n+    is(element.value, value, \\\"element value\\\");\\n+  is(element.accessKey, \\\"B\\\", \\\"element accessKey\\\");\\n+  is(element.crop, \\\"end\\\", \\\"element crop\\\");\\n+  is(element.image, \\\"happy.png\\\", \\\"element image\\\");\\n+  is(element.command, \\\"cmd_nothing\\\", \\\"element command\\\");\\n+  ok(element.tabIndex === 0, \\\"element tabIndex\\\");\\n+\\n+  synthesizeMouseExpectEvent(element, 4, 4, { }, $(\\\"cmd_nothing\\\"), \\\"command\\\", \\\"element\\\");\\n+\\n+  // make sure that setters return the value\\n+  is(element.label = \\\"Label\\\", \\\"Label\\\", \\\"element label setter return\\\");\\n+  if (value)\\n+    is(element.value = \\\"lb\\\", \\\"lb\\\", \\\"element value setter return\\\");\\n+  is(element.accessKey = \\\"L\\\", \\\"L\\\", \\\"element accessKey setter return\\\");\\n+  is(element.crop = \\\"start\\\", \\\"start\\\", \\\"element crop setter return\\\");\\n+  is(element.image = \\\"sad.png\\\", \\\"sad.png\\\", \\\"element image setter return\\\");\\n+  is(element.command = \\\"cmd_action\\\", \\\"cmd_action\\\", \\\"element command setter return\\\");\\n+\\n+  // check the value after it was changed\\n+  is(element.label, \\\"Label\\\", \\\"element label after set\\\");\\n+  if (value)\\n+    is(element.value, \\\"lb\\\", \\\"element value after set\\\");\\n+  is(element.accessKey, \\\"L\\\", \\\"element accessKey after set\\\");\\n+  is(element.crop, \\\"start\\\", \\\"element crop after set\\\");\\n+  is(element.image, \\\"sad.png\\\", \\\"element image after set\\\");\\n+  is(element.command, \\\"cmd_action\\\", \\\"element command after set\\\");\\n+\\n+  synthesizeMouseExpectEvent(element, 4, 4, { }, $(\\\"cmd_action\\\"), \\\"command\\\", \\\"element\\\");\\n+\\n+  // check that clicks on disabled items don't fire a command event\\n+  ok((element.disabled = true) === true, \\\"element disabled setter return\\\");\\n+  ok(element.disabled === true, \\\"element disabled after set\\\");\\n+  synthesizeMouseExpectEvent(element, 4, 4, { }, $(\\\"cmd_action\\\"), \\\"!command\\\", \\\"element\\\");\\n+\\n+  element.disabled = false;\\n+}\\n+\\n+]]>\\n+</script>\\n+\\n+</window>\\ndiff --git a/toolkit/content/tests/widgets/test_statusbar.xul b/toolkit/content/tests/widgets/test_statusbar.xul\\nnew file mode 100644\\nindex 0000000..6ba572d\\n--- /dev/null\\n+++ b/toolkit/content/tests/widgets/test_statusbar.xul\\n@@ -0,0 +1,41 @@\\n+<?xml version=\\\"1.0\\\"?>\\n+<?xml-stylesheet href=\\\"chrome://global/skin\\\" type=\\\"text/css\\\"?>\\n+<?xml-stylesheet href=\\\"chrome://mochikit/content/tests/SimpleTest/test.css\\\" type=\\\"text/css\\\"?>\\n+<!--\\n+  XUL Widget Test for statusbar\\n+  -->\\n+<window title=\\\"Statusbar Test\\\"\\n+        onload=\\\"setTimeout(test_statusbar, 0);\\\"\\n+        xmlns=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\">\\n+  <script type=\\\"application/javascript\\\" \\n+          src=\\\"chrome://mochikit/content/MochiKit/packed.js\\\"></script>\\n+  <script type=\\\"application/javascript\\\"\\n+          src=\\\"chrome://mochikit/content/tests/SimpleTest/SimpleTest.js\\\"></script>      \\n+  <script type=\\\"application/javascript\\\"\\n+          src=\\\"chrome://mochikit/content/tests/SimpleTest/EventUtils.js\\\"></script>      \\n+\\n+<statusbar>\\n+  <statusbarpanel id=\\\"panel\\\" label=\\\"OK\\\" image=\\\"happy.png\\\"/>\\n+</statusbar>\\n+\\n+  <!-- test resuls are displayed in the html:body -->\\n+  <body xmlns=\\\"http://www.w3.org/1999/xhtml\\\" style=\\\"height: 300px; overflow: auto;\\\"/>\\n+\\n+  <!-- test code goes here -->\\n+  <script type=\\\"application/javascript\\\"><![CDATA[\\n+\\n+SimpleTest.waitForExplicitFinish();\\n+\\n+function test_statusbar()\\n+{\\n+  var panel = $(\\\"panel\\\");\\n+  ok(panel.label, \\\"OK\\\", \\\"statusbarpanel label\\\");\\n+  ok(panel.image, \\\"happy.png\\\", \\\"statusbarpanel image\\\");\\n+\\n+  SimpleTest.finish();\\n+}\\n+\\n+]]>\\n+</script>\\n+\\n+</window>\\ndiff --git a/toolkit/content/widgets/general.xml b/toolkit/content/widgets/general.xml\\nindex 4119f00..383c8ce 100644\\n--- a/toolkit/content/widgets/general.xml\\n+++ b/toolkit/content/widgets/general.xml\\n@@ -21,12 +21,14 @@\\n   <binding id=\\\"basetext\\\" extends=\\\"chrome://global/content/bindings/general.xml#basecontrol\\\">\\n     <implementation>\\n       <!-- public implementation -->\\n-      <property name=\\\"label\\\"      onset=\\\"return this.setAttribute('label',val);\\\"\\n+      <property name=\\\"label\\\"      onset=\\\"this.setAttribute('label',val); return val;\\\"\\n                                   onget=\\\"return this.getAttribute('label');\\\"/>\\n-      <property name=\\\"crop\\\"       onset=\\\"return this.setAttribute('crop',val);\\\"\\n+      <property name=\\\"crop\\\"       onset=\\\"this.setAttribute('crop',val); return val;\\\"\\n                                   onget=\\\"return this.getAttribute('crop');\\\"/>\\n-      <property name=\\\"image\\\"      onset=\\\"return this.setAttribute('image',val);\\\"\\n+      <property name=\\\"image\\\"      onset=\\\"this.setAttribute('image',val); return val;\\\"\\n                                   onget=\\\"return this.getAttribute('image');\\\"/>\\n+      <property name=\\\"command\\\"    onset=\\\"this.setAttribute('command',val); return val;\\\"\\n+                                  onget=\\\"return this.getAttribute('command');\\\"/>\\n       <property name=\\\"accessKey\\\">\\n         <getter>\\n           <![CDATA[\\n@@ -53,7 +55,7 @@\\n \\n   <binding id=\\\"control-item\\\" extends=\\\"chrome://global/content/bindings/general.xml#basetext\\\">\\n     <implementation>\\n-      <property name=\\\"value\\\"      onset=\\\"return this.setAttribute('value', val);\\\"\\n+      <property name=\\\"value\\\"      onset=\\\"this.setAttribute('value', val); return val;\\\"\\n                                   onget=\\\"return this.getAttribute('value');\\\"/>\\n     </implementation>\\n   </binding>\\n@@ -239,16 +241,16 @@\\n       <property name=\\\"label\\\"\\n                 onget=\\\"return this.getAttribute('label');\\\"\\n                 onset=\\\"this.setAttribute('label',val); return val;\\\"/>\\n-      <property name=\\\"src\\\"\\n-                onget=\\\"return this.getAttribute('src');\\\"\\n-                onset=\\\"this.setAttribute('src',val); return val;\\\"/>\\n+      <property name=\\\"image\\\"\\n+                onget=\\\"return this.getAttribute('image');\\\"\\n+                onset=\\\"this.setAttribute('image',val); return val;\\\"/>\\n     </implementation>\\n   </binding>\\n \\n   <binding id=\\\"statusbarpanel-menu-iconic\\\" display=\\\"xul:menu\\\"\\n            extends=\\\"chrome://global/content/bindings/general.xml#statusbarpanel\\\">\\n     <content>\\n-      <xul:image class=\\\"statusbarpanel-icon\\\" xbl:inherits=\\\"src\\\"/>\\n+      <xul:image class=\\\"statusbarpanel-icon\\\" xbl:inherits=\\\"image,image=src\\\"/>\\n       <children/>\\n     </content>\\n   </binding>\\n@@ -275,7 +277,7 @@\\n   <binding id=\\\"statusbarpanel-iconic\\\" display=\\\"xul:button\\\"\\n            extends=\\\"chrome://global/content/bindings/general.xml#statusbarpanel\\\">\\n     <content>\\n-      <xul:image class=\\\"statusbarpanel-icon\\\" xbl:inherits=\\\"src\\\"/>\\n+      <xul:image class=\\\"statusbarpanel-icon\\\" xbl:inherits=\\\"image,image=src\\\"/>\\n     </content>\\n \\n     <implementation implements=\\\"nsIAccessibleProvider\\\">\\n@@ -292,7 +294,7 @@\\n   <binding id=\\\"statusbarpanel-iconic-text\\\" display=\\\"xul:button\\\"\\n            extends=\\\"chrome://global/content/bindings/general.xml#statusbarpanel\\\">\\n     <content>\\n-      <xul:image class=\\\"statusbarpanel-icon\\\" xbl:inherits=\\\"src\\\"/>\\n+      <xul:image class=\\\"statusbarpanel-icon\\\" xbl:inherits=\\\"image,image=src\\\"/>\\n       <xul:label class=\\\"statusbarpanel-text\\\" xbl:inherits=\\\"value=label,crop\\\"/>\\n     </content>\\n   </binding>\\n@@ -315,7 +317,7 @@\\n   <binding id=\\\"deck\\\">\\n     <implementation>\\n       <property name=\\\"selectedIndex\\\"\\n-                onget=\\\"return this.getAttribute('selectedIndex');\\\">\\n+                onget=\\\"return this.getAttribute('selectedIndex') || '0'\\\">\\n         <setter>\\n         <![CDATA[\\n           if (this.selectedIndex == val)\\n\""}