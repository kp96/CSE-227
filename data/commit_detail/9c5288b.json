{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas9c5288b\""},"diff":"\"9c5288b Bug 396452. Enforce SpiderMonkey request model with assertions. r=mrbkap, sr/a=brendan\\ndiff --git a/content/canvas/src/nsCanvasRenderingContext2D.cpp b/content/canvas/src/nsCanvasRenderingContext2D.cpp\\nindex d3a1078..ee767cf 100644\\n--- a/content/canvas/src/nsCanvasRenderingContext2D.cpp\\n+++ b/content/canvas/src/nsCanvasRenderingContext2D.cpp\\n@@ -1885,6 +1885,8 @@ nsCanvasRenderingContext2D::DrawImage()\\n     if (argc < 3)\\n         return NS_ERROR_INVALID_ARG;\\n \\n+    JSAutoRequest ar(ctx);\\n+\\n     double sx,sy,sw,sh;\\n     double dx,dy,dw,dh;\\n \\ndiff --git a/dom/src/base/nsDOMClassInfo.cpp b/dom/src/base/nsDOMClassInfo.cpp\\nindex 52de671..5c18513 100644\\n--- a/dom/src/base/nsDOMClassInfo.cpp\\n+++ b/dom/src/base/nsDOMClassInfo.cpp\\n@@ -8854,6 +8854,8 @@ nsHTMLPluginObjElementSH::GetPluginJSObject(JSContext *cx, JSObject *obj,\\n   nsCOMPtr<nsIPluginInstanceInternal> plugin_internal =\\n     do_QueryInterface(plugin_inst);\\n \\n+  JSAutoRequest ar(cx);\\n+\\n   if (plugin_internal) {\\n     *plugin_obj = plugin_internal->GetJSObject(cx);\\n \\ndiff --git a/dom/src/base/nsJSEnvironment.cpp b/dom/src/base/nsJSEnvironment.cpp\\nindex 4ab94b0..db881ff 100644\\n--- a/dom/src/base/nsJSEnvironment.cpp\\n+++ b/dom/src/base/nsJSEnvironment.cpp\\n@@ -1894,6 +1894,8 @@ nsJSContext::BindCompiledEventHandler(nsISupports* aTarget, void *aScope,\\n   NS_ENSURE_SUCCESS(rv, rv);\\n \\n   JSObject *funobj = (JSObject*) aHandler;\\n+  \\n+  JSAutoRequest ar(mContext);\\n \\n   NS_ASSERTION(JS_TypeOfValue(mContext, OBJECT_TO_JSVAL(funobj)) == JSTYPE_FUNCTION,\\n                \\\"Event handler object not a function\\\");\\n@@ -1906,8 +1908,6 @@ nsJSContext::BindCompiledEventHandler(nsISupports* aTarget, void *aScope,\\n     return NS_ERROR_FAILURE;\\n   }\\n \\n-  JSAutoRequest ar(mContext);\\n-\\n   // Make sure the handler function is parented by its event target object\\n   if (funobj) { // && ::JS_GetParent(mContext, funobj) != target) {\\n     funobj = ::JS_CloneFunctionObject(mContext, funobj, target);\\n@@ -1950,9 +1950,9 @@ nsJSContext::GetBoundEventHandler(nsISupports* aTarget, void *aScope,\\n \\n     jsval funval;\\n     if (!JS_LookupProperty(mContext, obj, \\n-                             charName, &funval))\\n+                           charName, &funval))\\n         return NS_ERROR_FAILURE;\\n-\\n+    \\n     if (JS_TypeOfValue(mContext, funval) != JSTYPE_FUNCTION) {\\n         NS_WARNING(\\\"Event handler object not a function\\\");\\n         aHandler.drop();\\n@@ -3673,6 +3673,8 @@ nsJSArgArray::nsJSArgArray(JSContext *aContext, PRUint32 argc, jsval *argv,\\n     *prv = NS_ERROR_OUT_OF_MEMORY;\\n     return;\\n   }\\n+\\n+  JSAutoRequest ar(aContext);\\n   for (PRUint32 i = 0; i < argc; ++i) {\\n     if (argv)\\n       mArgv[i] = argv[i];\\ndiff --git a/dom/src/jsurl/nsJSProtocolHandler.cpp b/dom/src/jsurl/nsJSProtocolHandler.cpp\\nindex db26bb3..b8f1bbf 100644\\n--- a/dom/src/jsurl/nsJSProtocolHandler.cpp\\n+++ b/dom/src/jsurl/nsJSProtocolHandler.cpp\\n@@ -262,6 +262,7 @@ nsresult nsJSThunk::EvaluateScript(nsIChannel *aChannel,\\n         // First check to make sure it's OK to evaluate this script to\\n         // start with.  For example, script could be disabled.\\n         JSContext *cx = (JSContext*)scriptContext->GetNativeContext();\\n+        JSAutoRequest ar(cx);\\n \\n         PRBool ok;\\n         rv = securityManager->CanExecuteScripts(cx, principal, &ok);\\n@@ -336,7 +337,9 @@ nsresult nsJSThunk::EvaluateScript(nsIChannel *aChannel,\\n         // lose the error), or it might be JS that then proceeds to\\n         // cause an error of its own (which will also make us lose\\n         // this error).\\n-        ::JS_ReportPendingException((JSContext*)scriptContext->GetNativeContext());\\n+        JSContext *cx = (JSContext*)scriptContext->GetNativeContext();\\n+        JSAutoRequest ar(cx);\\n+        ::JS_ReportPendingException(cx);\\n     }\\n     \\n     if (NS_FAILED(rv)) {\\ndiff --git a/js/src/jsapi.c b/js/src/jsapi.c\\nindex d046a48..429c480 100644\\n--- a/js/src/jsapi.c\\n+++ b/js/src/jsapi.c\\n@@ -96,8 +96,9 @@\\n #define JS_ADDRESSOF_VA_LIST(ap) (&(ap))\\n #endif\\n \\n-#if defined(JS_PARANOID_REQUEST) && defined(JS_THREADSAFE)\\n-#define CHECK_REQUEST(cx)       JS_ASSERT(cx->requestDepth)\\n+#if defined(JS_THREADSAFE)\\n+#define CHECK_REQUEST(cx)                                                   \\\\\\n+    JS_ASSERT((cx)->requestDepth || (cx)->thread == (cx)->runtime->gcThread)\\n #else\\n #define CHECK_REQUEST(cx)       ((void)0)\\n #endif\\ndiff --git a/js/src/xpconnect/loader/mozJSComponentLoader.cpp b/js/src/xpconnect/loader/mozJSComponentLoader.cpp\\nindex 1dc4ad1..24d1377 100644\\n--- a/js/src/xpconnect/loader/mozJSComponentLoader.cpp\\n+++ b/js/src/xpconnect/loader/mozJSComponentLoader.cpp\\n@@ -1339,6 +1339,8 @@ mozJSComponentLoader::Import(const nsACString & registryLocation)\\n     rv = cc->GetJSContext(&cx);\\n     NS_ENSURE_SUCCESS(rv, rv);\\n \\n+    JSAutoRequest ar(cx);\\n+\\n     JSObject *targetObject = nsnull;\\n \\n     PRUint32 argc = 0;\\n@@ -1455,6 +1457,8 @@ mozJSComponentLoader::ImportInto(const nsACString & aLocation,\\n \\n     jsval symbols;\\n     if (targetObj) {\\n+        JSAutoRequest ar(mContext);\\n+\\n         if (!JS_GetProperty(mContext, mod->global,\\n                             \\\"EXPORTED_SYMBOLS\\\", &symbols)) {\\n             return ReportOnCaller(cc, ERROR_NOT_PRESENT,\\ndiff --git a/js/src/xpconnect/src/xpccomponents.cpp b/js/src/xpconnect/src/xpccomponents.cpp\\nindex cee5ac3..85e114d 100644\\n--- a/js/src/xpconnect/src/xpccomponents.cpp\\n+++ b/js/src/xpconnect/src/xpccomponents.cpp\\n@@ -2889,6 +2889,8 @@ nsXPCComponents_Utils::ReportError()\\n     if(NS_FAILED(rv) || !cx)\\n         return NS_OK;\\n \\n+    JSAutoRequest ar(cx);\\n+\\n     // get argc and argv and verify arg count\\n     PRUint32 argc;\\n     rv = cc->GetArgc(&argc);\\n\""}