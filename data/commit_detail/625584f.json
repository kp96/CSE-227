{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas625584f\""},"diff":"\"625584f Bug 380595 - Need unittest for nsIIdleService r=roc@ocallahan.org (Robert O'Callahan) sr=neil@parkwaycc.co.uk (Neil Rashbrook) Tests Only.\\ndiff --git a/widget/Makefile.in b/widget/Makefile.in\\nindex a3820ec..3488e317 100644\\n--- a/widget/Makefile.in\\n+++ b/widget/Makefile.in\\n@@ -42,7 +42,11 @@ VPATH\\t\\t= @srcdir@\\n \\n include $(DEPTH)/config/autoconf.mk\\n \\n-DIRS\\t\\t= public src\\n+DIRS\\t= public src\\n+\\n+ifdef MOZ_MOCHITEST\\n+DIRS  += tests\\n+endif\\n \\n include $(topsrcdir)/config/rules.mk\\n \\ndiff --git a/widget/tests/Makefile.in b/widget/tests/Makefile.in\\nnew file mode 100644\\nindex 0000000..bcd299e\\n--- /dev/null\\n+++ b/widget/tests/Makefile.in\\n@@ -0,0 +1,51 @@\\n+#\\n+# ***** BEGIN LICENSE BLOCK *****\\n+# Version: MPL 1.1/GPL 2.0/LGPL 2.1\\n+#\\n+# The contents of this file are subject to the Mozilla Public License Version\\n+# 1.1 (the \\\"License\\\"); you may not use this file except in compliance with\\n+# the License. You may obtain a copy of the License at\\n+# http://www.mozilla.org/MPL/\\n+#\\n+# Software distributed under the License is distributed on an \\\"AS IS\\\" basis,\\n+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\\n+# for the specific language governing rights and limitations under the\\n+# License.\\n+#\\n+# The Original Code is mozilla.org code.\\n+#\\n+# The Initial Developer of the Original Code is\\n+# Mozilla Foundation.\\n+# Portions created by the Initial Developer are Copyright (C) 2007\\n+# the Initial Developer. All Rights Reserved.\\n+#\\n+# Contributor(s):\\n+#\\n+# Alternatively, the contents of this file may be used under the terms of\\n+# either of the GNU General Public License Version 2 or later (the \\\"GPL\\\"),\\n+# or the GNU Lesser General Public License Version 2.1 or later (the \\\"LGPL\\\"),\\n+# in which case the provisions of the GPL or the LGPL are applicable instead\\n+# of those above. If you wish to allow use of your version of this file only\\n+# under the terms of either the GPL or the LGPL, and not to allow others to\\n+# use your version of this file under the terms of the MPL, indicate your\\n+# decision by deleting the provisions above and replace them with the notice\\n+# and other provisions required by the GPL or the LGPL. If you do not delete\\n+# the provisions above, a recipient may use your version of this file under\\n+# the terms of any one of the MPL, the GPL or the LGPL.\\n+#\\n+# ***** END LICENSE BLOCK *****\\n+\\n+DEPTH\\t\\t= ../..\\n+topsrcdir\\t= @top_srcdir@\\n+srcdir\\t\\t= @srcdir@\\n+VPATH\\t\\t= @srcdir@\\n+relativesrcdir  = widget/test \\n+\\n+include $(DEPTH)/config/autoconf.mk\\n+include $(topsrcdir)/config/rules.mk\\n+\\n+_TEST_FILES =\\ttest_bug343416.xul \\\\\\n+\\t\\t$(NULL)\\n+\\n+libs:: $(_TEST_FILES)\\n+\\t$(INSTALL) $^ $(DEPTH)/_tests/testing/mochitest/chrome/$(relativesrcdir)\\ndiff --git a/widget/tests/test_bug343416.xul b/widget/tests/test_bug343416.xul\\nnew file mode 100644\\nindex 0000000..7af8060\\n--- /dev/null\\n+++ b/widget/tests/test_bug343416.xul\\n@@ -0,0 +1,194 @@\\n+<?xml version=\\\"1.0\\\"?>\\n+<?xml-stylesheet href=\\\"chrome://global/skin\\\" type=\\\"text/css\\\"?>\\n+<?xml-stylesheet href=\\\"chrome://mochikit/content/tests/SimpleTest/test.css\\\"\\n+                 type=\\\"text/css\\\"?>\\n+<!--\\n+https://bugzilla.mozilla.org/show_bug.cgi?id=343416\\n+-->\\n+<window title=\\\"Mozilla Bug 343416\\\"\\n+  xmlns:html=\\\"http://www.w3.org/1999/xhtml\\\"\\n+  xmlns=\\\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\\\">\\n+\\n+  <title>Test for Bug 343416</title>\\n+  <script type=\\\"application/javascript\\\" \\n+   src=\\\"chrome://mochikit/content/MochiKit/packed.js\\\"></script>\\n+  <script type=\\\"application/javascript\\\"\\n+          src=\\\"chrome://mochikit/content/tests/SimpleTest/SimpleTest.js\\\" />\\n+\\n+<body  xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\\n+<a target=\\\"_blank\\\" href=\\\"https://bugzilla.mozilla.org/show_bug.cgi?id=343416\\\">Mozilla Bug 343416</a>\\n+<p id=\\\"display\\\"></p>\\n+<div id=\\\"content\\\" style=\\\"display: none\\\">\\n+  \\n+</div>\\n+<pre id=\\\"test\\\">\\n+</pre>\\n+</body>\\n+\\n+<script class=\\\"testbody\\\" type=\\\"application/javascript\\\">\\n+<![CDATA[\\n+\\n+/** Test for Bug 343416 **/\\n+SimpleTest.waitForExplicitFinish();\\n+\\n+// Observer:\\n+var idleObserver =\\n+{\\n+    QueryInterface: function _qi(iid)\\n+    {\\n+        if (iid.equals(Components.interfaces.nsISupports) ||\\n+            iid.equals(Components.interfaces.nsIObserver))\\n+        {\\n+            return this;\\n+        }\\n+        throw Components.results.NS_ERROR_NO_INTERFACE;\\n+    },\\n+    observe: function _observe(subject, topic, data)\\n+    {\\n+        if (topic != \\\"idle\\\")\\n+            return;\\n+        \\n+        var diff = Math.abs(data - newIdleSeconds * 1000);\\n+        ok (diff < 5000, \\\"The idle time should have increased by roughly 6 seconds,\\\" +\\n+                         \\\" as that's where we told this listener to fire.\\\");\\n+\\n+        // Attempt to get to the nsIIdleService        \\n+        var subjectOK = false;\\n+        try {\\n+            var idleService = subject.QueryInterface(nsIIdleService);\\n+            subjectOK = true;\\n+        }\\n+        catch (ex)\\n+        {}\\n+        ok(subjectOK, \\\"The subject of the notification should be the \\\" +\\n+                      \\\"nsIIdleService.\\\");\\n+\\n+        // Attempt to remove ourselves.\\n+        var removedObserver = false;\\n+        try {\\n+            idleService.removeIdleObserver(this, newIdleSeconds);\\n+            removedObserver = true;\\n+        }\\n+        catch (ex)\\n+        {}\\n+        ok(removedObserver, \\\"We should be able to remove our observer here.\\\");\\n+        finishedListenerOK = true;\\n+        if (finishedTimeoutOK)\\n+        {\\n+            clearTimeout(testBailout);\\n+            finishThisTest();\\n+        }\\n+    }\\n+};\\n+\\n+\\n+const nsIIdleService = Components.interfaces.nsIIdleService;\\n+const nsIISCID = \\\"@mozilla.org/widget/idleservice;1\\\";\\n+var idleService = null;\\n+try\\n+{\\n+    idleService = Components.classes[nsIISCID].getService(nsIIdleService);\\n+}\\n+catch (ex)\\n+{}\\n+\\n+ok(idleService, \\\"nsIIdleService should exist and be implemented on all tier 1 platforms.\\\");\\n+\\n+var idleTime = null;\\n+try\\n+{\\n+    idleTime = idleService.idleTime;\\n+}\\n+catch (ex)\\n+{}\\n+\\n+ok (idleTime, \\\"Getting the idle Time should not fail \\\" +\\n+              \\\"in normal circumstances on any tier 1 platform.\\\");\\n+\\n+// Now we set up a timeout to sanity-test the idleTime after 5 seconds\\n+setTimeout(testIdleTime, 5000);\\n+var startTimeStamp = Date.now();\\n+\\n+// Now we add the listener:\\n+var newIdleSeconds = Math.floor(idleTime / 1000) + 6;\\n+var addedObserver = false;\\n+try\\n+{\\n+    idleService.addIdleObserver(idleObserver, newIdleSeconds);\\n+    addedObserver = true;\\n+}\\n+catch (ex)\\n+{}\\n+\\n+ok(addedObserver, \\\"The nsIIdleService should allow us to add an observer.\\\");\\n+\\n+addedObserver = false;\\n+try\\n+{\\n+    idleService.addIdleObserver(idleObserver, newIdleSeconds);\\n+    addedObserver = true;\\n+}\\n+catch (ex)\\n+{}\\n+\\n+ok(addedObserver, \\\"The nsIIdleService should allow us to add the same observer again.\\\");\\n+\\n+var removedObserver = false;\\n+try\\n+{\\n+    idleService.removeIdleObserver(idleObserver, newIdleSeconds);\\n+    removedObserver = true;\\n+}\\n+catch (ex)\\n+{}\\n+\\n+ok(removedObserver, \\\"The nsIIdleService should allow us to remove the observer just once.\\\");\\n+\\n+function testIdleTime()\\n+{\\n+    try\\n+    {\\n+        var newIdleTime = idleService.idleTime;\\n+    }\\n+    catch (ex)\\n+    {}\\n+    ok(newIdleTime, \\\"Getting the idle time should not fail in normal\\\" +\\n+                    \\\"circumstances on any tier 1 platform.\\\");\\n+    // Get the time difference, remove the approx. 5 seconds that we've waited,\\n+    // should be very close to 0 left.\\n+    var timeDiff = Math.abs((newIdleTime - idleTime) -\\n+                            (Date.now() - startTimeStamp));\\n+    // 0.5 second leniency.\\n+    ok(timeDiff < 500, \\\"The idle time should have increased by roughly the \\\" +\\n+                       \\\"amount of time it took for the timeout to fire.\\\");\\n+    finishedTimeoutOK = true;\\n+}\\n+\\n+// make sure we still exit when the listener and/or setTimeout don't fire:\\n+var testBailout = setTimeout(finishThisTest, 12000);\\n+var finishedTimeoutOK = false, finishedListenerOK = false;\\n+function finishThisTest()\\n+{\\n+    ok(finishedTimeoutOK, \\\"We set a timeout and it should have fired by now.\\\");\\n+    ok(finishedListenerOK, \\\"We added a listener and it should have been called by now.\\\");\\n+    if (!finishedListenerOK)\\n+    {\\n+        var removedListener = false;\\n+        try\\n+        {\\n+            idleService.removeIdleObserver(idleObserver, newIdleSeconds);\\n+            removedListener = true;\\n+        }\\n+        catch (ex)\\n+        {}\\n+    \\n+        ok(removedListener, \\\"We added a listener and we should be able to remove it.\\\");\\n+    }\\n+    // Done:\\n+    SimpleTest.finish();\\n+}\\n+\\n+]]>\\n+</script>\\n+\\n+</window>\\n\""}