{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas7f76d89\""},"diff":"\"7f76d89 Bug 394887, lazily create popup content and widgets, r+sr=bz, a=roc\\ndiff --git a/layout/xul/base/src/nsMenuPopupFrame.cpp b/layout/xul/base/src/nsMenuPopupFrame.cpp\\nindex e0405c1..4868a44 100644\\n--- a/layout/xul/base/src/nsMenuPopupFrame.cpp\\n+++ b/layout/xul/base/src/nsMenuPopupFrame.cpp\\n@@ -254,6 +254,30 @@ nsMenuPopupFrame::SetInitialChildList(nsIAtom* aListName,\\n   return nsBoxFrame::SetInitialChildList(aListName, aChildList);\\n }\\n \\n+PRBool\\n+nsMenuPopupFrame::IsLeaf() const\\n+{\\n+  if (mGeneratedChildren)\\n+    return PR_FALSE;\\n+\\n+  // any popup with a type attribute, such as the autocomplete popup,\\n+  // is always generated right away.\\n+  if (mContent->HasAttr(kNameSpaceID_None, nsGkAtoms::type))\\n+    return PR_FALSE;\\n+\\n+  if (mPopupType != ePopupTypeMenu)\\n+    return PR_TRUE;\\n+\\n+  // menu popups generate their child frames lazily only when opened, so\\n+  // behave like a leaf frame. However, generate child frames normally if\\n+  // the parent menu has a sizetopopup attribute. In this case the size of\\n+  // the parent menu is dependant on the size of the popup, so the frames\\n+  // need to exist in order to calculate this size.\\n+  nsIContent* parentContent = mContent->GetParent();\\n+  return (parentContent &&\\n+          !parentContent->HasAttr(kNameSpaceID_None, nsGkAtoms::sizetopopup));\\n+}\\n+\\n void\\n nsMenuPopupFrame::AdjustView()\\n {\\ndiff --git a/layout/xul/base/src/nsMenuPopupFrame.h b/layout/xul/base/src/nsMenuPopupFrame.h\\nindex 531d238..02b15d2 100644\\n--- a/layout/xul/base/src/nsMenuPopupFrame.h\\n+++ b/layout/xul/base/src/nsMenuPopupFrame.h\\n@@ -183,22 +183,7 @@ public:\\n   NS_IMETHOD SetInitialChildList(nsIAtom*        aListName,\\n                                  nsIFrame*       aChildList);\\n \\n-  virtual PRBool IsLeaf() const\\n-  {\\n-    if (!mGeneratedChildren && mPopupType == ePopupTypeMenu) {\\n-      // menu popups generate their child frames lazily only when opened, so\\n-      // behave like a leaf frame. However, generate child frames normally if\\n-      // the parent menu has a sizetopopup attribute. In this case the size of\\n-      // the parent menu is dependant on the size of the popup, so the frames\\n-      // need to exist in order to calculate this size.\\n-      nsIContent* parentContent = mContent->GetParent();\\n-      if (parentContent &&\\n-          !parentContent->HasAttr(kNameSpaceID_None, nsGkAtoms::sizetopopup))\\n-        return PR_TRUE;\\n-    }\\n-\\n-    return PR_FALSE;\\n-  }\\n+  virtual PRBool IsLeaf() const;\\n \\n   // AdjustView should be called by the parent frame after the popup has been\\n   // laid out, so that the view can be shown.\\n\""}