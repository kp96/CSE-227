{"sha":"\"47e7bc67f932866e4467f7ab8a23bb167405bebd\"","commit":{"author":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"committer":{"name":"\"Nicolas Silva\"","email":"\"nsilva@mozilla.com\"","date":"\"2016-09-01T15:51:09+02:00\""},"message":"\"Bug 1298345 - Refactor CanvasRenderingContext2D's texture allocation code. r=Bas5556c9b5\""},"diff":"\"5556c9b5 Bug 393141. Fix crash with display:none on HTML option. r=evan.yan, a=dsicore\\ndiff --git a/accessible/src/html/nsHTMLSelectAccessible.cpp b/accessible/src/html/nsHTMLSelectAccessible.cpp\\nindex e4edaa1..e12f3b1 100644\\n--- a/accessible/src/html/nsHTMLSelectAccessible.cpp\\n+++ b/accessible/src/html/nsHTMLSelectAccessible.cpp\\n@@ -394,6 +394,7 @@ nsHTMLSelectListAccessible::CacheOptSiblings(nsIAccessibilityService *aAccServic\\n \\n   PRUint32 numChildren = aParentContent->GetChildCount();\\n   nsCOMPtr<nsIAccessible> lastGoodAccessible(aLastGoodAccessible);\\n+  nsCOMPtr<nsIAccessible> newAccessible;\\n \\n   for (PRUint32 count = 0; count < numChildren; count ++) {\\n     nsIContent *childContent = aParentContent->GetChildAt(count);\\n@@ -402,14 +403,19 @@ nsHTMLSelectListAccessible::CacheOptSiblings(nsIAccessibilityService *aAccServic\\n     }\\n     nsCOMPtr<nsIAtom> tag = childContent->Tag();\\n     if (tag == nsAccessibilityAtoms::option || tag == nsAccessibilityAtoms::optgroup) {\\n-      lastGoodAccessible = AccessibleForOption(aAccService,\\n-                                               childContent,\\n-                                               lastGoodAccessible,\\n-                                               aChildCount);\\n+      newAccessible = AccessibleForOption(aAccService,\\n+                                           childContent,\\n+                                           lastGoodAccessible,\\n+                                           aChildCount);\\n+      if (newAccessible) {\\n+        lastGoodAccessible = newAccessible;\\n+      }\\n       if (tag == nsAccessibilityAtoms::optgroup) {\\n-        lastGoodAccessible = CacheOptSiblings(aAccService, childContent,\\n-                                              lastGoodAccessible,\\n-                                              aChildCount);\\n+        newAccessible = CacheOptSiblings(aAccService, childContent,\\n+                                         lastGoodAccessible, aChildCount);\\n+        if (newAccessible) {\\n+          lastGoodAccessible = newAccessible;\\n+        }\\n       }\\n     }\\n   }\\n\""}